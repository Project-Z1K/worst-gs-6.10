#pragma once

// Fortnite (6.10) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class FortniteGame.AIHotSpot
// 0x0188 (0x04B0 - 0x0328)
class AAIHotSpot : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class UAIHotSpotSlot*>                      UserSlots;                                                // 0x0330(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UAIHotSpotSlotGenerator*                     SlotGenerator;                                            // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UAIHotSpotSlot*>                      Slots;                                                    // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AActor*                                      FocusActor;                                               // 0x0358(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FilterClass;                                              // 0x0360(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CustomNavmeshSearchExtent;                                // 0x0368(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      bStartEnabled : 1;                                        // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAllowSlotlessAssignment : 1;                             // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAllowClaimingMultipleSlots : 1;                          // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTrackOverlappingSlots : 1;                               // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bProjectSlotsOnNavmesh : 1;                               // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCustomNavmeshSearchExtent : 1;                           // 0x0374(0x0001)
	unsigned char                                      bIsEnabled : 1;                                           // 0x0374(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0375(0x0003) MISSED OFFSET
	TArray<class AAIController*>                       NoSlotAssignees;                                          // 0x0378(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x110];                                     // 0x0388(0x0110) MISSED OFFSET
	class UPrimitiveComponent*                         RenderingComponent;                                       // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBillboardComponent*                         SpriteComponent;                                          // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpot");
		return ptr;
	}


	void SetEnabled(bool bEnabled);
	int RemoveGroupFromHotspot(TArray<class AAIController*> GroupOfAI);
	bool RemoveFromHotspot(class AAIController* AI, bool bAssignFromWaitingList);
	void OnSlotOccupied(class AAIController* AI, int Index, int UserId);
	void OnSlotFreed(class AAIController* AI, int Index, int UserId);
	void OnSlotEnabled(int Index, int UserId);
	void OnSlotDisabled(int Index, int UserId);
	void OnSlotClaimed(class AAIController* AI, int Index, int UserId);
	void OnSlotBlocked(class AAIController* AI, int Index, int UserId);
	void OnRemovedSlotlessBehavior(class AAIController* AI, bool bIsClamingSlot);
	void OnRemovedBehavior(class AAIController* AI, int Index, int UserId, EAIHotSpotSlot PrevState, bool bWasOnWaitingList);
	void OnMoveToSlotFinished(class AAIController* AI, int Index, int UserId, bool bResult);
	void OnHotSpotEnabled();
	void OnHotSpotDisabled();
	bool OnAssignedSlotlessBehavior(class AAIController* AI);
	bool OnAssignedOccupiedBehavior(class AAIController* AI, int Index, int UserId);
	bool OnAssignedClaimedBehavior(class AAIController* AI, int Index, int UserId, bool bWasOnWaitingList);
	bool OccupySlotByIndex(int Index);
	bool IsSlotlessAssignmentAllowed();
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasEnabledSlots();
	bool HasAssignedAI(class AAIController* AI, EAIHotSpotAssignmentFilter Filter);
	int GetSlotUserIdByIndex(int Index);
	EAIHotSpotSlot GetSlotStateByOwner(class AAIController* AIOwner);
	EAIHotSpotSlot GetSlotStateByIndex(int Index);
	struct FRotator GetSlotRotationByIndex(int Index);
	class AAIController* GetSlotOwnerByIndex(int Index);
	struct FVector GetSlotLocationByIndex(int Index);
	int GetSlotIndexByOwner(class AAIController* AIOwner);
	int GetSlotCount(EAIHotSpotSlotFilter Filter);
	class UAIHotSpotSlot* GetSlotByOwner(class AAIController* AIOwner);
	class UAIHotSpotSlot* GetSlotByIndex(int Index);
	int GetAssignedAICount(EAIHotSpotAssignmentFilter Filter);
	TArray<class AAIController*> GetAssignedAI(EAIHotSpotAssignmentFilter Filter);
	TArray<int> FindBestSlotIndices(TArray<class AAIController*> AI);
	int FindBestSlotIndex(class AAIController* AI);
	bool CanUseSlotByIndex(class AAIController* AI, int Index);
	bool AssignToSlotByIndex(class AAIController* AI, int Index);
	bool AssignToHotspot(class AAIController* AI);
	int AssignGroupToHotspot(TArray<class AAIController*> GroupOfAI);
	void AssignFromWaitingList();
};


// Class FortniteGame.AIHotSpotConfig
// 0x0020 (0x0050 - 0x0030)
class UAIHotSpotConfig : public UDataAsset
{
public:
	TArray<struct FAIHotSpotSlotConfig>                Slots;                                                    // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bDetectUnreachableSlots : 1;                              // 0x0040(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UAIHotSpotSlotGenerator*                     SlotGenerator;                                            // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotConfig");
		return ptr;
	}

};


// Class FortniteGame.AIHotSpotManagerProxy
// 0x0058 (0x0080 - 0x0028)
class UAIHotSpotManagerProxy : public UAIHotSpotManager
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotManagerProxy");
		return ptr;
	}

};


// Class FortniteGame.AIHotSpotRenderingComponent
// 0x0000 (0x0560 - 0x0560)
class UAIHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotRenderingComponent");
		return ptr;
	}

};


// Class FortniteGame.AIHotSpotSlot
// 0x0098 (0x00C0 - 0x0028)
class UAIHotSpotSlot : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FTransform                                  LocalTransform;                                           // 0x0030(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              Height;                                                   // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToFocusActor;                                     // 0x0068(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                UserId;                                                   // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      bStartEnabled : 1;                                        // 0x0070(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHasCachedAgentData : 1;                                  // 0x0070(0x0001)
	unsigned char                                      bHasOverlappingSlots : 1;                                 // 0x0070(0x0001) (Transient)
	unsigned char                                      bHasDistanceToFocusActor : 1;                             // 0x0070(0x0001) (Transient)
	unsigned char                                      bIsBlockingOthers : 1;                                    // 0x0070(0x0001) (Transient)
	unsigned char                                      bIsEnabled : 1;                                           // 0x0070(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class AAIController*                               Owner;                                                    // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SlotIndex;                                                // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EAIHotSpotSlot                                     SlotState;                                                // 0x0084(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3B];                                      // 0x0085(0x003B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlot");
		return ptr;
	}


	void SetSlotState(EAIHotSpotSlot NewState);
	void SetSlotOwnerAndState(class AAIController* NewOwner, EAIHotSpotSlot NewState);
	void SetSlotEnabled(bool bNewEnabled);
	void OnStateChanged(class AAIController* SlotOwner, EAIHotSpotSlot NewState);
	bool IsEnabled();
	bool IsAIAllowed(class AAIController* AI);
	bool HasUserId();
	int GetSlotUserId();
	EAIHotSpotSlot GetSlotState();
	struct FRotator GetSlotRotation();
	float GetSlotRadius();
	class AAIController* GetSlotOwner();
	struct FVector GetSlotLocation();
	int GetSlotIndex();
	float GetSlotHeight();
	struct FBox GetSlotBounds();
	class AAIHotSpot* GetHotSpot();
	void ClearSlot();
};


// Class FortniteGame.AIHotSpotSlotGenerator
// 0x0000 (0x0028 - 0x0028)
class UAIHotSpotSlotGenerator : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlotGenerator");
		return ptr;
	}


	class AAIHotSpot* GetHotSpot();
	void GenerateSlots();
	class UAIHotSpotSlot* AddSlot(const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, class UClass* CustomSlotClass, bool bEnabled);
};


// Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox
// 0x0048 (0x0070 - 0x0028)
class UAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator
{
public:
	class UClass*                                      SlotClass;                                                // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxExtent;                                                // 0x0030(0x000C) (Edit, IsPlainOldData)
	float                                              ExpandBy;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetFromEdge;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Spacing;                                                  // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLimitMaxExtent : 1;                                      // 0x0048(0x0001)
	unsigned char                                      bMustHitFocusActor : 1;                                   // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	EBoundingBoxSlotDirectionCalculation               SlotDirectionCalculation;                                 // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x23];                                      // 0x004D(0x0023) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AIHotSpotSlotGenerator_OnBoundingBox");
		return ptr;
	}

};


// Class FortniteGame.FortReplaySpectatorPawnBase
// 0x0090 (0x0440 - 0x03B0)
class AFortReplaySpectatorPawnBase : public ASpectatorPawn
{
public:
	class UFortSpectatorCameraComponent*               SpectatorCameraComponent;                                 // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x03B8(0x0088) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplaySpectatorPawnBase");
		return ptr;
	}

};


// Class FortniteGame.ArenaCamPawn
// 0x0020 (0x0460 - 0x0440)
class AArenaCamPawn : public AFortReplaySpectatorPawnBase
{
public:
	class AFortPlayerControllerSpectating*             SpectatorController;                                      // 0x0440(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AFortArenaCamera*>                    ArenaCams;                                                // 0x0448(0x0010) (ZeroConstructor, Transient)
	int                                                CurrArenaCamIdx;                                          // 0x0458(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x045C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.ArenaCamPawn");
		return ptr;
	}

};


// Class FortniteGame.FortAIController
// 0x00F0 (0x0528 - 0x0438)
class AFortAIController : public AAIController
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0438(0x0018) MISSED OFFSET
	unsigned char                                      bUsingNavMesh : 1;                                        // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAlwaysNotifyBumpWall : 1;                                // 0x0450(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInstantRotation : 1;                                     // 0x0450(0x0001) (Config)
	unsigned char                                      bTurnTransitionsEnabled : 1;                              // 0x0450(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0451(0x0007) MISSED OFFSET
	class UFortPathFollowingComponent*                 FortPathFollowingComp;                                    // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FAIHotSpotUseInfo                           CurrentHotSpot;                                           // 0x0460(0x0018) (BlueprintVisible, BlueprintReadOnly)
	float                                              GoalInfoUpdateRate;                                       // 0x0478(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	class AActor*                                      GoalActor;                                                // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              GoalVisibilityPersistanceTime;                            // 0x0488(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x94];                                      // 0x048C(0x0094) MISSED OFFSET
	class AFortAIPawn*                                 MyFortPawn;                                               // 0x0520(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIController");
		return ptr;
	}


	void WakeUp();
	void UnregisterForGoalDetection();
	void UnlockMovementResource();
	void UnlockBehaviorResource();
	void SetupCustomVIM(class UClass* VIM);
	void SetTeam(TEnumAsByte<EFortTeam> InTeam);
	void SetPawnAIType(EFortressAIType NewAIType, class AActor* SpawnSpot);
	void SetIsSleeping(bool bNewSleepStatus);
	void SetGoalActor(class AActor* InActor, bool bLocationAlwaysKnown);
	void SetFullPeripheralVision(bool bNewFullPeripheralVision);
	void SetAlwaysGameplayRelevant(bool bInAlwaysGameplayRelevant);
	void OnBuildingActorGoalDestroyed();
	void LockMovementResource();
	void LockBehaviorResource();
	bool STATIC_IsIgnoringProximity(class AFortAIController* FortAIController);
	bool IsAllowedToSleep();
	void IgnoreProximityForDuration(float DurationToIgnore);
	class AActor* GetGoalActor();
	class UFortAIEncounterInfo* GetEncounterInfo();
	bool CreateBuildingActor(class UClass* BuildingClass, const struct FVector& BuildLoc, const struct FRotator& BuildRot, bool bMirrored);
};


// Class FortniteGame.AthenaAIController
// 0x0018 (0x0540 - 0x0528)
class AAthenaAIController : public AFortAIController
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0528(0x0010) MISSED OFFSET
	class AActor*                                      SecondaryGoalActor;                                       // 0x0538(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAIController");
		return ptr;
	}

};


// Class FortniteGame.FortAIPerceptionComponent
// 0x0008 (0x01C8 - 0x01C0)
class UFortAIPerceptionComponent : public UAIPerceptionComponent
{
public:
	float                                              LosingSightRadiusBump;                                    // 0x01C0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIPerceptionComponent");
		return ptr;
	}

};


// Class FortniteGame.AthenaAIPerceptionComponent
// 0x0000 (0x01C8 - 0x01C8)
class UAthenaAIPerceptionComponent : public UFortAIPerceptionComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAIPerceptionComponent");
		return ptr;
	}

};


// Class FortniteGame.FortAIDirector
// 0x0AF0 (0x0E18 - 0x0328)
class AFortAIDirector : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	struct FCurveTableRowHandle                        MaxAliveCurve;                                            // 0x0338(0x0010) (Edit, BlueprintVisible)
	struct FCurveTableRowHandle                        MinAliveCurve;                                            // 0x0348(0x0010) (Edit, BlueprintVisible)
	struct FIntensityData                              IntensityInfo;                                            // 0x0358(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAIEncounterPIDController               AIDirectorPIDController;                                  // 0x0388(0x0068) (BlueprintVisible, BlueprintReadOnly)
	struct FFortAIEncounterPIDControllerSettings       PIDControllerSettings;                                    // 0x03F0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FUtilityData                                UtilityContributionData[0x10];                            // 0x0420(0x0040) (Edit)
	float                                              UnreachableLocationPathCost;                              // 0x0820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0824(0x0004) MISSED OFFSET
	struct FFortPlayerPerformanceEstimateSettings      PlayerPerformanceEstimateSettings;                        // 0x0828(0x0040) (Edit, BlueprintVisible)
	unsigned char                                      bUsePrototypeEnemies : 1;                                 // 0x0868(0x0001)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0869(0x0007) MISSED OFFSET
	TArray<TEnumAsByte<EFortEncounterDirection>>       DebugEncounterDirections;                                 // 0x0870(0x0010) (ZeroConstructor, Transient)
	EDespawnAIType                                     DespawnAIType;                                            // 0x0880(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0881(0x0003) MISSED OFFSET
	float                                              DespawnDistance;                                          // 0x0884(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DespawnInterval;                                          // 0x0888(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x088C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       DebugSpawnAIGroupTags;                                    // 0x0890(0x0020) (Transient)
	struct FGameplayTagContainer                       DebugEncounterTags;                                       // 0x08B0(0x0020) (Transient)
	float                                              BurstSpawnThreatVisualsEndDelay;                          // 0x08D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x08D4(0x0004) MISSED OFFSET
	TArray<struct FFortAIEncounterSpawnGroupCapsProfile> EncounterSpawnGroupCapSettings;                           // 0x08D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortAIEncounterSpawnPointsProfile>  EncounterSpawnPointsSettings;                             // 0x08E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortAIEncounterPawnDifficultyLevelModifier> EncounterPawnDifficultyLevelModifiers;                    // 0x08F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortAISpawnGroupUpgradeData>        SpawnGroupUpgrades;                                       // 0x0908(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              GuaranteedUpgradeGroupUtilityBonus;                       // 0x0918(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DiscreteEncounterUtilityDesireMappings[0x4];              // 0x091C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortAIUtility>                        InitialDynamicUtilities[0x4];                             // 0x092C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEncounterEnvironmentQueryInfo              SpawnLocationPlacementQueries[0x4];                       // 0x0930(0x0028) (Edit, DisableEditOnInstance)
	struct FEncounterEnvironmentQueryInfo              SpawnLocationActorSearchQueries[0x4];                     // 0x09D0(0x0028) (Edit, DisableEditOnInstance)
	class UFortAIDirectorDataTrackingSettings*         DataTrackingSettings;                                     // 0x0A70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FDataTableRowHandle>                 BaseLootDropData;                                         // 0x0A78(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortAILootDropModifiers>            LootDropModifiers;                                        // 0x0A88(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagQuery                           LootDropDenialQuery;                                      // 0x0A98(0x0048) (Edit, DisableEditOnInstance)
	unsigned char                                      bDebugEncounterQueries : 1;                               // 0x0AE0(0x0001)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0AE1(0x0007) MISSED OFFSET
	TArray<class AFortPlayerControllerZone*>           PlayerControllers;                                        // 0x0AE8(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortPlayerPawn*>                     PlayerPawns;                                              // 0x0AF8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x48];                                      // 0x0B08(0x0048) MISSED OFFSET
	TArray<class AFortAIController*>                   AIControllers;                                            // 0x0B50(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortAIPawn*>                         AIPawns;                                                  // 0x0B60(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData08[0x40];                                      // 0x0B70(0x0040) MISSED OFFSET
	TArray<struct FAIPawnUpdateInfo>                   AIPawnUpdateInfos;                                        // 0x0BB0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0BC0(0x0008) MISSED OFFSET
	TMap<TWeakObjectPtr<class AFortAIPawn>, int>       AIPawnUpdateIdxMap;                                       // 0x0BC8(0x0050) (ZeroConstructor)
	int                                                MaxNumAIProcessPerFrame;                                  // 0x0C18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bProcessNPCsAndPlayerTargetingInSameFrame;                // 0x0C1C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bProcessPlayerTargeting;                                  // 0x0C1D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x0C1E(0x0002) MISSED OFFSET
	struct FFortEncounterPawnNumberCaps                DefaultEncounterPawnCaps;                                 // 0x0C20(0x0018) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0C38(0x0008) MISSED OFFSET
	class UReporterGraph*                              IntensityGraph;                                           // 0x0C40(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              UtilitiesGraph;                                           // 0x0C48(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              PIDValuesGraph;                                           // 0x0C50(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              PIDContributionsGraph;                                    // 0x0C58(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bNightActive : 1;                                         // 0x0C60(0x0001) (Transient)
	unsigned char                                      bAIDisabled : 1;                                          // 0x0C60(0x0001)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                         // 0x0C60(0x0001)
	unsigned char                                      bUseSpawnCap : 1;                                         // 0x0C60(0x0001) (Transient)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0C61(0x0003) MISSED OFFSET
	int                                                NightCount;                                               // 0x0C64(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NightEncounterFailureBreatherTime;                        // 0x0C68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EncounterPawnSpawnInterval;                               // 0x0C6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultNightEncounter;                                    // 0x0C70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DummyDebugEncounter;                                      // 0x0C78(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BaseEncounterClass;                                       // 0x0C80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxActiveAlive;                                           // 0x0C88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumActiveAlive;                                           // 0x0C8C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumPendingCapRelevantAI;                                  // 0x0C90(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x54];                                      // 0x0C94(0x0054) MISSED OFFSET
	TArray<struct FPendingSpawnInfo>                   PendingSpawns;                                            // 0x0CE8(0x0010) (ZeroConstructor)
	int                                                MaxAISpawnedPerFrame;                                     // 0x0CF8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxAIDespawnedPerFrame;                                   // 0x0CFC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	TArray<TWeakObjectPtr<class AFortAIPawn>>          PendingDespawns;                                          // 0x0D00(0x0010) (ZeroConstructor, Transient)
	int                                                NumWorldSubdivides;                                       // 0x0D10(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinAISpawnDistanceFromPlayers;                            // 0x0D14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       AmbientThreatPreferredPlacementActorTags;                 // 0x0D18(0x0020) (Edit, BlueprintVisible)
	struct FGameplayTagContainer                       AmbientThreatRequiredPlacementActorTags;                  // 0x0D38(0x0020) (Edit, BlueprintVisible)
	TArray<class UFortAIEncounterInfo*>                ActiveEncounters;                                         // 0x0D58(0x0010) (ZeroConstructor)
	TArray<class UFortAIEncounterInfo*>                InactiveEncounters;                                       // 0x0D68(0x0010) (ZeroConstructor)
	TArray<struct FFortPendingStoppedEncounterData>    PendingStoppedEncounters;                                 // 0x0D78(0x0010) (ZeroConstructor)
	class UFortAIEncounterInfo*                        ActiveDefaultEncounter;                                   // 0x0D88(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortAIEncounterInfo*                        ActiveDummyDebugEncounter;                                // 0x0D90(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortAIEncounterSequence*>            EncounterSequences;                                       // 0x0D98(0x0010) (ZeroConstructor)
	class UEQSRenderingComponent*                      EQSRenderingComp;                                         // 0x0DA8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                DebugGraphUpdateFrequency;                                // 0x0DB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxNormalLODDistanceToPlayer;                             // 0x0DB4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AIRelevantDistanceToPlayer;                               // 0x0DB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EncounterRelevantDistanceToPlayer;                        // 0x0DBC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EncounterRelevantDistanceToDefender;                      // 0x0DC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0DC4(0x0004) MISSED OFFSET
	TArray<TScriptInterface<class UFortPatrolWardInterface>> PatrolWards;                                              // 0x0DC8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0DD8(0x0004) MISSED OFFSET
	int                                                MaxTotalActiveAliveAI;                                    // 0x0DDC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxEncounterActiveAliveAI;                                // 0x0DE0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxSPUsed;                                                // 0x0DE4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0DE8(0x0008) MISSED OFFSET
	TArray<struct FUtilityTypeFloatPair>               DebugEncounterTopUtilityPercentages;                      // 0x0DF0(0x0010) (ZeroConstructor, Transient)
	TArray<class UCurveFloat*>                         DebugEncounterSpawnPointsCurves;                          // 0x0E00(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bDebugAllowEncounterModifierTags : 1;                     // 0x0E10(0x0001)
	unsigned char                                      UnknownData17[0x3];                                       // 0x0E11(0x0003) MISSED OFFSET
	int                                                SimulatedNumberOfPlayersForAIEncounters;                  // 0x0E14(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDirector");
		return ptr;
	}


	void UnregisterPatrolWard(const TScriptInterface<class UFortPatrolWardInterface>& PatrolWard);
	void RegisterPatrolWard(const TScriptInterface<class UFortPatrolWardInterface>& PatrolWard);
	void ReceivePawnSpawned(class AFortPawn* SpawnedPawn);
	void PostDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	void OnRestStarted();
	void OnRampStarted();
	void OnPlayerSpawn(class AFortPlayerPawn* PlayerPawn);
	void OnPlayerDied(class AFortPlayerPawn* PlayerPawn);
	void OnPeakStarted();
	void OnPawnDied(class AFortAIPawn* KilledPawn);
	void OnFadeStarted();
	void OnDirectorDeactivated();
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	bool IsPointTooCloseToPatrolWards(const struct FVector& Point, EWardAffectType WardEffectTypeFilter);
	bool IsLineTooCloseToPatrolWards(const struct FVector& LineStart, const struct FVector& LineEnd);
	bool IsAnyEncounterGoalWithinDistanceOfPoint(const struct FVector& Point, float Distance, bool bOnlyActiveEncounters);
	bool IsAnyAIRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn* Player);
	bool IsAnyActiveEncounterRelevantToDefender(class AFortAIPawn* Defender);
	struct FVector STATIC_GetVectorFromEncounterDirection(TEnumAsByte<EFortEncounterDirection> Direction);
	TArray<class ABuildingRift*> GetRiftsFromClosestActiveEncounterTo(class AActor* Target);
	int GetNumPlayers();
	TEnumAsByte<EFortEncounterDirection> STATIC_GetEncounterDirectionFromVector(const struct FVector& DirectionVector);
	void GetAmbientThreatEncounterSpawnLocations(TArray<struct FVector>* AmbientThreatEncounterSpawnLocations);
	void Deactivate();
	TArray<TEnumAsByte<EFortEncounterDirection>> STATIC_ConvertInvalidDirectionsToValidDirections(TArray<TEnumAsByte<EFortEncounterDirection>> InvalidDirections);
	void Activate();
};


// Class FortniteGame.AthenaAIDirector
// 0x0000 (0x0E18 - 0x0E18)
class AAthenaAIDirector : public AFortAIDirector
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAIDirector");
		return ptr;
	}

};


// Class FortniteGame.AthenaAIPerceptionManager
// 0x0018 (0x0050 - 0x0038)
class UAthenaAIPerceptionManager : public UAISubsystem
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0038(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAIPerceptionManager");
		return ptr;
	}

};


// Class FortniteGame.AthenaAISense_Hearing
// 0x0000 (0x00F0 - 0x00F0)
class UAthenaAISense_Hearing : public UAISense_Hearing
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAISense_Hearing");
		return ptr;
	}

};


// Class FortniteGame.AthenaAISettings
// 0x0028 (0x0050 - 0x0028)
class UAthenaAISettings : public UObject
{
public:
	unsigned char                                      bAllowAIDirector : 1;                                     // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance)
	unsigned char                                      bAllowAIGoalManager : 1;                                  // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance)
	unsigned char                                      bForceRVOUse : 1;                                         // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              MaxPlayerSpeedScaleFootstepSounds;                        // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinFootstepHearingRange;                                  // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFootstepHearingRange;                                  // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DamagedHearingRange;                                      // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CrouchHearingModifier;                                    // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxNPCHearingRange;                                       // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DeAggroRange;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	class UNavigationSystemConfig*                     NavigationSystemConfig;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAISettings");
		return ptr;
	}

};


// Class FortniteGame.FortAISystem
// 0x0090 (0x01C0 - 0x0130)
class UFortAISystem : public UAISystem
{
public:
	TArray<class UFortQueryTwoPointSolver*>            TwoPointSolvers;                                          // 0x0130(0x0010) (ZeroConstructor, Transient)
	class UFortInfluenceMap*                           InfluenceMap;                                             // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortBotMissionManager*                      BotManager;                                               // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0150(0x0010) MISSED OFFSET
	TArray<class UFortRiftBlockerComponent*>           ActiveRiftBlockers;                                       // 0x0160(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0170(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISystem");
		return ptr;
	}


	bool STATIC_IsInCone2D(const struct FVector& ConeOrigin, const struct FVector& ConeDirection, float HalfAngle, const struct FVector& LocationToCheck);
};


// Class FortniteGame.AthenaAISystem
// 0x0008 (0x01C8 - 0x01C0)
class UAthenaAISystem : public UFortAISystem
{
public:
	class UAthenaAIPerceptionManager*                  PerceptionManager;                                        // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAISystem");
		return ptr;
	}

};


// Class FortniteGame.AthenaAvoidanceManager
// 0x0000 (0x00E0 - 0x00E0)
class UAthenaAvoidanceManager : public UAvoidanceManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaAvoidanceManager");
		return ptr;
	}

};


// Class FortniteGame.FortItemDefinition
// 0x02F0 (0x0320 - 0x0030)
class UFortItemDefinition : public UMcpItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemCountChanged;                                       // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EFortItemType                                      ItemType;                                                 // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortItemType                                      PrimaryAssetIdItemTypeOverride;                           // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	struct FText                                       ItemTypeNameOverride;                                     // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                MinLevel;                                                 // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxLevel;                                                 // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ShortDescription;                                         // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       DisplayNamePrefix;                                        // 0x00C0(0x0018)
	struct FText                                       SearchTags;                                               // 0x00D8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EFortInventoryFilter                               FilterOverride;                                           // 0x0110(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	unsigned char                                      bIsAccountItem : 1;                                       // 0x0114(0x0001)
	unsigned char                                      bNeverPersisted : 1;                                      // 0x0114(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	struct FGameplayTagContainer                       SecondaryCategoryOverrideTags;                            // 0x0118(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagContainer                       TertiaryCategoryOverrideTags;                             // 0x0138(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAllowMultipleStacks : 1;                                 // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAutoBalanceStacks : 1;                                   // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	int                                                MaxStackSize;                                             // 0x015C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceAutoPickup : 1;                                     // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	bool                                               bPrivateTemplate;                                         // 0x0164(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	bool                                               bInventorySizeLimited;                                    // 0x0165(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EFortTemplateAccess                                Access;                                                   // 0x0166(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCalculateRarityFromQualityAndTier;                       // 0x0167(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortQuality>                          Quality;                                                  // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortItemTier>                         Tier;                                                     // 0x0169(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortItemTier>                         MaxTier;                                                  // 0x016A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x5];                                       // 0x016B(0x0005) MISSED OFFSET
	unsigned char                                      UnknownData07[0x28];                                      // 0x016B(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortItemDefinition.TooltipClass
	unsigned char                                      UnknownData08[0x28];                                      // 0x0198(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemDefinition.StatList
	struct FCurveTableRowHandle                        RatingLookup;                                             // 0x01C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bPreloadSmallPreviewImage;                                // 0x01D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData10[0x28];                                      // 0x01D1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemDefinition.SmallPreviewImage
	unsigned char                                      UnknownData11[0x28];                                      // 0x0200(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemDefinition.LargePreviewImage
	struct FSoftObjectPath                             DisplayAssetPath;                                         // 0x0228(0x0018) (Edit, DisableEditOnInstance)
	class UTexture2D*                                  SmallPreviewImageCache;                                   // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData)
	EFortRarity                                        Rarity;                                                   // 0x0248(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0249(0x0003) MISSED OFFSET
	struct FVector                                     FrontendPreviewPivotOffset;                               // 0x024C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    FrontendPreviewInitialRotation;                           // 0x0258(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              FrontendPreviewScale;                                     // 0x0264(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0268(0x0008) MISSED OFFSET
	struct FTransform                                  FrontendPreviewMeshOffset;                                // 0x0270(0x0030) (Edit, DisableEditOnInstance, EditConst, IsPlainOldData)
	struct FTransform                                  AthenaFrontendPreviewMeshOffset;                          // 0x02A0(0x0030) (Edit, DisableEditOnInstance, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData14[0x28];                                      // 0x02D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemDefinition.FrontendPreviewMeshOverride
	unsigned char                                      UnknownData15[0x28];                                      // 0x02F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemDefinition.FrontendPreviewSkeletalMeshOverride

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemDefinition");
		return ptr;
	}


	bool ShouldShowPreviewOnCurrentHero();
	bool IsInventorySizeLimited();
	class UClass* GetTooltip();
	struct FSlateBrush GetSmallPreviewImageBrush();
	void GetSmallPreviewImage();
	struct FText GetSingleLineDescription();
	struct FText GetShortDescription();
	struct FText GetRichDescription();
	EFortRarity GetRarity();
	bool GetPreviewStaticMeshAsset();
	bool GetPreviewSkeletalMeshAsset();
	bool GetPreviewPrefabAsset();
	struct FTransform GetPreviewMeshOffset();
	void GetPreviewAssets();
	struct FString GetPersistentName();
	void GetLargePreviewImage();
	struct FText GetItemTypeName(bool bUsePlural);
	EFortItemType GetItemType();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	struct FText GetDisplayName(bool bBaseName);
	struct FSoftObjectPath GetDisplayAssetPath();
	TArray<struct FText> GetDescription();
	void CustomizePreviewPrefab(class AActor* PrefabInstance);
	void CustomizePreviewMesh(class UMeshComponent* Mesh);
	class UFortItem* CreateTemporaryItemInstanceBP(int Count, int Level);
	class UFortItem* CreateTemporaryInstanceFromExistingItemBP(class UFortItem* ExistingItem, int Count, int Level);
};


// Class FortniteGame.FortAccountItemDefinition
// 0x0070 (0x0390 - 0x0320)
class UFortAccountItemDefinition : public UFortItemDefinition
{
public:
	struct FCurveTableRowHandle                        LevelToXpHandle;                                          // 0x0320(0x0010) (Edit)
	struct FCurveTableRowHandle                        LevelToSacrificeXpHandle;                                 // 0x0330(0x0010) (Edit)
	struct FDataTableRowHandle                         SacrificeRecipe;                                          // 0x0340(0x0010) (Edit)
	struct FDataTableRowHandle                         TransmogSacrificeRow;                                     // 0x0350(0x0010) (Edit)
	TArray<struct FDataTableRowHandle>                 ConversionRecipes;                                        // 0x0360(0x0010) (Edit, ZeroConstructor)
	struct FDataTableRowHandle                         UpgradeRarityRecipeHandle;                                // 0x0370(0x0010) (Edit)
	struct FString                                     GrantToProfileType;                                       // 0x0380(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaCosmeticItemDefinition
// 0x00C0 (0x0450 - 0x0390)
class UAthenaCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	unsigned char                                      bIsShuffleTile : 1;                                       // 0x0390(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0391(0x0003) MISSED OFFSET
	struct FRotator                                    PreviewPawnRotationOffset;                                // 0x0394(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTagContainer                       DisallowedCosmeticTags;                                   // 0x03A0(0x0020) (Edit)
	TArray<struct FAthenaCosmeticMaterialOverride>     MaterialOverrides;                                        // 0x03C0(0x0010) (Edit, ZeroConstructor)
	struct FGameplayTagContainer                       ObservedPlayerStats;                                      // 0x03D0(0x0020) (Edit)
	TArray<class UFortMontageItemDefinitionBase*>      BuiltInEmotes;                                            // 0x03F0(0x0010) (Edit, ZeroConstructor)
	TArray<class UFortCosmeticVariant*>                ItemVariants;                                             // 0x0400(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<struct FFortCosmeticVariantPreview>         ItemVariantPreviews;                                      // 0x0410(0x0010) (Edit, ZeroConstructor)
	struct FText                                       DirectAquisitionStyleDisclaimerOverride;                  // 0x0420(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FFortCosmeticAdaptiveStatPreview>    ItemObservedStatPreviews;                                 // 0x0438(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0448(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCosmeticItemDefinition");
		return ptr;
	}


	bool HasVariants();
	bool HasModifiableVariants();
	class UFortCosmeticVariant* GetVariantChannel(const struct FGameplayTag& InVariantChannelTag);
	struct FRotator GetPreviewPawnRotationOffset();
	TArray<struct FFortCosmeticVariantPreview> GetItemVariantPreviews();
	TArray<struct FFortCosmeticAdaptiveStatPreview> GetItemAdaptiveStatPreviews();
	void GetDefaultVariantChannels(TArray<struct FMcpVariantChannelInfo>* OutDefaultVariantData);
	struct FGameplayTagContainer GetAdaptivePlayerStatsList();
};


// Class FortniteGame.AthenaCharacterPartItemDefinition
// 0x0010 (0x0460 - 0x0450)
class UAthenaCharacterPartItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0450(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCharacterPartItemDefinition");
		return ptr;
	}


	TArray<class UCustomCharacterPart*> GetCharacterParts();
};


// Class FortniteGame.AthenaBackpackItemDefinition
// 0x0000 (0x0460 - 0x0460)
class UAthenaBackpackItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBackpackItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.BuildingActor
// 0x0308 (0x0630 - 0x0328)
class ABuildingActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0328(0x0068) MISSED OFFSET
	struct FGuid                                       MyGuid;                                                   // 0x0390(0x0010) (Net, DuplicateTransient, SaveGame, IsPlainOldData)
	struct FText                                       InteractionText;                                          // 0x03A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                OwnerPersistentID;                                        // 0x03B8(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              SavedHealthPct;                                           // 0x03BC(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x03C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x28];                                      // 0x03D8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.BuildingActor.AreaClass
	unsigned char                                      UnknownData02[0x28];                                      // 0x0400(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.BuildingActor.NavigationLinksClass
	unsigned char                                      UnknownData03[0x10];                                      // 0x0428(0x0010) MISSED OFFSET
	int                                                CurrentBuildingLevel;                                     // 0x0438(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData)
	int                                                MaximumBuildingLevel;                                     // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      BuildingAttributeSetClass;                                // 0x0440(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortBuildingActorSet*                       BuildingAttributeSet;                                     // 0x0448(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortBuildingActorSet*                       ReplicatedBuildingAttributeSet;                           // 0x0450(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bPreviewBuildingActor;                                    // 0x0458(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	struct FFortAttributeInitializationKey             AttributeInitKeys[0x2];                                   // 0x0460(0x0010) (Edit, DisableEditOnInstance)
	EAttributeInitLevelSource                          AttributeInitLevelSource;                                 // 0x0480(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAbilitySystemComponentCreationPolicy              AbilitySystemComponentCreationPolicy;                     // 0x0481(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      PrimarySurfaceType;                                       // 0x0482(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortBaseWeaponDamage>                 WeaponResponseType;                                       // 0x0483(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LifespanAfterDeath;                                       // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlayedDying;                                             // 0x0488(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0489(0x0007) MISSED OFFSET
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFortAbilitySystemComponent*                 ReplicatedAbilitySystemComponent;                         // 0x0498(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FGameplayCueParameters>              PendingDamageImpactCues;                                  // 0x04A0(0x0010) (ZeroConstructor, Transient)
	float                                              HealthBarIndicatorWidth;                                  // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HealthBarIndicatorVerticalOffset;                         // 0x04B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortHealthBarIndicator*                     HealthBarIndicator;                                       // 0x04B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                HealthBarIndicatorDifficultyRating;                       // 0x04C0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDynamicBuildingPlacementType>         DynamicBuildingPlacementType;                             // 0x04C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ENavigationObstacleOverride                        NavigationObstacleOverride;                               // 0x04C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsInvulnerable : 1;                                      // 0x04C6(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bHasRegisteredActorStateAtLeastOnce : 1;                  // 0x04C6(0x0001) (Transient)
	unsigned char                                      bDirtyForLevelRecordSave : 1;                             // 0x04C6(0x0001) (Transient)
	unsigned char                                      bSavedMetaPropertiesProcessed : 1;                        // 0x04C6(0x0001) (Transient)
	unsigned char                                      bUpgradeUsesSameClass : 1;                                // 0x04C6(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDisplayLevelInInfoWidget : 1;                            // 0x04C6(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowUpgradeRegardlessOfPlayerBuildLevel : 1;            // 0x04C6(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDisplayDamageNumbersInAthena : 1;                        // 0x04C6(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseFortHealthBarIndicator : 1;                           // 0x04C7(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSurpressHealthBar : 1;                                   // 0x04C7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCreateVerboseHealthLogs : 1;                             // 0x04C7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsIndestructibleForTargetSelection : 1;                  // 0x04C7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDestroyed : 1;                                           // 0x04C7(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      bPersistToWorld : 1;                                      // 0x04C7(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRefreshFullSaveDataBeforeZoneSave : 1;                   // 0x04C7(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bBeingDragged : 1;                                        // 0x04C7(0x0001) (Transient)
	unsigned char                                      bRotateInPlaceGame : 1;                                   // 0x04C8(0x0001)
	unsigned char                                      UnknownData06 : 1;                                        // 0x04C8(0x0001)
	unsigned char                                      bBoundsAreInvalidForMelee : 1;                            // 0x04C8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsNavigationModifier : 1;                                // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bBlockNavigationLinks : 1;                                // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCanExportNavigationCollisions : 1;                       // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCanExportNavigationObstacle : 1;                         // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bMirrorNavLinksX : 1;                                     // 0x04C8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bMirrorNavLinksY : 1;                                     // 0x04C9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIgnoreMoveGoalCollisionRadius : 1;                       // 0x04C9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bForceDisableRootNavigationRelevance : 1;                 // 0x04C9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bForceAutomationPass : 1;                                 // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bForceAutomationPass_NavmeshOnTop : 1;                    // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bForceAutomationPass_SmashableFlat : 1;                   // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsNavigationRelevant : 1;                                // 0x04C9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bBlockNavLinksInCell : 1;                                 // 0x04C9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseHotSpotAsMoveGoalReplacement : 1;                     // 0x04CA(0x0001) (Edit)
	unsigned char                                      UnknownData07 : 1;                                        // 0x04CA(0x0001)
	unsigned char                                      bWorldReadyCalled : 1;                                    // 0x04CA(0x0001) (Transient)
	unsigned char                                      bBeingRotatedOrScaled : 1;                                // 0x04CA(0x0001) (Transient)
	unsigned char                                      bBeingTranslated : 1;                                     // 0x04CA(0x0001) (Transient)
	unsigned char                                      bRotateInPlaceEditor : 1;                                 // 0x04CA(0x0001)
	unsigned char                                      bEditorPlaced : 1;                                        // 0x04CA(0x0001) (Net, Transient)
	unsigned char                                      bPlayerPlaced : 1;                                        // 0x04CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate)
	unsigned char                                      bShouldTick : 1;                                          // 0x04CB(0x0001) (Transient)
	unsigned char                                      bUsesDayPhaseChange : 1;                                  // 0x04CB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsDynamic : 1;                                           // 0x04CB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsDynamicOnDedicatedServer : 1;                          // 0x04CB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsMovable : 1;                                           // 0x04CB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                         // 0x04CB(0x0001) (Transient)
	unsigned char                                      bForceDamagePing : 1;                                     // 0x04CB(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDestroyFoliageWhenPlaced : 1;                            // 0x04CB(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bObstructTrapTargeting : 1;                               // 0x04CC(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData08 : 1;                                        // 0x04CC(0x0001)
	unsigned char                                      bDoNotBlockBuildings : 1;                                 // 0x04CC(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnInstance)
	unsigned char                                      bForceBlockBuildings : 1;                                 // 0x04CC(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnInstance)
	unsigned char                                      bIgnoreCollisionWithCriticalActors : 1;                   // 0x04CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDestroyOnPlayerBuildingPlacement : 1;                    // 0x04CC(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnInstance)
	unsigned char                                      bUseCentroidForBlockBuildingsCheck : 1;                   // 0x04CC(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnInstance)
	unsigned char                                      bIsPlayerBuildable : 1;                                   // 0x04CC(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bFireBuiltAndDestroyedEvents : 1;                         // 0x04CD(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAllowInteract : 1;                                       // 0x04CD(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAllowHostileBlueprintInteraction : 1;                    // 0x04CD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bInstantDeath : 1;                                        // 0x04CD(0x0001) (Net)
	unsigned char                                      bAlwaysUseNetCullDistanceSquaredForRelevancy : 1;         // 0x04CD(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bHighlightDirty : 1;                                      // 0x04CD(0x0001) (Transient)
	unsigned char                                      bForceReplayRollback : 1;                                 // 0x04CD(0x0001) (Net, Transient)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x04CE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x04CF(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x04D0(0x0008) MISSED OFFSET
	bool                                               bIgnoreAffiliationInteractHighlight;                      // 0x04D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x04D9(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       ConstTags;                                                // 0x04E0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst)
	struct FGameplayTagContainer                       StaticGameplayTags;                                       // 0x0500(0x0020)
	struct FScriptMulticastDelegate                    OnDied;                                                   // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDamaged;                                                // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortMission*                                AssociatedMissionParam;                                   // 0x0540(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlacementActor*                         OriginatingPlacementActor;                                // 0x0548(0x0008) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              BRMinDrawDistance;                                        // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BRMaxDrawDistance;                                        // 0x0554(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StWMinDrawDistance;                                       // 0x0558(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StWMaxDrawDistance;                                       // 0x055C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnInteract;                                               // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FCurveTableRowHandle                        InteractionSpeed;                                         // 0x0570(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData11[0x30];                                      // 0x0580(0x0030) MISSED OFFSET
	int                                                DataVersion;                                              // 0x05B0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastTakeHitTimeTimeout;                                   // 0x05B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class USoundBase*                                  PlayHitSound;                                             // 0x05B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CullDistance;                                             // 0x05C0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SnapGridSize;                                             // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VertSnapGridSize;                                         // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SnapOffset;                                               // 0x05CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CentroidOffset;                                           // 0x05D8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BaseLocToPivotOffset;                                     // 0x05E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CustomState;                                              // 0x05F0(0x0010) (Net, ZeroConstructor, SaveGame)
	TArray<class UClass*>                              ComponentTypesWhitelistedForReplication;                  // 0x0600(0x0010) (Edit, ZeroConstructor)
	class UBuildingActorHotSpotConfig*                 HotSpotConfig;                                            // 0x0610(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBuildingHealthChanged;                                  // 0x0618(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0628(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingActor");
		return ptr;
	}


	bool UseDefaultHealthBar();
	void SilentDie();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void SetQuestHighlight(bool Enabled);
	void SetNavigationModifier(bool bEnableModifier);
	void SetHealthBarIndicatorDifficultyRating(int InDisplayLevel);
	void SetCustomState(const struct FString& NewState);
	void SetCanExportNavigationObstacle(bool InCanExportNavigationObstacle);
	void RemoveEditorOnlyInstanceGameplayTags(const struct FGameplayTagContainer& TagsToRemove);
	void RemoveAbilitySystemComponent();
	void PlacedByPlayer(class AFortPlayerStateZone* PlayerState);
	void PlacedByPlacementTool();
	void OnWorldReady();
	void OnSetCustomDepthStencilValue(TArray<class UPrimitiveComponent*> PrimComponents, bool bUseCustomDepth, int StencilValue, bool* bOutConsume);
	void OnRep_Team();
	void OnRep_InstantDeath();
	void OnRep_CustomState();
	void OnRep_CurrentBuildingLevel();
	void OnRep_BuildingAttributeSet();
	void OnRep_bForceReplayRollback();
	void OnRep_AbilitySystemComponent();
	void OnMatchStarted();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnBuildingActorInitialized(TEnumAsByte<EFortBuildingInitializationReason> InitializationReason, TEnumAsByte<EFortBuildingPersistentState> BuildingPersistentState);
	bool IsPlayerBuilt();
	bool IsDamaged();
	bool IsAcceptablePositionForPlacement(const struct FVector& InLocation, const struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, struct FText* OutFailureReason);
	void InitializeKismetSpawnedBuildingActor(class ABuildingActor* BuildingOwner, class AFortPlayerController* SpawningController, bool bUsePlayerBuildAnimations);
	bool HasHealthLeft();
	void HandleDestroyed();
	float GetShieldPercent();
	float GetShieldOrHealthPercent();
	float GetShield();
	class AFortPlayerState* GetOwningPlayerState();
	class AController* GetOwningController();
	float GetMissingHealth();
	float GetMaxShield();
	float GetMaxHealth();
	float GetHealthPercent();
	float GetHealth();
	void GetEditorTestTags(struct FGameplayTagContainer* TagContainer);
	struct FString GetCustomState();
	int GetCurrentBuildingLevel();
	struct FVector GetCentroid();
	void GameplayCue_InstantDeath(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void ForceBuildingHealth(float NewHealth);
	void CustomStateChanged();
	bool BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn);
	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	struct FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	struct FText BlueprintGetFailedInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
	void AddEditorOnlyInstanceGameplayTags(const struct FGameplayTagContainer& NewTags);
};


// Class FortniteGame.BuildingGameplayActor
// 0x00C8 (0x06F8 - 0x0630)
class ABuildingGameplayActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	class UFortAbilitySet*                             AbilitySet;                                               // 0x0640(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UFortAbilitySet*                             InherentAbilitySets[0x5];                                 // 0x0648(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortDamageSet*                              DamageSet;                                                // 0x0670(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FDataTableRowHandle                         DamageStatHandle;                                         // 0x0678(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bIgnoreInstigatorCollision;                               // 0x0688(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAddOwnerVelocity;                                        // 0x0689(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x068A(0x0002) MISSED OFFSET
	int                                                AbilitySourceLevel;                                       // 0x068C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FBuildingGameplayActorAbilityDeliveryInfo   DeliverableAbilityInfo;                                   // 0x0690(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bApplyDefaultEnabledAbilityBucketsOnInit : 1;             // 0x06D8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseSimpleActorTouchSetupForAbilityBuckets : 1;           // 0x06D8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x06D9(0x0007) MISSED OFFSET
	class UPrimitiveComponent*                         RegisteredTouchComponent;                                 // 0x06E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x06E8(0x0008) MISSED OFFSET
	class UProjectileMovementComponent*                ProjectileMovementComponent;                              // 0x06F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingGameplayActor");
		return ptr;
	}


	void SetTouchComponentForAbilityDeliveryInfo(class UPrimitiveComponent* PrimitiveComponent);
	void SetInitialVelocity(const struct FVector& InitialVelocity);
	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetAbilitySourceLevel(int NewAbilitySourceLevel);
	void OnReplicatedVelocityStartOrStop(bool bStart);
	void OnRegisteredTouchComponentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnRegisteredTouchComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnDropped(bool bValidLocation, bool bPassesPlacementRestrictions, bool bWasIntentionallyPlaced);
	void K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag);
	void K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	void K2_ExecuteGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	void K2_AddGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context);
	struct FTransform GetTargetingSourceTransform(EFortAbilityTargetingSource Source);
	void ForceChangeOwnerInstigator(class AFortPlayerController* NewInstigator);
	void EnableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
	void DisableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag);
};


// Class FortniteGame.AthenaBarrierFlag
// 0x0010 (0x0708 - 0x06F8)
class AAthenaBarrierFlag : public ABuildingGameplayActor
{
public:
	EBarrierFlagState                                  CurrentState;                                             // 0x06F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x06F9(0x0003) MISSED OFFSET
	struct FRotator                                    LlamaRotation;                                            // 0x06FC(0x000C) (Net, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBarrierFlag");
		return ptr;
	}


	void OnStateChange(EBarrierFlagState NewState);
	void OnRep_LlamaRotation();
	void OnRep_CurrentState();
	class AAthenaBarrierObjective* GetObjectiveActor();
	void ClientSetLlamaRotation(const struct FRotator& NewDirection);
	void ClientSetIsFriendly(bool bIsFriendlyLlama);
};


// Class FortniteGame.AthenaBarrierObjective
// 0x0020 (0x0718 - 0x06F8)
class AAthenaBarrierObjective : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x06F8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBarrierObjective");
		return ptr;
	}


	void UpdateInGameHealth(float NewHealthPercent);
	void OnGeneratorDestroyed();
	void ApplyTimerGE(float TimerLength);
};


// Class FortniteGame.AthenaBattleBusItemDefinition
// 0x00F0 (0x0540 - 0x0450)
class UAthenaBattleBusItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0450(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaBattleBusItemDefinition.LobbyLoopingMusic
	unsigned char                                      UnknownData02[0x28];                                      // 0x0498(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaBattleBusItemDefinition.LobbyLoopingSound
	unsigned char                                      UnknownData03[0x28];                                      // 0x04C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaBattleBusItemDefinition.FlightLoopingMusic
	unsigned char                                      UnknownData04[0x28];                                      // 0x04E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaBattleBusItemDefinition.FlightLoopingSound
	unsigned char                                      UnknownData05[0x28];                                      // 0x0510(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaBattleBusItemDefinition.BusPrefabClass
	unsigned char                                      UnknownData06[0x8];                                       // 0x0538(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBattleBusItemDefinition");
		return ptr;
	}


	class USoundBase* GetLobbyLoopingSound();
	class USoundBase* GetLobbyLoopingMusic();
	class USoundBase* GetIgnitionSound();
	class USoundBase* GetFlightLoopingSound();
	class USoundBase* GetFlightLoopingMusic();
	void GetBusPrefabClass();
};


// Class FortniteGame.AthenaBigBaseWall
// 0x0048 (0x0740 - 0x06F8)
class AAthenaBigBaseWall : public ABuildingGameplayActor
{
public:
	struct FVector                                     WallSize;                                                 // 0x06F8(0x000C) (Net, IsPlainOldData)
	float                                              WallGravity;                                              // 0x0704(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              WallSpeed;                                                // 0x0708(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              TimeUntilWallComesDown;                                   // 0x070C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bResetBool;                                               // 0x0710(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0711(0x0003) MISSED OFFSET
	struct FVector                                     WallMeshSize;                                             // 0x0714(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0720(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBigBaseWall");
		return ptr;
	}


	void WallStartingToComeDown();
	void UpdateWallTime(float Digit_0_1, float Digit_1_2, float Digit_2_3, float Digit_3_4);
	void SetWallSpeedAndGravity(float NewWallGravity, float NewWallSpeed);
	void SetWallScale(const struct FVector& NewWallSCale);
	void OnRep_WallSpeed();
	void OnRep_WallSize();
	void OnRep_WallGravity();
	void OnRep_TimeUntilWallComesDown();
	void OnRep_ResetBool();
};


// Class FortniteGame.AthenaBigBaseWallMovementComp
// 0x0000 (0x01F0 - 0x01F0)
class UAthenaBigBaseWallMovementComp : public UProjectileMovementComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaBigBaseWallMovementComp");
		return ptr;
	}

};


// Class FortniteGame.AthenaCallingCardItemDefinition
// 0x0000 (0x0450 - 0x0450)
class UAthenaCallingCardItemDefinition : public UAthenaCosmeticItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCallingCardItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaCapturePoint
// 0x03A0 (0x0A98 - 0x06F8)
class AAthenaCapturePoint : public ABuildingGameplayActor
{
public:
	class UMaterialInstanceDynamic*                    HUDIndicatorMID;                                          // 0x06F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 IndicatorBrush;                                           // 0x0700(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 MapIconBrush;                                             // 0x0788(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 CompassIconBrush;                                         // 0x0810(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                IconMaterialIndexParameter;                               // 0x0898(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPermanentShutdown;                                       // 0x089C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x089D(0x0003) MISSED OFFSET
	float                                              ShutdownTime;                                             // 0x08A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08A4(0x0004) MISSED OFFSET
	class UFortSlateHUDIndicator*                      HUDIndicatorRef;                                          // 0x08A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   CurrHUDIndicatorSize;                                     // 0x08B0(0x0008) (IsPlainOldData)
	class UMaterialInstanceDynamic*                    CapturePointMID_Neutral;                                  // 0x08B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CapturePointMID_AllyCaptured;                             // 0x08C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CapturePointMID_AllyCapping;                              // 0x08C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CapturePointMID_EnemyCaptured;                            // 0x08D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    CapturePointMID_EnemyCapping;                             // 0x08D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bUseHUDIndicator : 1;                                     // 0x08E0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x08E1(0x0007) MISSED OFFSET
	struct FName                                       HUDStyle;                                                 // 0x08E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HUDOffset;                                                // 0x08F0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bHUDClampToScreenEdge : 1;                                // 0x08FC(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x3];                                       // 0x08FD(0x0003) MISSED OFFSET
	struct FVector2D                                   MinHUDIndicatorSize;                                      // 0x0900(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   MaxHUDIndicatorSize;                                      // 0x0908(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceForMinHUDSize;                                    // 0x0910(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	class UMaterialInstance*                           CapturePointMat_Neutral;                                  // 0x0918(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstance*                           CapturePointMat_AllyCaptured;                             // 0x0920(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstance*                           CapturePointMat_AllyCapping;                              // 0x0928(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstance*                           CapturePointMat_EnemyCaptured;                            // 0x0930(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstance*                           CapturePointMat_EnemyCapping;                             // 0x0938(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0940(0x0008) MISSED OFFSET
	class UBoxComponent*                               StructuralComponent;                                      // 0x0948(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               CaptureComponent;                                         // 0x0950(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class AFortPlayerPawnAthena*>               OverlappedAthenaPawns;                                    // 0x0958(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bActivated : 1;                                           // 0x0968(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0969(0x0003) MISSED OFFSET
	EContentionRuleType                                ContentionRules;                                          // 0x096C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x096D(0x0003) MISSED OFFSET
	TArray<TEnumAsByte<EFortTeam>>                     TeamsBarredFromCapture;                                   // 0x0970(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bSupportsPerPlayerCapturing;                              // 0x0980(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0981(0x0007) MISSED OFFSET
	struct FScalableFloat                              PercentIncreasePerPlayerCaptor;                           // 0x0988(0x0020) (Edit, BlueprintVisible)
	struct FScalableFloat                              BonusPercentIncreasePerPlayerCaptor;                      // 0x09A8(0x0020) (Edit, BlueprintVisible)
	TArray<struct FScalableFloat>                      CaptureSpeedPerPlayerList;                                // 0x09C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FScalableFloat                              PercentDecreaseNoCaptor;                                  // 0x09D8(0x0020) (Edit, BlueprintVisible)
	float                                              CachedPercentIncreasePerPlayerCaptor;                     // 0x09F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CachedBonusPercentIncreasePerPlayerCaptor;                // 0x09FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CachedPercentDecreaseNoCaptor;                            // 0x0A00(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0A04(0x0004) MISSED OFFSET
	TArray<float>                                      CachedCaptureSpeedPerPlayerList;                          // 0x0A08(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bLocked : 1;                                              // 0x0A18(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0A19(0x0003) MISSED OFFSET
	float                                              UnlockInterval;                                           // 0x0A1C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ECapturePointUnlockRules                           UnlockRules;                                              // 0x0A20(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0A21(0x0003) MISSED OFFSET
	int                                                NumCapturingPoint;                                        // 0x0A24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamCapturingPoint;                                       // 0x0A28(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamControllingPoint;                                     // 0x0A29(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData12[0x6];                                       // 0x0A2A(0x0006) MISSED OFFSET
	class AFortTeamInfoAthena*                         TeamInfoControllingPoint;                                 // 0x0A30(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamOwningPoint;                                          // 0x0A38(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	ECapturePointState                                 CaptureState;                                             // 0x0A39(0x0001) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2];                                       // 0x0A3A(0x0002) MISSED OFFSET
	float                                              CapturePercentage;                                        // 0x0A3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              ReplicatedCapturePercentage;                              // 0x0A40(0x0004) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0A44(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCapturePointStateChanged;                               // 0x0A48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamOwningPointChanges;                                 // 0x0A58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCaptureLockEvent;                                       // 0x0A68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCaptureLockBrokenEvent;                                 // 0x0A78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData15[0x10];                                      // 0x0A88(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCapturePoint");
		return ptr;
	}


	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_IconMaterialIndexParameter();
	void OnRep_CaptureState();
	void OnRep_bPermanentShutdown();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCapturePointStateChange(ECapturePointState InState, TEnumAsByte<EFortTeam> InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	bool HasDancingPlayer();
	int GetNumDancingPlayers();
	ECapturePointState GetCaptureState();
};


// Class FortniteGame.FortItem
// 0x0050 (0x0078 - 0x0028)
class UFortItem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemChanged;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0040(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemDestroyed;                                          // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
	unsigned char                                      bLoadedFromSave : 1;                                      // 0x0070(0x0001) (Transient)
	unsigned char                                      bTemporaryItemOwningController : 1;                       // 0x0070(0x0001) (Transient)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItem");
		return ptr;
	}


	bool TryGetCategory(EFortItemCategoryOrdinal Ordinal, struct FText* OutCategoryDisplayName, bool* OutHasIcon, struct FFortMultiSizeBrush* OutCategoryIconBrush);
	void SetOwningControllerForTemporaryItem(class AFortPlayerController* InController);
	bool IsTemporaryItem();
	bool IsSlotted();
	bool IsSchematicOrCraftedWeapon();
	bool IsSchematic();
	bool IsInventoryOverflowItem();
	bool IsInStorageVault();
	bool IsEquipped();
	bool IsEquipable(class AFortPlayerController* EquippingPC, bool bGamepadSwitchingForHeroAbilities);
	bool IsDroppedItem();
	bool IsActivatable(class AFortPlayerController* FortPC, struct FGameplayTagContainer* FailureReason);
	bool HasRarityUpgrade();
	bool HasEvolutions();
	bool HasDurability();
	struct FText STATIC_GetUpgradeRestrictionReasonText(EItemUpgradeRestrictionReason Reason);
	class UFortPersistentResourceItemDefinition* GetUpgradeResourceItemDefinition();
	int GetUpgradeCost();
	EFortItemType GetType();
	TEnumAsByte<EFortItemTier> GetTier();
	bool GetTertiaryCategory(TEnumAsByte<EFortBrushSize> BrushSize, struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush);
	void GetSmallPreviewImage();
	bool GetSecondaryCategory(TEnumAsByte<EFortBrushSize> BrushSize, struct FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush);
	struct FText GetSearchTags();
	EFortItemType GetSchematicResultType();
	class UFortWeaponItemDefinition* GetSchematicCraftingResultOrCraftedWeaponBP();
	class UFortItemDefinition* GetSchematicCraftingResultBP();
	int GetRemainingAmmo();
	int GetRecycleValue();
	int GetRating();
	struct FLinearColor GetRaritySecondaryColor();
	struct FLinearColor GetRarityColor();
	EFortRarity GetRarity();
	bool GetPrimaryCategory(struct FText* ItemCategoryText);
	void GetPreviewAssets();
	class AFortPlayerController* GetOwningController();
	int GetNumInStack();
	float GetNormalizedDurability();
	TEnumAsByte<EFortItemTier> GetMaxTier();
	int GetMaxLevel();
	int GetLoadedAmmo();
	int GetLevelRelativeCostForRarityUpgrade();
	int GetLevel();
	void GetLargePreviewImage();
	struct FText GetItemTypeName(bool bUsePlural);
	struct FGuid GetItemGuid();
	class UFortItemDefinition* GetItemDefinitionBP();
	EFortInventoryFilter GetFilterCategory();
	struct FText STATIC_GetEvolveRestrictionReasonText(EItemEvolutionRestrictionReason Reason);
	float GetDurability();
	struct FText GetDisplayNameWithoutPrefix();
	struct FText GetDisplayName();
	struct FText GetDescription();
	float GetCooldownTimeRemaining(class AFortPlayerController* FortPC, float* CooldownDuration);
	TArray<struct FFortAlterationSlotStatus> GetAlterationSlots();
	TArray<class UFortAlterationItemDefinition*> GetActiveAlterations(int PretendLevel);
	bool DoesMatchSearchString(const struct FString& SearchString);
	bool CanUpgradeItemRarity(TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanEvolve(TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons);
	bool CanBeUpgraded(TArray<EItemUpgradeRestrictionReason>* OutRestrictionReasons);
	bool CanBeUnslotted();
	bool CanBeDropped();
	bool AllowedToBeLockedInInventory();
};


// Class FortniteGame.FortAccountItem
// 0x0068 (0x00E0 - 0x0078)
class UFortAccountItem : public UFortItem
{
public:
	int                                                Level;                                                    // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Xp;                                                       // 0x007C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                item_seen;                                                // 0x0080(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                favorite;                                                 // 0x0084(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                max_level_bonus;                                          // 0x0088(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FString                                     inventory_overflow_date;                                  // 0x0090(0x0010) (ZeroConstructor)
	class UFortAccountItemDefinition*                  ItemDefinition;                                           // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     InstanceId;                                               // 0x00A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TemplateId;                                               // 0x00B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Quantity;                                                 // 0x00C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLocalOnlyItem;                                         // 0x00CC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsPendingBeingMarkedAsSeen;                              // 0x00CD(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsResolveMarkedAsSeen;                                // 0x00CE(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x11];                                      // 0x00CF(0x0011) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountItem");
		return ptr;
	}


	void MarkItemAsSeenBP();
	bool IsFavorite();
	bool HasBeenSeenLocally();
	TArray<struct FFortItemQuantityPair> GetRecyclingRefunds();
};


// Class FortniteGame.AthenaCosmeticAccountItem
// 0x0020 (0x0100 - 0x00E0)
class UAthenaCosmeticAccountItem : public UFortAccountItem
{
public:
	TArray<struct FMcpVariantChannelInfo>              VariantChannels;                                          // 0x00E0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FMcpVariantReader>                   Variants;                                                 // 0x00F0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCosmeticAccountItem");
		return ptr;
	}


	bool HasMultipleVariants();
	bool HasCosmeticVariance();
};


// Class FortniteGame.AthenaCharacterItem
// 0x0000 (0x0100 - 0x0100)
class UAthenaCharacterItem : public UAthenaCosmeticAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCharacterItem");
		return ptr;
	}

};


// Class FortniteGame.AthenaCharacterItemDefinition
// 0x0010 (0x0460 - 0x0450)
class UAthenaCharacterItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	class UAthenaBackpackItemDefinition*               DefaultBackpack;                                          // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaCharacterItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortMontageItemDefinitionBase
// 0x0060 (0x04B0 - 0x0450)
class UFortMontageItemDefinitionBase : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0450(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortMontageItemDefinitionBase.AnimationFemaleOverride
	int                                                PreviewLoops;                                             // 0x0498(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PreviewLength;                                            // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EmoteCooldownSecs;                                        // 0x04A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bMontageContainsFacialAnimation;                          // 0x04A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayRandomSection;                                       // 0x04A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSwitchToHarvestingToolOnUse;                             // 0x04A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x9];                                       // 0x04A7(0x0009) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMontageItemDefinitionBase");
		return ptr;
	}


	void PreviewInPIE();
	class UAnimMontage* GetAnimationHardReference(TEnumAsByte<EFortCustomBodyType> BodyType, TEnumAsByte<EFortCustomGender> Gender);
	void GetAnimation(TEnumAsByte<EFortCustomBodyType> BodyType, TEnumAsByte<EFortCustomGender> Gender);
};


// Class FortniteGame.AthenaConsumableEmoteItemDefinition
// 0x0000 (0x04B0 - 0x04B0)
class UAthenaConsumableEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaConsumableEmoteItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaDanceItemDefinition
// 0x0040 (0x04F0 - 0x04B0)
class UAthenaDanceItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaDanceItemDefinition.CustomDanceAbility
	struct FText                                       ChatTriggerCommandName;                                   // 0x04D8(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaDanceItemDefinition");
		return ptr;
	}


	struct FText GetChatTriggerCommandName();
};


// Class FortniteGame.BuildingRift
// 0x0108 (0x0738 - 0x0630)
class ABuildingRift : public ABuildingActor
{
public:
	float                                              DistToTarget;                                             // 0x0630(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	bool                                               bSendMissionEvents;                                       // 0x0638(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDelayDeath;                                              // 0x0639(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x063A(0x0002) MISSED OFFSET
	float                                              SpawnDelay;                                               // 0x063C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEnvQuery*                                   EnvironmentQuery;                                         // 0x0640(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FEnvNamedValue>                      QueryParams;                                              // 0x0648(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              QueryRadius;                                              // 0x0658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x065C(0x0004) MISSED OFFSET
	TArray<struct FVector>                             FreeSpawnSlots;                                           // 0x0660(0x0010) (ZeroConstructor)
	TArray<struct FFortSpawnSlotData>                  UsedSpawnSlots;                                           // 0x0670(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	bool                                               bRiftIsVisible;                                           // 0x0690(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bRiftIsActive;                                            // 0x0691(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsReadyToSpawnAI;                                        // 0x0692(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasBeenInitialized;                                      // 0x0693(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasBadRiftSlots;                                         // 0x0694(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4B];                                      // 0x0695(0x004B) MISSED OFFSET
	bool                                               bCreateOverlapSphere;                                     // 0x06E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x06E1(0x0003) MISSED OFFSET
	float                                              OverlapSphereRadius;                                      // 0x06E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USphereComponent*                            OverlapSphereComponent;                                   // 0x06E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x18];                                      // 0x06F0(0x0018) MISSED OFFSET
	struct FName                                       DestructionLootTierGroup;                                 // 0x0708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    LootDropTossDirection;                                    // 0x0710(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              LootDropConeHalfAngle;                                    // 0x071C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LootDropSpeed;                                            // 0x0720(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	TArray<struct FFortRiftReservation>                RiftReservations;                                         // 0x0728(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingRift");
		return ptr;
	}


	void OnStartedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnSpawnAI();
	void OnRep_RiftIsVisible();
	void OnRep_RiftIsActive();
	void OnRemoved();
	void OnPlaced();
	void OnFinishedEncounterSpawn(class AFortAIPawn* SpawnedAI);
	void OnDeactivated();
	void OnActivated();
	void BroadcastRiftSpawningAI();
};


// Class FortniteGame.AthenaDeimosRift
// 0x0028 (0x0760 - 0x0738)
class AAthenaDeimosRift : public ABuildingRift
{
public:
	TArray<class UClass*>                              SpawnDeck;                                                // 0x0738(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UEnvQuery*                                   QueryTemplate;                                            // 0x0748(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpawnActorsDelay;                                         // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinSpawnRadius;                                           // 0x0754(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxSpawnRadius;                                           // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	EDeimosRiftCosmeticSpawnState                      CosmeticSpawnState;                                       // 0x075C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x075D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaDeimosRift");
		return ptr;
	}


	void SetCosmeticSpawnState(EDeimosRiftCosmeticSpawnState State);
	void QueueActorsToSpawn(class AActor* PlayerTarget, int NumToSpawn);
	void OnStartSpawningActorsEffects();
	void OnSpawningActorsFinished();
	void OnRep_CosmeticSpawnState();
	void OnActorSpawned(class AActor* InActorSpawned);
	void BP_Cosmetic_Spawn();
	void BP_Cosmetic_RampUp();
	void BP_Cosmetic_Idle();
};


// Class FortniteGame.AthenaEmojiItemDefinition
// 0x00C0 (0x05B0 - 0x04F0)
class UAthenaEmojiItemDefinition : public UAthenaDanceItemDefinition
{
public:
	struct FGameplayTag                                EmojiGameplayCueTag;                                      // 0x04F0(0x0008) (Edit)
	unsigned char                                      UnknownData00[0x28];                                      // 0x04F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaEmojiItemDefinition.PreviewAnimation
	unsigned char                                      UnknownData01[0x28];                                      // 0x0520(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaEmojiItemDefinition.SpriteSheet
	struct FIntPoint                                   SheetDimensions;                                          // 0x0548(0x0008) (Edit, IsPlainOldData)
	int                                                FrameIndex;                                               // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FrameCount;                                               // 0x0554(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          BaseMaterial;                                             // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IconSize;                                                 // 0x0560(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                InitialColor;                                             // 0x056C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     InitialLocation;                                          // 0x057C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     InitialVelocity;                                          // 0x0588(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              LifetimeIntroSeconds;                                     // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LifetimeMidSeconds;                                       // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LifetimeOutroSeconds;                                     // 0x059C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           GeneratedMaterial;                                        // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaEmojiItemDefinition");
		return ptr;
	}


	void ConfigureParticleSystem(class UParticleSystemComponent* ParticleSystem);
};


// Class FortniteGame.AthenaEventTokenItem
// 0x0010 (0x00F0 - 0x00E0)
class UAthenaEventTokenItem : public UFortAccountItem
{
public:
	struct FString                                     game_code;                                                // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaEventTokenItem");
		return ptr;
	}

};


// Class FortniteGame.AthenaEventTokenItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UAthenaEventTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	EEventTokenType                                    TokenType;                                                // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0391(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaEventTokenItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortWorldItemDefinition
// 0x05B0 (0x08D0 - 0x0320)
class UFortWorldItemDefinition : public UFortItemDefinition
{
public:
	struct FGameplayTagContainer                       RequiredEquipTags;                                        // 0x0320(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                       OverrideAutoEquipTags;                                    // 0x0340(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bCanAutoEquipByClass;                                     // 0x0360(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWorldItemDropBehavior                             DropBehavior;                                             // 0x0361(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0362(0x0002) MISSED OFFSET
	unsigned char                                      bPersistInInventoryWhenFinalStackEmpty : 1;               // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSupportsQuickbarFocus : 1;                               // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSupportsQuickbarFocusForGamepadOnly : 1;                 // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShouldActivateWhenFocused : 1;                           // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceFocusWhenAdded : 1;                                 // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceStayInOverflow : 1;                                 // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDropCurrentItemOnOverflow : 1;                           // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShouldShowItemToast : 1;                                 // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShowDirectionalArrowWhenFarOff : 1;                      // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanBeDropped : 1;                                        // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanBeReplacedByPickup : 1;                               // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bItemCanBeStolen : 1;                                     // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanBeDepositedInStorageVault : 1;                        // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bItemHasDurability : 1;                                   // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0366(0x0002) MISSED OFFSET
	int                                                DropCount;                                                // 0x0368(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowedToBeLockedInInventory : 1;                        // 0x036C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x036D(0x0003) MISSED OFFSET
	TEnumAsByte<EFortReplicatedStat>                   AccumulatingStatType;                                     // 0x0370(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0378(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              MiniMapViewableDistance;                                  // 0x0400(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	struct FText                                       OwnerPickupText;                                          // 0x0408(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FDataTableCategoryHandle                    LootLevelData;                                            // 0x0420(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0438(0x0008) MISSED OFFSET
	struct FTransform                                  PickupMeshTransform;                                      // 0x0440(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      bOverridePickupMeshTransform : 1;                         // 0x0470(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0471(0x0007) MISSED OFFSET
	struct FGameplayTag                                SpecialActorBaseTag;                                      // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTag                                SpecialActorPickupTag;                                    // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       PickupSpecialActorUniqueID;                               // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 PickupMinimapIconBrush;                                   // 0x0490(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   PickupMinimapIconScale;                                   // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSlateBrush                                 PickupCompassIconBrush;                                   // 0x0520(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   PickupCompassIconScale;                                   // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FGameplayTag                                SpecialActorInventoryTag;                                 // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       InventorySpecialActorUniqueID;                            // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 InventoryMinimapIconBrush;                                // 0x05C0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   InventoryMinimapIconScale;                                // 0x0648(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSlateBrush                                 InventoryCompassIconBrush;                                // 0x0650(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   InventoryCompassIconScale;                                // 0x06D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bDisplayPlayerNameForInventoryActor;                      // 0x06E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x06E1(0x0007) MISSED OFFSET
	struct FText                                       InventoryActorDisplayName;                                // 0x06E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bDisplayHealthForInventoryActor;                          // 0x0700(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayShieldForInventoryActor;                          // 0x0701(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysCountForCollectionQuest;                           // 0x0702(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x5];                                       // 0x0703(0x0005) MISSED OFFSET
	TArray<struct FSpecialActorSingleStatData>         SpecialActorPickupStatList;                               // 0x0708(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSpecialActorSingleStatData>         SpecialActorInventoryStatList;                            // 0x0718(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FScalableFloat                              PickupDespawnTime;                                        // 0x0728(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              InStormPickupDespawnTime;                                 // 0x0748(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDropOnDeath : 1;                                         // 0x0768(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDropOnLogout : 1;                                        // 0x0768(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDropOnDBNO : 1;                                          // 0x0768(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0769(0x0007) MISSED OFFSET
	struct FScalableFloat                              NetworkCullDistanceOverride;                              // 0x0770(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x28];                                      // 0x0790(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.PickupStaticMesh
	unsigned char                                      UnknownData11[0x28];                                      // 0x07B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.PickupSkeletalMesh
	unsigned char                                      UnknownData12[0x28];                                      // 0x07E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldItemDefinition.PickupEffectOverride
	unsigned char                                      UnknownData13[0x28];                                      // 0x0808(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.PickupSound
	unsigned char                                      UnknownData14[0x28];                                      // 0x0830(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.PickupByNearbyPawnSound
	unsigned char                                      UnknownData15[0x28];                                      // 0x0858(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.DropSound
	unsigned char                                      UnknownData16[0x28];                                      // 0x0880(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorldItemDefinition.DroppedLoopSound
	struct FDataTableRowHandle                         DisassembleRecipe;                                        // 0x08A8(0x0010) (Edit)
	float                                              DisassembleDurabilityDegradeMinLootPercent;               // 0x08B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DisassembleDurabilityDegradeMaxLootPercent;               // 0x08BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasDisintegrationValue;                                  // 0x08C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUsesCraftingRecipeToGetDisintegrationValue;              // 0x08C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x2];                                       // 0x08C2(0x0002) MISSED OFFSET
	int                                                FabricationValueOverride;                                 // 0x08C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PreferredQuickbarSlot;                                    // 0x08C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x08CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldItemDefinition");
		return ptr;
	}


	float GetMaxDurability(int ItemLevel);
	int GetFabricationValue(bool bUseDisintegrationOverride);
	float GetDPSAtLevel(int ItemLevel);
	float GetDamageAtLevel(int ItemLevel);
	class UFortWorldItemDefinition* GetAmmoWorldItemDefinition_BP();
	bool CanBeDisassembled();
};


// Class FortniteGame.FortGadgetItemDefinition
// 0x01F0 (0x0AC0 - 0x08D0)
class UFortGadgetItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08D0(0x0008) MISSED OFFSET
	TArray<class UCustomCharacterPart*>                CharacterParts;                                           // 0x08D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x28];                                      // 0x08E8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGadgetItemDefinition.AnimBPOverride
	unsigned char                                      UnknownData02[0x28];                                      // 0x0910(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGadgetItemDefinition.FootstepBankOverride
	unsigned char                                      UnknownData03[0x28];                                      // 0x0938(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGadgetItemDefinition.AbilitySet
	unsigned char                                      UnknownData04[0x28];                                      // 0x0960(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGadgetItemDefinition.AttributeSet
	struct FFortAttributeInitializationKey             AttributeInitKey;                                         // 0x0988(0x0010) (Edit, DisableEditOnInstance)
	TArray<struct FGameplayAttribute>                  TrackedAttributes;                                        // 0x0998(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bDestroyGadgetWhenTrackedAttributesIsZero;                // 0x09A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x09A9(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData06[0x28];                                      // 0x09A9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGadgetItemDefinition.OnDestroyParticleSystem
	unsigned char                                      UnknownData07[0x28];                                      // 0x09D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGadgetItemDefinition.OnDestroySound
	struct FName                                       OnDestroyAttachToSocketName;                              // 0x0A00(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x28];                                      // 0x0A08(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGadgetItemDefinition.GameplayAbility
	bool                                               bHasChargeUp;                                             // 0x0A30(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDropAllOnEquip;                                          // 0x0A31(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x0A32(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       HUDVisibilityTags;                                        // 0x0A38(0x0020) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData10[0x28];                                      // 0x0A58(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGadgetItemDefinition.DecoItemDefinition
	struct FGameplayAttribute                          LevelAttribute;                                           // 0x0A80(0x0020) (Edit, DisableEditOnInstance)
	struct FDataTableRowHandle                         DamageStatHandle;                                         // 0x0AA0(0x0010) (Edit)
	bool                                               bCanChangePreviewImageDuringGame;                         // 0x0AB0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0xF];                                       // 0x0AB1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGadgetItemDefinition");
		return ptr;
	}


	bool HasTrackedAttributes();
	bool HasChargeUp();
	struct FGameplayAttribute GetLevelAttribute();
	class UClass* GetGameplayAbility();
	class UFortDecoItemDefinition* GetDecoItemDefinition();
};


// Class FortniteGame.AthenaGadgetItemDefinition
// 0x0000 (0x0AC0 - 0x0AC0)
class UAthenaGadgetItemDefinition : public UFortGadgetItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaGadgetItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortTooltipManager
// 0x0058 (0x0080 - 0x0028)
class UFortTooltipManager : public UObject
{
public:
	TMap<class UClass*, class UFortTooltip*>           Tooltips;                                                 // 0x0028(0x0050) (ZeroConstructor, Transient)
	class AActor*                                      DamageRecieverProxy;                                      // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipManager");
		return ptr;
	}

};


// Class FortniteGame.FortTooltip
// 0x0068 (0x0090 - 0x0028)
class UFortTooltip : public UObject
{
public:
	struct FText                                       Description;                                              // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltip");
		return ptr;
	}


	void SetLocalizationText(const struct FString& Name, const struct FText& Value);
	void SetLocalizationInt(const struct FString& Name, int Value);
	void SetLocalizationFloat(const struct FString& Name, float Value);
	bool GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<struct FText>* OutDescription);
	bool GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool GetNumericValue(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal);
	bool BP_GetValueData(class UObject* ObjectToDescribe, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData);
	bool BP_GetTokenizedDescriptionText(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<struct FText>* OutDescription);
	bool BP_GetTextForToken(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool BP_GetNumericValue(class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal);
};


// Class FortniteGame.FortItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortItemDefinitionTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWorldItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortWorldItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.AthenaGadgetItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UAthenaGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaGadgetItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.AthenaGameData
// 0x0320 (0x0350 - 0x0030)
class UAthenaGameData : public UPrimaryDataAsset
{
public:
	class UFortPersistentResourceItemDefinition*       SoftCurrencyDefinition;                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortPersistentResourceItemDefinition*       SeasonXPDefinition;                                       // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGameData.FallbackPickaxe
	unsigned char                                      UnknownData01[0x28];                                      // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGameData.FallbackDance
	class UAthenaSeasonItemDefinition*                 FallbackSeason;                                           // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0098(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.AthenaGameData.ShuffleTileItemDefinitions
	class UAthenaBattleBusItemDefinition*              DefaultBattleBusSkin;                                     // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAthenaGliderItemDefinition*                 DefaultGliderSkin;                                        // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAthenaSkyDiveContrailItemDefinition*        DefaultContrailEffect;                                    // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAthenaMusicPackItemDefinition*              DefaultMusicPack;                                         // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortCosmeticItemMarkupTable*                CosmeticMarkupTable;                                      // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGameData.CosmeticPreviewActionList
	unsigned char                                      UnknownData04[0x28];                                      // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.EmotePreviewActorClass
	unsigned char                                      UnknownData05[0x28];                                      // 0x0120(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.LoadingScreenPreviewActorClass
	unsigned char                                      UnknownData06[0x28];                                      // 0x0148(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.SprayPreviewActorClass
	unsigned char                                      UnknownData07[0x28];                                      // 0x0170(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.MusicPackPreviewActorClass
	unsigned char                                      UnknownData08[0x28];                                      // 0x0198(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.SkyDiveContrailPreviewActorClass
	unsigned char                                      UnknownData09[0x28];                                      // 0x01C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.BodyPartOverridePreviewActorClass
	unsigned char                                      UnknownData10[0x28];                                      // 0x01E8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGameData.PickaxeCosmeticPreviewActorClass
	unsigned char                                      UnknownData11[0x50];                                      // 0x0210(0x0050) UNKNOWN PROPERTY: MapProperty FortniteGame.AthenaGameData.CosmeticPreviewActionMap
	unsigned char                                      UnknownData12[0x28];                                      // 0x0260(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGameData.DeniedCosmeticThumbnail
	class UFortItemDefinition*                         PlaceholderItemToShowForDeniedCosmetics;                  // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UAthenaCharacterItemDefinition*>      RandomCharacters;                                         // 0x0290(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGameplayTagMessage>                 UnableToPerformActionMessages;                            // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UCurveLinearColor*                           TimeOfDayRGBForPeripherals;                               // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundMix*                                   AthenaSoundMix;                                           // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundMix*                                   VisualizationSoundMix;                                    // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 DroneCameraAnim;                                          // 0x02C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 ThirdPersonCameraAnim;                                    // 0x02D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 ArenaCameraAnim;                                          // 0x02D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<ECommonInputType, class UTexture2D*>          InputTypeIcons;                                           // 0x02E0(0x0050) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortDeathReasons*>                   PlayerDownedMessages;                                     // 0x0330(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortDeathReasons*>                   PlayerDeadMessages;                                       // 0x0340(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaGameData");
		return ptr;
	}

};


// Class FortniteGame.AthenaGliderItem
// 0x0000 (0x0100 - 0x0100)
class UAthenaGliderItem : public UAthenaCosmeticAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaGliderItem");
		return ptr;
	}

};


// Class FortniteGame.AthenaGliderItemDefinition
// 0x0130 (0x0580 - 0x0450)
class UAthenaGliderItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0450(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGliderItemDefinition.ParachutePrefabClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x0478(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGliderItemDefinition.SkeletalMesh
	unsigned char                                      UnknownData02[0x28];                                      // 0x04A0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaGliderItemDefinition.AnimClass
	unsigned char                                      UnknownData03[0x28];                                      // 0x04C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGliderItemDefinition.TrailParticles
	unsigned char                                      UnknownData04[0x28];                                      // 0x04F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGliderItemDefinition.OwnerTrailParticles
	bool                                               bActivateTrailsOnRotationalMovement;                      // 0x0518(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	struct FName                                       TrailParamName;                                           // 0x0520(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x28];                                      // 0x0528(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGliderItemDefinition.OpenSound
	unsigned char                                      UnknownData07[0x28];                                      // 0x0550(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaGliderItemDefinition.CloseSound
	unsigned char                                      UnknownData08[0x8];                                       // 0x0578(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaGliderItemDefinition");
		return ptr;
	}


	class UClass* GetParachutePrefabClass();
};


// Class FortniteGame.AthenaHatItemDefinition
// 0x0000 (0x0460 - 0x0460)
class UAthenaHatItemDefinition : public UAthenaCharacterPartItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaHatItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaLoadingScreenItemDefinition
// 0x0040 (0x0490 - 0x0450)
class UAthenaLoadingScreenItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET
	struct FVector2D                                   BackgroundDesiredSize;                                    // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                BackgroundColor;                                          // 0x0478(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0488(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaLoadingScreenItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaMapMarkerItemDefinition
// 0x0020 (0x0470 - 0x0450)
class UAthenaMapMarkerItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaMapMarkerItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaMusicPackItemDefinition
// 0x0050 (0x04A0 - 0x0450)
class UAthenaMusicPackItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0450(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaMusicPackItemDefinition.CoverArtImage
	unsigned char                                      UnknownData02[0x8];                                       // 0x0498(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaMusicPackItemDefinition");
		return ptr;
	}


	void GetCoverArt();
};


// Class FortniteGame.FortNavMesh
// 0x0008 (0x05A8 - 0x05A0)
class AFortNavMesh : public ARecastNavMesh
{
public:
	class UFortAIHotSpotManager*                       HotSpotManager;                                           // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavMesh");
		return ptr;
	}

};


// Class FortniteGame.AthenaNavMesh
// 0x0038 (0x05E0 - 0x05A8)
class AAthenaNavMesh : public AFortNavMesh
{
public:
	int                                                HotSpotPathfindingMaxSearchNodes;                         // 0x05A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x05AC(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaNavMesh");
		return ptr;
	}

};


// Class FortniteGame.FortNavSystem
// 0x01F8 (0x0608 - 0x0410)
class UFortNavSystem : public UNavigationSystemV1
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0410(0x0010) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0410(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortNavSystem.DefaultSmashableArea
	unsigned char                                      UnknownData02[0x28];                                      // 0x0448(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortNavSystem.JumpDownArea
	unsigned char                                      UnknownData03[0x28];                                      // 0x0470(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortNavSystem.JumpDownSmashableArea
	unsigned char                                      UnknownData04[0x28];                                      // 0x0498(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortNavSystem.JumpDownSmashableArea2
	unsigned char                                      UnknownData05[0x28];                                      // 0x04C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortNavSystem.JumpDownSmashableArea3
	TArray<class ARecastNavMesh*>                      NamedNavmeshes;                                           // 0x04E8(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortNavLinkBlockerComponent*>        NavLinkBlockers;                                          // 0x04F8(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0508(0x0010) MISSED OFFSET
	TArray<class UFortPathCostEstimator*>              PathEstimators;                                           // 0x0518(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortInescapableZoneTracker*>         InescapableZones;                                         // 0x0528(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bUseStaticMeshLinks : 1;                                  // 0x0538(0x0001) (Config)
	unsigned char                                      bUseStaticWorldLinksDown : 1;                             // 0x0538(0x0001) (Config)
	unsigned char                                      bUseStaticWorldLinksUp : 1;                               // 0x0538(0x0001) (Config)
	unsigned char                                      bUseJumpLinkActors : 1;                                   // 0x0538(0x0001) (Config)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0539(0x0003) MISSED OFFSET
	float                                              DirtyAreasUpdateFreqInactive;                             // 0x053C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x90];                                      // 0x0540(0x0090) MISSED OFFSET
	class AFortNavigationGraph*                        NavGraphData;                                             // 0x05D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              CompositePathGoals;                                       // 0x05D8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FBox>                                AtlasCells;                                               // 0x05E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData09[0x10];                                      // 0x05F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavSystem");
		return ptr;
	}


	void OnNavDataRegistered(class ANavigationData* NavData);
	bool STATIC_IsNavmeshInRadiusInitialized(class UObject* WorldContext, const struct FVector& TestLocation, float TestRadius);
};


// Class FortniteGame.AthenaNavSystem
// 0x0068 (0x0670 - 0x0608)
class UAthenaNavSystem : public UFortNavSystem
{
public:
	unsigned char                                      bUseBuildingGridAsNavigableSpace : 1;                     // 0x0608(0x0001) (Edit)
	unsigned char                                      bAllowAutoRebuild : 1;                                    // 0x0608(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x67];                                      // 0x0609(0x0067) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaNavSystem");
		return ptr;
	}

};


// Class FortniteGame.AthenaNavSystemConfig
// 0x0018 (0x0068 - 0x0050)
class UAthenaNavSystemConfig : public UNavigationSystemModuleConfig
{
public:
	TArray<struct FNavDataConfig>                      SupportedAgents;                                          // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bUseBuildingGridAsNavigableSpace : 1;                     // 0x0060(0x0001) (Edit)
	unsigned char                                      bAllowAutoRebuild : 1;                                    // 0x0060(0x0001) (Edit)
	unsigned char                                      bDiscardNavDataFromSublevels : 1;                         // 0x0060(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaNavSystemConfig");
		return ptr;
	}

};


// Class FortniteGame.AthenaNavSystemConfigOverride
// 0x0010 (0x0348 - 0x0338)
class AAthenaNavSystemConfigOverride : public ANavSystemConfigOverride
{
public:
	TArray<struct FBox>                                DirtyAreas;                                               // 0x0338(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaNavSystemConfigOverride");
		return ptr;
	}


	void LoadPreviewLevels();
};


// Class FortniteGame.FortPathFollowingComponent
// 0x00D0 (0x03A8 - 0x02D8)
class UFortPathFollowingComponent : public UCrowdFollowingComponent
{
public:
	class AFortAIController*                           MyAI;                                                     // 0x02D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x02E0(0x0020) MISSED OFFSET
	float                                              MovementBlockFrustrationCooldownSpeed;                    // 0x0300(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0xA4];                                      // 0x0304(0x00A4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPathFollowingComponent");
		return ptr;
	}

};


// Class FortniteGame.AthenaPathFollowingComponent
// 0x0008 (0x03B0 - 0x03A8)
class UAthenaPathFollowingComponent : public UFortPathFollowingComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaPathFollowingComponent");
		return ptr;
	}

};


// Class FortniteGame.AthenaPetCarrierItemDefinition
// 0x0020 (0x0480 - 0x0460)
class UAthenaPetCarrierItemDefinition : public UAthenaBackpackItemDefinition
{
public:
	class UAthenaPetItemDefinition*                    DefaultPet;                                               // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortUICameraFrameTargetBounds              CameraFramingBounds;                                      // 0x0468(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x047C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaPetCarrierItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaPetItemDefinition
// 0x0030 (0x0480 - 0x0450)
class UAthenaPetItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0450(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0450(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaPetItemDefinition.PetPrefabClass

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaPetItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaPickaxeItemDefinition
// 0x0030 (0x0480 - 0x0450)
class UAthenaPickaxeItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	class UFortWeaponMeleeItemDefinition*              WeaponDefinition;                                         // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PickaxeImpactFXPreviewOffset;                             // 0x0458(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FFortUICameraFrameTargetBounds              CameraFramingBounds;                                      // 0x0464(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaPickaxeItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaStatsSet
// 0x00B0 (0x00D8 - 0x0028)
class UAthenaStatsSet : public UObject
{
public:
	struct FAthenaMatchStats                           CumulativeStats;                                          // 0x0028(0x00A0)
	TArray<struct FAthenaMatchStats>                   BestMatches;                                              // 0x00C8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaStatsSet");
		return ptr;
	}

};


// Class FortniteGame.AthenaSeasonStats
// 0x0060 (0x0088 - 0x0028)
class UAthenaSeasonStats : public UObject
{
public:
	class UAthenaStatsSet*                             CumulativeStats;                                          // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<struct FName, class UAthenaStatsSet*>         Buckets;                                                  // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAthenaSeasonItemDefinition*                 SeasonDefinition;                                         // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSeasonStats");
		return ptr;
	}


	class UAthenaSeasonItemDefinition* GetSeasonDefintion();
};


// Class FortniteGame.AthenaPlayerMatchReport
// 0x0168 (0x0190 - 0x0028)
class UAthenaPlayerMatchReport : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnRewardsAvailable;                                       // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStatsAvailable;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamStatsAvailable;                                     // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FAthenaLevelInfo                            InitialLevelInfo;                                         // 0x0058(0x0024) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bHasMatchStats;                                           // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	struct FAthenaMatchStats                           MatchStats;                                               // 0x0080(0x00A0) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bHasTeamStats;                                            // 0x0120(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	struct FAthenaMatchTeamStats                       TeamStats;                                                // 0x0124(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bHasRewards;                                              // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	struct FAthenaRewardResult                         EndOfMatchResults;                                        // 0x0130(0x0040)
	struct FAthenaTravelRecord                         TravelRecord;                                             // 0x0170(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    TravelLogUpdated;                                         // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaPlayerMatchReport");
		return ptr;
	}


	void GetXpRewards(TArray<struct FAthenaMatchXpReward>* XpRewards);
	int GetTotalSeasonalXpEarned();
	int GetTotalScoreEarned();
	int GetTotalBookXpEarned();
	void GetLootRewards(TArray<struct FAthenaMatchLootReward>* LootRewards);
	void DataAvailableEvent__DelegateSignature();
};


// Class FortniteGame.AthenaQuickChatBank
// 0x0010 (0x0040 - 0x0030)
class UAthenaQuickChatBank : public UDataAsset
{
public:
	TArray<struct FAthenaQuickChatLeafEntry>           ChatOptions;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaQuickChatBank");
		return ptr;
	}

};


// Class FortniteGame.FortEventItemDefinitionBase
// 0x0020 (0x03B0 - 0x0390)
class UFortEventItemDefinitionBase : public UFortAccountItemDefinition
{
public:
	int                                                EventPriority;                                            // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateByDefault;                                       // 0x0394(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0395(0x0003) MISSED OFFSET
	struct FName                                       RequiredEventTag;                                         // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DisallowedEventTag;                                       // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEventItemDefinitionBase");
		return ptr;
	}


	void CreateCalendarPayload();
};


// Class FortniteGame.AthenaSeasonalDecorEvent
// 0x0030 (0x03E0 - 0x03B0)
class UAthenaSeasonalDecorEvent : public UFortEventItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x03B0(0x0020) MISSED OFFSET
	bool                                               bForceBattleBusOverrideEvenIfCosmeticSlotted;             // 0x03D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03D1(0x0007) MISSED OFFSET
	class UAthenaBattleBusItemDefinition*              BattleBusOverride;                                        // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSeasonalDecorEvent");
		return ptr;
	}

};


// Class FortniteGame.AthenaSeasonItemDefinition
// 0x0140 (0x04D0 - 0x0390)
class UAthenaSeasonItemDefinition : public UFortAccountItemDefinition
{
public:
	int                                                SeasonNumber;                                             // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumSeasonLevels;                                          // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumBookLevels;                                            // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	class UDataTable*                                  SeasonXpCurve;                                            // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  BookXpCurve;                                              // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EAthenaSeasonShopVisibility                        SeasonShopVisibility;                                     // 0x03B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAthenaChallengeTabVisibility                      ChallengesVisibility;                                     // 0x03B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03B2(0x0006) MISSED OFFSET
	struct FString                                     SeasonStorefront;                                         // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BattlePassLevelOfferID;                                   // 0x03C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        FreeLevelsThatNavigateToBattlePass;                       // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        FreeLevelsThatAutoOpenTheAboutScreen;                     // 0x03E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FAthenaRewardSchedule                       SeasonXpScheduleFree;                                     // 0x03F8(0x0010) (Edit)
	struct FGameplayTag                                FreeSeasonItemContentTag;                                 // 0x0408(0x0008) (Edit)
	struct FAthenaRewardSchedule                       BookXpScheduleFree;                                       // 0x0410(0x0010) (Edit)
	struct FGameplayTag                                BattlePassFreeItemContentTag;                             // 0x0420(0x0008) (Edit)
	struct FAthenaRewardSchedule                       BookXpSchedulePaid;                                       // 0x0428(0x0010) (Edit)
	struct FGameplayTag                                BattlePassPaidItemContentTag;                             // 0x0438(0x0008) (Edit)
	struct FAthenaSeasonBannerLevelSchedule            SeasonBannerSchedule;                                     // 0x0440(0x0010) (Edit)
	class UFortChallengeBundleScheduleDefinition*      ChallengeSchedulePaid;                                    // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UFortChallengeBundleScheduleDefinition*> ChallengeSchedulesAlwaysShown;                            // 0x0458(0x0010) (Edit, ZeroConstructor)
	struct FAthenaRewardScheduleLevel                  SeasonGrantsToEveryone;                                   // 0x0468(0x0010) (Edit)
	struct FGameplayTag                                SeasonGrantsToEveryoneItemContentTag;                     // 0x0478(0x0008) (Edit)
	struct FAthenaRewardScheduleLevel                  SeasonFirstWinRewards;                                    // 0x0480(0x0010) (Edit)
	struct FGameplayTag                                SeasonFirstWinItemContentTag;                             // 0x0490(0x0008) (Edit)
	struct FAthenaRewardScheduleLevel                  BattleStarSubstitutionReward;                             // 0x0498(0x0010) (Edit)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04A8(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.AthenaSeasonItemDefinition.ExpiringRewardTypes
	unsigned char                                      UnknownData03[0x10];                                      // 0x04B8(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.AthenaSeasonItemDefinition.TokensToRemoveAtSeasonEnd
	unsigned char                                      UnknownData04[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSeasonItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaSeasonTreasureItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UAthenaSeasonTreasureItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSeasonTreasureItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaSkyDiveContrailItemDefinition
// 0x0020 (0x0470 - 0x0450)
class UAthenaSkyDiveContrailItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0450(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSkyDiveContrailItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaSpectatorPlayerListRowData
// 0x0080 (0x00A8 - 0x0028)
class UAthenaSpectatorPlayerListRowData : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnIsSpectatorTargetChanged;                               // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnKillsChanged;                                           // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                Rank;                                                     // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TeamNumber;                                               // 0x004C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TeamColor;                                                // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Kills;                                                    // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRecordingPlayer;                                        // 0x0074(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSpectatorTarget;                                        // 0x0075(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0076(0x0002) MISSED OFFSET
	class AFortPlayerStateAthena*                      PlayerState;                                              // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FUniqueNetIdRepl                            PlayerUniqueId;                                           // 0x0080(0x0028)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSpectatorPlayerListRowData");
		return ptr;
	}


	void SetKills(class AFortPlayerStateAthena* PS, int InKills);
	class AFortPlayerStateAthena* GetPlayerState();
};


// Class FortniteGame.AthenaSpectatorScoreboardRowData
// 0x0040 (0x0068 - 0x0028)
class UAthenaSpectatorScoreboardRowData : public UObject
{
public:
	int                                                Rank;                                                     // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowPlayerNumber;                                        // 0x002C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int                                                TeamNumber;                                               // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PlayerNumber;                                             // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TeamColor;                                                // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FString                                     PlayerName;                                               // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Kills;                                                    // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EScoreboardState                                   ScoreboardState;                                          // 0x005C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRecordingPlayer;                                       // 0x005D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSpectatorTarget;                                       // 0x005E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x005F(0x0001) MISSED OFFSET
	class AFortPlayerStateAthena*                      PlayerState;                                              // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSpectatorScoreboardRowData");
		return ptr;
	}


	void OnKillScoreChanged(class AFortPlayerStateAthena* InPlayerState, int InKills);
	class AFortPlayerStateAthena* GetPlayerState();
};


// Class FortniteGame.AthenaSprayItemDefinition
// 0x0060 (0x0550 - 0x04F0)
class UAthenaSprayItemDefinition : public UAthenaDanceItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaSprayItemDefinition.DecalMaterial
	struct FName                                       ProgressiveCosmeticStatName;                              // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBannerAsTexture;                                      // 0x0520(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0521(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaSprayItemDefinition.DecalTexture

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaSprayItemDefinition");
		return ptr;
	}


	bool ShouldUseBannerAsTexture();
	void GetDecalTexture();
	void GetDecalMaterial();
};


// Class FortniteGame.AthenaToyItemDefinition
// 0x0080 (0x0570 - 0x04F0)
class UAthenaToyItemDefinition : public UAthenaDanceItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaToyItemDefinition.ToySpawnAbility
	unsigned char                                      UnknownData01[0x28];                                      // 0x0518(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaToyItemDefinition.ToyActorClass
	unsigned char                                      UnknownData02[0x28];                                      // 0x0540(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.AthenaToyItemDefinition.FrontEndPreviewActor
	unsigned char                                      UnknownData03[0x8];                                       // 0x0568(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaToyItemDefinition");
		return ptr;
	}


	void GetToyActorClass();
	void BakeLaunchPositions();
};


// Class FortniteGame.AthenaVehicleCosmeticItemDefinition
// 0x0070 (0x04C0 - 0x0450)
class UAthenaVehicleCosmeticItemDefinition : public UAthenaCosmeticItemDefinition
{
public:
	struct FName                                       DecoSocketName;                                           // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	struct FTransform                                  DecoSocketTransform;                                      // 0x0460(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0490(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.AthenaVehicleCosmeticItemDefinition.TestDecoMesh
	unsigned char                                      UnknownData02[0x8];                                       // 0x04B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaVehicleCosmeticItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaVictoryPoseItemDefinition
// 0x0000 (0x04B0 - 0x04B0)
class UAthenaVictoryPoseItemDefinition : public UFortMontageItemDefinitionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaVictoryPoseItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.AthenaWeaponAlterationEvent
// 0x0010 (0x03C0 - 0x03B0)
class UAthenaWeaponAlterationEvent : public UFortEventItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	bool                                               bStopAfterFirstMatch;                                     // 0x03B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowPlayerCosmeticWeaponSkins;                          // 0x03B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03BA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaWeaponAlterationEvent");
		return ptr;
	}

};


// Class FortniteGame.AthenaWeaponCosmeticItemDefinition
// 0x0000 (0x0450 - 0x0450)
class UAthenaWeaponCosmeticItemDefinition : public UAthenaCosmeticItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AthenaWeaponCosmeticItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.TimeOfDayController_BlueprintBase
// 0x01A0 (0x04C8 - 0x0328)
class ATimeOfDayController_BlueprintBase : public AActor
{
public:
	unsigned char                                      bOverride_FogCutoffDistance : 1;                          // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogDensity : 1;                                 // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogHeightFalloff : 1;                           // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogInscatteringColor : 1;                       // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogMaxOpacity : 1;                              // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogStartDistance : 1;                           // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogDirectionalInscatteringColor : 1;            // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogDirectionalInscatteringExponent : 1;         // 0x0328(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogDirectionalInscatteringStartDistance : 1;    // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogFullyDirectionalInscatteringColorDistance : 1;// 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogUseVolumetricFog : 1;                        // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogVolumetricFogExtinctionScale : 1;            // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogVolumetricFogDistance : 1;                   // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogVolumetricFogScatteringDistribution : 1;     // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FogVolumetricFogAlbedo : 1;                     // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TimeOfDay : 1;                                  // 0x0329(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_PostProcessBlendWeight : 1;                     // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_PostProcessFogOpacity : 1;                      // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_PostProcessFogColor : 1;                        // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DirectionalLightColor : 1;                      // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DirectionalLightIntensity : 1;                  // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DirectionalLightAngle : 1;                      // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudHorizonColor : 1;                          // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SkyboxHorizonColor : 1;                         // 0x032A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SkyboxZenithColor : 1;                          // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudAmountHorizon : 1;                         // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudAmountZenith : 1;                          // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudSpeedMaster : 1;                           // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudSpeedDetailTextureOne : 1;                 // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_CloudSpeedDetailTextureTwo : 1;                 // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_StormStrength : 1;                              // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SunScale : 1;                                   // 0x032B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SunDiscIntensity : 1;                           // 0x032C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SkyLightColor : 1;                              // 0x032C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SkyLightIntensity : 1;                          // 0x032C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SkyLightCubemap : 1;                            // 0x032C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x032D(0x0003) MISSED OFFSET
	float                                              FogCutoffDistance;                                        // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogDensity;                                               // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogHeightFalloff;                                         // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogInscatteringColor;                                     // 0x033C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              FogMaxOpacity;                                            // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogStartDistance;                                         // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogDirectionalInscatteringColor;                          // 0x0354(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              FogDirectionalInscatteringExponent;                       // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogDirectionalInscatteringStartDistance;                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogFullyDirectionalInscatteringColorDistance;             // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               FogUseVolumetricFog;                                      // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0371(0x0003) MISSED OFFSET
	float                                              FogVolumetricFogExtinctionScale;                          // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogVolumetricFogDistance;                                 // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogVolumetricFogScatteringDistribution;                   // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      FogVolumetricFogAlbedo;                                   // 0x0380(0x0004) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              TimeOfDay;                                                // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PostProcessBlendWeight;                                   // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PostProcessFogOpacity;                                    // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                PostProcessFogColor;                                      // 0x0390(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                DirectionalLightColor;                                    // 0x03A0(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              DirectionalLightIntensity;                                // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DirectionalLightAngle;                                    // 0x03B4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bResetMaterialWhenUpdatingParams;                         // 0x03C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03C1(0x0003) MISSED OFFSET
	struct FLinearColor                                CloudHorizonColor;                                        // 0x03C4(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                SkyboxHorizonColor;                                       // 0x03D4(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                SkyboxZenithColor;                                        // 0x03E4(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              CloudAmountHorizon;                                       // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudAmountZenith;                                        // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudSpeedMaster;                                         // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudSpeedDetailTextureOne;                               // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CloudSpeedDetailTextureTwo;                               // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StormStrength;                                            // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SunScale;                                                 // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SunDiscIntensity;                                         // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	TMap<struct FName, float>                          ScalarParameters;                                         // 0x0418(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               SkyboxHorizonMaterialParameters;                          // 0x0468(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               SkyboxZenithMaterialParameters;                           // 0x0478(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                                SkyLightColor;                                            // 0x0488(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SkyLightIntensity;                                        // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	class UTextureCube*                                SkyLightCubemap;                                          // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AFortTimeOfDayManager*                       TODM;                                                     // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UExponentialHeightFogComponent*              ExponentialHeightFog;                                     // 0x04B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UDirectionalLightComponent*                  DirectionalLight;                                         // 0x04B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkyLightComponent*                          SkyLight;                                                 // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.TimeOfDayController_BlueprintBase");
		return ptr;
	}


	void SetSunOrMoonScale();
	void SetPostProcessSettings();
};


// Class FortniteGame.HoverDronePawn
// 0x0028 (0x0468 - 0x0440)
class AHoverDronePawn : public AFortReplaySpectatorPawnBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0440(0x0018) MISSED OFFSET
	class UHoverDroneMovementComponent*                HoverMoveComponent;                                       // 0x0458(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0460(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.HoverDronePawn");
		return ptr;
	}


	bool IsMaintainingConstantAltitude();
	float GetAltitude();
};


// Class FortniteGame.AutoFrameDronePawn
// 0x0080 (0x04E8 - 0x0468)
class AAutoFrameDronePawn : public AHoverDronePawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0468(0x0018) MISSED OFFSET
	TArray<class AActor*>                              ActorsToTrack;                                            // 0x0480(0x0010) (ZeroConstructor)
	TMap<class AActor*, float>                         TrackedActorTimes;                                        // 0x0490(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AutoFrameDronePawn");
		return ptr;
	}

};


// Class FortniteGame.AutomationPerfMonitorManager
// 0x0080 (0x00A8 - 0x0028)
class UAutomationPerfMonitorManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<struct FString>                             DesiredStats;                                             // 0x0030(0x0010) (ZeroConstructor)
	bool                                               bRecording;                                               // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              TimeSinceLastRecord;                                      // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastGoodFrame;                                            // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5C];                                      // 0x004C(0x005C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.AutomationPerfMonitorManager");
		return ptr;
	}


	void StopRecordingFTestPerf();
	void StartRecordingFTestPerf(TArray<struct FString> StatsToRecord);
	bool IsRecordingFTestPerf();
	float GetStatAverage(const struct FString& StatName);
	class UAutomationPerfMonitorManager* STATIC_GetPerfMonitorInstance();
};


// Class FortniteGame.BattleBusCosmeticInstanceBase
// 0x0010 (0x0338 - 0x0328)
class ABattleBusCosmeticInstanceBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UAthenaBattleBusItemDefinition*              ActiveSkin;                                               // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BattleBusCosmeticInstanceBase");
		return ptr;
	}

};


// Class FortniteGame.BGAConsumableSpawner
// 0x0080 (0x06B0 - 0x0630)
class ABGAConsumableSpawner : public ABuildingActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	class USceneComponent*                             DummyRoot;                                                // 0x0640(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       SpawnLootTierGroup;                                       // 0x0648(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              AssociatedBuildingActor;                                  // 0x0650(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UEnvQuery*                                   QueryTemplate;                                            // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAIDynamicParam>                     QueryConfig;                                              // 0x0660(0x0010) (Edit, ZeroConstructor)
	bool                                               bAlignSpawnedActorsToSurface;                             // 0x0670(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0671(0x0007) MISSED OFFSET
	TArray<struct FFortItemEntry>                      ConsumablesToSpawn;                                       // 0x0678(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0688(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BGAConsumableSpawner");
		return ptr;
	}

};


// Class FortniteGame.BGAConsumableWrapperItemDefinition
// 0x0030 (0x0350 - 0x0320)
class UBGAConsumableWrapperItemDefinition : public UFortItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0320(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.BGAConsumableWrapperItemDefinition.ConsumableClass
	unsigned char                                      UnknownData01[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BGAConsumableWrapperItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.BinaryWhitelistCommandlet
// 0x0000 (0x0080 - 0x0080)
class UBinaryWhitelistCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BinaryWhitelistCommandlet");
		return ptr;
	}

};


// Class FortniteGame.BuildingActorEditorComponent
// 0x0050 (0x0650 - 0x0600)
class UBuildingActorEditorComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0600(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0600(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingActorEditorComponent.CubeMesh
	unsigned char                                      UnknownData02[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingActorEditorComponent");
		return ptr;
	}

};


// Class FortniteGame.BuildingActorHotSpotConfig
// 0x00F0 (0x0120 - 0x0030)
class UBuildingActorHotSpotConfig : public UDataAsset
{
public:
	struct FBuildingActorHotSpotDirection              DirectionSetup[0x6];                                      // 0x0030(0x0020) (Edit, DisableEditOnInstance)
	struct FBuildingActorHotSpotDirection              DefaultSetup;                                             // 0x00F0(0x0020) (Edit, DisableEditOnInstance)
	class UAIHotSpotConfig*                            ExtraTypeConfig;                                          // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bHasDirectionalSetup : 1;                                 // 0x0118(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingActorHotSpotConfig");
		return ptr;
	}

};


// Class FortniteGame.BuildingActorHotSpotRenderingComponent
// 0x0000 (0x0560 - 0x0560)
class UBuildingActorHotSpotRenderingComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingActorHotSpotRenderingComponent");
		return ptr;
	}

};


// Class FortniteGame.BuildingSMActor
// 0x05B8 (0x0BE8 - 0x0630)
class ABuildingSMActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	class UBuildingTextureData*                        TextureData[0x4];                                         // 0x0640(0x0008) (Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0660(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FTierMeshSets>                       AlternateMeshes;                                          // 0x0668(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int                                                AltMeshIdx;                                               // 0x0678(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	TEnumAsByte<EFortResourceType>                     ResourceType;                                             // 0x067C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x067D(0x0003) MISSED OFFSET
	TArray<class AFortAthenaVehicle*>                  InitialOverlappingVehicles;                               // 0x0680(0x0010) (Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0690(0x0050) MISSED OFFSET
	unsigned char                                      bAllowBuildingCheat : 1;                                  // 0x06E0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bMirrored : 1;                                            // 0x06E0(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnTemplate, SaveGame)
	unsigned char                                      bNoCollision : 1;                                         // 0x06E0(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bNoCameraCollision : 1;                                   // 0x06E0(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bCameraOnlyCollision : 1;                                 // 0x06E0(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bNoPawnCollision : 1;                                     // 0x06E0(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bNoAIPawnCollision : 1;                                   // 0x06E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bNoWeaponCollision : 1;                                   // 0x06E0(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bNoRangedWeaponCollision : 1;                             // 0x06E1(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bNoProjectileCollision : 1;                               // 0x06E1(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bDoNotBlockInteract : 1;                                  // 0x06E1(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bBlocksCeilingPlacement : 1;                              // 0x06E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bBlocksAttachmentPlacement : 1;                           // 0x06E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bSupportsRepairing : 1;                                   // 0x06E1(0x0001) (Edit, BlueprintVisible, Net, DisableEditOnInstance)
	unsigned char                                      bRandomYawOnPlacement : 1;                                // 0x06E1(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bRandomScaleOnPlacement : 1;                              // 0x06E1(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bClearMIDWhenReturningToUndamagedState : 1;               // 0x06E2(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData03 : 2;                                        // 0x06E2(0x0001)
	unsigned char                                      bAllowResourceDrop : 1;                                   // 0x06E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bHideOnDeath : 1;                                         // 0x06E2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPlayDestructionEffects : 1;                              // 0x06E2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSkipConstructionSounds : 1;                              // 0x06E2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSupportedDirectly : 1;                                   // 0x06E2(0x0001) (Transient)
	unsigned char                                      bForciblyStructurallySupported : 1;                       // 0x06E3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      bRegisterWithStructuralGrid : 1;                          // 0x06E3(0x0001)
	unsigned char                                      bUnderConstruction : 1;                                   // 0x06E3(0x0001) (Net)
	unsigned char                                      bUnderRepair : 1;                                         // 0x06E3(0x0001) (Net)
	unsigned char                                      bCollisionBlockedByPawns : 1;                             // 0x06E3(0x0001) (Net, Transient)
	unsigned char                                      UnknownData04 : 1;                                        // 0x06E3(0x0001)
	unsigned char                                      bCurrentlyBeingEdited : 1;                                // 0x06E3(0x0001) (Transient)
	unsigned char                                      UnknownData05 : 1;                                        // 0x06E3(0x0001)
	unsigned char                                      bAllowWeakSpots : 1;                                      // 0x06E4(0x0001) (Edit)
	unsigned char                                      bUseComplexForWeakSpots : 1;                              // 0x06E4(0x0001) (Edit)
	unsigned char                                      bCanSpawnAtLowerQuotaLevels : 1;                          // 0x06E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bNeedsWindMaterialParameters : 1;                         // 0x06E4(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPropagatesBounceEffects : 1;                             // 0x06E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bNeedsDamageOverlay : 1;                                  // 0x06E4(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bIsInitiallyBuilding : 1;                                 // 0x06E4(0x0001) (Net, Transient)
	TEnumAsByte<ELootQuotaLevel>                       MaximumQuotaLevelBound;                                   // 0x06E5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EBuildingAnim>                         BuildingAnimation;                                        // 0x06E6(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x06E7(0x0001) MISSED OFFSET
	struct FVector2D                                   RandomScaleRange;                                         // 0x06E8(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FFortBounceData                             BounceData;                                               // 0x06F0(0x0030) (Transient)
	float                                              InfluenceMapWeight;                                       // 0x0720(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        BASEEffectMeshComponent;                                  // 0x0728(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FBuildingNavObstacle>                NavObstacles;                                             // 0x0730(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      CachedNavAreaHusk;                                        // 0x0740(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	class UClass*                                      CachedNavAreaSmasher;                                     // 0x0748(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0750(0x0018) MISSED OFFSET
	struct FVector                                     BuildingPlacementDistance;                                // 0x0768(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector_NetQuantize100                      ReplicatedDrawScale3D;                                    // 0x0774(0x000C) (Net, Transient)
	class UMaterialInstanceConstant*                   ReplicatedMIC;                                            // 0x0780(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FEditorOnlyBuildingInstanceMaterialParameters EditorOnlyInstanceMaterialParameters;                     // 0x0788(0x0030) (Edit, DisableEditOnTemplate)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x07B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInterface*                          BaseMaterial;                                             // 0x07C0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnConstructionComplete;                                   // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FBuildingActorMinimalReplicationProxy       MinimalReplicationProxy;                                  // 0x07D8(0x0018) (Net)
	struct FName                                       DestructionLootTierGroup;                                 // 0x07F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FChosenQuotaInfo                            DestructionLootTierChosenQuotaInfo;                       // 0x07F8(0x0010) (Transient)
	struct FName                                       DestructionLootTierKey;                                   // 0x0808(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FCurveTableRowHandle                        BuildingResourceAmountOverride;                           // 0x0810(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                MaxResourcesToSpawn;                                      // 0x0820(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0824(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData10[0x28];                                      // 0x0824(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingSMActor.WindSpeedCurve
	unsigned char                                      UnknownData11[0x28];                                      // 0x0850(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingSMActor.WindPannerSpeedCurve
	unsigned char                                      UnknownData12[0x10];                                      // 0x0878(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.BuildingSMActor.IntenseWindMaterials
	unsigned char                                      UnknownData13[0x28];                                      // 0x0888(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingSMActor.WindAudio
	class UParticleSystem*                             BreakEffect;                                              // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             DeathParticles;                                           // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DeathParticleSocketName;                                  // 0x08C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DeathSound;                                               // 0x08C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ConstructedEffect;                                        // 0x08D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShieldBuffMaterialParamValue1;                            // 0x08D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShieldBuffMaterialParamValue2;                            // 0x08DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimatingDistanceFieldSelfShadowBias;                     // 0x08E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x08E4(0x0004) MISSED OFFSET
	TArray<struct FRandomDayphaseFX>                   RandomDayphaseFXList;                                     // 0x08E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAudioComponent*                             ConstructionAudioComponent;                               // 0x08F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            AnimatingMIDs;                                            // 0x0900(0x0010) (ZeroConstructor, Transient)
	class UStaticMeshComponent*                        DamageOverlayComponent;                                   // 0x0910(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MIDDamageOverlay;                                         // 0x0918(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DamageAmountStart;                                        // 0x0920(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastDamageAmount;                                         // 0x0924(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FHitResult                                  LastDamageHit;                                            // 0x0928(0x0088) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x60];                                      // 0x09B0(0x0060) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRepairBuildingStarted;                                  // 0x0A10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRepairBuildingFinished;                                 // 0x0A20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FFortConnectivityComponentData              ConnectivityData;                                         // 0x0A30(0x0018) (SaveGame)
	class UBuildingEditModeMetadata*                   EditModePatternData;                                      // 0x0A48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                UndermineGroup;                                           // 0x0A50(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LogicalBuildingIdx;                                       // 0x0A54(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FAnimatingMaterialPair>              AnimatingMaterialMappings;                                // 0x0A58(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAnimatingMaterialPair>              DamagedButNotAnimatingMaterialMappings;                   // 0x0A68(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                              AnimatingSubObjects;                                      // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumFrameSubObjects;                                       // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      EditModeSupportClass;                                     // 0x0A80(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBuildingEditModeSupport*                    EditModeSupport;                                          // 0x0A88(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HealthToAutoBuild;                                        // 0x0A90(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AccumulatedAutoBuildTime;                                 // 0x0A94(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EBuildingReplacementType>              BuildingReplacementType;                                  // 0x0A98(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EBuildingReplacementType>              ReplacementDestructionReason;                             // 0x0A99(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EBuildingAnim>                         CurBuildingAnimType;                                      // 0x0A9A(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EFortDamageVisualsState                            DamageVisualsState;                                       // 0x0A9B(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurAnimSubObjectNum;                                      // 0x0A9C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurBuildingAnimStartTime;                                 // 0x0AA0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurAnimSubObjectTargetNum;                                // 0x0AA4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            BlueprintMIDs;                                            // 0x0AA8(0x0010) (ZeroConstructor, Transient)
	class UStaticMeshComponent*                        BlueprintMeshComp;                                        // 0x0AB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AFortPlayerStateZone*                        EditingPlayer;                                            // 0x0AC0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UTexture2D*                                  ConnectivityIcon;                                         // 0x0AC8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x18];                                      // 0x0AD0(0x0018) MISSED OFFSET
	struct FVector                                     BuildingAttachmentPointOffset;                            // 0x0AE8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              BuildingAttachmentRadius;                                 // 0x0AF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuildingAttachmentSlot>               BuildingAttachmentSlot;                                   // 0x0AF8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuildingAttachmentType>               BuildingAttachmentType;                                   // 0x0AF9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPlacementType>                        BuildingPlacementType;                                    // 0x0AFA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EStructuralSupportCheck                            LastStructuralCheck;                                      // 0x0AFB(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PlayerGridSnapSize;                                       // 0x0AFC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ABuildingSMActor*                            ParentActorToAttachTo;                                    // 0x0B00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TArray<class ABuildingSMActor*>                    AttachedBuildingActors;                                   // 0x0B08(0x0010) (ZeroConstructor, Transient)
	TArray<class ABuildingSMActor*>                    BuildingActorsAttachedTo;                                 // 0x0B18(0x0010) (ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnTrapPlacementChanged;                                   // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplacementDestruction;                                 // 0x0B38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class ABuildingSMActor*>                    AttachmentPlacementBlockingActors;                        // 0x0B48(0x0010) (Net, ZeroConstructor, Transient)
	class UBuildingConnectivityComponent*              ConnectivityComponent;                                    // 0x0B58(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class ABuildingFoundation>          Foundation;                                               // 0x0B60(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	uint16_t                                           LODActorIndexInFoundation;                                // 0x0B68(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
	uint16_t                                           ActorIndexInFoundation;                                   // 0x0B6A(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0B6C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData18[0x28];                                      // 0x0B6C(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingSMActor.StartRepairSound
	unsigned char                                      UnknownData19[0x10];                                      // 0x0B98(0x0010) MISSED OFFSET
	class ABuildingSMActor*                            DamagerOwner;                                             // 0x0BA8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class AFortConstructorBASE*                        RelevantBASE;                                             // 0x0BB0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x0BB8(0x0008) MISSED OFFSET
	class AFortConstructorBASE*                        LastRelevantBASE;                                         // 0x0BC0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x18];                                      // 0x0BC8(0x0018) MISSED OFFSET
	float                                              ProxyGameplayCueDamagePhysicalMagnitude;                  // 0x0BE0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0BE4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingSMActor");
		return ptr;
	}


	bool WillRegisterWithStructuralGrid();
	void UpdateRepairMaterialAnim(float CurveValue);
	void UpdateLODOverrideEffect(float CurveValue);
	void UpdateDynamicShrinkAndDestroyEffect(float CurveValue);
	void TransferFromDuplicationData(const struct FBuildingDuplicationData& SourceData);
	void TransferBuildingData(class ABuildingSMActor* SourceDataActor);
	void StartBounceAnimation(float StartTime, float Radius, const struct FVector& Normal, const struct FVector& Center, TEnumAsByte<EFortBounceType> InBounceType, bool bLocalInstigator);
	void SetTextureData(TArray<class UTexture2D*> InTextures);
	void SetMirrored(bool bIsMirrored);
	void RepairBuilding(class AFortPlayerController* RepairingController, int ResourcesSpent);
	TArray<class UTexture2D*> ReadTextureData();
	void OnRepairStarted();
	void OnRep_ResourceType(TEnumAsByte<EFortResourceType> OldType);
	void OnRep_ReplicationProxy();
	void OnRep_ReplicatedMIC();
	void OnRep_ReplicatedDrawScale3D();
	void OnRep_RelevantBASE();
	void OnRep_ProxyGameplayCueDamagePhysicalMagnitude();
	void OnRep_MetaData();
	void OnRep_InitialOverlappingVehicles();
	void OnRep_EditingPlayer();
	void OnRep_bUnderRepair();
	void OnRep_bUnderConstruction();
	void OnRep_BuildingReplacementType();
	void OnRep_BuildingAnimation();
	void OnRep_bCollisionBlockedByPawns();
	void OnLODOverrideEffectFinished();
	void OnDynamicShrinkAndDestroyEffectFinished();
	void OnDetachFromBuilding(class ABuildingSMActor* AttachedToBuilding, bool bBeingDestroyed);
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void OnAttachToBuilding(class ABuildingSMActor* AttachedToBuilding);
	void NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters);
	void NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void MulticastPlayFullHealthEffects();
	void MarkConnectedBuildingsForStructuralIntegrityCheck();
	bool IsUnderConstruction();
	bool IsSupportedByWorld();
	bool IsStructurallySupported();
	bool HasDestructionLoot();
	class UCurveLinearColor* GetWindSpeedCurveForPreview();
	class UCurveLinearColor* GetWindPannerSpeedCurveForPreview();
	TEnumAsByte<EBuildingReplacementType> GetReplacementDestructionReason();
	int GetLogicalBuildingIndex();
	bool GetIntenseWindMaterialsForPreview(TArray<class UMaterialInterface*>* Materials);
	struct FBuildingDuplicationData GetDuplicationData();
	class UStaticMeshComponent* GetBuildingMeshComponent();
	TArray<class ABuildingSMActor*> GetAttachedBuildingActors();
	class UMaterialInstanceDynamic* GetAnimatingMID(int ElementIndex);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff2(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_BannerWallBuff1(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void ForceIntoStructuralGridDuringRuntime();
	void EditorOnlySetInstanceMaterialVectorParameter(const struct FName& ParamName, const struct FLinearColor& Value);
	void EditorOnlySetInstanceMaterialTextureParameter(const struct FName& ParamName, class UTexture* Value);
	void EditorOnlySetInstanceMaterialScalarParameter(const struct FName& ParamName, float Value);
	void EditorOnlyRemoveInstanceMaterialVectorParameter(const struct FName& ParamName);
	void EditorOnlyRemoveInstanceMaterialTextureParameter(const struct FName& ParamName);
	void EditorOnlyRemoveInstanceMaterialScalarParameter(const struct FName& ParamName);
	void DetachBuildingActorFromMe(class ABuildingSMActor* ActorToAttach, bool bBeingDestroyed);
	void ClearRequestedBuildingAnimation();
	void BlueprintOnStructurallyUnstable();
	void BlueprintOnStructurallyStable();
	void AttachBuildingActorToMe(class ABuildingSMActor* ActorToAttach, bool bForceAttachment);
	void AddToGrid();
};


// Class FortniteGame.BuildingAutoNav
// 0x0008 (0x0BF0 - 0x0BE8)
class ABuildingAutoNav : public ABuildingSMActor
{
public:
	unsigned char                                      bAutoAssignNavProperties : 1;                             // 0x0BE8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BE9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingAutoNav");
		return ptr;
	}

};


// Class FortniteGame.BuildingCapturePointActor
// 0x00A0 (0x0798 - 0x06F8)
class ABuildingCapturePointActor : public ABuildingGameplayActor
{
public:
	unsigned char                                      bUseHUDIndicator : 1;                                     // 0x06F8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x06F9(0x0007) MISSED OFFSET
	struct FName                                       HUDStyle;                                                 // 0x0700(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HUDOffset;                                                // 0x0708(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bHUDClampToScreenEdge : 1;                                // 0x0714(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0715(0x000B) MISSED OFFSET
	class USphereComponent*                            CollisionComponent;                                       // 0x0720(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bActivated : 1;                                           // 0x0728(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0729(0x0003) MISSED OFFSET
	TEnumAsByte<EContentionRules>                      ContentionRules;                                          // 0x072C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x072D(0x0003) MISSED OFFSET
	TArray<TEnumAsByte<EFortTeam>>                     TeamsBarredFromCapture;                                   // 0x0730(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              PercentIncreasePerPlayerCaptor;                           // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PercentIncreasePerAICaptor;                               // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PercentDecreaseNoCaptor;                                  // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLocked : 1;                                              // 0x074C(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      UnknownData04[0x3];                                       // 0x074D(0x0003) MISSED OFFSET
	float                                              UnlockInterval;                                           // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EUnlockRules>                          UnlockRules;                                              // 0x0754(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0755(0x0003) MISSED OFFSET
	int                                                NumCapturingPoint;                                        // 0x0758(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamCapturingPoint;                                       // 0x075C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamControllingPoint;                                     // 0x075D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamOwningPoint;                                          // 0x075E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<ECaptureState>                         CaptureState;                                             // 0x075F(0x0001) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              CapturePercentage;                                        // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              ReplicatedCapturePercentage;                              // 0x0764(0x0004) (Edit, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCapturePointStateChanged;                               // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamOwningPointChanges;                                 // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0788(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingCapturePointActor");
		return ptr;
	}


	void SetActivatedState(bool bInActivated);
	void OnRep_ReplicatedCapturePercentage();
	void OnRep_CaptureState();
	void OnRep_bLocked();
	void OnRep_bActivated();
	void OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCapturePointStateChange(TEnumAsByte<ECaptureState> InState, TEnumAsByte<EFortTeam> InTeam);
	void OnCapturePointLockStateChange(bool bInLocked);
	void OnCapturePointActiveStateChange(bool bInActive);
	TEnumAsByte<ECaptureState> GetCaptureState();
};


// Class FortniteGame.BuildingConnectivityComponent
// 0x00D0 (0x0310 - 0x0240)
class UBuildingConnectivityComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	TArray<struct FName>                               SocketNames;                                              // 0x0248(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bAutoConnectOnInitialize;                                 // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugData;                                           // 0x0259(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x025A(0x0006) MISSED OFFSET
	class ABuildingSMActor*                            BuildingOwner;                                            // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class ABuildingConnectivityEffect*>         ConnectionEffects;                                        // 0x0268(0x0010) (ZeroConstructor)
	bool                                               bIsPowered;                                               // 0x0278(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bIsProvidingPower;                                        // 0x0279(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bIsAbleToProvidePower;                                    // 0x027A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowConnections;                                        // 0x027B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bAllowsPowerToPassThrough;                                // 0x027C(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    AuthorityOnConnectedDelegate;                             // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AuthorityOnDisconnectedDelegate;                          // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ClientOnConnectedDelegate;                                // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ClientOnDisconnectedDelegate;                             // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AuthorityOnPoweredDelegate;                               // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AuthorityOnUnpoweredDelegate;                             // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ClientOnPoweredDelegate;                                  // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ClientOnUnpoweredDelegate;                                // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0300(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityComponent");
		return ptr;
	}


	void OnRep_Connections();
	void OnRep_bIsProvidingPower();
	void OnRep_bIsPowered();
	void OnPlaced();
	bool K2_IsPowered();
	bool IsConnectedTo(class ABuildingSMActor* TestActor);
	void DrawDebugData();
	void DisconnectAll();
	bool CanConnectTo(class ABuildingSMActor* TestActor);
};


// Class FortniteGame.BuildingConnectivityEffect
// 0x0038 (0x0360 - 0x0328)
class ABuildingConnectivityEffect : public AActor
{
public:
	struct FFortConnectionData                         ConnectionData;                                           // 0x0328(0x0030)
	bool                                               bDebugDraw;                                               // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0359(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityEffect");
		return ptr;
	}


	void OnDisconnect();
	void OnConnect(const struct FTransform& T1, const struct FTransform& T2);
};


// Class FortniteGame.BuildingConnectivityManager
// 0x0010 (0x0338 - 0x0328)
class ABuildingConnectivityManager : public AActor
{
public:
	TArray<class ABuildingSMActor*>                    ConnectivityActors;                                       // 0x0328(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingConnectivityManager");
		return ptr;
	}

};


// Class FortniteGame.BuildingTimeOfDayLights
// 0x0048 (0x0C38 - 0x0BF0)
class ABuildingTimeOfDayLights : public ABuildingAutoNav
{
public:
	TArray<class ULightComponent*>                     TimeOfDayControlledLights;                                // 0x0BF0(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVector>                             TimeOfDayControlledLightsPositions;                       // 0x0C00(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<float>                                      TimeOfDayControlledLightsInitalIntensities;               // 0x0C10(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0C20(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTimeOfDayLights");
		return ptr;
	}


	void GetTimeOfDayBlueprintDefaultVariables(struct FTimeOfDayBlueprintDefaultVariables* OutVariables);
};


// Class FortniteGame.BuildingContainer
// 0x0110 (0x0D48 - 0x0C38)
class ABuildingContainer : public ABuildingTimeOfDayLights
{
public:
	class USoundCue*                                   SearchingSoundCueLoop;                                    // 0x0C38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   LootRepeatSoundCue;                                       // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OnDamageSoundCue;                                         // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OnDeathSoundCue;                                          // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 SearchedMesh;                                             // 0x0C58(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  SearchedMaterialOverrides;                                // 0x0C60(0x0010) (Edit, BlueprintVisible, ZeroConstructor, SaveGame)
	struct FName                                       SearchLootTierGroup;                                      // 0x0C70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FChosenQuotaInfo                            SearchLootTierChosenQuotaInfo;                            // 0x0C78(0x0010) (Transient)
	struct FName                                       ContainerLootTierKey;                                     // 0x0C88(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	int                                                ReplicatedLootTier;                                       // 0x0C90(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   NumItemsToDropRange;                                      // 0x0C94(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SearchBounceRadiusOverride;                               // 0x0C9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFortWorldItemDefinition*                    LootTestingData;                                          // 0x0CA0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LootNoiseRange;                                           // 0x0CA8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LootSpawnLocation;                                        // 0x0CAC(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     LootFinalLocation;                                        // 0x0CB8(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     InstancedLoot_TossDirection;                              // 0x0CC4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              InstancedLoot_TossSpeed;                                  // 0x0CD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InstancedLoot_TossConeHalfAngle;                          // 0x0CD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LootSpawnLocation_Athena;                                 // 0x0CD8(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    LootTossDirection_Athena;                                 // 0x0CE4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LootTossSpeed_Athena;                                     // 0x0CF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LootTossConeHalfAngle_Athena;                             // 0x0CF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFortRarity                                        HighestRarity;                                            // 0x0CF8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bAlwaysShowContainer : 1;                                 // 0x0CF9(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAlwaysMaintainLoot : 1;                                  // 0x0CF9(0x0001) (Edit, DisableEditOnTemplate)
	unsigned char                                      bDestroyContainerOnSearch : 1;                            // 0x0CF9(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAlreadySearched : 1;                                     // 0x0CF9(0x0001) (BlueprintVisible, Net, Transient)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0CFA(0x0001) MISSED OFFSET
	unsigned char                                      bBuriedTreasure : 1;                                      // 0x0CFB(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bHasRaisedTreasure : 1;                                   // 0x0CFB(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bStartAlreadySearched_Athena : 1;                         // 0x0CFB(0x0001) (Edit)
	unsigned char                                      bRegenerateLoot : 1;                                      // 0x0CFB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bUseLocationForDrop : 1;                                  // 0x0CFB(0x0001) (Edit, BlueprintVisible)
	float                                              LootedWeaponsDurabilityModifier;                          // 0x0CFC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortSearchBounceData                       SearchBounceData;                                         // 0x0D00(0x0010) (Net, Transient)
	struct FCurveTableRowHandle                        SearchSpeed;                                              // 0x0D10(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0D20(0x0010) MISSED OFFSET
	class UCurveFloat*                                 CurrentInteractBounceCurve;                               // 0x0D30(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 CurrentInteractBounceNormalCurve;                         // 0x0D38(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SavedReservedRandomValueResult;                           // 0x0D40(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeUntilLootRegenerates;                                 // 0x0D44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingContainer");
		return ptr;
	}


	void RaiseTreasure();
	void OnSetSearched();
	void OnSearchInterrupted();
	void OnRep_bAlreadySearched();
	void OnRaiseTreasure();
	void OnLootReset();
	void OnLootRepeat();
	void OnLoot();
	void OnBeginSearch();
	int GetLootTier();
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	void BounceContainer();
};


// Class FortniteGame.BuildingCorner
// 0x0010 (0x0C00 - 0x0BF0)
class ABuildingCorner : public ABuildingAutoNav
{
public:
	class ABuildingSMActor*                            PrimaryWall;                                              // 0x0BF0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ABuildingSMActor*                            SecondaryWall;                                            // 0x0BF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingCorner");
		return ptr;
	}

};


// Class FortniteGame.BuildingCustomizableSpawnContainer
// 0x0010 (0x0D58 - 0x0D48)
class ABuildingCustomizableSpawnContainer : public ABuildingContainer
{
public:
	TArray<struct FItemAndCount>                       SpawnItems;                                               // 0x0D48(0x0010) (BlueprintVisible, Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingCustomizableSpawnContainer");
		return ptr;
	}

};


// Class FortniteGame.BuildingDeco
// 0x0008 (0x0BF8 - 0x0BF0)
class ABuildingDeco : public ABuildingAutoNav
{
public:
	bool                                               bCastShadow;                                              // 0x0BF0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BF1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingDeco");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata
// 0x00E0 (0x0110 - 0x0030)
class UBuildingEditModeMetadata : public UDataAsset
{
public:
	unsigned char                                      bSupportNextPieceAssist : 1;                              // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHasNavigableOpening : 1;                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHasCustomAttackLocation : 1;                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UBuildingActorHotSpotConfig*                 DefaultHotspotConfig;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAIHotSpotConfig*                            ShootingHotSpotConfig;                                    // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	struct FConnectivityCube                           ConnectivityCubeData;                                     // 0x0050(0x00C0)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_BinaryToggle
// 0x0010 (0x0120 - 0x0110)
class UBuildingEditModeMetadata_BinaryToggle : public UBuildingEditModeMetadata
{
public:
	TArray<TEnumAsByte<EBinaryToggleValues>>           TileData;                                                 // 0x0110(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_BinaryToggle");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_Floor
// 0x0000 (0x0120 - 0x0120)
class UBuildingEditModeMetadata_Floor : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Floor");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_Pillar
// 0x0000 (0x0110 - 0x0110)
class UBuildingEditModeMetadata_Pillar : public UBuildingEditModeMetadata
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Pillar");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_Roof
// 0x0010 (0x0130 - 0x0120)
class UBuildingEditModeMetadata_Roof : public UBuildingEditModeMetadata_BinaryToggle
{
public:
	TArray<struct FAuxiliaryEditTileMeshData>          AuxEditTileMeshData;                                      // 0x0120(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Roof");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_Stair
// 0x0010 (0x0120 - 0x0110)
class UBuildingEditModeMetadata_Stair : public UBuildingEditModeMetadata
{
public:
	TArray<int>                                        TileData;                                                 // 0x0110(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Stair");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadata_Wall
// 0x0000 (0x0120 - 0x0120)
class UBuildingEditModeMetadata_Wall : public UBuildingEditModeMetadata_BinaryToggle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadata_Wall");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeMetadataContainer
// 0x0010 (0x0040 - 0x0030)
class UBuildingEditModeMetadataContainer : public UDataAsset
{
public:
	TArray<class UBuildingEditModeMetadata*>           MetadataCollection;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeMetadataContainer");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeSupport
// 0x0248 (0x0270 - 0x0028)
class UBuildingEditModeSupport : public UObject
{
public:
	class ABuildingSMActor*                            OwnerBuilding;                                            // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerController*                       EditingController;                                        // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBuildingEditModeMetadata*                   PreviewMetadata;                                          // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBuildingEditModeMetadata*                   ScratchpadMetadata;                                       // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      ExpectedMetadataClass;                                    // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              PossibleEditClasses;                                      // 0x0050(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.EditTileMesh
	TArray<class UStaticMeshComponent*>                EditTileMeshComponents;                                   // 0x0088(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.TileMaterialParent
	unsigned char                                      UnknownData02[0x28];                                      // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.ActiveTileTexture
	unsigned char                                      UnknownData03[0x28];                                      // 0x00E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.InactiveTileTexture
	class UStaticMeshComponent*                        LastInteractedComp;                                       // 0x0110(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LastHighlightedComp;                                      // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PreviewComponent;                                         // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.PreviewMaterial
	struct FEditModeState                              PreviewEditModeState;                                     // 0x0150(0x0010) (Transient)
	unsigned char                                      UnknownData05[0x28];                                      // 0x0160(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport.SuccessfulPatternMatchCurve
	struct FTimeline                                   SuccessfulMatchInteractTimeline;                          // 0x0188(0x0098) (Transient)
	unsigned char                                      bCanMirrorMetadataToMatch : 1;                            // 0x0220(0x0001) (Transient)
	unsigned char                                      bCanRotateMetadataToMatch : 1;                            // 0x0220(0x0001) (Transient)
	unsigned char                                      bEditActionInProgress : 1;                                // 0x0220(0x0001) (Transient)
	unsigned char                                      bInitializedTimelines : 1;                                // 0x0220(0x0001) (Transient)
	unsigned char                                      UnknownData06[0x4F];                                      // 0x0221(0x004F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport");
		return ptr;
	}


	void OnSuccessfulMatchInteractParamUpdate(float NewInteractParamVal);
	void OnSuccessfulMatchInteractComplete();
};


// Class FortniteGame.BuildingEditModeSupport_BinaryToggle
// 0x0020 (0x0290 - 0x0270)
class UBuildingEditModeSupport_BinaryToggle : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_BinaryToggle*      BinaryTogglePreviewData;                                  // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EBinaryToggleValues>                   CurToggleAction;                                          // 0x0278(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	struct FLinearColor                                DefaultBlueTileColor;                                     // 0x027C(0x0010) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x028C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_BinaryToggle");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeSupport_Floor
// 0x0000 (0x0290 - 0x0290)
class UBuildingEditModeSupport_Floor : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Floor");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeSupport_Roof
// 0x0020 (0x02B0 - 0x0290)
class UBuildingEditModeSupport_Roof : public UBuildingEditModeSupport_BinaryToggle
{
public:
	TArray<struct FTileCompInterpData>                 TileInterpData;                                           // 0x0290(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x02A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Roof");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeSupport_Stair
// 0x00D0 (0x0340 - 0x0270)
class UBuildingEditModeSupport_Stair : public UBuildingEditModeSupport
{
public:
	class UBuildingEditModeMetadata_Stair*             StairPreviewMetadata;                                     // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBuildingEditModeMetadata_Stair*             LastValidMetadataConfiguration;                           // 0x0278(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport_Stair.AuxiliaryIndicatorMesh
	TArray<class UStaticMeshComponent*>                AuxiliaryIndicatorComponents;                             // 0x02A8(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UStaticMeshComponent*                        ActivatedAuxIndicatorComponent;                           // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x02C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport_Stair.AuxIndicatorComponentParentMaterial
	unsigned char                                      UnknownData02[0x28];                                      // 0x02E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport_Stair.AuxIndicatorArrowTexture
	unsigned char                                      UnknownData03[0x28];                                      // 0x0310(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingEditModeSupport_Stair.AuxIndicatorGridTexture
	unsigned char                                      UnknownData04[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Stair");
		return ptr;
	}

};


// Class FortniteGame.BuildingEditModeSupport_Wall
// 0x0000 (0x0290 - 0x0290)
class UBuildingEditModeSupport_Wall : public UBuildingEditModeSupport_BinaryToggle
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingEditModeSupport_Wall");
		return ptr;
	}

};


// Class FortniteGame.BuildingFlagSpawn
// 0x0058 (0x0750 - 0x06F8)
class ABuildingFlagSpawn : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06F8(0x0008) MISSED OFFSET
	struct FVector                                     HUDIndicatorRelativeOffset;                               // 0x0700(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      bPickupOnTouch;                                           // 0x070C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	class UClass*                                      CarriedObjectClass;                                       // 0x0710(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeTranslation;                                      // 0x0718(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class AFortCarriedObject*                          SpawnedObject;                                            // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SpawnDelay;                                               // 0x0730(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x0734(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFlagSpawn");
		return ptr;
	}


	void SpawnCarriedObject();
	void OnCarriedObjectDetachedEvent();
	void OnCarriedObjectAttachedEvent();
	bool IsSpawnedObjectAwayFromBase();
};


// Class FortniteGame.BuildingFloor
// 0x0008 (0x0BF0 - 0x0BE8)
class ABuildingFloor : public ABuildingSMActor
{
public:
	unsigned char                                      bShouldIgnoreForHorizontalHotspotSearch : 1;              // 0x0BE8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BE9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFloor");
		return ptr;
	}


	bool IsBalcony();
};


// Class FortniteGame.BuildingFOBConfigActor
// 0x0280 (0x0978 - 0x06F8)
class ABuildingFOBConfigActor : public ABuildingGameplayActor
{
public:
	struct FScriptMulticastDelegate                    OnIOOperationComplete;                                    // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FString                                     ExplicitSaveFile;                                         // 0x0708(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0718(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingFOBConfigActor.FallbackBuildingInstructions
	struct FString                                     CoreSaveFileUniqueContext;                                // 0x0740(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0750(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.BuildingFOBConfigActor.CreationModeSpawnPadClass
	struct FGameplayTagContainer                       SpawnPadPlacementActorRequiredTags;                       // 0x0778(0x0020) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0798(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingFOBConfigActor.FOBCoreLibrary
	unsigned char                                      bLoadFirstCoreInCreationMode : 1;                         // 0x07C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x7];                                       // 0x07C1(0x0007) MISSED OFFSET
	struct FFOBCoreChoiceArray                         FOBCoreChoices;                                           // 0x07C8(0x00C0) (Net, Transient)
	class UFortFOBCoreDecoItemDefinition*              SelectedCoreItemDef;                                      // 0x0888(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ABuildingFOBCoreActor*                       SelectedCore;                                             // 0x0890(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ABuildingFOBCoreSpawnPad*                    CoreSpawnPad;                                             // 0x0898(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFOBSaveFileBuildingInstructionsHandler*     SaveFileInstructionsHandler;                              // 0x08A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FUniqueNetIdRepl                            OwnerNetID;                                               // 0x08A8(0x0028) (Net, Transient)
	EFOBMode                                           FOBMode;                                                  // 0x08D0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EFOBIOStatus                                       IOStatus;                                                 // 0x08D1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x08D2(0x0002) MISSED OFFSET
	unsigned char                                      bEnumeratedUserFilesSuccessfully : 1;                     // 0x08D4(0x0001) (Transient)
	unsigned char                                      bCoreBasedDeploymentModeFinalizationRequested : 1;        // 0x08D4(0x0001) (Transient)
	unsigned char                                      bInitialized : 1;                                         // 0x08D4(0x0001) (Net, Transient)
	unsigned char                                      bFinalized : 1;                                           // 0x08D4(0x0001) (Net, Transient)
	unsigned char                                      bDummyDeployment : 1;                                     // 0x08D4(0x0001) (Transient)
	unsigned char                                      UnknownData05[0x4B];                                      // 0x08D5(0x004B) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAllBuildingsSpawned;                                    // 0x0920(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UBoxComponent*                               ContainmentBoxComponent;                                  // 0x0930(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FBox                                        ContainmentBoxStructuralGridBox;                          // 0x0938(0x001C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0954(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       SpawnLocationTags;                                        // 0x0958(0x0020) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFOBConfigActor");
		return ptr;
	}


	bool ReloadFOB();
	void OnRep_FOBMode();
	void OnRep_bFinalized();
	void OnIOOperationCompleteMulticast(EFOBIOStatus IOOperation, bool bSuccess, class UFortFOBCoreDecoItemDefinition* SelectedCoreDef);
	void OnFOBModeSet(EFOBMode ModeThatWasSet);
	void OnFinalized();
	void OnFinalizationPlayFX();
	void OnFinalizationFXMulticast();
	void OnCoreInitialized(class ABuildingFOBCoreActor* InitializedCore);
	bool IsPlayerControllerFOBOwner(class AFortPlayerController* FortPC);
	bool IsInitialized();
	bool IsFinalized();
	bool IsBuildingActorWithinFOB(class ABuildingActor* ActorToCheck);
	class UFortFOBCoreDecoItemDefinition* GetSelectedFOBCoreItemDefinition();
	EFOBMode GetFOBMode();
	TArray<struct FFOBCoreChoice> GetAllCoreChoices();
	bool CanSaveFOB();
	bool CanReloadFOB();
	bool CanPerformIOOperation();
	bool AttemptSelectFOBCore(class UFortFOBCoreDecoItemDefinition* DefToSelect);
};


// Class FortniteGame.BuildingFOBCoreActor
// 0x0128 (0x0820 - 0x06F8)
class ABuildingFOBCoreActor : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x06F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingFOBCoreActor.SimpleDeathParticles
	unsigned char                                      UnknownData01[0x28];                                      // 0x0720(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingFOBCoreActor.SimpleDeathSound
	class UBoxComponent*                               SimpleBoundsBoxComponent;                                 // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               TouchBoxComponent;                                        // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FVector                                     ContainmentVolumeTouchBoxOffsetExtents;                   // 0x0758(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bRegisterAsGlobalGameplayEventListener : 1;               // 0x0764(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bConformTouchBoxToFOBContainmentBox : 1;                  // 0x0764(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bActive : 1;                                              // 0x0764(0x0001) (Net, Transient)
	unsigned char                                      bTargetable : 1;                                          // 0x0764(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      bVulnerable : 1;                                          // 0x0764(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0765(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFOBCoreTargetableChanged;                               // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOBCoreVulnerableChanged;                               // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FUniqueNetIdRepl                            OwnerNetID;                                               // 0x0788(0x0028) (Net, Transient)
	class UFortFOBCoreDecoItemDefinition*              SpawnedFromItemDef;                                       // 0x07B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ABuildingFOBCoreSpawnPad*                    SpawnedFromSpawnPad;                                      // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FBox                                        FOBBounds;                                                // 0x07C0(0x001C) (Transient, IsPlainOldData)
	struct FBox                                        FOBStructuralBounds;                                      // 0x07DC(0x001C) (Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFOBCoreDamaged;                                         // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOBCoreOutOfHealth;                                     // 0x0808(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bShowTargetableHUDIndicator : 1;                          // 0x0818(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0819(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFOBCoreActor");
		return ptr;
	}


	void OnVulnerableStatusChanged(bool bNewTargetableStatus);
	void OnTargetableStatusChanged(bool bNewTargetableStatus);
	void OnRep_bVulnerable();
	void OnRep_bTargetable();
	void OnRep_bActive();
	void OnActiveStatusChanged(bool bNewActiveStatus);
	void MarkVulnerable();
	void MarkTargetable();
	bool IsActorWithinFOBBounds(class AActor* Actor);
	bool IsActive();
	struct FTransform GetSimpleDeathFXTransform();
	bool GetFOBBoundsCenterAndExtents(struct FVector* OutCenter, struct FVector* OutExtents);
	void GetFOBBoundsBoxOverlappedActors(bool bSortByDistanceFromCore, TArray<class ABuildingSMActor*>* OverlappedActors);
};


// Class FortniteGame.BuildingFOBCoreSpawnPad
// 0x0000 (0x06F8 - 0x06F8)
class ABuildingFOBCoreSpawnPad : public ABuildingGameplayActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFOBCoreSpawnPad");
		return ptr;
	}


	struct FTransform GetCoreSpawnTransform();
};


// Class FortniteGame.BuildingFoundation
// 0x01A8 (0x0D90 - 0x0BE8)
class ABuildingFoundation : public ABuildingSMActor
{
public:
	TArray<class UBuildingGroup*>                      BuildingGroups;                                           // 0x0BE8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0BF8(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.BuildingFoundation.AdditionalWorlds
	struct FVector                                     BuildingDeconstructorOrigin;                              // 0x0C08(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BuildingDeconstructorExtent;                              // 0x0C14(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      bConditionalFoundation : 1;                               // 0x0C20(0x0001) (Edit)
	unsigned char                                      bServerStreamedInLevel : 1;                               // 0x0C20(0x0001) (Net, Transient)
	unsigned char                                      bOverrideNavigationGraphCells : 1;                        // 0x0C20(0x0001) (Edit)
	unsigned char                                      bHasExcludedZone : 1;                                     // 0x0C20(0x0001) (Edit)
	unsigned char                                      bForceDitheringTransition : 1;                            // 0x0C20(0x0001) (Edit)
	unsigned char                                      bStreamingDataBasedBounds : 1;                            // 0x0C20(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0C21(0x0001) MISSED OFFSET
	EDynamicFoundationType                             DynamicFoundationType;                                    // 0x0C22(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuildingFoundationType>               FoundationType;                                           // 0x0C23(0x0001) (ZeroConstructor, IsPlainOldData)
	int                                                NavExclusionMinX;                                         // 0x0C24(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NavExclusionMaxX;                                         // 0x0C28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NavExclusionMinY;                                         // 0x0C2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NavExclusionMaxY;                                         // 0x0C30(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FBox                                        StreamingBoundingBox;                                     // 0x0C34(0x001C) (IsPlainOldData)
	struct FName                                       LevelToStream;                                            // 0x0C50(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTagContainer                       BuildingGroupTagsToPickFrom;                              // 0x0C58(0x0020) (Edit, BlueprintVisible)
	struct FBuildingFoundationStreamingData            StreamingData;                                            // 0x0C78(0x0058) (Transient)
	TArray<class AFortHLODSMActor*>                    SpawnedLODActors;                                         // 0x0CD0(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortHLODSMActor*>                    ChildSpawnedLODActors;                                    // 0x0CE0(0x0010) (ZeroConstructor, Transient)
	TArray<class ALODActor*>                           HLODActors;                                               // 0x0CF0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0D00(0x0008) MISSED OFFSET
	class ULevelStreaming*                             LevelStreamInfo;                                          // 0x0D08(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBuildingFoundationLODActorData>     LODActorsData;                                            // 0x0D10(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0D20(0x0030) MISSED OFFSET
	struct FTransform                                  DynamicFoundationTransform;                               // 0x0D50(0x0030) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0D80(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation");
		return ptr;
	}


	void SetDynamicFoundationTransform(const struct FTransform& NewTransform);
	void OnRep_ServerStreamedInLevel();
	void OnRep_LevelToStream();
	void OnRep_DynamicFoundationTransform();
	void OnLevelStreamedIn();
	void OnLevelShown();
	bool EditorOnlyRemoveAdditionalWorld(struct FString* LevelToRemove);
	TArray<struct FString> EditorOnlyGetAdditionalWorlds();
	void EditorOnlyClearAdditionalWorlds();
	void EditorOnlyAddAdditionalWorld(struct FString* LevelPackageName);
};


// Class FortniteGame.BuildingFoundation3x3
// 0x0000 (0x0D90 - 0x0D90)
class ABuildingFoundation3x3 : public ABuildingFoundation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation3x3");
		return ptr;
	}

};


// Class FortniteGame.BuildingFoundation5x10
// 0x0000 (0x0D90 - 0x0D90)
class ABuildingFoundation5x10 : public ABuildingFoundation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation5x10");
		return ptr;
	}

};


// Class FortniteGame.BuildingFoundation5x5
// 0x0000 (0x0D90 - 0x0D90)
class ABuildingFoundation5x5 : public ABuildingFoundation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingFoundation5x5");
		return ptr;
	}

};


// Class FortniteGame.BuildingGameplayActorBalloon
// 0x0000 (0x06F8 - 0x06F8)
class ABuildingGameplayActorBalloon : public ABuildingGameplayActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingGameplayActorBalloon");
		return ptr;
	}

};


// Class FortniteGame.BuildingGameplayActorC4
// 0x0000 (0x06F8 - 0x06F8)
class ABuildingGameplayActorC4 : public ABuildingGameplayActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingGameplayActorC4");
		return ptr;
	}

};


// Class FortniteGame.BuildingGameplayActorConsumable
// 0x0040 (0x0738 - 0x06F8)
class ABuildingGameplayActorConsumable : public ABuildingGameplayActor
{
public:
	class UClass*                                      OnConsumeGameplayEffect;                                  // 0x06F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      OnConsumeMontageAbility;                                  // 0x0700(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                OnConsumeMontage;                                         // 0x0708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpawnerCalculateRandomRotation;                          // 0x0710(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0711(0x0007) MISSED OFFSET
	class UParticleSystem*                             DeathParticles;                                           // 0x0718(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DeathSound;                                               // 0x0720(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDrawDistanceStw;                                       // 0x0728(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDrawDistanceAthena;                                    // 0x072C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StatNameWhenConsumed;                                     // 0x0730(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingGameplayActorConsumable");
		return ptr;
	}


	void PrepareOnConsumeGameplayEffectSpec(struct FGameplayEffectSpecHandle* SpecHandle);
	void OnLocalBeginUse();
	bool OnInteractAllowedToConsume(class AFortPawn* InteractingPawn);
	void OnAllowedToConsumeFailed(class AFortPawn* InteractingPawn);
	struct FGameplayEffectSpecHandle MakeOnConsumeGameplayEffectSpec();
	class UAnimMontage* GetOnConsumeMontage();
	class UClass* GetOnConsumeGameplayEffect();
	struct FTransform GetDeathFXTransform();
};


// Class FortniteGame.BuildingGroup
// 0x0048 (0x0078 - 0x0030)
class UBuildingGroup : public UDataAsset
{
public:
	struct FName                                       GroupName;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBuildingGroup*                              FallbackGroup;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuildingFoundationType>               FoundationType;                                           // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       AllBuildingLevelTags;                                     // 0x0048(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FFortMapData>                        BuildingLevelData;                                        // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingGroup");
		return ptr;
	}


	void GetAllMapNames(TArray<struct FString>* AllMaps);
};


// Class FortniteGame.BuildingItemCollectorActor
// 0x0118 (0x0810 - 0x06F8)
class ABuildingItemCollectorActor : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x06F8(0x0020) MISSED OFFSET
	EFortItemCollectorBehavior                         ItemCollectorBehavior;                                    // 0x0718(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRequireAllForInteraction : 1;                            // 0x0719(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRequireAllForTurnIn : 1;                                 // 0x0719(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHasToHaveSomething : 1;                                  // 0x0719(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIncrementCaptureCountWhenGoalIsReached : 1;              // 0x0719(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCurrentInteractionSuccess : 1;                           // 0x0719(0x0001) (BlueprintVisible, BlueprintReadOnly)
	EFortItemCollectorState                            ItemCollectorState;                                       // 0x071A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EFortItemCollectorTrackingType                     TrackingType;                                             // 0x071B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x071C(0x0004) MISSED OFFSET
	class AFortPlayerController*                       ControllingPlayer;                                        // 0x0720(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefaultItemLootTierGroupName;                             // 0x0728(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FCollectorUnitInfo>                  ItemCollections;                                          // 0x0730(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance)
	struct FScriptMulticastDelegate                    ManualOutputOverride;                                     // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortWorldItemDefinition*                    ActiveInputItem;                                          // 0x0750(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UFortWorldItemDefinition*                    ClientPausedActiveInputItem;                              // 0x0758(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              ActiveItemRotationTime;                                   // 0x0760(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              ItemRotationTime;                                         // 0x0780(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0784(0x000C) MISSED OFFSET
	struct FGameplayTagContainer                       AllowedItemRotationDamageTags;                            // 0x0790(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              OutputDespenseDelayTime;                                  // 0x07B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DespensingDelayTime;                                      // 0x07D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LootSpawnLocation;                                        // 0x07D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    LootTossDirection;                                        // 0x07E0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LootTossConeHalfAngle;                                    // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LootTossSpeed;                                            // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTossOnGround;                                            // 0x07F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x07F5(0x0003) MISSED OFFSET
	int                                                StartingGoalLevel;                                        // 0x07F8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x07FC(0x0004) MISSED OFFSET
	TArray<struct FCollectorTrackedData>               TrackedInteractionData;                                   // 0x0800(0x0010) (Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingItemCollectorActor");
		return ptr;
	}


	void UpdateCollectorsActiveItem(int StartingSeedValue, class UFortWorldItemDefinition* InputItem, class UTexture* InputTexture, int CurrentGoal, int CurrentCollectedAmount, int CurrentCaptureCount, class UTexture* OutputTexture);
	void SetItemCollectorState(EFortItemCollectorState InItemCollectorState);
	void OnRep_TrackedInteractionData();
	void OnRep_ItemCollectorState();
	void OnRep_ControllingPlayer();
	void OnRep_ActiveInputItem();
	void OnReachedDepositGoal(class AFortPlayerController* CurrentControllingPlayer, class UFortWorldItemDefinition* CurrentActiveInputItem);
	void OnItemCollectorStateChanged(EFortItemCollectorState InItemCollectorState);
	void OnForcedCycle();
	bool HasEnouphDepositItems(class AFortPlayerController* FortPC, class UFortWorldItemDefinition* InputItem, bool bAllOrNothing);
	int GetTeamReachedGoalCount(TEnumAsByte<EFortTeam> InTeam);
	int GetNumberOfCaptures(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int GetDepositGoal(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	int GetDepositAmount(class AFortPlayerController* InFortPC, class UFortWorldItemDefinition* InInputItem);
	class UFortWorldItemDefinition* GetCurrentActiveItem();
};


// Class FortniteGame.BuildingPlayerPrimitivePreview
// 0x0000 (0x0BE8 - 0x0BE8)
class ABuildingPlayerPrimitivePreview : public ABuildingSMActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPlayerPrimitivePreview");
		return ptr;
	}

};


// Class FortniteGame.BuildingLayoutRequirement
// 0x0060 (0x0C48 - 0x0BE8)
class ABuildingLayoutRequirement : public ABuildingPlayerPrimitivePreview
{
public:
	struct FScriptMulticastDelegate                    OnLayoutSatisfied;                                        // 0x0BE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLayoutUnSatisfied;                                      // 0x0BF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      LayoutRequirementSMActorClass;                            // 0x0C08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreResourceTypeRequirements;                          // 0x0C10(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMakeSatisfyingActorIndestructibleWhileRequirementExists; // 0x0C11(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedToInitializeRequirementStatus;                       // 0x0C12(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRequirementSatisfied;                                    // 0x0C13(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	ELayoutRequirementStatus                           RequirementStatus;                                        // 0x0C14(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortResourceType>                     OverrideResourceType;                                     // 0x0C15(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowAnyPattern;                                         // 0x0C16(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowOccupantPatternEditing;                             // 0x0C17(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0C18(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.BuildingLayoutRequirement.LayoutDisplayMaterial
	class UMaterialInstanceDynamic*                    LayoutDisplayMID;                                         // 0x0C40(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingLayoutRequirement");
		return ptr;
	}


	bool SupportsEditingOfOccupant();
	void SetRequirementVisible(bool bVisible);
	void SetRequiredResourceType(TEnumAsByte<EFortResourceType> DesiredResourceType);
	void OnRequirementSatisfyingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void OnRep_RequirementStatus();
	void DeactivateRequirement();
	void ActivateRequirement(bool bMakeVisible);
};


// Class FortniteGame.BuildingProp
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingProp : public ABuildingTimeOfDayLights
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingProp");
		return ptr;
	}

};


// Class FortniteGame.OutpostStructureBase
// 0x0000 (0x0C38 - 0x0C38)
class AOutpostStructureBase : public ABuildingProp
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.OutpostStructureBase");
		return ptr;
	}

};


// Class FortniteGame.BuildingOutpostCraftingTable
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingOutpostCraftingTable : public AOutpostStructureBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostCraftingTable");
		return ptr;
	}

};


// Class FortniteGame.BuildingOutpostFabricator
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingOutpostFabricator : public AOutpostStructureBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostFabricator");
		return ptr;
	}

};


// Class FortniteGame.BuildingOutpostStorageVault
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingOutpostStorageVault : public AOutpostStructureBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStorageVault");
		return ptr;
	}

};


// Class FortniteGame.BuildingOutpostStormshieldUpgrade
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingOutpostStormshieldUpgrade : public AOutpostStructureBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStormshieldUpgrade");
		return ptr;
	}

};


// Class FortniteGame.BuildingOutpostStormshieldCore
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingOutpostStormshieldCore : public ABuildingOutpostStormshieldUpgrade
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingOutpostStormshieldCore");
		return ptr;
	}

};


// Class FortniteGame.BuildingPillar
// 0x0000 (0x0BF0 - 0x0BF0)
class ABuildingPillar : public ABuildingAutoNav
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPillar");
		return ptr;
	}

};


// Class FortniteGame.BuildingPropAtlas
// 0x0140 (0x0D78 - 0x0C38)
class ABuildingPropAtlas : public ABuildingProp
{
public:
	class UPrimitiveComponent*                         Ring1Comp;                                                // 0x0C38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         Ring2Comp;                                                // 0x0C40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         Ring3Comp;                                                // 0x0C48(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    RingTransitionMID;                                        // 0x0C50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAudioComponent*                             PortalAudioComp;                                          // 0x0C58(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x118];                                     // 0x0C60(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPropAtlas");
		return ptr;
	}


	void StopRingSpinning();
	void SetupAnimationTransition(class UMaterialInstanceDynamic* Mid, const struct FName& ParamName, float InTransitionTime);
	void SetupAnimationSpeed(float InActivationTime, float InTotalDefenseTime, float InAnimSpeedStart, float InAnimSpeedEnd);
	void RestoreRingsHierarchy();
	void PlayRingsReset(float AnimDuration);
	void PlayRingSpinning(const struct FRotator& Ring1RateMin, const struct FRotator& Ring1RateMax, const struct FRotator& Ring2Rate, const struct FRotator& Ring3Rate);
	void PlayRingsIdleLoop(float AnimDuration, float Ring1ZOffset);
	void PlayRingDamage(float DurationMin, float DurationMax, float MagnitudeMin, float MagnitudeMax);
	void OnRingSpinningLoop();
	void InitializeRings(class UPrimitiveComponent* InRing1Comp, class UPrimitiveComponent* InRing2Comp, class UPrimitiveComponent* InRing3Comp);
	void InitializeAudio(class UAudioComponent* InPortalLoopingComp);
	float GetDefenseProgress();
	float GetDefenseAnimSpeed();
};


// Class FortniteGame.BuildingPropCorner
// 0x0000 (0x0C00 - 0x0C00)
class ABuildingPropCorner : public ABuildingCorner
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPropCorner");
		return ptr;
	}

};


// Class FortniteGame.BuildingPropSimpleInteract
// 0x0000 (0x0C38 - 0x0C38)
class ABuildingPropSimpleInteract : public ABuildingProp
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPropSimpleInteract");
		return ptr;
	}

};


// Class FortniteGame.BuildingPropWall
// 0x0018 (0x0C50 - 0x0C38)
class ABuildingPropWall : public ABuildingProp
{
public:
	struct FBuildingActorNavArea                       AreaPatternOverride;                                      // 0x0C38(0x0004) (Edit, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EBuildingWallArea>                     AreaShapeType;                                            // 0x0C3C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0C3D(0x0003) MISSED OFFSET
	float                                              AreaWidthOverride;                                        // 0x0C40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C44(0x0004) MISSED OFFSET
	unsigned char                                      bOverrideAreaWidth : 1;                                   // 0x0C48(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0C49(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingPropWall");
		return ptr;
	}

};


// Class FortniteGame.BuildingRoof
// 0x0008 (0x0BF0 - 0x0BE8)
class ABuildingRoof : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0BE8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingRoof");
		return ptr;
	}

};


// Class FortniteGame.BuildingStairs
// 0x0008 (0x0BF8 - 0x0BF0)
class ABuildingStairs : public ABuildingFloor
{
public:
	TEnumAsByte<EBuildingStairsRailing>                RailingType;                                              // 0x0BF0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BF1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingStairs");
		return ptr;
	}

};


// Class FortniteGame.BuildingStructuralSupportSystem
// 0x0350 (0x0378 - 0x0028)
class UBuildingStructuralSupportSystem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TMap<class ABuildingSMActor*, class AController*>  BatchedRemovalActorsWithInstigator;                       // 0x0030(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x240];                                     // 0x0080(0x0240) MISSED OFFSET
	TArray<class ABuildingLayoutRequirement*>          LayoutRequirementActorsToRegister;                        // 0x02C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xA0];                                      // 0x02D0(0x00A0) MISSED OFFSET
	class AFortNavigationGraph*                        NavGraph;                                                 // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingStructuralSupportSystem");
		return ptr;
	}


	bool WouldBuildingBeStructurallySupportedByNeighbors(class ABuildingSMActor* ActorToCheck, const struct FVector& Location, const struct FRotator& Rotation, bool bMirrored);
	void StopActorRemovalBatch();
	void StartActorRemovalBatch();
	struct FBuildingNeighboringActorInfo MarkConnectedBuildingsForStructuralIntegrityCheck(class ABuildingSMActor* ActorToMarkBuildingsFor);
	bool K2_GetWorldLocFromGridIndices(const struct FBuildingSupportCellIndex& GridIndices, struct FVector* OutWorldLoc);
	void K2_GetNeighboringBuildingActors(TEnumAsByte<EFortBuildingType> BuildingType, const struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForWallActor(const struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetNeighboringActorsForCenterCellActor(const struct FVector& WorldLocation, struct FBuildingSupportCellIndex* OutActorGridIndices, struct FBuildingNeighboringActorInfo* OutNeighboringActors);
	void K2_GetLogicalBuildingActors(int LogicalIdx, TArray<class ABuildingSMActor*>* LogicalBuildingActors);
	bool K2_GetGridIndicesFromWorldLoc(const struct FVector& WorldLoc, struct FBuildingSupportCellIndex* OutGridIndices);
	struct FBox K2_GetGridBoxFromWorldLoc(const struct FVector& WorldLocation);
	bool K2_GetBuildingActorsInGridCells(TArray<struct FBuildingSupportCellIndex> CellIndices, const struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	bool K2_GetBuildingActorsInGridCell(const struct FVector& WorldLocation, const struct FBuildingGridActorFilter& Filter, struct FBuildingNeighboringActorInfo* OutActorsInGridCell);
	TEnumAsByte<EFortStructuralGridQueryResults> K2_CanAddWallActorToGrid(const struct FVector& WorldLocation, const struct FBuildingSupportCellIndex& GridIndices, TEnumAsByte<EFortBuildingType> WallType, bool bAllowStaticOverlap, bool bPerformCollisionChecks, EStructuralWallPosition* OutWallPosition, int* OutWallIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld);
	TEnumAsByte<EFortStructuralGridQueryResults> K2_CanAddFloorActorToGrid(const struct FVector& WorldLocation, const struct FBuildingSupportCellIndex& GridIndices, TEnumAsByte<EFortBuildingType> FloorType, bool bAllowStaticOverlap, bool bPerformCollisionChecks, EStructuralFloorPosition* OutFloorPosition, int* OutFloorIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbSupportedByWorld);
	TEnumAsByte<EFortStructuralGridQueryResults> K2_CanAddCenterCellActorToGrid(const struct FVector& WorldLocation, const struct FBuildingSupportCellIndex& GridIndices, TEnumAsByte<EFortBuildingType> CenterCellType, bool bAllowStaticOverlap, bool bPerformCollisionChecks, int* OutHorizontalGridIdx, TArray<class ABuildingActor*>* OutExistingBuildings, bool* OutbStructurallySupported);
	TEnumAsByte<EFortStructuralGridQueryResults> K2_CanAddBuildingActorToGrid(class UObject* WorldContextObject, class ABuildingSMActor* ActorToCheck, const struct FVector& Location, const struct FRotator& Rotation, bool bMirrored, bool bAllowStaticOverlap, TArray<class ABuildingActor*>* ExistingBuildings);
	bool IsWorldLocValid(const struct FVector& WorldLoc);
	bool STATIC_IsBuildingActorValid(class ABuildingSMActor* ActorToTest);
	bool IsBuildingActorStructurallySupported(class ABuildingSMActor* ActorToCheck);
	class ABuildingSMActor* GetWallActor(const struct FBuildingSupportCellIndex& GridIndices, EStructuralWallPosition WallPosition);
	void GetLogicalBuildingGroundSupportedActors(int LogicalIndex, TArray<class ABuildingSMActor*>* LogicalBuildingGroundSupportedActors);
	struct FBox GetGridBox(const struct FBuildingSupportCellIndex& CellIndex);
	class ABuildingSMActor* GetFloorActor(const struct FBuildingSupportCellIndex& GridIndices, EStructuralFloorPosition FloorPosition);
	class ABuildingSMActor* GetCenterCellActor(const struct FBuildingSupportCellIndex& GridIndices);
	TEnumAsByte<EFortStructuralGridQueryResults> CanAddBuildingActorClassToGrid(class UObject* WorldContextObject, class UClass* BuildingSMActorClassToCheck, const struct FVector& Location, const struct FRotator& Rotation, bool bMirrored, bool bAllowStaticOverlap, TArray<class ABuildingActor*>* OutExistingBuildings);
	bool AreNeighborsConnected(class ABuildingSMActor* NeighborOne, const struct FVector& NeighborOneLoc, const struct FRotator& NeighborOneRot, bool bNeighborOneMirrored, class ABuildingSMActor* NeighborTwo, const struct FVector& NeighborTwoLoc, const struct FRotator& NeighborTwoRot, bool bNeighborTwoMirrored);
	bool AreNeighboringBuildingActorsConnected(class ABuildingSMActor* NeighborOne, class ABuildingSMActor* NeighborTwo);
	bool AreGridIndicesValid(const struct FBuildingSupportCellIndex& GridIndices);
};


// Class FortniteGame.BuildingTextureData
// 0x0038 (0x0068 - 0x0030)
class UBuildingTextureData : public UDataAsset
{
public:
	class UTexture2D*                                  Diffuse;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Normal;                                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Specular;                                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          OverrideMaterial;                                         // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTextureDataType>                  Type;                                                     // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortResourceType>                     ResourceType;                                             // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              ResourceCost[0x4];                                        // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTextureData");
		return ptr;
	}

};


// Class FortniteGame.BuildingTrap
// 0x0160 (0x0D48 - 0x0BE8)
class ABuildingTrap : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0BE8(0x0010) MISSED OFFSET
	class USceneComponent*                             TraceLocation;                                            // 0x0BF8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMesh*                                 TrapRangeMesh;                                            // 0x0C00(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 TrapPreviewMesh;                                          // 0x0C08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFortTrapItemDefinition*                     TrapData;                                                 // 0x0C10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, SaveGame, IsPlainOldData)
	struct FText                                       AttachmentHintText;                                       // 0x0C18(0x0018) (Edit, BlueprintVisible)
	struct FFortTargetFilter                           TriggerFilter;                                            // 0x0C30(0x0048) (Edit, BlueprintVisible)
	struct FVector                                     TrapPlacementOffset;                                      // 0x0C78(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C84(0x0004) MISSED OFFSET
	class UFortAbilitySet*                             AbilitySet;                                               // 0x0C88(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortDamageSet*                              DamageAttributeSet;                                       // 0x0C90(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UFortAlterationItemDefinition*>       AppliedAlterations;                                       // 0x0C98(0x0010) (Net, ZeroConstructor, SaveGame)
	TArray<struct FFortAbilitySetHandle>               AlterationAbilitySetHandles;                              // 0x0CA8(0x0010) (ZeroConstructor, Transient)
	class ABuildingSMActor*                            AttachedTo;                                               // 0x0CB8(0x0008) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bTargetWithAttachedTo;                                    // 0x0CC0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0CC1(0x0007) MISSED OFFSET
	class ABuildingSMActor*                            LastAttachedTo;                                           // 0x0CC8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DelayBeforeDestroyAfterDurabilityExpired;                 // 0x0CD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SavedDurabilityPct;                                       // 0x0CD4(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0CD8(0x0008) MISSED OFFSET
	TArray<struct FVector>                             ShouldTriggerTraceOffsets;                                // 0x0CE0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UPrimitiveComponent*>                 TriggerComponents;                                        // 0x0CF0(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 DamageComponents;                                         // 0x0D00(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UStaticMeshComponent*>                StaticMeshes;                                             // 0x0D10(0x0010) (ExportObject, ZeroConstructor)
	int                                                TrapLevel;                                                // 0x0D20(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData04[0x24];                                      // 0x0D24(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrap");
		return ptr;
	}


	bool UseAttachedToWhenTargeted();
	bool TriggerIfAppropriate();
	void SpawnedFromItemDefinition(class UFortTrapItemDefinition* ItemDef, int InTrapLevel);
	void SetAttachedTo(class ABuildingSMActor* ActorAttachedTo);
	void OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_AttachedTo();
	void OnReloadEnd();
	void OnReloadBegin();
	void OnPlaced();
	void OnOutOfDurability();
	void OnInitTeam();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnFinishedBuilding();
	void OnDestroy();
	bool HasDurability();
	int GetTrapRating();
	int GetTrapLevel();
	TArray<class AActor*> GetTouchingDamageTargets(const struct FFortTargetFilter& Filter);
	float GetReloadTime();
	float GetMaxDurability();
	float GetFireDelay();
	float GetDurabilityPercent();
	float GetDamageDelay();
	struct FVector GetCenter();
	class ABuildingSMActor* GetBuildingAttachedTo();
	float GetArmTime();
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void FinishTrigger();
	bool BP_ShouldTrigger(TArray<class AActor*> TouchingActors);
	void BP_OnTrigger(TArray<class AActor*> TouchingActors, bool* bOutConsumeEvent);
	void AttemptRetrigger(float Seconds);
	void AddTriggerComponent(class UPrimitiveComponent* TriggerComponent);
	void AddDamageComponent(class UPrimitiveComponent* DamageComponent);
};


// Class FortniteGame.BuildingTrapCeiling
// 0x0000 (0x0D48 - 0x0D48)
class ABuildingTrapCeiling : public ABuildingTrap
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapCeiling");
		return ptr;
	}

};


// Class FortniteGame.BuildingTrapCeiling_Falling
// 0x0018 (0x0D60 - 0x0D48)
class ABuildingTrapCeiling_Falling : public ABuildingTrapCeiling
{
public:
	class UStaticMeshComponent*                        VisibleMeshComponent;                                     // 0x0D48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FTransform>                          SpawnPoints;                                              // 0x0D50(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapCeiling_Falling");
		return ptr;
	}


	void TrapActivated(float CooldownDuration);
};


// Class FortniteGame.BuildingTrapFloor
// 0x0000 (0x0D48 - 0x0D48)
class ABuildingTrapFloor : public ABuildingTrap
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapFloor");
		return ptr;
	}

};


// Class FortniteGame.BuildingTrapDefender
// 0x0050 (0x0D98 - 0x0D48)
class ABuildingTrapDefender : public ABuildingTrapFloor
{
public:
	EFortDefenderInteractionError                      LastInteractError;                                        // 0x0D48(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0D49(0x0007) MISSED OFFSET
	class AFortAIPawn*                                 DefenderPawn;                                             // 0x0D50(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UFortDefenderItemDefinition*                 DefenderItemDefinition;                                   // 0x0D58(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	int                                                DefenderItemLevel;                                        // 0x0D60(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0D64(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    DefenderPawnOrItemSet;                                    // 0x0D68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0D78(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapDefender");
		return ptr;
	}


	class UFortWorldItem* TakeWeaponAwayFromDefender(class UFortWorldItem* WeaponToTakeAway);
	void SupplyDefender(class UFortWorldItem* WeaponToGive, int AmmoQuantity);
	class AFortAIPawn* SpawnDefenderfromItem(class UFortAccountItem* DefenderItem, const struct FName& DefenderSquadId, const struct FTransform& SpawnTransform, class AActor* InOwner);
	void RemoveCurrentDefender(class AFortPlayerStateZone* RequestingPlayer, bool bRemovalCausedByPlayerJoin);
	void OnRep_DefenderPawn();
	void OnRep_DefenderItemDefinition();
	struct FText GetLastInteractErrorText();
	struct FTransform GetDefenderSpawnTransform();
	void DeployDefender(class AFortPlayerController* ItemSelectorPC, class UFortDefenderItem* InDefenderItem, const struct FName& InDefenderSquadId, class UFortWorldItem* WeaponToGive, int AmmoQuantity);
	void ClearCurrentDefender(bool bForceKillDefender);
};


// Class FortniteGame.BuildingTrapFloor_Hoverboard
// 0x0028 (0x0D70 - 0x0D48)
class ABuildingTrapFloor_Hoverboard : public ABuildingTrapFloor
{
public:
	class UArrowComponent*                             DirectionArrow;                                           // 0x0D48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              PushAmount;                                               // 0x0D50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0D54(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapFloor_Hoverboard");
		return ptr;
	}


	void OnTriggerEndTouch(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
};


// Class FortniteGame.BuildingTrapFloor_Hoverboard_Curve
// 0x0020 (0x0D68 - 0x0D48)
class ABuildingTrapFloor_Hoverboard_Curve : public ABuildingTrapFloor
{
public:
	class USceneComponent*                             Target;                                                   // 0x0D48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGameplayEffect*                             TriggeredEffect;                                          // 0x0D50(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0D58(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapFloor_Hoverboard_Curve");
		return ptr;
	}

};


// Class FortniteGame.BuildingTrapFloor_Turret
// 0x00C8 (0x0E10 - 0x0D48)
class ABuildingTrapFloor_Turret : public ABuildingTrapFloor
{
public:
	class UFortMinigameLogicComponent*                 MinigameLogic;                                            // 0x0D48(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RotateComp;                                               // 0x0D50(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             FiringPoint;                                              // 0x0D58(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         OverlapCollisionComponent;                                // 0x0D60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              RotateInterval;                                           // 0x0D68(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0D6C(0x0004) MISSED OFFSET
	TArray<class AFortPlayerPawn*>                     PlayerArray;                                              // 0x0D70(0x0010) (BlueprintVisible, ZeroConstructor)
	class ABuildingSMActor*                            BlockingActor;                                            // 0x0D80(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AFortPawn*                                   Target;                                                   // 0x0D88(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MinRotationSpeed;                                         // 0x0D90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRotationSpeed;                                         // 0x0D94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurrentRotationalSpeed;                                   // 0x0D98(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              UpdateIntervalTime;                                       // 0x0D9C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CachedUpdateTime;                                         // 0x0DA0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              IncreaseIntervalRotationSpeed;                            // 0x0DA4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecreaseIntervalRotationSpeed;                            // 0x0DA8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bCurrentlyActive : 1;                                     // 0x0DAC(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bInSlowdownMode : 1;                                      // 0x0DAC(0x0001) (BlueprintVisible)
	unsigned char                                      bUseOwnerTeam : 1;                                        // 0x0DAC(0x0001) (BlueprintVisible)
	unsigned char                                      bCanTakeDamage : 1;                                       // 0x0DAC(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0DAD(0x0003) MISSED OFFSET
	struct FVector                                     ShootLocation;                                            // 0x0DB0(0x000C) (BlueprintVisible, Net, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0DBC(0x0004) MISSED OFFSET
	struct FGameplayTag                                GTShoot;                                                  // 0x0DC0(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                                GTReload;                                                 // 0x0DC8(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              LifeTime;                                                 // 0x0DD0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FireRate;                                                 // 0x0DD4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReloadTime;                                               // 0x0DD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BoxExtents;                                               // 0x0DDC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0DE8(0x0018) MISSED OFFSET
	int                                                CurrentAmmoCount;                                         // 0x0E00(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxAmmo;                                                  // 0x0E04(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsSearching : 1;                                         // 0x0E08(0x0001) (BlueprintVisible, Net)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0E09(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapFloor_Turret");
		return ptr;
	}


	void UnbindTimers();
	void SetTarget(class AFortPawn* NewTarget);
	void RotateTurretServer();
	void RotateTurretClient();
	void PerformGunRotation(class AFortPawn* TargetActor, const struct FVector& AimLocation, const struct FRotator& CurrentRotation, class USceneComponent* RotateComponent);
	void OnRep_CurrentlyActive();
	void OnLeaveTurretRange(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEnterTurretRange(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MinigameStarted();
	void MinigameEnded();
	class AFortPawn* GetTarget();
	class AFortPlayerPawn* GetClosestTarget();
	void FireTurret();
	void FinishReload();
	void DeactivateTurret();
	void ConsumeAmmo();
	void BindTimers();
	void AddOverlapComponent(class UPrimitiveComponent* OverlapComponent);
	void ActivateTurret();
};


// Class FortniteGame.BuildingTrapLauncher
// 0x0020 (0x0D68 - 0x0D48)
class ABuildingTrapLauncher : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                              LaunchStrength;                                           // 0x0D48(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapLauncher");
		return ptr;
	}

};


// Class FortniteGame.BuildingTrapWall
// 0x0000 (0x0D48 - 0x0D48)
class ABuildingTrapWall : public ABuildingTrap
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTrapWall");
		return ptr;
	}

};


// Class FortniteGame.BuildingTurretComponent
// 0x0050 (0x0140 - 0x00F0)
class UBuildingTurretComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTurretTargetChanged;                                    // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGameplayTag                                OnFireTagTrigger;                                         // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              FiringInterval;                                           // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurrentTargetValidationInterval;                          // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPerformPeriodicValidationOnCurrentTarget : 1;            // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class UPrimitiveComponent*                         TargetingOverlapComponent;                                // 0x0118(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAbilitySystemComponent*                     OwnerASC;                                                 // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AActor*                                      CurrentTarget;                                            // 0x0128(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTurretComponent");
		return ptr;
	}


	void SetTargetingOverlapComponent(class UPrimitiveComponent* NewTargetingOverlapComponent);
	void OnTargetingEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnTargetingBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_CurrentTarget(class AActor* OldTarget);
	void OnPerformTargetValidation();
	void OnFiringTimer();
	bool IsValidTarget(class AActor* InTarget);
	class AActor* ChooseBestTarget(TArray<class AActor*>* InOutPotentialTargets);
	bool AttemptSetCurrentTarget(class AActor* NewTarget);
};


// Class FortniteGame.BuildingTurretComponent_MOBA
// 0x0010 (0x0150 - 0x0140)
class UBuildingTurretComponent_MOBA : public UBuildingTurretComponent
{
public:
	struct FMOBATurretPrioritySetting                  TargetingPriority;                                        // 0x0140(0x000C) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingTurretComponent_MOBA");
		return ptr;
	}


	void OnAllyHarmed(class AActor* InAllyActor, class AActor* InHarmingActor);
};


// Class FortniteGame.BuildingWall
// 0x0108 (0x0CF0 - 0x0BE8)
class ABuildingWall : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0BE8(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0BE8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.BuildingWall.DoorObstacleClass
	struct FClimbLinkData                              ClimbLink;                                                // 0x0C18(0x0028) (DuplicateTransient)
	struct FVector                                     DoorOffset;                                               // 0x0C40(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0C4C(0x0004) MISSED OFFSET
	class USoundBase*                                  DoorOpeningSound;                                         // 0x0C50(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DoorClosingSound;                                         // 0x0C58(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          DoorAnimatingMaterial;                                    // 0x0C60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 DoorMesh;                                                 // 0x0C68(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        DoorComponent;                                            // 0x0C70(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	class UFortDoorLinkComponent*                      DoorSmartLinkComp;                                        // 0x0C78(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        DoorBlueprintMeshComp;                                    // 0x0C80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            DoorAnimatingMIDs;                                        // 0x0C88(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0C98(0x0010) MISSED OFFSET
	struct FRotator                                    DoorDesiredRotOffset;                                     // 0x0CA8(0x000C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0CB4(0x0018) MISSED OFFSET
	struct FBuildingActorNavArea                       AreaPatternOverride;                                      // 0x0CCC(0x0004) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              AreaWidthOverride;                                        // 0x0CD0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0CD4(0x0004) MISSED OFFSET
	TEnumAsByte<EBuildingWallArea>                     AreaShapeType;                                            // 0x0CD8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bDoorOpen : 1;                                            // 0x0CD9(0x0001) (Net, Transient)
	unsigned char                                      bLocalDoorOpen : 1;                                       // 0x0CD9(0x0001) (Transient)
	TEnumAsByte<ECollisionEnabled>                     DoorDisabledCollisionSetting;                             // 0x0CDA(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDoorCollisionDisabled : 1;                               // 0x0CDB(0x0001) (Net, Transient)
	unsigned char                                      bLocalDoorCollisionDisabled : 1;                          // 0x0CDB(0x0001) (Transient)
	unsigned char                                      bOverrideAreaWidth : 1;                                   // 0x0CDB(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCreateClimbLink : 1;                                     // 0x0CDB(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x14];                                      // 0x0CDC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingWall");
		return ptr;
	}


	void VerifyDoorOpenMatchesServer();
	void VerifyDoorCollisionMatchesServer();
	void OnRep_bDoorOpen();
	void OnRep_bDoorCollisionDisabled();
	bool IsDoorOpen();
	bool IsDoorComponent(class UStaticMeshComponent* MeshComponent);
};


// Class FortniteGame.FortClientOnlyActor
// 0x0008 (0x0330 - 0x0328)
class AFortClientOnlyActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientOnlyActor");
		return ptr;
	}

};


// Class FortniteGame.BuildingWeakSpot
// 0x0040 (0x0370 - 0x0330)
class ABuildingWeakSpot : public AFortClientOnlyActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TWeakObjectPtr<class ABuildingSMActor>             ParentBuilding;                                           // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bHit : 1;                                                 // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bFadeOut : 1;                                             // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bActive : 1;                                              // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0341(0x0003) MISSED OFFSET
	int                                                HitCount;                                                 // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxLevel;                                                 // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartingLocation;                                         // 0x0350(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // 0x035C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      PhysicalSurfaceType;                                      // 0x0368(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0369(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BuildingWeakSpot");
		return ptr;
	}


	void OnStartDirectionEffect();
	void OnHit();
	void OnFadeOut();
	void Deactivate();
};


// Class FortniteGame.BulletWhipTrackerComponentBase
// 0x0050 (0x0140 - 0x00F0)
class UBulletWhipTrackerComponentBase : public UActorComponent
{
public:
	float                                              PassByRadiusMax;                                          // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PassByRadiusMin;                                          // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PassByFarSound;                                           // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  PassByCloseSound;                                         // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WhipTrackerMinimumTriggerDistance;                        // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x010C(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.BulletWhipTrackerComponentBase");
		return ptr;
	}


	void UpdateVelocity(const struct FVector& CurrentVelocity);
	void Reset(const struct FVector& StartLocationIn);
	void Disable();
};


// Class FortniteGame.CatalogMessaging
// 0x00F0 (0x0120 - 0x0030)
class UCatalogMessaging : public UPrimaryDataAsset
{
public:
	TMap<struct FString, struct FText>                 StoreToast_Header;                                        // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FString, struct FText>                 StoreToast_Body;                                          // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FString, struct FText>                 Banners;                                                  // 0x00D0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CatalogMessaging");
		return ptr;
	}

};


// Class FortniteGame.CosmeticPreviewInterface
// 0x0000 (0x0028 - 0x0028)
class UCosmeticPreviewInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CosmeticPreviewInterface");
		return ptr;
	}


	void PerformSpecialAction(const struct FName& ActionName);
	void GetSpecialPreviewActions(TArray<struct FName>* OutActionList);
	void CustomizePreviewInstance(class UFortItemDefinition* InItemDefinition);
};


// Class FortniteGame.CustomAccessoryAttachmentData
// 0x0048 (0x0078 - 0x0030)
class UCustomAccessoryAttachmentData : public UDataAsset
{
public:
	struct FVector                                     MaleRelativeScale;                                        // 0x0030(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     FemaleRelativeScale;                                      // 0x003C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SmallMaleRelativeScale;                                   // 0x0048(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SmallFemaleRelativeScale;                                 // 0x0054(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LargeMaleRelativeScale;                                   // 0x0060(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LargeFemaleRelativeScale;                                 // 0x006C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomAccessoryAttachmentData");
		return ptr;
	}

};


// Class FortniteGame.CustomColorSwatch
// 0x0008 (0x0038 - 0x0030)
class UCustomColorSwatch : public UPrimaryDataAsset
{
public:
	TEnumAsByte<EFortCustomGender>                     GenderPermitted;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EColorSwatchType>                      ColorSwatchType;                                          // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.CustomDynamicColorSwatch
// 0x0020 (0x0058 - 0x0038)
class UCustomDynamicColorSwatch : public UCustomColorSwatch
{
public:
	TArray<struct FColorSwatchPair>                    ColorPairs;                                               // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FCustomPartTextureParameter>         TextureParameters;                                        // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomDynamicColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.CustomAccessoryColorSwatch
// 0x0030 (0x0088 - 0x0058)
class UCustomAccessoryColorSwatch : public UCustomDynamicColorSwatch
{
public:
	struct FLinearColor                                AccessoryColors[0x3];                                     // 0x0058(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomAccessoryColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterPartData
// 0x0000 (0x0028 - 0x0028)
class UCustomCharacterPartData : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterAccessoryData
// 0x00E8 (0x0110 - 0x0028)
class UCustomCharacterAccessoryData : public UCustomCharacterPartData
{
public:
	struct FName                                       AttachSocketName;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCustomAccessoryAttachmentData*              AttachmentOverrideData;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseClothCollisionFromOtherParts;                         // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCollideWithOtherPartsCloth;                              // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x003A(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterAccessoryData.PhysicsAsset
	unsigned char                                      UnknownData02[0x28];                                      // 0x0068(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterAccessoryData.AnimClass
	unsigned char                                      UnknownData03[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterAccessoryData.FrontEndAnimClass
	unsigned char                                      UnknownData04[0x28];                                      // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterAccessoryData.MannequinAnimClass
	unsigned char                                      UnknownData05[0x28];                                      // 0x00E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterAccessoryData.AccessoryColors
	unsigned char                                      UnknownData06[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterAccessoryData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterBackpackData
// 0x0008 (0x0118 - 0x0110)
class UCustomCharacterBackpackData : public UCustomCharacterAccessoryData
{
public:
	struct FName                                       LootSocketName;                                           // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterBackpackData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterBodyPartData
// 0x00A0 (0x00C8 - 0x0028)
class UCustomCharacterBodyPartData : public UCustomCharacterPartData
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterBodyPartData.AnimClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterBodyPartData.FrontEndAnimClass
	unsigned char                                      UnknownData02[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterBodyPartData.MannequinAnimClass
	unsigned char                                      UnknownData03[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterBodyPartData.AccessoryColors

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterBodyPartData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterCharmData
// 0x0008 (0x0118 - 0x0110)
class UCustomCharacterCharmData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<EFortCustomPartType>                   PartAttachedToOverride;                                   // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterCharmData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterFaceData
// 0x0008 (0x0118 - 0x0110)
class UCustomCharacterFaceData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<EFortCustomPartType>                   PartAttachedToOverride;                                   // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterFaceData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterHatData
// 0x0008 (0x0118 - 0x0110)
class UCustomCharacterHatData : public UCustomCharacterAccessoryData
{
public:
	TEnumAsByte<ECustomHatType>                        HatType;                                                  // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterHatData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterHeadData
// 0x00E0 (0x01A8 - 0x00C8)
class UCustomCharacterHeadData : public UCustomCharacterBodyPartData
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterHeadData.RootSkeletonDefaultMontageLookupTable
	unsigned char                                      UnknownData01[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterHeadData.RootSkeletonOverrideMontageLookupTable
	unsigned char                                      UnknownData02[0x28];                                      // 0x0118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterHeadData.SkinColorSwatch
	unsigned char                                      UnknownData03[0x28];                                      // 0x0140(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterHeadData.HairColorSwatch
	TArray<struct FName>                               CapMorphTargets;                                          // 0x0168(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               HelmetMorphTargets;                                       // 0x0178(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               MaskMorphTargets;                                         // 0x0188(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               HatMorphTargets;                                          // 0x0198(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterHeadData");
		return ptr;
	}

};


// Class FortniteGame.CustomCharacterPart
// 0x0158 (0x0188 - 0x0030)
class UCustomCharacterPart : public UPrimaryDataAsset
{
public:
	TEnumAsByte<EFortCustomGender>                     GenderPermitted;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCustomBodyType>                   BodyTypesPermitted;                                       // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCustomPartType>                   CharacterPartType;                                        // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET
	struct FGameplayTagContainer                       PartTypeTags;                                             // 0x0038(0x0020) (Edit)
	struct FGameplayTagContainer                       DisallowedCosmeticTags;                                   // 0x0058(0x0020) (Edit)
	bool                                               bGameplayRelevantCosmeticPart;                            // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAttachToSocket;                                          // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x007A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x007A(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.CustomCharacterPart.PartModifierBlueprint
	class UCustomCharacterPartData*                    AdditionalData;                                           // 0x00A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterPart.DefaultMontageLookupTable
	unsigned char                                      UnknownData04[0x28];                                      // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterPart.OverrideMontageLookupTable
	unsigned char                                      UnknownData05[0x28];                                      // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.CustomCharacterPart.SkeletalMesh
	unsigned char                                      UnknownData06[0x10];                                      // 0x0128(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.CustomCharacterPart.MasterSkeletalMeshes
	bool                                               bSinglePieceMesh;                                         // 0x0138(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSupportsColorSwatches;                                   // 0x0139(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowStaticRenderPath;                                   // 0x013A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x013B(0x0005) MISSED OFFSET
	TArray<struct FCustomPartMaterialOverrideData>     MaterialOverrides;                                        // 0x0140(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCustomPartTextureParameter>         TextureParameters;                                        // 0x0150(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCustomPartScalarParameter>          ScalarParameters;                                         // 0x0160(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCustomPartVectorParameter>          VectorParameters;                                         // 0x0170(0x0010) (Edit, ZeroConstructor)
	int                                                MaterialOverrideFlags;                                    // 0x0180(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0184(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPart");
		return ptr;
	}


	class USkeletalMesh* GetSkeletalMesh();
	TMap<int, class UMaterialInterface*> GetMaterialOverridesByIndex();
};


// Class FortniteGame.FortAnimInstance
// 0x00A0 (0x0410 - 0x0370)
class UFortAnimInstance : public UAnimInstance
{
public:
	struct FVector                                     PawnVelocity;                                             // 0x0370(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              MinSpeed2DThreshold;                                      // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PawnSpeed2D;                                              // 0x0380(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PawnVelocityZ;                                            // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PawnMovementDirectionAzimuth;                             // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PawnMovementDirectionElevation;                           // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    PawnDeltaRotation;                                        // 0x0390(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    PawnLastRotation;                                         // 0x039C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     PawnLastLocation;                                         // 0x03A8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bIsJumping;                                               // 0x03B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsFalling;                                               // 0x03B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShouldPredictLanding;                                    // 0x03B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLandingPredicted;                                        // 0x03B7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PredictedFallTimeLeft;                                    // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FallLookAheadSubStepping;                                 // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FallLookAheadMaxIterations;                               // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugLandPrediction;                                     // 0x03C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRecordJumpPositions;                                     // 0x03C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRecordingJump;                                         // 0x03C6(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x03C7(0x0001) MISSED OFFSET
	int                                                RecordJumpFrameCount;                                     // 0x03C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     RecordJumpInitialJumpLocation;                            // 0x03CC(0x000C) (Transient, IsPlainOldData)
	float                                              AimPitch;                                                 // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimYaw;                                                   // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeForRecentlyFired;                                     // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToReachRelaxedLevel1;                                 // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToReachRelaxedLevel2;                                 // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRecentlyFired;                                           // 0x03EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsRelaxedLevel1;                                         // 0x03ED(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsRelaxedLevel2;                                         // 0x03EE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x03EF(0x0001) MISSED OFFSET
	float                                              RelaxedLevelTimeCounter;                                  // 0x03F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SavedWeaponLastFireTime;                                  // 0x03F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bClothEnabled : 1;                                        // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bAnimDynamicsEnabled : 1;                                 // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bRigidBodyEnabled : 1;                                    // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03F9(0x0007) MISSED OFFSET
	TArray<struct FAnimTagProperty>                    AnimPropertyGameplayTagBindings;                          // 0x0400(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimInstance");
		return ptr;
	}


	class AFortPawn* TryGetFortPawn();
	class AFortAIPawn* TryGetFortAIPawn();
	void AnimNotify_RightFootStep(class UAnimNotify* Notify);
	void AnimNotify_LeftFootStep(class UAnimNotify* Notify);
};


// Class FortniteGame.CustomCharacterPartAnimInstance
// 0x0040 (0x0450 - 0x0410)
class UCustomCharacterPartAnimInstance : public UFortAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	unsigned char                                      bUsesDayPhaseChange : 1;                                  // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIgnoreSignificanceManagerAndAlwaysTick : 1;              // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRestrictClothToLocalPlayer : 1;                          // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanPlayCustomAnimations : 1;                             // 0x0418(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bUpdateOwnerAnimInputProperty : 1;                        // 0x0418(0x0001) (Edit, BlueprintVisible, Transient)
	unsigned char                                      bIsSkydiving : 1;                                         // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsParachuteOpened : 1;                                   // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsSkydiveDiveMode : 1;                                   // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsSkydiveFloating : 1;                                   // 0x0419(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsCrouching : 1;                                         // 0x0419(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsTargeting : 1;                                         // 0x0419(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      UnknownData01[0x6];                                       // 0x041A(0x0006) MISSED OFFSET
	struct FGameplayTagAnimations                      GameplayTagAnimations;                                    // 0x0420(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                CurrentLOD;                                               // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                         // 0x0434(0x0001) (Transient)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0435(0x0003) MISSED OFFSET
	TEnumAsByte<EFortCustomPartType>                   PartType;                                                 // 0x0438(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x17];                                      // 0x0439(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartAnimInstance");
		return ptr;
	}


	void PreDestruction();
	void OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent();
	float GetOwnerZVelocity();
	class USkeletalMeshComponent* GetOwnerSkeletalMeshComponent();
	float GetOwnerDirection();
	TEnumAsByte<EFortCustomPartType> GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
	class USkeletalMeshComponent* FindChildCommponentFromAttachSocket(class USkeletalMeshComponent* Parent, bool bIncludeAllDescendants, const struct FName& AttachSocket);
};


// Class FortniteGame.CustomCharacterPartModifier
// 0x0010 (0x0338 - 0x0328)
class ACustomCharacterPartModifier : public AActor
{
public:
	unsigned char                                      bUsesDayPhaseChange : 1;                                  // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRegisteredForDayPhaseChange : 1;                         // 0x0328(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AFortPlayerPawn>              FortPlayerPawnPtr;                                        // 0x032C(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortCustomPartType>                   PartType;                                                 // 0x0334(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0335(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartModifier");
		return ptr;
	}


	void PreDestruction();
	void OnPawnAndPartChanged();
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	TEnumAsByte<EFortCustomPartType> GetCharacterPartType();
	class AFortPlayerPawn* GetAssociatedPlayerPawn();
};


// Class FortniteGame.CustomCharacterPartOwnerInterface
// 0x0000 (0x0028 - 0x0028)
class UCustomCharacterPartOwnerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomCharacterPartOwnerInterface");
		return ptr;
	}


	void PlayAnimationsMatchingQuery(const struct FGameplayTagQuery& TagQueryToMatch);
	class USkeletalMeshComponent* GetCustomizationRootSkeletalMeshComponent();
};


// Class FortniteGame.CustomClothingColorSwatch
// 0x0020 (0x0058 - 0x0038)
class UCustomClothingColorSwatch : public UCustomColorSwatch
{
public:
	struct FLinearColor                                AccessoryColors[0x2];                                     // 0x0038(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomClothingColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.CustomColorComponent
// 0x0010 (0x0038 - 0x0028)
class UCustomColorComponent : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomColorComponent");
		return ptr;
	}

};


// Class FortniteGame.CustomHairColorSwatch
// 0x0000 (0x0058 - 0x0058)
class UCustomHairColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomHairColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.CustomPlayerComponent
// 0x0028 (0x0050 - 0x0028)
class UCustomPlayerComponent : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomPlayerComponent");
		return ptr;
	}

};


// Class FortniteGame.CustomSkinColorSwatch
// 0x0000 (0x0058 - 0x0058)
class UCustomSkinColorSwatch : public UCustomDynamicColorSwatch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.CustomSkinColorSwatch");
		return ptr;
	}

};


// Class FortniteGame.DecoyActor
// 0x0008 (0x0700 - 0x06F8)
class ADecoyActor : public ABuildingGameplayActor
{
public:
	float                                              GoalOverrideRadius;                                       // 0x06F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.DecoyActor");
		return ptr;
	}

};


// Class FortniteGame.DeployableBaseCore
// 0x0060 (0x0758 - 0x06F8)
class ADeployableBaseCore : public ABuildingGameplayActor
{
public:
	class ADeployableBasePlot*                         Plot;                                                     // 0x06F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0700(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.DeployableBaseCore.SimpleDeathParticles
	unsigned char                                      UnknownData01[0x28];                                      // 0x0728(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.DeployableBaseCore.SimpleDeathSound
	unsigned char                                      bRegisterAsGlobalGameplayEventListener : 1;               // 0x0750(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0751(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.DeployableBaseCore");
		return ptr;
	}


	struct FTransform GetSimpleDeathFXTransform();
};


// Class FortniteGame.DeployableBasePlot
// 0x0240 (0x0938 - 0x06F8)
class ADeployableBasePlot : public ABuildingGameplayActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06F8(0x0008) MISSED OFFSET
	struct FUniqueNetIdRepl                            OccupantNetID;                                            // 0x0700(0x0028) (Net, Transient)
	struct FFortCloudSaveInfo                          OccupantNextCloudSaveInfo;                                // 0x0728(0x0018) (Transient)
	class UFortDeployableBaseRecord*                   OccupantDeployableBaseRecord;                             // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBoxComponent*                               BuildableSpaceComponent;                                  // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               SavableSpaceComponent;                                    // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               EntirePlotSpaceComponent;                                 // 0x0758(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SpawnOffsetComponent;                                     // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               BuildableAreasArray[0x3];                                 // 0x0768(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0780(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.DeployableBasePlot.DeployableBaseCoreClass
	class ADeployableBaseCore*                         DeployableBaseCore;                                       // 0x07A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bDirty : 1;                                               // 0x07B0(0x0001) (Transient)
	unsigned char                                      bDirtiedSinceLastWriteToBuffer : 1;                       // 0x07B0(0x0001) (Transient)
	unsigned char                                      bCloudFileSavedSinceLastCloudItemUpdate : 1;              // 0x07B0(0x0001) (Transient)
	unsigned char                                      UnknownData02[0x3];                                       // 0x07B1(0x0003) MISSED OFFSET
	EDeployableBaseBuildingState                       CurrentBuildingState;                                     // 0x07B4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EDeployableBaseBuildingState                       GoalBuildingState;                                        // 0x07B5(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x12];                                      // 0x07B6(0x0012) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOccupantIdChanged;                                      // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployableBaseCoreCreated;                              // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployableBaseCoreDestroyed;                            // 0x07E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployableBasePlotSpacesChanged;                        // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortDeployableBasePickup*>           OutstandingAssociatedPickups;                             // 0x0808(0x0010) (ZeroConstructor, Transient)
	class AFortInventory*                              PlotInventory;                                            // 0x0818(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0820(0x0018) MISSED OFFSET
	int                                                DeferredActorIdxToResumeAt;                               // 0x0838(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumActorsFromRecordDestroyed;                             // 0x083C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FIntVector                                  BuildableSpaceExpansionVector;                            // 0x0840(0x000C) (Net, Transient, IsPlainOldData)
	int                                                MaxActorsToCreatePerBuildingCall;                         // 0x084C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxActorsToDestroyPerDestroyCall;                         // 0x0850(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBetweenActorRecordBuilding;                          // 0x0854(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBetweenActorRecordDestroying;                        // 0x0858(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x085C(0x0004) MISSED OFFSET
	class AFortPlayerStart*                            PlayerStart;                                              // 0x0860(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      ConstructionTimeEffect;                                   // 0x0868(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FDeferredActorData>                  DeferredConstructionActors;                               // 0x0870(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0880(0x0008) MISSED OFFSET
	struct FBox                                        BuildableAreasStructuralSupportBoxesArray[0x3];           // 0x0888(0x001C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5C];                                      // 0x08DC(0x005C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.DeployableBasePlot");
		return ptr;
	}


	void SetContextComponent(class UPrimitiveComponent* ContextComponent);
	void OnRep_OccupantNetID();
	void OnRep_CurrentBuildingState();
	void OnRep_BuildableSpaceExpansionVector();
	void OnCurrentBuildingStateSet(EDeployableBaseBuildingState InCurrentBuildingState);
	void OnBuildingStateTransition(EDeployableBaseBuildingState InPreviousState, EDeployableBaseBuildingState InCurrentState);
	bool IsOccupied();
	bool IsOccupant(const struct FUniqueNetIdRepl& UserId);
	bool IsBuildingActorWithinBuildableSpace(class ABuildingActor* ActorToCheck, const struct FVector& GridLocation);
	void HandleBuildingStateTransition(EDeployableBaseBuildingState InPreviousState, EDeployableBaseBuildingState InCurrentState);
	class AFortPlayerStart* GetPlayerStart();
	struct FUniqueNetIdRepl GetOccupantNetID();
	int GetNumOfItemsInPlot();
};


// Class FortniteGame.EdgeNavLinks
// 0x0038 (0x03B0 - 0x0378)
class AEdgeNavLinks : public ANavLinkProxy
{
public:
	float                                              DistanceBetweenLinks;                                     // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Start;                                                    // 0x037C(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x0388(0x000C) (Edit, IsPlainOldData)
	float                                              SnapRadius;                                               // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SnapHeight;                                               // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LinkProjectionHeight;                                     // 0x039C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightLinkForwardOffset;                                   // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     CollisionChannel;                                         // 0x03A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03A5(0x0003) MISSED OFFSET
	unsigned char                                      bManualAdjustment : 1;                                    // 0x03A8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.EdgeNavLinks");
		return ptr;
	}

};


// Class FortniteGame.EdgeNavLinksRenderingComponent
// 0x0000 (0x0560 - 0x0560)
class UEdgeNavLinksRenderingComponent : public UNavLinkRenderingComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.EdgeNavLinksRenderingComponent");
		return ptr;
	}

};


// Class FortniteGame.FortPawn
// 0x08D0 (0x1010 - 0x0740)
class AFortPawn : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0740(0x0078) MISSED OFFSET
	struct FDataTableRowHandle                         PawnStatHandle;                                           // 0x07B8(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07C8(0x0004) MISSED OFFSET
	float                                              SlidingFriction;                                          // 0x07CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SlidingBrakingDeceleration;                               // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortMovementStyle>                    CurrentMovementStyle;                                     // 0x07D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x07D5(0x0003) MISSED OFFSET
	class UFortStormShieldComponent*                   StormShieldComponent;                                     // 0x07D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	EFortPawnPushSize                                  PushSize;                                                 // 0x07E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBaseChanged;                                          // 0x07E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TeleportCounter;                                          // 0x07E2(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x07E3(0x0005) MISSED OFFSET
	int                                                PawnUniqueID;                                             // 0x07E8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x07EC(0x0004) MISSED OFFSET
	class AFortWeapon*                                 CurrentWeapon;                                            // 0x07F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortWeapon*>                         CurrentWeaponList;                                        // 0x07F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	bool                                               bIgnoreNextFallingDamage;                                 // 0x0808(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0809(0x0007) MISSED OFFSET
	struct FName                                       WeaponHandSocketName;                                     // 0x0810(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftHandWeaponHandSocketName;                             // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      SpawnSpot;                                                // 0x0820(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       DeathTags;                                                // 0x0828(0x0020) (Transient)
	float                                              SpawnImmunityTime;                                        // 0x0848(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDying;                                                 // 0x084C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bPlayedDying;                                             // 0x084D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsHiddenForDeath;                                        // 0x084E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x084F(0x0001) MISSED OFFSET
	TArray<class AFortPickup*>                         IncomingPickups;                                          // 0x0850(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortPickupEntryData>                PickupDirectionData;                                      // 0x0860(0x0010) (ZeroConstructor)
	bool                                               bIsKnockedback;                                           // 0x0870(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsStunned;                                               // 0x0871(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsStaggered;                                             // 0x0872(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	EFortControlRecoveryBehavior                       ControlRecoveryBehavior;                                  // 0x0873(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AdditiveCringeCount;                                      // 0x0874(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AdditiveCringeDuration;                                   // 0x0878(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector_NetQuantize                         PushMomentum;                                             // 0x087C(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData07[0x60];                                      // 0x0888(0x0060) MISSED OFFSET
	class USkeletalMeshSocket*                         DeathHitSocket;                                           // 0x08E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDBNO;                                                  // 0x08F0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bWasDBNOOnDeath;                                          // 0x08F1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x08F2(0x0002) MISSED OFFSET
	float                                              TeamBeaconMaxDist;                                        // 0x08F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      TeamBeaconTextColor;                                      // 0x08F8(0x0004) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LastTakeHitTimeTimeout;                                   // 0x08FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastDamagedTime;                                          // 0x0900(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipAnalogJump;                                          // 0x0904(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0905(0x0003) MISSED OFFSET
	class AFortWeapon*                                 CurrentlyAttachedWeapon;                                  // 0x0908(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPrimitiveComponent*                         CachedNavFloor;                                           // 0x0910(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              MaxFootstepDistance;                                      // 0x0918(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x091C(0x0004) MISSED OFFSET
	class USoundBase*                                  DefaultFootstepSound;                                     // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultFastFootstepSound;                                 // 0x0928(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultLandingSound;                                      // 0x0930(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultHardLandingSound;                                  // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultJumpSound;                                         // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCanCapsuleBeUsedForTargeting : 1;                        // 0x0948(0x0001) (Edit)
	unsigned char                                      bUseLineTestForDamageZoneBoneDetection : 1;               // 0x0948(0x0001) (Edit)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0949(0x0003) MISSED OFFSET
	float                                              LineTestForDamageZoneBoneDetectionRadius;                 // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FPawnDamageZones                            DamageZones[0x4];                                         // 0x0950(0x0018) (Edit)
	unsigned char                                      DamageZoneActiveBitMask;                                  // 0x09B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x09B1(0x0003) MISSED OFFSET
	float                                              TargettingZOffset;                                        // 0x09B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x09B8(0x0001) MISSED OFFSET
	unsigned char                                      JumpFlashCount;                                           // 0x09B9(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0xE];                                       // 0x09BA(0x000E) MISSED OFFSET
	class UAudioComponent*                             EmoteAudioComp;                                           // 0x09C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<int, class UMeshComponent*>                   EmoteMeshComps;                                           // 0x09D0(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TMap<int, class AActor*>                           EmotePropActors;                                          // 0x0A20(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                EmoteCount;                                               // 0x0A70(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastEmoteTime;                                            // 0x0A74(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortItemDefinition*                         LastEmoteItemDef;                                         // 0x0A78(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMovingEmote;                                             // 0x0A80(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0A81(0x0003) MISSED OFFSET
	float                                              EmoteWalkSpeed;                                           // 0x0A84(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPawnLanded;                                             // 0x0A88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitPawn;                                                // 0x0A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDied;                                                   // 0x0AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeathEffects;                                           // 0x0AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData16[0x30];                                      // 0x0AC8(0x0030) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDamaged;                                                // 0x0AF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortFootstepAudioBank*                      FootstepBank;                                             // 0x0B08(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETraceTypeQuery>                       FootstepTraceTypeQuery;                                   // 0x0B10(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortFootstepSurfaceType>              FootstepSurfaceType;                                      // 0x0B11(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x16];                                      // 0x0B12(0x0016) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponEquippedDelegate;                                 // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      HealthRegenDelayGameplayEffect;                           // 0x0B38(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealthRegenGameplayEffect;                                // 0x0B40(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ShieldRegenDelayGameplayEffect;                           // 0x0B48(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ShieldRegenGameplayEffect;                                // 0x0B50(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x0B58(0x0001) MISSED OFFSET
	bool                                               bIsInvulnerable;                                          // 0x0B59(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x2];                                       // 0x0B5A(0x0002) MISSED OFFSET
	int                                                WeaponHolsterCounter;                                     // 0x0B5C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FName>                               WeaponHolsterIds;                                         // 0x0B60(0x0010) (ZeroConstructor, Transient)
	bool                                               bWeaponHolstered;                                         // 0x0B70(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0B71(0x0003) MISSED OFFSET
	float                                              StaySpottedTime;                                          // 0x0B74(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpottedEvent;                                             // 0x0B78(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bSpotted : 1;                                             // 0x0B80(0x0001) (Net, Transient)
	unsigned char                                      bRegisterWithAISight : 1;                                 // 0x0B80(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData21[0x7];                                       // 0x0B81(0x0007) MISSED OFFSET
	class UFortFeedbackBank*                           DefaultFeedback;                                          // 0x0B88(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultSoundTrackingVisual;                               // 0x0B90(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FFortPawnVocalChord>                 VocalChords;                                              // 0x0B98(0x0010) (Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData22[0x50];                                      // 0x0BA8(0x0050) MISSED OFFSET
	class UFortHealthSet*                              HealthSet;                                                // 0x0BF8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortControlResistanceSet*                   ControlResistanceSet;                                     // 0x0C00(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortDamageSet*                              DamageSet;                                                // 0x0C08(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortMovementSet*                            MovementSet;                                              // 0x0C10(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortAdvancedMovementSet*                    AdvancedMovementSet;                                      // 0x0C18(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bHealthSynced;                                            // 0x0C20(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0xF];                                       // 0x0C21(0x000F) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAbilityDecisionWindowStackUpdated;                      // 0x0C30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0C40(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FFortActiveMontageDecisionWindow>    DecisionWindowStack;                                      // 0x0C48(0x0010) (ZeroConstructor)
	bool                                               bPrimaryInputHeld;                                        // 0x0C58(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSecondaryInputHeld;                                      // 0x0C59(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bPrimaryInputQueued;                                      // 0x0C5A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x5];                                       // 0x0C5B(0x0005) MISSED OFFSET
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0C60(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       DisplayName;                                              // 0x0C80(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	TArray<struct FDamagerInfo>                        Damagers;                                                 // 0x0C98(0x0010) (ZeroConstructor, Transient)
	TArray<struct FDamageDoneInfo>                     DamageDone;                                               // 0x0CA8(0x0010) (ZeroConstructor, Transient)
	class UFortHealthBarIndicator*                     HealthBarIndicator;                                       // 0x0CB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTag                                CurrentCalloutTag;                                        // 0x0CC0(0x0008) (Net)
	TArray<struct FCalloutEntry>                       CalloutEntries;                                           // 0x0CC8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              HealthBarWidth;                                           // 0x0CD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthBarHeightMultiplier;                                // 0x0CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x8];                                       // 0x0CE0(0x0008) MISSED OFFSET
	struct FSlateBrush                                 SpottedBrush;                                             // 0x0CE8(0x0088) (Edit, DisableEditOnInstance)
	struct FVector                                     SpottedIconOffset;                                        // 0x0D70(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	int                                                ClientNonRenderedAnimUpdateRate;                          // 0x0D7C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxEvalRateForInterpolation;                              // 0x0D80(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x0D84(0x0004) MISSED OFFSET
	TArray<float>                                      AnimUpdateRateVisibleMaxDistanceFactor;                   // 0x0D88(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<int, int>                                     LODToFrameSkipMap;                                        // 0x0D98(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	EUpdateRateShiftBucket                             UroShiftBucket;                                           // 0x0DE8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData27[0x3];                                       // 0x0DE9(0x0003) MISSED OFFSET
	unsigned char                                      bUpdateMeshComponentUpdateFlagOnServer : 1;               // 0x0DEC(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData28[0x1B];                                      // 0x0DED(0x001B) MISSED OFFSET
	bool                                               bPostProcessNavLocation;                                  // 0x0E08(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0E09(0x0007) MISSED OFFSET
	struct FFortConversationSentence                   CurrentSentence;                                          // 0x0E10(0x00C8) (Net)
	unsigned char                                      UnknownData30[0x18];                                      // 0x0ED8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPawnHealthChanged;                                      // 0x0EF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FAthenaBatchedDamageGameplayCues_Shared     AccumulatedBatchData_Shared;                              // 0x0F00(0x0044)
	unsigned char                                      UnknownData31[0x4];                                       // 0x0F44(0x0004) MISSED OFFSET
	struct FAthenaBatchedDamageGameplayCues_NonShared  AccumulatedBatchData_NonShared;                           // 0x0F48(0x0010)
	struct FGameplayCueParameters                      BatchedGameplayCueParameters;                             // 0x0F58(0x00B8)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawn");
		return ptr;
	}


	bool WasDBNOOnDeath();
	void TriggerFeedbackEvent(const struct FName& EventName, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay);
	void StopPushMomentum();
	void StartPushMomentum(const struct FVector& NewPushMomentum, float Duration);
	class AFortSoundCameraLensEffect* SpawnSoundLensEffectDirectional(class AFortPawn* TrackedPawn, const struct FVector& HitInfo, float MaxAudibleDistance, EFortSoundIndicatorTypes IndicatorType, class AActor* InstigatingActor);
	class AFortEmitterCameraLensEffectDirectional* SpawnCameraLensEffectDirectional(class UClass* LensEffectEmitterClass, class AFortPawn* DamageDealer, const struct FHitResult& HitInfo, bool bDeferSpawn);
	class AEmitterCameraLensEffectBase* SpawnCameraLensEffect(class UClass* LensEffectEmitterClass);
	void SetSpawnSpot(class AActor* InSpawnSpot);
	void SetShield(float NewShieldValue);
	void SetPawnVisibility(bool bNewHidden, bool bPropagateToWeapon);
	void SetPawnAndControlRotation(const struct FRotator& NewRotation);
	void SetMovementSpeedMultiplier(float NewMovementSpeedVal);
	void SetMaxShield(float NewValue);
	void SetMaxHealth(float NewHealthVal);
	void SetIsKnockedBack(bool bKnockback);
	void SetHolsterWeapon(bool bHolster, bool bPlayEquipAnim, const struct FName& HolsterId);
	void SetHealth(float NewHealthVal);
	void SetGravityMultiplier(float NewGravityVal);
	void SetGravityJumpMultipliers(float NewGravityVal, float NewVehicleGravityVal, float NewJumpZ, float NewJumpHorizontalAcceleration, float NewJumpHorizontalVelocity);
	void SetFNameBasedOnHitDirection(const struct FVector& HitDirection, const struct FName& NameFront, const struct FName& NameBack, const struct FName& NameLeft, const struct FName& NameRight, struct FName* NameResult);
	void SetControlRecoveryBehavior(EFortControlRecoveryBehavior NewBehavior);
	void SetCallout(const struct FGameplayTag& CalloutTagToSet, float Duration);
	void ServerTeleportNearLocation(const struct FVector& ActorLocation);
	void ServerInternalEquipWeapon(class AFortWeapon* Weap);
	void ResetFallingHeight();
	void RemoveNonReplicatedTagToPawn(const struct FGameplayTag& Tag);
	void RemoveCallout(const struct FGameplayTag& CalloutTagToRemove);
	void PrototypeCharacterMovement(TEnumAsByte<EMovementMode> MovementMode, const struct FVector& LaunchVelocity);
	void PlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	float PlayLocalAnimMontage(class UAnimMontage* NewAnimMontage, float InPlayRate, const struct FName& StartSectionName);
	void PlayFootStepSound(int FootDown);
	bool PickUpActor(class AActor* PickupTarget, class UFortDecoItemDefinition* PlacementDecoItemDefinition);
	void PawnUniqueIDSet();
	void PawnStopFire(unsigned char FireModeNum);
	void PawnStartFire(unsigned char FireModeNum);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnTeleported();
	void OnStunned();
	void OnRep_VocalChords();
	void OnRep_TeleportCounter();
	void OnRep_Sentence();
	void OnRep_PushMomentum();
	void OnRep_PawnUniqueID();
	void OnRep_JumpFlashCount();
	void OnRep_IsKnockedBack();
	void OnRep_IsDBNO();
	void OnRep_DamageZoneActiveBitMask();
	void OnRep_CurrentWeapon();
	void OnRep_bWeaponHolstered();
	void OnOutOfControlResistanceServer(float ImpactDamageDone, const struct FGameplayTagContainer& SourceTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EffectInstigator, class AActor* EffectCauser);
	void OnMontageStarted(class UAnimMontage* Montage);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnDisplaySentence(const struct FText& SpeechText);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageZoneStatusChanged(TEnumAsByte<EFortDamageZone> Zone, bool bStatus);
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnClearSentence();
	void OnBumpPushedPawn(class AFortPawn* InstigatedBy, float PushTimeLeft);
	void OnBuildingHitPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, const struct FGameplayEffectContextHandle& EffectContext, bool bPlayerPlaced);
	void OnBaseChanged(class AActor* NewBase);
	void OnAllMontageInstancesEnded();
	void NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters);
	void NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey);
	void NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters);
	void NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext);
	void NetMulticast_Athena_BatchedDamageCues(const struct FAthenaBatchedDamageGameplayCues_Shared& SharedData, const struct FAthenaBatchedDamageGameplayCues_NonShared& NonSharedData);
	void MovingEmoteStopped();
	void LaunchCharacterJump(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride, bool bIgnoreFallDamage, bool bPlayFeedbackEvent);
	bool IsWeaponHolstered();
	bool IsStaggered();
	bool IsFrontalHit(const struct FVector& HitDirection);
	bool IsDead();
	bool IsDBNO();
	bool IsAllowChainStun();
	bool IsActionInputIgnored();
	void InitializeDeathHitSocket(const struct FVector& WorldLocation, const struct FVector& WorldNormal);
	void HideBodyOnDeath();
	bool HasCurrentMontage();
	void HandleIsHiddenForDeath();
	void HandleIsDying();
	struct FTransform GetTargetingTransform(EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
	void GetSphericalHitDirection(const struct FVector& HitDirection, float* Azimuth, float* Elevation);
	float GetShieldOrHealthPercent();
	float GetShield();
	class UMaterialInstanceDynamic* GetPawnMID(int ElementIndex);
	class AActor* GetMyMovementBaseActor();
	struct FVector GetMovementPredictionPosition(float PredictionDeltaTime);
	float GetMeleeReticleStrikeAngle(bool bPrimaryInput);
	int GetMeleeComboCounter();
	float GetMaxShield();
	float GetMaxHealth();
	float GetMaxControlResistance();
	class APlayerController* GetLocalViewingPlayerController();
	float GetKnockbackThreshold();
	float GetKnockbackMultiplier();
	struct FName GetIgnoreFallDamageComponentTag();
	float GetHealthPercent();
	float GetHealth();
	class UFortAIEncounterInfo* GetEncounterInfo();
	struct FRotator GetDefaultTargetingRotation();
	struct FVector GetDefaultTargetingOrigin();
	TEnumAsByte<EFortDamageZone> GetDamageZone(const struct FHitResult& InHitResult);
	struct FText GetCurrentSentenceSpeechText();
	float GetCurrentMontageSectionTimeLeft();
	float GetControlResistance();
	EFortControlRecoveryBehavior GetControlRecoveryBehavior();
	class USkeletalMeshComponent* GetAssetSkeletalMeshComponentAttachment(const struct FName& SocketName);
	void GameplayCue_InstantDeath(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void ForceKill(const struct FGameplayTag& DeathReason, class AController* KillerController, class AActor* KillerActor);
	class AFortWeapon* EquipWeaponDefinition(class UFortWeaponItemDefinition* WeaponData, const struct FGuid& ItemEntryGuid);
	void EmoteStopped(class UFortItemDefinition* MontageItemDef);
	void EmoteStarted(class UFortItemDefinition* MontageItemDef);
	void DoFatalDamage(class UAbilitySystemComponent* KillerAbilitySystemComponent);
	void DetachAssetFromSocket(const struct FName& SocketName);
	void ClientInternalEquipWeapon(class AFortWeapon* Weap);
	void ClearJumpFlashCount();
	void AttachAssetToSocket(const struct FAssetAttachment& InAttachment);
	void ApplyKnockback(float KnockbackMagnitude, float KnockbackZAngle, const struct FVector& ImpulseDir);
	void AnimMontage_LocalSetNextSectionName(class UAnimMontage* AnimMontage, const struct FName& SectionName, const struct FName& NextSectionName);
	bool AnimMontage_LocalJumpToSectionName(const struct FName& SectionName);
	int AnimMontage_LocalJumpToRandomSection();
	void AlignRotationToHitDirection(const struct FVector& HitDirection);
	void AddNonReplicatedTagToPawn(const struct FGameplayTag& Tag);
};


// Class FortniteGame.FortAIPawn
// 0x10E0 (0x20F0 - 0x1010)
class AFortAIPawn : public AFortPawn
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x1010(0x0028) MISSED OFFSET
	struct FGameplayCueParameters                      DeimosBatchedGameplayCueParameters;                       // 0x1038(0x00B8)
	struct FFortAIAttributeReplicationProxy            AttributeReplicationProxy;                                // 0x10F0(0x0004) (Net)
	unsigned char                                      UnknownData01[0x4];                                       // 0x10F4(0x0004) MISSED OFFSET
	struct FGameplayAbilityRepSharedAnim               RepSharedAnimInfo;                                        // 0x10F8(0x0010) (Net)
	unsigned char                                      UnknownData02[0x8];                                       // 0x1108(0x0008) MISSED OFFSET
	struct FMinimalGameplayCueReplicationProxy         SimulatedProxyGameplayCues;                               // 0x1110(0x01D0) (Net)
	unsigned char                                      bAttacking : 1;                                           // 0x12E0(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bDied : 1;                                                // 0x12E0(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bHitReact : 1;                                            // 0x12E0(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bFullBodyHitReact : 1;                                    // 0x12E0(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bDancing : 1;                                             // 0x12E0(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      UnknownData03[0x3];                                       // 0x12E1(0x0003) MISSED OFFSET
	unsigned char                                      bUseSharedAnimation : 1;                                  // 0x12E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bNeedsDeathNotification : 1;                              // 0x12E4(0x0001)
	unsigned char                                      bKilledOrDowned : 1;                                      // 0x12E4(0x0001) (Transient)
	unsigned char                                      bDespawnedDueToInactivity : 1;                            // 0x12E4(0x0001) (Transient)
	unsigned char                                      bNotifySpawnRift : 1;                                     // 0x12E4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUsesDBNO : 1;                                            // 0x12E4(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bHasInventory : 1;                                        // 0x12E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bTrackNearbyPickups : 1;                                  // 0x12E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bIsCharging : 1;                                          // 0x12E5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst)
	unsigned char                                      bIsCowering : 1;                                          // 0x12E5(0x0001) (BlueprintVisible, Net, Transient)
	unsigned char                                      bCanShowMinimapIndicator : 1;                             // 0x12E5(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShowMinimapFarOffDirectionArrow : 1;                     // 0x12E5(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bHasEngaged : 1;                                          // 0x12E5(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsAlwaysGameplayRelevant : 1;                            // 0x12E5(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData04 : 1;                                        // 0x12E5(0x0001)
	unsigned char                                      bIsDebugSpawnedAI : 1;                                    // 0x12E5(0x0001) (Transient)
	unsigned char                                      bEncounterExpectedLifespanExpired : 1;                    // 0x12E6(0x0001) (Transient)
	unsigned char                                      bEnableBlockingCollisionWithOtherAI : 1;                  // 0x12E6(0x0001) (Net, Transient)
	unsigned char                                      bSetMiniMapIconRotation : 1;                              // 0x12E6(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bHasDroppedLoot : 1;                                      // 0x12E6(0x0001) (Transient)
	unsigned char                                      bUseFastAbilityReplication : 1;                           // 0x12E6(0x0001) (Transient)
	unsigned char                                      UnknownData05[0x1];                                       // 0x12E7(0x0001) MISSED OFFSET
	struct FMinimalReplicationTagCountMap              FastReplicationMinimalReplicationTags;                    // 0x12E8(0x0060) (Net)
	unsigned char                                      UnknownData06[0x8];                                       // 0x1348(0x0008) MISSED OFFSET
	struct FMinimalGameplayCueReplicationProxy         FastReplicationMinimalGameplayCueProxy;                   // 0x1350(0x01D0) (Net)
	struct FScriptMulticastDelegate                    OnInventoryUpdated;                                       // 0x1520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData07[0x18];                                      // 0x1530(0x0018) MISSED OFFSET
	float                                              AIDifficultyLevel;                                        // 0x1548(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EFortAILevelRatingDisplayType                      LevelRatingDisplayType;                                   // 0x154C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x154D(0x0003) MISSED OFFSET
	class UFortAIEncounterInfo*                        EncounterInfo;                                            // 0x1550(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SpawnSetIndex;                                            // 0x1558(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       SpawnGroupGuid;                                           // 0x155C(0x0010) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                EnemyIndexInSpawnGroup;                                   // 0x156C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FinishEncounterSpawnFallbackTime;                         // 0x1570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EncounterSpawnDisableRangedAttackingTime;                 // 0x1574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EncounterSpawnDisableMeleeAttackingTime;                  // 0x1578(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x157C(0x0004) MISSED OFFSET
	struct FTimerHandle                                EncounterExpectedLifespanTimerHandle;                     // 0x1580(0x0008)
	class AActor*                                      SpawnRift;                                                // 0x1588(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnRiftLocation;                                        // 0x1590(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x159C(0x0004) MISSED OFFSET
	class AActor*                                      SpawnSourceActor;                                         // 0x15A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeAllowedOutsideTether;                              // 0x15A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x15AC(0x0004) MISSED OFFSET
	class UBehaviorTree*                               BehaviorTree;                                             // 0x15B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultNavFilter;                                         // 0x15B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HuntingNavFilter;                                         // 0x15C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x15C8(0x0008) MISSED OFFSET
	float                                              DBNOInteractionDuration;                                  // 0x15D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x15D4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDowned;                                                 // 0x15D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TEnumAsByte<ETInteractionType>                     DBNOInteractionType;                                      // 0x15E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortMovementStyle>                    MovementStyles[0x4];                                      // 0x15E9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x15ED(0x0003) MISSED OFFSET
	float                                              UpdateNearbyPickupFrequency;                              // 0x15F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x15F4(0x0004) MISSED OFFSET
	struct FGameplayTag                                RequiredWeaponPickupTag;                                  // 0x15F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       NoWeaponInCombatEventName;                                // 0x1600(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NoWeaponOutOfCombatEventName;                             // 0x1608(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTagContainer                       TurnTransitionGameplayAbilityTag;                         // 0x1610(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData16[0x28];                                      // 0x1630(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortAIPawn.DeathParticles
	int                                                NumRunVariations;                                         // 0x1658(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurrentRunVariationIndex;                                 // 0x165C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RunVariationRadius;                                       // 0x1660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EyeIndex;                                                 // 0x1664(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SkinIndex;                                                // 0x1668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                DefaultEyeColor;                                          // 0x166C(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              DefaultEyeBrightness;                                     // 0x167C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DefaultSkinColor;                                         // 0x1680(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              DefaultSkinGlow;                                          // 0x1690(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                MinimapDefaultIconColor;                                  // 0x1694(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                PlayerManagerMinimapColor;                                // 0x16A4(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x14];                                      // 0x16B4(0x0014) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x16C8(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 MiniMapAboveBelowIconBrush;                               // 0x1750(0x0088) (Edit, DisableEditOnInstance)
	TArray<struct FMinimapGoalByTagColorsData>         MinimapGoalByTagColors;                                   // 0x17D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int8_t                                             MinimapGoalByTagColorIndex;                               // 0x17E8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x7];                                       // 0x17E9(0x0007) MISSED OFFSET
	struct FName                                       AppearanceOverrideName;                                   // 0x17F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortAIPawnGender                                  AppearanceOverrideGender;                                 // 0x17F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCombatEvents>                     FollowPlayerEvent;                                        // 0x17F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortCombatEvents>                     InCombatNearPlayerEvent;                                  // 0x17FA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETInteractionType>                     InteractionType;                                          // 0x17FB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FollowPlayerRange;                                        // 0x17FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InteractionDuration;                                      // 0x1800(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x1804(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInteraction;                                            // 0x1808(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ABuildingTrapDefender*                       DefenderTrap;                                             // 0x1818(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnActorBeginCrowdOverlap;                                 // 0x1820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData20 : 1;                                        // 0x1830(0x0001)
	unsigned char                                      bDebugAI : 1;                                             // 0x1830(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDebugAIAnim : 1;                                         // 0x1830(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseBuildingAttackingHotspots : 1;                        // 0x1830(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanMoveThroughWalls : 1;                                 // 0x1830(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanUseNavWalking : 1;                                    // 0x1830(0x0001) (Edit)
	unsigned char                                      bCanUseSimpleCollisions : 1;                              // 0x1830(0x0001) (Edit)
	unsigned char                                      bCanUseStepAside : 1;                                     // 0x1830(0x0001) (Edit)
	unsigned char                                      bCanUseDoors : 1;                                         // 0x1831(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanUseShootingHotspots : 1;                              // 0x1831(0x0001) (Edit)
	unsigned char                                      bCanSleep : 1;                                            // 0x1831(0x0001)
	unsigned char                                      bIsSleeping : 1;                                          // 0x1831(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bShouldStartSleeping : 1;                                 // 0x1831(0x0001) (Net, Transient)
	unsigned char                                      bIsActiveAI : 1;                                          // 0x1831(0x0001) (Transient)
	unsigned char                                      bCanLookAtGoal : 1;                                       // 0x1831(0x0001) (Net, Transient)
	unsigned char                                      bCanUseMeshPooling : 1;                                   // 0x1831(0x0001) (Edit)
	unsigned char                                      bUseCrowdSimulation : 1;                                  // 0x1832(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bControlWalkingOffLedges : 1;                             // 0x1832(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData21 : 6;                                        // 0x1832(0x0001)
	unsigned char                                      UnknownData22 : 2;                                        // 0x1833(0x0001)
	unsigned char                                      bUseAppearanceOverride : 1;                               // 0x1833(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanInteract : 1;                                         // 0x1833(0x0001) (Net)
	unsigned char                                      bHideHealthBar : 1;                                       // 0x1833(0x0001) (Edit, BlueprintVisible)
	TEnumAsByte<EFortMovementUrgency>                  MovementUrgency;                                          // 0x1834(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EFortressAIType                                    AIType;                                                   // 0x1835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x1836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData23[0x1];                                       // 0x1837(0x0001) MISSED OFFSET
	struct FName                                       SimpleCollisionsProfileName;                              // 0x1838(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortAISpawnGroupUpgradeUIData              UpgradeUIData;                                            // 0x1840(0x00B8) (Net)
	float                                              ScoreMultiplier;                                          // 0x18F8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LootDropConeHalfAngle;                                    // 0x18FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LootDropSpeed;                                            // 0x1900(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortHotSpotSlot                                   HotspotType;                                              // 0x1904(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortPartialPathUsage                              PartialPathUsage;                                         // 0x1905(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData24[0x2];                                       // 0x1906(0x0002) MISSED OFFSET
	class AFortPlayerStateZone*                        PlayerManager;                                            // 0x1908(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     DefenderItemInstanceId;                                   // 0x1910(0x0010) (Net, ZeroConstructor)
	struct FName                                       DefenderSquadId;                                          // 0x1920(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              DefenderPlacedTime;                                       // 0x1928(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              RecentlySeenInterval;                                     // 0x192C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CurrentAIRotationRate;                                    // 0x1930(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	float                                              MoveSoundStimulusBroadcastInterval;                       // 0x193C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x8];                                       // 0x1940(0x0008) MISSED OFFSET
	class UShapeComponent*                             WeaponCollisionComponent;                                 // 0x1948(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AFortInventory*                              Inventory;                                                // 0x1950(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortPickup*>                         NearbyPickups;                                            // 0x1958(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TMap<class AFortPickup*, float>                    UnreachablePickups;                                       // 0x1968(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData26[0x10];                                      // 0x19B8(0x0010) MISSED OFFSET
	TArray<struct FFortAIAppearanceOverrideEntry>      AppearanceOverrideEntries;                                // 0x19C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                AppearanceOverrideEntryIndex;                             // 0x19D8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnLocation;                                            // 0x19DC(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x19E8(0x000C) (IsPlainOldData)
	TWeakObjectPtr<class ABuildingActor>               SleepingFloor;                                            // 0x19F4(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x19FC(0x0004) MISSED OFFSET
	struct FName                                       PelvisBoneName;                                           // 0x1A00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HeadBoneName;                                             // 0x1A08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0xC];                                       // 0x1A10(0x000C) MISSED OFFSET
	float                                              MinimapIndicatorUpdateFrequency;                          // 0x1A1C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData29[0x8];                                       // 0x1A20(0x0008) MISSED OFFSET
	float                                              MiniMapViewableDistance;                                  // 0x1A28(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceToPlayerManagerToShowHealthBar;                   // 0x1A2C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceToOtherPlayersToShowHealthBar;                    // 0x1A30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData30[0xC];                                       // 0x1A34(0x000C) MISSED OFFSET
	class UFortAIAttributesSet*                        AttributesSet;                                            // 0x1A40(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortCharacterAttrSet*                       CharacterAttrSet;                                         // 0x1A48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortWeaponAttrSet*                          WeaponAttrSet;                                            // 0x1A50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  ImpactPhysicalSurfaceSounds[0x3F];                        // 0x1A58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ImpactPhysicalSurfaceEffects[0x3F];                       // 0x1C50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFortSimpleMiniMapIndicator*                 MiniMapIndicator;                                         // 0x1E48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   MinimapScale;                                             // 0x1E50(0x0008) (Edit, IsPlainOldData)
	TArray<class UFortAbilitySet*>                     DefaultGameplayAbilitySets;                               // 0x1E58(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortAbilitySet*>                     SpawnInheritedCharacterAbilitySets;                       // 0x1E68(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortGameplayModifierItemDefinition*> SpawnModifierDefinitions;                                 // 0x1E78(0x0010) (Net, ZeroConstructor, Transient)
	class UFortAbilitySystemComponent*                 AIPawnAbilitySystemComponent;                             // 0x1E88(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FGameplayTagContainer                       WallAttackGameplayAbilityTags;                            // 0x1E90(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       WallRangedAttackGameplayAbilityTags;                      // 0x1EB0(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       CeilingAttackGameplayAbilityTags;                         // 0x1ED0(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       FloorAttackGameplayAbilityTags;                           // 0x1EF0(0x0020) (Edit, DisableEditOnInstance)
	TArray<struct FGameplayTagContainer>               FailedAbilityQueryTags;                                   // 0x1F10(0x0010) (ZeroConstructor, Transient)
	class AActor*                                      CurrentAimTarget;                                         // 0x1F20(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortNavObstacleComponent*                   NavObstacleComponent;                                     // 0x1F28(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData31[0x10];                                      // 0x1F30(0x0010) MISSED OFFSET
	EFortAILODLevel                                    CurrentFortAILODLevel;                                    // 0x1F40(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x11F];                                     // 0x1F41(0x011F) MISSED OFFSET
	class UFortAccountItem*                            DefenderItem;                                             // 0x2060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData33[0x88];                                      // 0x2068(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIPawn");
		return ptr;
	}


	void TurnOnSleepingOptimizations();
	void TriggerNoWeaponSpeech();
	void SetWeaponCollisionComponent(class UShapeComponent* InWeaponCollisionComponent);
	void SetUsesDBNO(bool bInUsesDBNO);
	void SetSkinColor(const struct FLinearColor& NewSkinColor, float NewSkinBrightness);
	void SetShouldStartSleeping(bool bHintStartSleeping);
	void SetMovementUrgency(TEnumAsByte<EFortMovementUrgency> Urgency);
	void SetMinimumAILOD(EFortAILODLevel MinimumAILOD);
	void SetMinimapViewableDistance(float NewMinimapViewableDistance);
	void SetIsCharging(bool bNewIsCharging);
	void SetEyeColor(const struct FLinearColor& NewEyeColor, float NewEyeBrightness);
	void SetEncounterInfo(class UFortAIEncounterInfo* InEncounterInfo);
	void SetDefenderTrap(class ABuildingTrapDefender* InDefenderTrap);
	void SetCurrentAimTarget(class AActor* AimTarget);
	void SetCollisionProfileName(const struct FName& InCollisionProfileName);
	void SetCanSleep(bool InCanSleep);
	void SetCanInteract(bool CanInteract);
	void SetBlockCollisionWithOtherAI(bool bInEnableBlockingCollisionWithOtherAI);
	void SetAIType(EFortressAIType InAIType);
	void SetAIRotationRate(const struct FRotator& AIRotationRate);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void ReviveFromDBNO();
	void ResetAIRotationRateToDefault();
	void PlayAdditiveHitReactsNative(const struct FVector& HitDirection, class UAnimMontage* NewAnimMontage);
	void OnStartedEncounterSpawn();
	void OnSleepingAIsFloorBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void OnRep_SharedAnim();
	void OnRep_MinimapViewableDistance();
	void OnRep_Inventory();
	void OnRep_EnableBlockingCollisionWithOtherAI();
	void OnRep_CurrentFortAILODLevel();
	void OnRep_CurrentAIRotationRate();
	void OnRep_bIsSleeping();
	void OnRep_AttributeProxy();
	void OnRep_AppearanceOverrideEntryIndex();
	bool OnOutsideOfTetherBeyondMaxTimeAllowed();
	void OnFinishedEncounterSpawn();
	void OnEndSleepEffects();
	void OnEncounterSpawnEnableRangedAttacking();
	void OnEncounterSpawnEnableMeleeAttacking();
	void OnDefenderTrapSet(class ABuildingTrapDefender* OldDefenderTrap);
	void OnCheatUpdateSpecialEventGE(bool bShouldUseSpecialEventGE);
	void OnBeginSleepEffects();
	void OnAppearanceOverridden();
	void NetMulticast_BatchedDamageCues(const struct FFortAIBatchedDamageCues& Data);
	class UFortItem* K2_GetDefenderItem();
	class UFortItem* K2_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	bool IsInsideTetherBounds(bool bUseRelaxedTetherBounds);
	bool IsInCombat();
	bool IsDefender();
	bool HasTether();
	void GrabPickup(class AFortPickup* Pickup);
	void GiveAmmo(int AmmoQuantity);
	bool GetUsesDBNO();
	struct FRotator GetSpawnRotation();
	int GetSpawnPointValue();
	struct FVector GetSpawnLocation();
	int GetScoreValue();
	TEnumAsByte<EFortMovementUrgency> STATIC_GetMovementUrgency(class AFortAIPawn* FortAIPawn);
	TEnumAsByte<EFortMovementStyle> STATIC_GetMovementStyle(class AFortAIPawn* FortAIPawn);
	class USoundBase* GetImpactPhysicalSurfaceSound(const struct FHitResult& Impact);
	float STATIC_GetGroundSpeedForUrgency(class AFortAIPawn* FortAIPawn, TEnumAsByte<EFortMovementUrgency> Urgency);
	float GetDifficultyRating();
	float GetDifficultyLevel();
	struct FString GetDefenderItemInstanceId();
	class AActor* GetCurrentAimTarget();
	TEnumAsByte<EFortCustomGender> GetCharacterGender();
	void ForceKillNoDBNO();
	void FinishedEncounterSpawn();
	void FastSharedReplication(const struct FFortAISharedRepMovement& SharedRepMovement);
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	bool CanHitTargetWithAbility(const struct FGameplayTagContainer& GameplayAbilityTag, class AActor* CanHitTarget, bool bUseIdealYawRotationToTarget);
	void AddUnreachablePickup(class AFortPickup* Pickup);
	void AddFortAbilitySet(class UFortAbilitySet* FortAbilitySet);
};


// Class FortniteGame.EnemyPawn_Parent
// 0x0000 (0x20F0 - 0x20F0)
class AEnemyPawn_Parent : public AFortAIPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.EnemyPawn_Parent");
		return ptr;
	}


	bool ShouldShowBuildingHitEffect(float Damage, const struct FVector& Location, const struct FHitResult& HitInfo, bool PlayerPlaced);
};


// Class FortniteGame.FortSaveFileBuildingInstructionsHandler
// 0x0188 (0x04B0 - 0x0328)
class AFortSaveFileBuildingInstructionsHandler : public AActor
{
public:
	struct FString                                     SaveFileName;                                             // 0x0328(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                     LoadedBuildingsScale;                                     // 0x0338(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     LoadedBuildingsAdditionalTranslation;                     // 0x0344(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      bUseAbsoluteCoordinates : 1;                              // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTrackDestroyedBuildings : 1;                             // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0351(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortSaveFileBuildingInstructionsHandler.DefaultBuildingInstructions
	unsigned char                                      bLoadInvisible : 1;                                       // 0x0380(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDespawnOnBuildingsSpawned : 1;                           // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSpawnBuildingsAutomaticallyAfterLoad : 1;                // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x87];                                      // 0x0381(0x0087) MISSED OFFSET
	struct FUniqueNetIdRepl                            OperationUserId;                                          // 0x0408(0x0028) (Transient)
	unsigned char                                      UnknownData03[0x80];                                      // 0x0430(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSaveFileBuildingInstructionsHandler");
		return ptr;
	}


	bool SaveBuildings(class AFortPlayerController* FortPC);
	bool ResetBuildings();
	void LoadBuildings(class AFortPlayerController* FortPC);
	bool AreBuildingsLoaded();
};


// Class FortniteGame.FOBSaveFileBuildingInstructionsHandler
// 0x0008 (0x04B8 - 0x04B0)
class AFOBSaveFileBuildingInstructionsHandler : public AFortSaveFileBuildingInstructionsHandler
{
public:
	float                                              BuildingPieceConstructionTime;                            // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FOBSaveFileBuildingInstructionsHandler");
		return ptr;
	}

};


// Class FortniteGame.FortCameraMode
// 0x0028 (0x0050 - 0x0028)
class UFortCameraMode : public UObject
{
public:
	class AFortPlayerCameraBase*                       PlayerCamera;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TransitionTime;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TransitionOutTime;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FViewTargetTransitionParams                 TransitionParams;                                         // 0x0038(0x0010) (Edit, BlueprintVisible)
	unsigned char                                      bResetInterpolation : 1;                                  // 0x0048(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCameraMode");
		return ptr;
	}

};


// Class FortniteGame.Fort3PCameraMode
// 0x00E8 (0x0138 - 0x0050)
class UFort3PCameraMode : public UFortCameraMode
{
public:
	struct FViewOffsetData                             ViewOffsets;                                              // 0x0050(0x0024) (Edit, BlueprintVisible)
	float                                              FOV;                                                      // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SafeLocationOffset;                                       // 0x0078(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      bValidateSafeLoc : 1;                                     // 0x0084(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDoPredictiveAvoidance : 1;                               // 0x0084(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPreventPenetration : 1;                                  // 0x0084(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
	TArray<struct FPenetrationAvoidanceFeeler>         PenetrationAvoidanceFeelers;                              // 0x0088(0x0010) (ZeroConstructor)
	float                                              PenetrationBlendInTime;                                   // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PenetrationBlendOutTime;                                  // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PivotLocInterpSpeed;                                      // 0x00A0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              PivotRotInterpSpeed;                                      // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FOVInterpSpeed;                                           // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ViewOffsetInterpSpeed;                                    // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SafeLocationInterpSpeed;                                  // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastActualViewOffset;                                     // 0x00BC(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastIdealViewOffset;                                      // 0x00C8(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastSafeLocationLocal;                                    // 0x00D4(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastSafeLocation;                                         // 0x00E0(0x000C) (Transient, IsPlainOldData)
	float                                              LastSafeLocBlockedPct;                                    // 0x00EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastPenetrationBlockedPct;                                // 0x00F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastActualPivotLoc;                                       // 0x00F4(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    LastActualPivotRot;                                       // 0x0100(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastIdealPivotLoc;                                        // 0x010C(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    LastIdealPivotRot;                                        // 0x0118(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0124(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.Fort3PCameraMode");
		return ptr;
	}

};


// Class FortniteGame.Fort3PCam_Default
// 0x0000 (0x0138 - 0x0138)
class UFort3PCam_Default : public UFort3PCameraMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.Fort3PCam_Default");
		return ptr;
	}

};


// Class FortniteGame.Fort3PCam_Targeting
// 0x0000 (0x0138 - 0x0138)
class UFort3PCam_Targeting : public UFort3PCameraMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.Fort3PCam_Targeting");
		return ptr;
	}

};


// Class FortniteGame.FortWeapon
// 0x0838 (0x0B60 - 0x0328)
class AFortWeapon : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponRateOfFireChanged;                                // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0350(0x0008) MISSED OFFSET
	bool                                               bIsEquippingWeapon;                                       // 0x0358(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsReloadingWeapon;                                       // 0x0359(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsChargingWeapon;                                        // 0x035A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x035B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLocalAmmoChanged;                                       // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0370(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReticleColorChanged;                                    // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortWeaponItemDefinition*                   WeaponData;                                               // 0x0388(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortWeaponItemDefinition*                   CosmeticOverrideWeaponData;                               // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;                      // 0x0398(0x0010) (ZeroConstructor, Transient)
	class UWeaponHitNotifyAudioBank*                   HitNotifyAudioBank;                                       // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      EquippedWeaponDestroyWrapperRepCounter;                   // 0x03B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDrawNativeReticle;                                 // 0x03B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x03B2(0x0006) MISSED OFFSET
	class UTexture2D*                                  ReticleImage;                                             // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  AutoFireReticleImage;                                     // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      ReticleDefaultColor;                                      // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      ReticleEnemyColor;                                        // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      ReticleBuildingColor;                                     // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      ReticleNoTargetColor;                                     // 0x03D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UTexture2D*                                  HitNotifyReticleImage;                                    // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HitNotifyLocationReticleImage;                            // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HitNotifyDisplayDuration;                                 // 0x03E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	class UTexture2D*                                  ReticleCenterImage;                                       // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReticleCenterPerfectAimImage;                             // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReticleInvalidTargetImage;                                // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  MuzzleBlockedReticleImage;                                // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReticleDefaultPrimaryStrikeAngle;                         // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReticleDefaultSecondaryStrikeAngle;                       // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSupportsAutofireAtReticleTarget;                         // 0x0418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0419(0x0007) MISSED OFFSET
	class UClass*                                      CameraBase3PClass;                                        // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CameraTargeting3PClass;                                   // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CameraBase1PClass;                                        // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CameraTargeting1PClass;                                   // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DestroyedSound;                                           // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OutOfAmmoSound;                                           // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ReloadSounds[0x3];                                        // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  PrimaryFireSound[0x3];                                    // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  PrimaryFireStopSound[0x3];                                // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SecondaryFireSound[0x3];                                  // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SecondaryFireStopSound[0x3];                              // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrimaryFireSoundFadeOutTime;                              // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class USoundBase*                                  ImpactPhysicalSurfaceSounds[0x3F];                        // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ImpactPhysicalSurfaceEffects[0x3F];                       // 0x06C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ImpactCameraShake;                                        // 0x08C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        PrimaryForceFeedbackEffect;                               // 0x08C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        SecondaryForceFeedbackEffect;                             // 0x08D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        PrimaryImpactForceFeedbackEffect;                         // 0x08D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackEffect*                        SecondaryImpactForceFeedbackEffect;                       // 0x08E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             FireAudioChannels[0x4];                                   // 0x08E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             ReloadAudioChannels[0x3];                                 // 0x0908(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                CurrentGunFireIndex;                                      // 0x0920(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0924(0x0004) MISSED OFFSET
	class USkeletalMeshComponentBudgeted*              WeaponMesh;                                               // 0x0928(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInterface*>                  DefaultWeaponMaterials;                                   // 0x0930(0x0010) (ZeroConstructor, Transient)
	int                                                FireAudioChannelWantsToPlay[0x4];                         // 0x0940(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUsingSecondaryFireAudio;                                 // 0x0950(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0951(0x0003) MISSED OFFSET
	struct FColor                                      CurrentReticleColor;                                      // 0x0954(0x0004) (Transient, IsPlainOldData)
	struct FVector                                     CurrentDamageStartLocation;                               // 0x0958(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     CurrentAdjustedAimDirection;                              // 0x0964(0x000C) (Transient, IsPlainOldData)
	struct FFortEffectDistanceQuality                  FireFXSignificance;                                       // 0x0970(0x0018) (Edit, DisableEditOnInstance)
	float                                              LastFireTime;                                             // 0x0988(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPlayingFireFX;                                         // 0x098C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFireFXTriggered;                                         // 0x098D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x098E(0x0002) MISSED OFFSET
	float                                              TimerIntervalAdjustment;                                  // 0x0990(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InputQueueTimePercent;                                    // 0x0994(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowTargeting;                                          // 0x0998(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTargeting;                                             // 0x0999(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x099A(0x0002) MISSED OFFSET
	float                                              LastTargetingTransitionTime;                              // 0x099C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetSourceOffset;                                       // 0x09A0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     TargetSourceOffsetWhileCrouched;                          // 0x09AC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     TargetSourceOffsetWhileTargeting;                         // 0x09B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bTraceThroughPawns;                                       // 0x09C4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceThroughWorld;                                       // 0x09C5(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x09C6(0x0002) MISSED OFFSET
	int                                                TraceThroughPawnsLimit;                                   // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TraceThroughBuildingsLimit;                               // 0x09CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LastReloadTime;                                           // 0x09D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastSuccessfulReloadTime;                                 // 0x09D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentReloadDuration;                                    // 0x09D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       ItemEntryGuid;                                            // 0x09DC(0x0010) (Net, Transient, IsPlainOldData)
	int                                                WeaponLevel;                                              // 0x09EC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                AmmoCount;                                                // 0x09F0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x09F4(0x0004) MISSED OFFSET
	int                                                BurstFireCounter;                                         // 0x09F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ChargeTime;                                               // 0x09FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentShotLogIndex;                                      // 0x0A00(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0A04(0x0004) MISSED OFFSET
	TArray<uint32_t>                                   ShotLogFlags;                                             // 0x0A08(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bInitializedWeaponItem : 1;                               // 0x0A18(0x0001) (Transient)
	unsigned char                                      UnknownData15 : 2;                                        // 0x0A18(0x0001)
	unsigned char                                      bUpdateLocalAmmoCount : 1;                                // 0x0A18(0x0001) (Transient)
	unsigned char                                      bPendingDestroyDueToDurabilityOrStackCount : 1;           // 0x0A18(0x0001) (Transient)
	unsigned char                                      UnknownData16 : 3;                                        // 0x0A18(0x0001)
	unsigned char                                      bCompletedAppliedAlterationsLoad : 1;                     // 0x0A19(0x0001) (Transient)
	unsigned char                                      bCompletedWeaponLoad : 1;                                 // 0x0A19(0x0001) (Transient)
	unsigned char                                      UnknownData17[0x2];                                       // 0x0A1A(0x0002) MISSED OFFSET
	int16_t                                            ChargeStatusPack;                                         // 0x0A1C(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x12];                                      // 0x0A1E(0x0012) MISSED OFFSET
	class AFortProjectileTrajectory*                   AttachedTrajectoryIndicator;                              // 0x0A30(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortGameplayAbility*                        ActiveAbility;                                            // 0x0A38(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayAbilitySpecHandle                  PrimaryAbilitySpecHandle;                                 // 0x0A40(0x0004) (Net, Transient)
	struct FGameplayAbilitySpecHandle                  SecondaryAbilitySpecHandle;                               // 0x0A44(0x0004) (Net, Transient)
	struct FGameplayAbilitySpecHandle                  ReloadAbilitySpecHandle;                                  // 0x0A48(0x0004) (Net, Transient)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0A4C(0x0004) MISSED OFFSET
	TArray<struct FGameplayAbilitySpecHandle>          EquippedAbilityHandles;                                   // 0x0A50(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortAbilitySetHandle>               EquippedAbilitySetHandles;                                // 0x0A60(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortAlterationItemDefinition*>       AppliedAlterations;                                       // 0x0A70(0x0010) (Net, ZeroConstructor, Transient)
	class AFortFXManager*                              CachedFXManager;                                          // 0x0A80(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortSignificanceManager*                    CachedSignificanceManager;                                // 0x0A88(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       MuzzleSocketName;                                         // 0x0A90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       MuzzleFalloffSocketName;                                  // 0x0A98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x18];                                      // 0x0AA0(0x0018) MISSED OFFSET
	float                                              MaxWeaponSwitchNetworkWaitTime;                           // 0x0AB8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastFireAbilityTime;                                      // 0x0ABC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UAnimMontage*                                EquipAnimation;                                           // 0x0AC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                ReloadAnimation;                                          // 0x0AC8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponEquipMontage;                                       // 0x0AD0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponReloadMontage;                                      // 0x0AD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               PoseOffsetAnimSequence;                                   // 0x0AE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortWeaponCoreAnimation>              WeaponCoreAnimation;                                      // 0x0AE8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x7];                                       // 0x0AE9(0x0007) MISSED OFFSET
	class UFortWeaponAnimSet*                          WeaponPawnAnimSet;                                        // 0x0AF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x30];                                      // 0x0AF8(0x0030) MISSED OFFSET
	class UAnimMontage*                                UnableToPerformActionMontageOverride;                     // 0x0B28(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x20];                                      // 0x0B30(0x0020) MISSED OFFSET
	class AActor*                                      LockOnTargetCandidate;                                    // 0x0B50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x1];                                       // 0x0B58(0x0001) MISSED OFFSET
	bool                                               bIgnoreTryToFireSlotCooldownRestriction;                  // 0x0B59(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData25[0x6];                                       // 0x0B5A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeapon");
		return ptr;
	}


	void UseWeaponDurability(float DurabilityScale);
	void StopWeaponFireFX();
	void StopForceFeedback();
	void SetWeaponVisibility(bool bDesiredVisibility, bool bForceUpdate);
	void SetShouldDrawNativeReticle(bool bInShouldDrawReticle);
	void SetFireSoundPitchMultiplier(float NewPitch);
	void ServerSetChargeState(unsigned char NewState);
	void ServerResetShotReport();
	void ServerReleaseWeaponPrimaryAbility();
	void ResetTempWeaponMaterialOverride();
	void Reload();
	void PlayWeaponFireFX(bool bSecondaryFire);
	void PlayReloadFX(TEnumAsByte<EFortReloadFXState> ReloadStage);
	void PlayNativeImpactFX(const struct FHitResult& HitResult, const struct FGameplayCueParameters& GameplayCueParameters);
	void PlayForceFeedback(bool bSecondaryFire, bool bPersistentFire, bool bImpact);
	void OnWeaponVisibilityChanged(bool bVisible);
	void OnWeaponMontageStarted(class UAnimMontage* WeaponMontage);
	void OnWeaponMontageBlendingOut(class UAnimMontage* WeaponMontage, bool bInterrupted);
	void OnWeaponDetached();
	void OnWeaponAttached();
	void OnStopWeaponFireFX();
	void OnStartCharge();
	void OnSetTargeting(bool bNewIsTargeting);
	void OnRep_ReplicatedWeaponData();
	void OnRep_ReplicatedCosmeticOverrideWeaponData();
	void OnRep_ReplicatedAppliedAlterations();
	void OnRep_PrimaryAbilitySpecHandle();
	void OnRep_EquippedWeaponDestroyWrapper();
	void OnRep_ChargeStatusPack();
	void OnRep_AmmoCount(int OldAmmoCount);
	void OnReachedMinCharge();
	void OnReachedMaxCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnPlayReloadFX(TEnumAsByte<EFortReloadFXState> ReloadStage);
	void OnPlayImpactFX(const struct FHitResult& HitResult, TEnumAsByte<EPhysicalSurface> ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC);
	void OnPawnMontageStarted(class UAnimMontage* PawnMontage);
	void OnPawnMontageBlendingOut(class UAnimMontage* PawnMontage, bool bInterrupted);
	void OnOutOfAmmoFire();
	void OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod, class UMaterialInstanceDynamic* DynamicMaterialInstance);
	void OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration);
	void OnEquippedWeaponDestory();
	void OnEndCharge();
	void OnChargeUp();
	void OnChargeDown();
	void OnAmmoCountChanged();
	void K2_OnUnEquip();
	void K2_ConsumeAmmo(int Quantity);
	bool IsSuppressed();
	bool IsReloading();
	bool IsProjectileWeapon();
	float GetWeaponRateOfFireModifier();
	class UFortWeaponAnimSet* GetWeaponPawnAnimSet();
	bool GetSupportsAutoFireAtReticleTargetMode();
	struct FColor GetReticleColor();
	int GetRemainingAmmo();
	float GetReloadTime();
	float GetReloadProgress();
	float GetRange();
	float GetProjectileSpeed();
	struct FTransform GetMuzzleSocketTransform();
	struct FVector GetMuzzleLocation();
	float GetMeleeAttackPlayRate();
	int GetMagazineAmmoCount();
	int GetLocalRemainingAmmo();
	int GetLocalMagazineAmmoCount();
	struct FGuid GetInventoryGUID();
	float GetFiringRate();
	struct FVector GetDamageStartLocation(struct FVector* AimDir);
	float GetCurrentMaxChargePercent();
	TEnumAsByte<EFortWeaponCoreAnimation> GetCoreAnimation();
	float GetChargeToMinPercent();
	float GetChargePercent();
	int GetBulletsPerClip();
	int GetAmmoCostPerFire(float ChargePercentage);
	TArray<class UFortAlterationItemDefinition*> GetAlterations();
	void GameplayCue_Weapons_Activation(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Impact(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	struct FColor DetermineReticleColor();
	void ClientReportShotFlags(uint32_t ShotFlags, int ShotIndex);
	void ClientGivenTo(class APawn* P);
	void CancelActiveAbility();
};


// Class FortniteGame.FortDecoTool
// 0x0058 (0x0BB8 - 0x0B60)
class AFortDecoTool : public AFortWeapon
{
public:
	bool                                               bButtonDown;                                              // 0x0B60(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0B61(0x0007) MISSED OFFSET
	class UFortItemDefinition*                         ItemDefinition;                                           // 0x0B68(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortDecoHelper*                             DecoHelper;                                               // 0x0B70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CarriedActor;                                             // 0x0B78(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlaceCarriedActor;                                       // 0x0B80(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0B81(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0B81(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortDecoTool.SpawnEffect
	bool                                               bPreventExecutionOnOwningPlayerFalling;                   // 0x0BB0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0BB1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoTool");
		return ptr;
	}


	void ServerSpawnDeco(const struct FVector& Location, const struct FRotator& Rotation, class ABuildingSMActor* AttachedActor, TEnumAsByte<EBuildingAttachmentType> InBuildingAttachmentType);
	void OnRep_ItemDefinition();
	void OnRep_CarriedActor(class AActor* OldCarriedActor);
	void OnCarriedActorDestroyed(class AActor* DestroyedActor);
	void ClientDestroyDecoPreview();
};


// Class FortniteGame.FortAbilityDecoTool
// 0x0028 (0x0BE0 - 0x0BB8)
class AFortAbilityDecoTool : public AFortDecoTool
{
public:
	struct FAbilityToolSpawnParameters                 CachedSpawnParameters;                                    // 0x0BB8(0x0028) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityDecoTool");
		return ptr;
	}


	void GetSpawnParameters(struct FAbilityToolSpawnParameters* OutSpawnParamters);
	class UFortGameplayAbility* GetPlacementAbilityInstance();
	struct FGameplayAbilitySpecHandle GetPlacementAbilityHandle();
	class ABuildingActor* AbilitySpawnDeco(const struct FAbilityToolSpawnParameters& SpawnParameters);
};


// Class FortniteGame.FortAbilitySet
// 0x0038 (0x0068 - 0x0030)
class UFortAbilitySet : public UPrimaryDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TArray<class UClass*>                              GameplayAbilities;                                        // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGameplayEffectApplicationInfoHard>  GrantedGameplayEffects;                                   // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayEffectApplicationInfo>      PassiveGameplayEffects;                                   // 0x0058(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySet");
		return ptr;
	}

};


// Class FortniteGame.FortAbilityKit
// 0x01A8 (0x0210 - 0x0068)
class UFortAbilityKit : public UFortAbilitySet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FText>                               Description;                                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       TooltipDescription;                                       // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 IconBrush;                                                // 0x00B0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 PrimaryTraitIconBrushOverride;                            // 0x0138(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01C0(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortAbilityKit.Gadgets
	TArray<struct FAbilityKitItem>                     Items;                                                    // 0x01D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortSchematicItemDefinition*>        AddedSchematics;                                          // 0x01E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortSchematicItemDefinition*>        RemovedSchematics;                                        // 0x01F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      Tooltip;                                                  // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortTooltipDisplayStatsList*                StatList;                                                 // 0x0208(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityKit");
		return ptr;
	}


	TArray<struct FText> GetDescription(class UObject* WorldContextObject);
	void BP_GetGadgets(TArray<class UFortGadgetItemDefinition*>* GadgetItemDefinitions);
};


// Class FortniteGame.FortAbilityKitTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortAbilityKitTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityKitTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySetTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortAbilitySetTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySetTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySystemComponent
// 0x02B0 (0x1468 - 0x11B8)
class UFortAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	unsigned char                                      UnknownData00[0x178];                                     // 0x11B8(0x0178) MISSED OFFSET
	struct FReplicatedMontagePair                      LandingMontagePair;                                       // 0x1330(0x0028) (Net)
	unsigned char                                      UnknownData01[0x8];                                       // 0x1358(0x0008) MISSED OFFSET
	struct FGameplayAbilityRepSharedAnim               RepSharedAnimInfo;                                        // 0x1360(0x0010) (Net)
	unsigned char                                      UnknownData02[0xF8];                                      // 0x1370(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponent");
		return ptr;
	}


	void SetSharedAnimState(EFortSharedAnimationState State);
	void SetLandingMontageReplication(class UAnimMontage* Montage1, const struct FName& Section1, class UAnimMontage* Montage2, const struct FName& Section2);
	void OnRep_SharedAnim();
	void NetMulticast_RefreshActiveGameplayEffectCueEvents();
	bool HasActiveAbilityWithAnyMatchingTag(const struct FGameplayTagContainer& Tags);
	float GetAttributeMagnitude(const struct FAttributeInfo& Info);
	struct FAttributeInfo FindAttributeInformation(const struct FString& AttributeName);
	bool CanActivateAbilityWithMatchingTag(const struct FGameplayTagContainer& GameplayAbilityTags);
	void BP_UnBlockAbilitiesWithTags(const struct FGameplayTagContainer& Tags);
	void BP_BlockAbilitiesWithTags(const struct FGameplayTagContainer& Tags);
};


// Class FortniteGame.FortAbilitySystemComponentAbilityGivenListenerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAbilitySystemComponentAbilityGivenListenerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponentAbilityGivenListenerInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySystemComponentAthena
// 0x0000 (0x1468 - 0x1468)
class UFortAbilitySystemComponentAthena : public UFortAbilitySystemComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponentAthena");
		return ptr;
	}

};


// Class FortniteGame.FortTooltipContext
// 0x0040 (0x0068 - 0x0028)
class UFortTooltipContext : public UObject
{
public:
	class UAbilitySystemComponent*                     SourceAbilitySystem;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAbilitySystemComponent*                     DestAbilitySystem;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                TreatAsLevel;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       TagContainer;                                             // 0x0040(0x0020) (Edit, BlueprintVisible)
	class UObject*                                     ComparisonObject;                                         // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipContext");
		return ptr;
	}


	class UFortTooltipContext* STATIC_SpawnTooltipContextWithSource(class APlayerController* SourcePlayerController);
	class UFortTooltipContext* STATIC_SpawnTooltipContextWithNetID(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId);
	class UFortTooltipContext* STATIC_SpawnTooltipContext();
};


// Class FortniteGame.FortAbilitySystemComponentTooltipContext
// 0x0028 (0x0090 - 0x0068)
class UFortAbilitySystemComponentTooltipContext : public UFortTooltipContext
{
public:
	struct FGameplayAttribute                          Attribute;                                                // 0x0068(0x0020) (Edit, BlueprintVisible)
	struct FActiveGameplayEffectHandle                 ActiveGEHandle;                                           // 0x0088(0x0008) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponentTooltipContext");
		return ptr;
	}


	class UFortAbilitySystemComponentTooltipContext* STATIC_SpawnAbilitySystemTooltipContextFromOtherContext(class UFortTooltipContext* OtherContext);
	class UFortAbilitySystemComponentTooltipContext* STATIC_SpawnAbilitySystemTooltipContext();
};


// Class FortniteGame.FortAbilitySystemComponentTooltip
// 0x0008 (0x0098 - 0x0090)
class UFortAbilitySystemComponentTooltip : public UFortTooltip
{
public:
	class UFortTooltipContext*                         CachedContext;                                            // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemComponentTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortTokenToAttributeTable
// 0x0010 (0x0040 - 0x0030)
class UFortTokenToAttributeTable : public UDataAsset
{
public:
	TArray<struct FTokenAttributePair>                 TokenToAttributeList;                                     // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTokenToAttributeTable");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySystemGlobals
// 0x0010 (0x0258 - 0x0248)
class UFortAbilitySystemGlobals : public UAbilitySystemGlobals
{
public:
	TArray<struct FName>                               BROnlyAttributeSetDefaultsToExclude;                      // 0x0248(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemGlobals");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySystemInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAbilitySystemInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAbilitySystemUI
// 0x0050 (0x0078 - 0x0028)
class UFortAbilitySystemUI : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilitySystemUI");
		return ptr;
	}


	struct FFortGameplayEffectDescription STATIC_GetStaticGameplayEffectDescription(class UGameplayEffect* Effect, float Level);
	class UGameplayEffect* STATIC_GetDefaultObjectOfGameplayEffectType(class UClass* EffectType);
};


// Class FortniteGame.FortAbilityTagRelationshipMapping
// 0x0010 (0x0040 - 0x0030)
class UFortAbilityTagRelationshipMapping : public UDataAsset
{
public:
	TArray<struct FFortAbilityTagRelationship>         AbilityTagRelationships;                                  // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTagRelationshipMapping");
		return ptr;
	}

};


// Class FortniteGame.FortAbilityTask_CommitAccountCosts
// 0x0048 (0x00C8 - 0x0080)
class UFortAbilityTask_CommitAccountCosts : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnCommitted;                                              // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bWasCancellable;                                          // 0x00A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRequestPending;                                          // 0x00A1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCommittedLocally;                                        // 0x00A2(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x00A3(0x0005) MISSED OFFSET
	struct FString                                     PlayerName;                                               // 0x00A8(0x0010) (ZeroConstructor, Transient)
	struct FString                                     AbilityName;                                              // 0x00B8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_CommitAccountCosts");
		return ptr;
	}


	class UFortAbilityTask_CommitAccountCosts* STATIC_CommitAccountCosts(class UGameplayAbility* OwningAbility);
};


// Class FortniteGame.FortAbilityTask_DirectedMovement
// 0x0070 (0x00F0 - 0x0080)
class UFortAbilityTask_DirectedMovement : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnMovementComplete;                                       // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMovementCancelled;                                      // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x00A0(0x001C) MISSED OFFSET
	struct FVector                                     TargetLocation;                                           // 0x00BC(0x000C) (Net, IsPlainOldData)
	class USceneComponent*                             TargetComponent;                                          // 0x00C8(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              MovementDistance;                                         // 0x00D0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              IdealArrivalDistance;                                     // 0x00D4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              DurationOfMovement;                                       // 0x00D8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bModifyZ;                                                 // 0x00DC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bCancelOnFalling;                                         // 0x00DD(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00DE(0x0002) MISSED OFFSET
	class UCharacterMovementComponent*                 MovementComponent;                                        // 0x00E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_DirectedMovement");
		return ptr;
	}


	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToLocation(class UGameplayAbility* OwningAbility, const struct FVector& MovementTargetLocation, TEnumAsByte<EFortDirectedMovementSpace> MovementSpaceType, float MovementDuration, float CloseEnoughDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToComponent(class UGameplayAbility* OwningAbility, class USceneComponent* TargetComponent, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovementToActor(class UGameplayAbility* OwningAbility, class AActor* TargetActor, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
	class UFortAbilityTask_DirectedMovement* STATIC_DirectedMovement(class UGameplayAbility* OwningAbility, const struct FVector& MovementDirection, TEnumAsByte<EFortDirectedMovementSpace> MovementSpaceType, float MovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool bCancelOnFalling);
};


// Class FortniteGame.FortAITask_Move
// 0x0038 (0x0148 - 0x0110)
class UFortAITask_Move : public UAITask_MoveTo
{
public:
	struct FFortMoveConfig                             MoveConfig;                                               // 0x0110(0x0028)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0138(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_Move");
		return ptr;
	}

};


// Class FortniteGame.FortAbilityTask_MoveAI
// 0x0038 (0x0180 - 0x0148)
class UFortAbilityTask_MoveAI : public UFortAITask_Move
{
public:
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInterrupted;                                            // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCancelled;                                              // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_MoveAI");
		return ptr;
	}


	class UFortAbilityTask_MoveAI* STATIC_CreateMoveAITask(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, class AActor* MoveActor, const struct FVector& MoveLocation, TEnumAsByte<EPawnActionMoveMode> MoveMode, TEnumAsByte<EPathObstacleAction> PathObstacleAction, bool bStopAtEnd, TEnumAsByte<EAIOptionFlag> AcceptPartialPath, bool bFinishOnPlayerCollision, bool bProjectGoalLocationOnNavMesh, float AcceptableRadius, class UClass* PushBumpedPawnClass, class UClass* FilterClass, bool bUseContinuousGoalTracking);
};


// Class FortniteGame.FortAbilityTask_PlayAnimAndWait
// 0x0080 (0x0100 - 0x0080)
class UFortAbilityTask_PlayAnimAndWait : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnCompleted;                                              // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBlendOut;                                               // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInterrupted;                                            // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCancelled;                                              // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00C0(0x0028) MISSED OFFSET
	class UAnimMontage*                                MontageToPlay;                                            // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)
	EFortSharedAnimationState                          AnimState;                                                // 0x00F0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bStopWhenAbilityEnds;                                     // 0x00F1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00F2(0x0006) MISSED OFFSET
	struct FName                                       StartSection;                                             // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_PlayAnimAndWait");
		return ptr;
	}


	void OnAnimInterrupted();
	void OnAnimBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	class UFortAbilityTask_PlayAnimAndWait* STATIC_CreatePlayAnimAndWaitProxy(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, EFortSharedAnimationState AnimState, const struct FName& StartSection, bool bStopWhenAbilityEnds);
};


// Class FortniteGame.FortAbilityTask_PlayAnimWaitTarget
// 0x00B8 (0x0138 - 0x0080)
class UFortAbilityTask_PlayAnimWaitTarget : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Triggered;                                                // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Cancelled;                                                // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Completed;                                                // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FFortGameplayAbilityMontageInfo             MontageInfo;                                              // 0x00B0(0x0060)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0110(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_PlayAnimWaitTarget");
		return ptr;
	}


	class UFortAbilityTask_PlayAnimWaitTarget* STATIC_PlayAnimWithMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, const struct FFortGameplayAbilityMontageInfo& MontageInfo, EFortSharedAnimationState AnimState);
	class UFortAbilityTask_PlayAnimWaitTarget* STATIC_PlayAnimWaitTarget(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, EFortSharedAnimationState AnimState, EFortGameplayAbilityMontageSectionToPlay SectionToPlay, const struct FName& OverrideSection);
	void OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};


// Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget
// 0x00C0 (0x0140 - 0x0080)
class UFortAbilityTask_PlayMontageWaitTarget : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Triggered;                                                // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Cancelled;                                                // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Completed;                                                // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FFortGameplayAbilityMontageInfo             MontageInfo;                                              // 0x00B0(0x0060)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0110(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_PlayMontageWaitTarget");
		return ptr;
	}


	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageWithCharPartsWait(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, TArray<struct FFortCharacterPartMontageInfo> CharacterPartMontages, float AnimPlayRate, EFortGameplayAbilityMontageSectionToPlay SectionToPlay, const struct FName& OverrideSection, float AnimRootMotionTranslationScale, EFortAbilityTargetDataPolicy TargetDataPolicy);
	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageWaitTarget(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, class UAnimMontage* MontageToPlay, float AnimPlayRate, EFortGameplayAbilityMontageSectionToPlay SectionToPlay, const struct FName& OverrideSection, float AnimRootMotionTranslationScale, EFortAbilityTargetDataPolicy TargetDataPolicy);
	class UFortAbilityTask_PlayMontageWaitTarget* STATIC_PlayMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, const struct FFortGameplayAbilityMontageInfo& MontageInfo, EFortAbilityTargetDataPolicy TargetDataPolicy);
	void OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
	void EnableScalingWithRateOfFire();
};


// Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait
// 0x0030 (0x00B0 - 0x0080)
class UFortAbilityTask_SetNextMontageSectionAndWait : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInterrupted;                                            // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait");
		return ptr;
	}


	class UFortAbilityTask_SetNextMontageSectionAndWait* STATIC_SetNextMontageSectionAndWait(class UGameplayAbility* OwningAbility, class UAnimMontage* PlayingMontage, const struct FName& NextMontageSection);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
};


// Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait
// 0x01B0 (0x0230 - 0x0080)
class UFortAbilityTask_SpawnProjectileAndWait : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Created;                                                  // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Touched;                                                  // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Bounced;                                                  // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Stopped;                                                  // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Exploded;                                                 // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Destroyed;                                                // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class AFortProjectileBase>          SpawnedProj;                                              // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      RequestedBy;                                              // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnLocation;                                            // 0x00F0(0x000C) (IsPlainOldData)
	struct FRotator                                    SpawnRotation;                                            // 0x00FC(0x000C) (IsPlainOldData)
	struct FRotator                                    SpawnDirection;                                           // 0x0108(0x000C) (IsPlainOldData)
	float                                              InitialSpeed;                                             // 0x0114(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnHit;                          // 0x0118(0x0080)
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnExplode;                      // 0x0198(0x0080)
	float                                              GravityScale;                                             // 0x0218(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x021C(0x0004) MISSED OFFSET
	class AActor*                                      HomingTarget;                                             // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowSpawnWhenDead;                                      // 0x0228(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowSpawnWhenDBNO;                                      // 0x0229(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x022A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_SpawnProjectileAndWait");
		return ptr;
	}


	class UFortAbilityTask_SpawnProjectileAndWait* STATIC_SpawnProjectileAndWait(class UGameplayAbility* OwningAbility, class UClass* Class, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FRotator& SpawnDirection, float InitialSpeed, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, float GravityScale, class AActor* HomingTarget, bool bAllowProjectileSpawnWhenDead, bool bAllowProjectileSpawnWhenDBNO);
	void OnProjectileDestroyed(class AActor* DestroyedActor);
	void FinishSpawningActor(class UGameplayAbility* OwningAbility, class AFortProjectileBase* SpawnedActor);
	bool BeginSpawningActor(class UGameplayAbility* OwningAbility, class UClass* Class, class AFortProjectileBase** SpawnedActor);
};


// Class FortniteGame.FortAbilityTask_Sprint
// 0x0010 (0x0090 - 0x0080)
class UFortAbilityTask_Sprint : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnTargetLocationReached;                                  // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_Sprint");
		return ptr;
	}

};


// Class FortniteGame.FortAbilityTask_WaitAnimBPOverride
// 0x0068 (0x00E8 - 0x0080)
class UFortAbilityTask_WaitAnimBPOverride : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    OnReady;                                                  // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortAbilityTask_WaitAnimBPOverride.AnimInstanceWaitingFor
	unsigned char                                      UnknownData01[0x28];                                      // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortAbilityTask_WaitAnimBPOverride.GadgetItemDefWaitingFor
	class AFortPlayerPawn*                             FortPlayerPawn;                                           // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_WaitAnimBPOverride");
		return ptr;
	}


	class UFortAbilityTask_WaitAnimBPOverride* STATIC_WaitAnimBPOverrideReady(class UGameplayAbility* OwningAbility);
	void OnPawnAnimBPCallback();
	void OnFinishedCharacterCustomizationCallback(class AFortPlayerPawn* InPawn);
};


// Class FortniteGame.FortAbilityTask_WaitTargetSelection
// 0x0040 (0x00C0 - 0x0080)
class UFortAbilityTask_WaitTargetSelection : public UAbilityTask
{
public:
	struct FScriptMulticastDelegate                    Targeted;                                                 // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    Cancelled;                                                // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TEnumAsByte<EGameplayTargetingConfirmation>        ConfirmationType;                                         // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bForceTargetingOnServer;                                  // 0x00A1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	struct FGameplayTag                                InstantTargetTag;                                         // 0x00A8(0x0008)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTask_WaitTargetSelection");
		return ptr;
	}


	class UFortAbilityTask_WaitTargetSelection* STATIC_WaitTargetSelection(class UGameplayAbility* OwningAbility, const struct FName& TaskInstanceName, const struct FGameplayTag& InApplicationTag, bool bForceTargetingOnServer);
	void OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void OnTargetDataCancelledCallback();
};


// Class FortniteGame.FortAbilityTestObserver
// 0x0030 (0x0358 - 0x0328)
class AFortAbilityTestObserver : public AActor
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0328(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAbilityTestObserver");
		return ptr;
	}


	bool WasAbilityTagActivated(const struct FGameplayTag& AbilityTag);
	bool WasAbilityActivated(class UGameplayAbility* Ability);
	void StopObserving();
	void StartObserving(class APawn* Pawn);
};


// Class FortniteGame.FortAccountBuffCreditItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortAccountBuffCreditItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountBuffCreditItem");
		return ptr;
	}

};


// Class FortniteGame.FortConsumableAccountItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortConsumableAccountItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                               bCanActivateOnSelf;                                       // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanActivateOnOthers;                                     // 0x0391(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsAutomaticallyConsumed;                                 // 0x0392(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EItemProfileType                                   ProfileType;                                              // 0x0393(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0394(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsumableAccountItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAccountBuffCreditItemDefinition
// 0x0030 (0x03D0 - 0x03A0)
class UFortAccountBuffCreditItemDefinition : public UFortConsumableAccountItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x03A0(0x0020) MISSED OFFSET
	int                                                MinutesOfBuffTimeToGrant;                                 // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x03C4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountBuffCreditItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAccountBuffItem
// 0x0008 (0x00E8 - 0x00E0)
class UFortAccountBuffItem : public UFortAccountItem
{
public:
	struct FDateTime                                   expiration_date;                                          // 0x00E0(0x0008) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountBuffItem");
		return ptr;
	}


	bool IsActive();
};


// Class FortniteGame.FortAccountBuffItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortAccountBuffItemDefinition : public UFortAccountItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0390(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortAccountBuffItemDefinition.BuffEffects

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountBuffItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortItemTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortAccountItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortAccountItemTooltip : public UFortItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortAccountStatProxyInstance
// 0x0028 (0x0050 - 0x0028)
class UFortAccountStatProxyInstance : public UObject
{
public:
	struct FString                                     StatName;                                                 // 0x0028(0x0010) (ZeroConstructor)
	struct FText                                       CachedDisplayName;                                        // 0x0038(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAccountStatProxyInstance");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayEffectExecutionCalculation
// 0x0000 (0x0040 - 0x0040)
class UFortGameplayEffectExecutionCalculation : public UGameplayEffectExecutionCalculation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectExecutionCalculation");
		return ptr;
	}

};


// Class FortniteGame.FortActiveDurationExecutionCalculation
// 0x0000 (0x0040 - 0x0040)
class UFortActiveDurationExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortActiveDurationExecutionCalculation");
		return ptr;
	}

};


// Class FortniteGame.FortActorIndicatorInterface
// 0x0000 (0x0028 - 0x0028)
class UFortActorIndicatorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortActorIndicatorInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAttributeSet
// 0x0000 (0x0030 - 0x0030)
class UFortAttributeSet : public UAttributeSet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttributeSet");
		return ptr;
	}

};


// Class FortniteGame.FortAdvancedMovementSet
// 0x0120 (0x0150 - 0x0030)
class UFortAdvancedMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  GroundFriction;                                           // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BrakingDecelerationWalking;                               // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BrakingDecelerationFalling;                               // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxAcceleration;                                          // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BrakingFrictionFactor;                                    // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  JumpZVelocity;                                            // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  JumpHorizontalAccelerationOverride;                       // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  JumpHorizontalVelocityOverride;                           // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MinAnalogWalkSpeed;                                       // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAdvancedMovementSet");
		return ptr;
	}


	void OnRep_MinAnalogWalkSpeed();
	void OnRep_MaxAcceleration();
	void OnRep_JumpZVelocity();
	void OnRep_GroundFriction();
	void OnRep_BrakingFrictionFactor();
	void OnRep_BrakingDecelerationWalking();
	void OnRep_BrakingDecelerationFalling();
};


// Class FortniteGame.FortAIAnimInstance
// 0x0030 (0x0440 - 0x0410)
class UFortAIAnimInstance : public UFortAnimInstance
{
public:
	float                                              Speed;                                                    // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              UpwardVelocity;                                           // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MovementDirection;                                        // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LowerBodyCurrentWeight;                                   // 0x041C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LowerBodyBlendTime;                                       // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                RunVariation;                                             // 0x0424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                WalkVariation;                                            // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortMovementStyle>                    MovementStyle;                                            // 0x042C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x042D(0x0003) MISSED OFFSET
	unsigned char                                      BlockGetUp : 1;                                           // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsStunned : 1;                                           // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsKnockedback : 1;                                       // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsStaggered : 1;                                         // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsSleeping : 1;                                          // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsDBNO : 1;                                              // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsCowering : 1;                                          // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bHasWeapon : 1;                                           // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bAdditiveHitReactLoop : 1;                                // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bUseAltSleepAnim : 1;                                     // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bShouldUseMovementLocomotion : 1;                         // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bCanLookAtAimTarget : 1;                                  // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsTargeting : 1;                                         // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bTransitionToIdle : 1;                                    // 0x0431(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0432(0x0002) MISSED OFFSET
	TEnumAsByte<EFortWeaponCoreAnimation>              WeaponCoreAnimation;                                      // 0x0434(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0435(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortAIAssignment
// 0x00B0 (0x00D8 - 0x0028)
class UFortAIAssignment : public UObject
{
public:
	struct FFortAIAssignmentIdentifier                 AssignmentIdentifier;                                     // 0x0028(0x0030)
	class UFortAIAssignmentSettings*                   AssignmentSettings;                                       // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortAIGoalProvider*                         GoalProvider;                                             // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AFortAIController*>                   ControllersOnAssignment;                                  // 0x0068(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0078(0x0050) MISSED OFFSET
	TArray<struct FFortAIGoal>                         Goals;                                                    // 0x00C8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIAssignment");
		return ptr;
	}

};


// Class FortniteGame.FortAIAssignmentSettings
// 0x0060 (0x0090 - 0x0030)
class UFortAIAssignmentSettings : public UDataAsset
{
public:
	TArray<struct FGoalSelectionQueryInfo>             GoalSelectionQueryInfos;                                  // 0x0030(0x0010) (Edit, ZeroConstructor)
	bool                                               bGoalLocationsAlwaysKnown;                                // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsEnemyAssignment;                                       // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       RequiredTags;                                             // 0x0048(0x0020) (Edit)
	struct FGameplayTagContainer                       ProhibitedTags;                                           // 0x0068(0x0020) (Edit)
	float                                              MaxAIAllowedForAssignment;                                // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAIAllowedPerGoal;                                      // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIAssignmentSettings");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterAttrSet
// 0x00A0 (0x00D0 - 0x0030)
class UFortCharacterAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  Fortitude;                                                // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Offense;                                                  // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Tech;                                                     // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Resistance;                                               // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxCharacterLevel;                                        // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterAttrSet");
		return ptr;
	}


	void OnRep_Tech();
	void OnRep_Resistance();
	void OnRep_Offense();
	void OnRep_MaxCharacterLevel();
	void OnRep_Fortitude();
};


// Class FortniteGame.FortAIAttributesSet
// 0x0000 (0x00D0 - 0x00D0)
class UFortAIAttributesSet : public UFortCharacterAttrSet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIAttributesSet");
		return ptr;
	}

};


// Class FortniteGame.FortAIDataProvider_Ability
// 0x0048 (0x0070 - 0x0028)
class UFortAIDataProvider_Ability : public UAIDataProvider
{
public:
	struct FGameplayTagContainer                       AbilityTag;                                               // 0x0028(0x0020) (Edit)
	struct FGameplayTagContainer                       AbilityBehaviorDistanceTag;                               // 0x0048(0x0020) (Edit)
	float                                              BehaviorDistance;                                         // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxTargetSelectionRange;                                  // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_Ability");
		return ptr;
	}

};


// Class FortniteGame.FortAIDataProvider_AIDirector
// 0x0008 (0x0030 - 0x0028)
class UFortAIDataProvider_AIDirector : public UAIDataProvider
{
public:
	float                                              AIRelevantDistanceToPlayer;                               // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EncounterRelevantDistanceToPlayer;                        // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_AIDirector");
		return ptr;
	}

};


// Class FortniteGame.FortAIDataProvider_GoalProviderAbility
// 0x0000 (0x0070 - 0x0070)
class UFortAIDataProvider_GoalProviderAbility : public UFortAIDataProvider_Ability
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_GoalProviderAbility");
		return ptr;
	}

};


// Class FortniteGame.FortAIDataProvider_Pawn
// 0x0030 (0x0058 - 0x0028)
class UFortAIDataProvider_Pawn : public UAIDataProvider
{
public:
	float                                              SightRadius;                                              // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HearingRadius;                                            // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ViewLocationOffsetFromGround;                             // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxStepHeight;                                            // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TetheredBoxCenterLocation;                                // 0x0038(0x000C) (IsPlainOldData)
	float                                              TetheredBoxWidth;                                         // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TetheredBoxHeight;                                        // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TetheredBoxEQSGridSize;                                   // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TetheredBoxEQSSpaceBetween;                               // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDataProvider_Pawn");
		return ptr;
	}

};


// Class FortniteGame.FortAIDirectorDataManager
// 0x00E0 (0x0408 - 0x0328)
class AFortAIDirectorDataManager : public AActor
{
public:
	class UObject*                                     OwnerObject;                                              // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FAIDirectorEventData>                EventsToTrack;                                            // 0x0330(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortAIDirectorFactorData>           FactorsToTrack;                                           // 0x0340(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0350(0x00A0) MISSED OFFSET
	TArray<EFortAIDirectorFactor>                      FactorsBeingTracked;                                      // 0x03F0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0400(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorDataManager");
		return ptr;
	}


	void TriggerEvent(const struct FFortAIDirectorEvent& TriggeredEvent);
	float GetAIDirectorFactorValue(EFortAIDirectorFactor AIDirectorFactor);
};


// Class FortniteGame.FortAIDirectorDataTrackingSettings
// 0x0010 (0x0040 - 0x0030)
class UFortAIDirectorDataTrackingSettings : public UDataAsset
{
public:
	class UClass*                                      PlayerDataManager;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      EncounterDataManager;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorDataTrackingSettings");
		return ptr;
	}

};


// Class FortniteGame.FortAIDirectorEventManager
// 0x0050 (0x0378 - 0x0328)
class AFortAIDirectorEventManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0328(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIDirectorEventManager");
		return ptr;
	}

};


// Class FortniteGame.FortAIEncounterInfo
// 0x0C70 (0x0C98 - 0x0028)
class UFortAIEncounterInfo : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	class UFortAISpawnGroupProgressionInfo*            SpawnGroupProgressionInfo;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FFortSpawnPointsPercentageCurveSequenceInstanceInfo SpawnPointsPercentageCurveSequence;                       // 0x0040(0x0010)
	struct FFortIntensityCurveSequenceInstanceInfo     IntensityCurveSequence;                                   // 0x0050(0x0010)
	float                                              BurstSpawnPointsPercentage;                               // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SpawnPointsMultiplier;                                    // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBreathers;                                            // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FCurveTableRowHandle                        LowPlayerPerformanceBreatherTimeSecondsCurve;             // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCurveTableRowHandle                        NormalPlayerPerformanceBreatherTimeSecondsCurve;          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCurveTableRowHandle                        HighPlayerPerformanceBreatherTimeSecondsCurve;            // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              EncounterTimeSeconds;                                     // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FUtilityTypeFloatPair>               LockedUtilityValues;                                      // 0x00A8(0x0010) (ZeroConstructor)
	int                                                NumFreeUtilities;                                         // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              UtilityAdjustmentPeriodSeconds;                           // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSpawnDistance;                                         // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnDistance;                                         // 0x00C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumDirections;                                            // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bChangeDirectionsOnRest;                                  // 0x00CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	float                                              SpawnPointsPercentageLimit;                               // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PawnNumberLimit;                                          // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortEncounterPawnNumberCaps                PawnNumberCaps;                                           // 0x00D8(0x0018)
	float                                              SpawningIntervalSeconds;                                  // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEncounterSpawnDirectionsChosen;                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              NextRiftReplacementTime;                                  // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              NextSpawningTime;                                         // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortAIEncounterSpawnGroupCapsProfile       EncounterSpawnGroupCapsProfile;                           // 0x0110(0x0030)
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> AdditionalSpawnGroupCapsCategories;                       // 0x0140(0x0010) (ZeroConstructor)
	struct FFortAIEncounterSpawnPointsProfile          EncounterSpawnPointsProfile;                              // 0x0150(0x0040)
	TArray<struct FFortAISpawnGroupUpgradeData>        AvailableUpgrades;                                        // 0x0190(0x0010) (ZeroConstructor)
	TArray<struct FCurveTableRowHandle>                PawnDifficultyLevelModifiers;                             // 0x01A0(0x0010) (ZeroConstructor)
	TArray<struct FFortAIBaseLootDropRow>              BaseLootDropRows;                                         // 0x01B0(0x0010) (ZeroConstructor)
	TArray<struct FFortAILootDropModifierRow>          LootDropModifierRows;                                     // 0x01C0(0x0010) (ZeroConstructor)
	bool                                               bRequiresReinitializationFromProfile;                     // 0x01D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET
	struct FCurveTableRowHandle                        DesiredHostilityCurve;                                    // 0x01D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UFortIntensityCurveSequenceProgression*      IntensitySequenceProgression;                             // 0x01E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x70];                                      // 0x01F0(0x0070) MISSED OFFSET
	float                                              AliveMultiplier;                                          // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortEncounterSpawnLimitType>          SpawnLimitType;                                           // 0x0264(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0265(0x0003) MISSED OFFSET
	int                                                SpawnLimit;                                               // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PawnNumberLimitProgress;                                  // 0x026C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SpawnPointsLimitProgress;                                 // 0x0270(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnLimitReached;                                       // 0x0274(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasSpawnedAllBurstSpawnAI;                               // 0x0275(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAliveCounts;                                     // 0x0276(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x0277(0x0001) MISSED OFFSET
	int                                                MinAliveOverride;                                         // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxAliveOverride;                                         // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HostilityThreshold;                                       // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PeakTimeSeconds;                                          // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BreatherTimeSeconds;                                      // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxRampTimeSeconds;                                       // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenBreathesSeconds;                            // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxFadeTimeSeconds;                                       // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeEndIntensity;                                         // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeEndRemainingSpawnPointsPercentage;                    // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CompletionPercentageToDisableBreathers;                   // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x02A4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEncounterAllEnemiesKilled;                              // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterEnemySpawned;                                  // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterAllBurstEnemiesSpawned;                        // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterCompleted;                                     // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterPawnDied;                                      // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData10[0x3];                                       // 0x02F8(0x0003) MISSED OFFSET
	bool                                               bDisplayThreatVisuals;                                    // 0x02FB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseDesiredUtilities[0x10];                               // 0x02FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       UtilitiesRequiredTags[0x10];                              // 0x0340(0x0020) (Edit)
	struct FGameplayTagContainer                       InjectedTagForUtilityCheck;                               // 0x0540(0x0020) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0560(0x0004) MISSED OFFSET
	float                                              MaxLargeSpawnGroupDiscountInterval;                       // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSelectionToSpawningDelay;                              // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x54];                                      // 0x056C(0x0054) MISSED OFFSET
	TArray<struct FUtilityTypeFloatPair>               CurrentDesiredUtilities;                                  // 0x05C0(0x0010) (ZeroConstructor)
	float                                              UtilityRecentSelectionPenalties[0x10];                    // 0x05D0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              UtilityEffectivenessMeasurements[0x10];                   // 0x0610(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FCurveTableRowHandle                        UtilityEffectivenessMultiplierCurve;                      // 0x0650(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              UtilityEffectivenessInfluenceCap;                         // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0664(0x0004) MISSED OFFSET
	TArray<struct FUtilityTypeFloatPair>               CurrentTopUtilityPercentages;                             // 0x0668(0x0010) (ZeroConstructor)
	TArray<TEnumAsByte<EFortAIUtility>>                UsedTopUtilities;                                         // 0x0678(0x0010) (ZeroConstructor, Transient)
	int                                                NumUtilitiesConsidered;                                   // 0x0688(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ReactivityPercentage;                                     // 0x068C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAdjustUtilitiesDuringRest;                               // 0x0690(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDespawnAIsDuringRest;                                    // 0x0691(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x0692(0x0002) MISSED OFFSET
	float                                              LastPlayerCombatFactorUpdateTime;                         // 0x0694(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastUtilityAdjustTime;                                    // 0x0698(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastSpawnPointAdjustmentTime;                             // 0x069C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastLargeGroupSpawnTime;                                  // 0x06A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x06A4(0x0004) MISSED OFFSET
	TArray<struct FAIEncounterSpawnGroupWeights>       EnemySpawnData;                                           // 0x06A8(0x0010) (ZeroConstructor)
	struct FFortAIEncounterPIDController               EncounterPIDController;                                   // 0x06B8(0x0068)
	int                                                CurrentSpawnPointsCap;                                    // 0x0720(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentSpawnPointsUsed;                                   // 0x0724(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0728(0x0008) MISSED OFFSET
	int                                                FailSafeMinSpawnPoints;                                   // 0x0730(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0734(0x0004) MISSED OFFSET
	TArray<struct FSpawnGroupInstanceInfo>             ActiveSpawnGroups;                                        // 0x0738(0x0010) (ZeroConstructor)
	float                                              EncounterEngagementDistance;                              // 0x0748(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinRelevantBuildingDamagedDistance;                       // 0x074C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxRelevantBuildingDamagedDistance;                       // 0x0750(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x14];                                      // 0x0754(0x0014) MISSED OFFSET
	class AActor*                                      CurrentGroupSpawnPoint;                                   // 0x0768(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortEncounterState>                   EncounterState;                                           // 0x0770(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortEncounterPacingState>             PacingState;                                              // 0x0771(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x0772(0x0002) MISSED OFFSET
	float                                              LastPacingStateTransitionTime;                            // 0x0774(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortAIEncounterWaveProgressEstimation      WaveProgressEstimate;                                     // 0x0778(0x001C)
	float                                              DesiredDifficultyLevel;                                   // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DifficultyLevelOverride;                                  // 0x0798(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x079C(0x0004) MISSED OFFSET
	class AFortAIDirector*                             MyAIDirector;                                             // 0x07A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortGoalActorEncounterDataManagerPair> DataManagers;                                             // 0x07A8(0x0010) (ZeroConstructor)
	class AActor*                                      TargetObjective;                                          // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bOnlyActiveAtNight;                                       // 0x07C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x3];                                       // 0x07C1(0x0003) MISSED OFFSET
	int                                                NumRiftsToUse;                                            // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinRiftsToUse;                                            // 0x07C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumRiftsUsed;                                             // 0x07CC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x07D0(0x0058)
	float                                              EncounterStartTime;                                       // 0x0828(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HostilityCurveStartTime;                                  // 0x082C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FEncounterEnvironmentQueryInfo              DefaultEnvironmentQueryInfo;                              // 0x0830(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FEncounterEnvironmentQueryInfo              FallbackEnvironmentQueryInfo;                             // 0x0858(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FEncounterEnvironmentQueryInfo              OverrideEnvironmentQueryInfo;                             // 0x0880(0x0028)
	struct FEncounterEnvironmentQueryInfo              CurrentEnvironmentQueryInfo;                              // 0x08A8(0x0028)
	bool                                               bNukeWavesAtDaybreak;                                     // 0x08D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNukeWavesAtEncounterEnd;                                 // 0x08D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNukeWavesAtEncounterDeactivation;                        // 0x08D2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x1];                                       // 0x08D3(0x0001) MISSED OFFSET
	int                                                ActiveEnemyCap;                                           // 0x08D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentHostilityLevel;                                    // 0x08D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x4];                                       // 0x08DC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEncounterRampStarted;                                   // 0x08E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterPeakStarted;                                   // 0x08F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterFadeStarted;                                   // 0x0900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterRestStarted;                                   // 0x0910(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterCombatParticipation;                           // 0x0920(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterOptionsChanged;                                // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      RiftClassTemplate;                                        // 0x0940(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x20];                                      // 0x0948(0x0020) MISSED OFFSET
	TMap<TWeakObjectPtr<class AActor>, struct FFortAISpawnerData> ExternalAISpawners;                                       // 0x0968(0x0050) (ZeroConstructor, Transient)
	class UFortAIEncounterRiftManager*                 RiftManager;                                              // 0x09B8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     AssociatedMissionName;                                    // 0x09C0(0x0010) (ZeroConstructor, Transient)
	TEnumAsByte<EFortMissionType>                      AssociatedMissionType;                                    // 0x09D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x3];                                       // 0x09D1(0x0003) MISSED OFFSET
	unsigned char                                      bCanBeActive : 1;                                         // 0x09D4(0x0001)
	unsigned char                                      UnknownData27[0x3];                                       // 0x09D5(0x0003) MISSED OFFSET
	TArray<class UFortAIAssignment*>                   EncounterAssignments;                                     // 0x09D8(0x0010) (ZeroConstructor)
	class UFortAIAssignmentSettings*                   DefaultEncounterAssignmentSettings;                       // 0x09E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x30];                                      // 0x09F0(0x0030) MISSED OFFSET
	int                                                MaxActiveAlive;                                           // 0x0A20(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxSpawnPointsUsed;                                       // 0x0A24(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 OverrideSpawnPointsCurve;                                 // 0x0A28(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x1F8];                                     // 0x0A30(0x01F8) MISSED OFFSET
	bool                                               bUseAILifespans;                                          // 0x0C28(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTrackCombatParticipation;                                // 0x0C29(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x6];                                       // 0x0C2A(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       ModifierTags;                                             // 0x0C30(0x0020) (BlueprintVisible, BlueprintReadOnly, Transient)
	TArray<struct FFortAIEncounterTimedModifierTags>   TimedModifierTags;                                        // 0x0C50(0x0010) (ZeroConstructor, Transient)
	struct FGameplayTagContainer                       GameContextTags;                                          // 0x0C60(0x0020) (BlueprintVisible, BlueprintReadOnly, Transient)
	class AFortGameplayMutator_AILevelVariance*        AILevelMutator;                                           // 0x0C80(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortGameplayMutator_AIEncounterModifierTags*> EncounterModifierTagsMutators;                            // 0x0C88(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterInfo");
		return ptr;
	}


	void UnRegisterAISpawner(class AActor* InAISpawner);
	class AFortAIPawn* SpawnAIPawnReservedForEnemySpawner(class AActor* EnemySpawner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void SetPawnNumberLimit(int InPawnNumberLimit);
	void SetEncounterActivationState(bool bEncounterActivityState);
	void RequestActivation(int ActivationDelay);
	void RegisterAISpawner(class AActor* InAISpawner);
	void OnRestStarted();
	void OnRampStarted();
	void OnPeakStarted();
	void OnGoalTakeDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void OnGameDifficultyChanged();
	void OnFadeStarted();
	void OnEncounterPawnDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	bool GroupHasAIRemainingToSpawn(const struct FFortAISpawnerData& FortAISpawnerData);
	int GetPawnNumberLimit();
	float GetEncounterTimeSeconds();
	void GetEncounterGameplayTags(struct FGameplayTagContainer* OutEncounterTags);
	class AFortAIDirectorDataManager* GetEncounterDataManager();
	bool GetCurrentSpawnAreaDirections(TArray<TEnumAsByte<EFortEncounterDirection>>* OutDirections);
	bool EncounterHasReservedSpawnRequestForEnemySpawner(class AActor* EnemySpawner);
	class UFortAIAssignment* CreateEncounterAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
};


// Class FortniteGame.FortAIEncounterInfoOwnerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAIEncounterInfoOwnerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterInfoOwnerInterface");
		return ptr;
	}


	class UFortAIEncounterInfo* GetEncounterInfo();
};


// Class FortniteGame.FortAIEncounterRiftManager
// 0x01E0 (0x0208 - 0x0028)
class UFortAIEncounterRiftManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	class UFortAIEncounterInfo*                        MyEncounter;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortAIDirector*                             AIDirector;                                               // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAIEncounterSpawnArea                   CurrentSpawnArea;                                         // 0x0048(0x0048)
	struct FFortAIEncounterSpawnArea                   FutureSpawnArea;                                          // 0x0090(0x0048)
	float                                              UpdateIntervalTimeSeconds;                                // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumRiftsToUse;                                            // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MinRiftsToUse;                                            // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x00E8(0x0058)
	float                                              ExtraSpawnLocationPercentage;                             // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	struct FEncounterEnvironmentQueryInfo              CurrentEnvironmentQueryInfo;                              // 0x0148(0x0028)
	struct FEncounterEnvironmentQueryInfo              FallbackEnvironmentQueryInfo;                             // 0x0170(0x0028)
	struct FFortAIEncounterQueryDirectionTracker       EncounterQueryDirectionTracker;                           // 0x0198(0x0048)
	class UClass*                                      RiftClassTemplate;                                        // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              LastObjectiveBatchPathCostUpdateTime;                     // 0x01E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastPlayerBatchPathCostUpdateTime;                        // 0x01EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x01F0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterRiftManager");
		return ptr;
	}


	class AFortMission* GetAssociatedMission();
};


// Class FortniteGame.FortAIEncounterSequence
// 0x0110 (0x0138 - 0x0028)
class UFortAIEncounterSequence : public UObject
{
public:
	struct FFortGeneratedEncounterSequence             GeneratedEncounterSequence;                               // 0x0028(0x0030)
	int                                                CurrentEncounterIndexInSequence;                          // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UFortAIEncounterInfo*                        CurrentEncounter;                                         // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortAIDirector*                             AssociatedAIDirector;                                     // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortMission*                                AssociatedMission;                                        // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              TargetActors;                                             // 0x0078(0x0010) (ZeroConstructor)
	class UFortAIAssignmentSettings*                   AssignmentSettings;                                       // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FEncounterEnvironmentQueryInfo              OverrideEnvironmentQueryInfo;                             // 0x0090(0x0028)
	class AActor*                                      OptionalQueryActor;                                       // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       InjectedTags;                                             // 0x00C0(0x0020)
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x00E0(0x0058)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterSequence");
		return ptr;
	}


	void StopCurrentEncounter();
	class UFortAIEncounterInfo* StartCurrentEncounterWithSavedData(int ActivationDelay, EFortEncounterSequenceResult* OutRequestResult);
	class UFortAIEncounterInfo* StartCurrentEncounter(TArray<class AActor*> InTargetActors, class UFortAIAssignmentSettings* InAssignmentSettings, const struct FEncounterEnvironmentQueryInfo& InOverrideEnvironmentQueryInfo, class AActor* InOptionalQueryActor, const struct FGameplayTagContainer& InInjectedTags, const struct FFortEncounterSettings& InEncounterSettings, int ActivationDelay, EFortEncounterSequenceResult* OutRequestResult);
	void SetEncounterStartingData(TArray<class AActor*> InTargetActors, class UFortAIAssignmentSettings* InAssignmentSettings, const struct FEncounterEnvironmentQueryInfo& InOverrideEnvironmentQueryInfo, class AActor* InOptionalQueryActor, const struct FGameplayTagContainer& InInjectedTags, const struct FFortEncounterSettings& InEncounterSettings);
	EFortEncounterSequenceResult Previous();
	EFortEncounterSequenceResult Next();
	EFortEncounterSequenceResult Last();
	bool IsOnFinalIndexInSequence();
	bool HasEncounter();
	int GetNumEncountersInSequence();
	int GetEncounterIndexInSequence();
	class UFortAIEncounterInfo* GetCurrentEncounter();
	bool EncounterBelongsToSequence(class UFortAIEncounterInfo* InEncounter);
};


// Class FortniteGame.FortAIEncounterTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAIEncounterTargetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterTargetInterface");
		return ptr;
	}


	bool IsFloatingTarget();
	float GetObjectiveCompletionPercentage();
};


// Class FortniteGame.FortAIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortAIFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIFunctionLibrary");
		return ptr;
	}


	void STATIC_MakeNoiseEventAtLocation(class AActor* NoiseMaker, float MaxRange, const struct FVector& NoiseLocation);
	void STATIC_MakeNoiseEvent(class AActor* NoiseMaker, float MaxRange);
};


// Class FortniteGame.FortAIGoalManager
// 0x0118 (0x0440 - 0x0328)
class AFortAIGoalManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class UFortAIAssignment*>                   WorldAssignments;                                         // 0x0330(0x0010) (ZeroConstructor)
	TArray<class UFortAIAssignment*>                   WorldEnemyAssignments;                                    // 0x0340(0x0010) (ZeroConstructor)
	class UFortAIAssignment*                           DefaultAttackPlayersAssignment;                           // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x60];                                      // 0x0358(0x0060) MISSED OFFSET
	TArray<class UEnvQuery*>                           CombinedQueries;                                          // 0x03B8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x50];                                      // 0x03C8(0x0050) MISSED OFFSET
	class UFortAIAssignmentSettings*                   DefaultEncounterAssignmentSettings;                       // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFortAIAssignmentSettings*                   DefaultEnemyAssignmentSettings;                           // 0x0420(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPawnGoalSelectionTableEntry>        PawnGoalSelectionTable;                                   // 0x0428(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0438(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIGoalManager");
		return ptr;
	}


	void STATIC_SetCurrentGoalDiscouragement(class UObject* WorldContext, class AFortAIController* AI);
	void STATIC_RemoveWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier);
	void STATIC_RemoveGoalsFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo> GoalInfos);
	void STATIC_RemoveGoalFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo);
	void STATIC_MakeGoalsFromLocationsAndActor(class UObject* WorldContextObject, TArray<struct FVector> GoalLocations, class AActor* GoalActor, TArray<struct FFortAIGoalInfo>* Goals);
	void STATIC_MakeGoalsFromLocations(class UObject* WorldContextObject, TArray<struct FVector> GoalLocations, TArray<struct FFortAIGoalInfo>* Goals);
	void STATIC_MakeGoalsFromActors(class UObject* WorldContextObject, TArray<class AActor*> GoalActors, bool bActorsAlwaysPerceived, bool bGoalActorsAllowUndermining, TArray<struct FFortAIGoalInfo>* Goals);
	void STATIC_MakeGoalFromLocation(class UObject* WorldContextObject, const struct FVector& GoalLocation, struct FFortAIGoalInfo* Goal);
	void STATIC_MakeGoalFromActor(class UObject* WorldContextObject, class AActor* GoalActor, bool bActorAlwaysPerceived, bool bGoalActorAllowsUndermining, struct FFortAIGoalInfo* Goal);
	void STATIC_CreateWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& WorldAssignmentIdentifier, class UFortAIAssignmentSettings* AssignmentSettings, class UClass* GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier, EAssignmentCreationResult* CreationResult);
	class UFortAIAssignment* AddWorldAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor);
	void STATIC_AddGoalToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo);
	void STATIC_AddGoalsToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, TArray<struct FFortAIGoalInfo> GoalInfos);
	void AddGoalActorToAssignment(class UFortAIAssignment* Assignment, class AActor* GoalActor);
	void AddGoal(class AActor* GoalActor, class UFortAIAssignmentSettings* GoalSettings);
};


// Class FortniteGame.FortAIGoalProvider
// 0x0020 (0x0048 - 0x0028)
class UFortAIGoalProvider : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UWorld*                                      World;                                                    // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortAIAssignment*                           AssignmentOwner;                                          // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortAIEncounterInfo*                        EncounterInfo;                                            // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIGoalProvider");
		return ptr;
	}


	void UpdateGoals();
	bool InitializeGoalProvider(class UWorld* ContextWorld, class UFortAIAssignment* Assignment);
	class UFortAIEncounterInfo* GetEncounterInfo();
};


// Class FortniteGame.FortAIGoalProvider_EnvQuery
// 0x0090 (0x00D8 - 0x0048)
class UFortAIGoalProvider_EnvQuery : public UFortAIGoalProvider
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	class UEnvQuery*                                   GoalQuery;                                                // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutomaticUpdatePeriodInSeconds;                           // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FFortAIAssignmentIdentifier                 SpecificAssignmentContext;                                // 0x0060(0x0030) (Edit)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortAIGoalProvider_EnvQuery.AIPawnContext
	unsigned char                                      UnknownData03[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIGoalProvider_EnvQuery");
		return ptr;
	}

};


// Class FortniteGame.FortAIEncounterGoalSelectionTable
// 0x0010 (0x0040 - 0x0030)
class UFortAIEncounterGoalSelectionTable : public UDataAsset
{
public:
	TArray<struct FEncounterGoalSelectionTableEntry>   EncounterGoalSelectionCriteria;                           // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIEncounterGoalSelectionTable");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpot
// 0x0028 (0x04D8 - 0x04B0)
class AFortAIHotSpot : public AAIHotSpot
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x04B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpot_Building
// 0x0088 (0x0560 - 0x04D8)
class AFortAIHotSpot_Building : public AFortAIHotSpot
{
public:
	class UAIHotSpotConfig*                            ExtraTypeConfig;                                          // 0x04D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x80];                                      // 0x04E0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot_Building");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpot_FakeBuilding
// 0x0000 (0x04D8 - 0x04D8)
class AFortAIHotSpot_FakeBuilding : public AFortAIHotSpot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot_FakeBuilding");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpot_Shooting
// 0x0000 (0x04D8 - 0x04D8)
class AFortAIHotSpot_Shooting : public AFortAIHotSpot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpot_Shooting");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpotManager
// 0x0148 (0x01C8 - 0x0080)
class UFortAIHotSpotManager : public UAIHotSpotManagerProxy
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortAIHotSpotManager.FallbackHotspotConfig
	unsigned char                                      UnknownData01[0xF0];                                      // 0x00A8(0x00F0) MISSED OFFSET
	TArray<struct FAutoAcquireSlot>                    AutoAcquireSlots;                                         // 0x0198(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01A8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotManager");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpotSlot
// 0x0010 (0x00D0 - 0x00C0)
class UFortAIHotSpotSlot : public UAIHotSpotSlot
{
public:
	EFortHotSpotSlot                                   SlotType;                                                 // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	unsigned char                                      bHasProjectedLocation : 1;                                // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bProjectedOnLowArea : 1;                                  // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bIsAutoGenerated : 1;                                     // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bCanDuplicateOnProjection : 1;                            // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bCanProjectUp : 1;                                        // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData01[0xB];                                       // 0x00C5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlot");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig
// 0x0018 (0x0040 - 0x0028)
class UFortAIHotSpotSlotGenerator_FromConfig : public UAIHotSpotSlotGenerator
{
public:
	class UAIHotSpotConfig*                            BuildingConfig;                                           // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x0030(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      bMirrorX : 1;                                             // 0x003C(0x0001) (Transient)
	unsigned char                                      bMirrorY : 1;                                             // 0x003C(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlotGenerator_FromConfig");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox
// 0x0008 (0x0078 - 0x0070)
class UFortAIHotSpotSlotGenerator_OnBoundingBox : public UAIHotSpotSlotGenerator_OnBoundingBox
{
public:
	float                                              DistanceForRangedSlots;                                   // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceForHugeSlots;                                     // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlotGenerator_OnBoundingBox");
		return ptr;
	}

};


// Class FortniteGame.FortAIHotSpotSlotGenerator_RampTrace
// 0x0018 (0x0040 - 0x0028)
class UFortAIHotSpotSlotGenerator_RampTrace : public UAIHotSpotSlotGenerator
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIHotSpotSlotGenerator_RampTrace");
		return ptr;
	}

};


// Class FortniteGame.FortAIProxyActor
// 0x0040 (0x0368 - 0x0328)
class AFortAIProxyActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	TEnumAsByte<EPhysicalSurface>                      PrimaryPhysicalSurface;                                   // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	class UFortHealthSet*                              HealthSet;                                                // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortDamageSet*                              DamageSet;                                                // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortMovementSet*                            MovementSet;                                              // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EFortBaseWeaponDamage>                 BaseWeaponDamageResponseType;                             // 0x0360(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0361(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIProxyActor");
		return ptr;
	}

};


// Class FortniteGame.FortAIMobileProxyActor
// 0x0000 (0x0368 - 0x0368)
class AFortAIMobileProxyActor : public AFortAIProxyActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIMobileProxyActor");
		return ptr;
	}

};


// Class FortniteGame.FortAIObjectiveInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAIObjectiveInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIObjectiveInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAIPawnVariant
// 0x0048 (0x0070 - 0x0028)
class UFortAIPawnVariant : public UObject
{
public:
	TArray<class UClass*>                              PawnClasses;                                              // 0x0028(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FFortAIPawnVariantDefinition>        PawnVariantDefinitions;                                   // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                MinPlayersToSpawnVariant;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FDataTableRowHandle                         SpawnPointValueHandle;                                    // 0x0050(0x0010) (Edit, DisableEditOnInstance)
	int                                                CachedSpawnPointValue;                                    // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EncounterExpectedLifespan;                                // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                VersionNum;                                               // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIPawnVariant");
		return ptr;
	}

};


// Class FortniteGame.FortAIPerceptionSystem
// 0x0000 (0x0138 - 0x0138)
class UFortAIPerceptionSystem : public UAIPerceptionSystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIPerceptionSystem");
		return ptr;
	}

};


// Class FortniteGame.FortAIRootAssignmentProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAIRootAssignmentProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAIRootAssignmentProviderInterface");
		return ptr;
	}


	struct FFortAIAssignmentIdentifier GetRootAssignmentIdentifier();
};


// Class FortniteGame.FortAISpawnerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAISpawnerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnerInterface");
		return ptr;
	}


	bool OnReceiveSpawnGroup();
	bool IsReadyToReceiveNewSpawnGroup();
};


// Class FortniteGame.FortAISpawnGroup
// 0x00E0 (0x0110 - 0x0030)
class UFortAISpawnGroup : public UPrimaryDataAsset
{
public:
	float                                              EnemyUtilities[0x10];                                     // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FSpawnGroupEnemy>                    EnemiesToSpawn;                                           // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bIsPrototype;                                             // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsValidForEnemySpawners;                                 // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLargeSpawnGroup;                                       // 0x0082(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0083(0x0001) MISSED OFFSET
	float                                              MaxDiscountRatio;                                         // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCurveTableRowHandle                        MaxGroupCategoryPopulationDensityCurve;                   // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FFortSpawnGroupEncounterTypeData>    EncounterTypeData;                                        // 0x0098(0x0010) (Edit, ZeroConstructor)
	struct FGameplayTagContainer                       SpawnGroupGameplayTags;                                   // 0x00A8(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           RequiredTagQuery;                                         // 0x00C8(0x0048) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroup");
		return ptr;
	}


	bool IsValidForEnemySpawners();
	bool IsPrototype();
	bool IsLargeSpawnGroup();
	int GetNumberOfEnemies();
	class UClass* GetEnemy(int EnemyIndex);
};


// Class FortniteGame.FortAISpawnGroupCapsCategorySet
// 0x0010 (0x0038 - 0x0028)
class UFortAISpawnGroupCapsCategorySet : public UObject
{
public:
	TArray<struct FFortAIEncounterSpawnGroupCapsCategory> SpawnGroupCapsCategories;                                 // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroupCapsCategorySet");
		return ptr;
	}

};


// Class FortniteGame.FortAISpawnGroupProgressionInfo
// 0x0010 (0x0040 - 0x0030)
class UFortAISpawnGroupProgressionInfo : public UDataAsset
{
public:
	TArray<struct FSpawnGroupProgression>              SpawnGroups;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroupProgressionInfo");
		return ptr;
	}

};


// Class FortniteGame.FortAISpawnGroupUpgrade
// 0x0140 (0x0168 - 0x0028)
class UFortAISpawnGroupUpgrade : public UObject
{
public:
	struct FGameplayTagContainer                       UpgradeTags;                                              // 0x0028(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           GroupRequiredTagQuery;                                    // 0x0048(0x0048) (Edit, DisableEditOnInstance)
	TArray<struct FFortAIPawnUpgrade>                  BasePawnUpgrades;                                         // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       AdditionalModifiersLootTierGroup;                         // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidForEnemySpawners;                                 // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	float                                              SpawnGroupDiscountPercentage;                             // 0x00AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFortAISpawnGroupUpgradeUIData              UIData;                                                   // 0x00B0(0x00B8) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroupUpgrade");
		return ptr;
	}

};


// Class FortniteGame.FortAISpawnGroupUpgradeProbabilities
// 0x0018 (0x0040 - 0x0028)
class UFortAISpawnGroupUpgradeProbabilities : public UObject
{
public:
	bool                                               bIsGuaranteedUpgrade;                                     // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FFortAIPawnUpgradeProbability>       UpgradeProbabilities;                                     // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAISpawnGroupUpgradeProbabilities");
		return ptr;
	}

};


// Class FortniteGame.FortAITask_AdjustToSlot
// 0x0030 (0x00A0 - 0x0070)
class UFortAITask_AdjustToSlot : public UAITask
{
public:
	struct FVector                                     SlotLocation;                                             // 0x0070(0x000C) (IsPlainOldData)
	struct FVector                                     SlotDirection;                                            // 0x007C(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0088(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_AdjustToSlot");
		return ptr;
	}

};


// Class FortniteGame.FortAITask_ExecuteAbility
// 0x0048 (0x00B8 - 0x0070)
class UFortAITask_ExecuteAbility : public UAITask
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0070(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_ExecuteAbility");
		return ptr;
	}


	void OnInjectedHitResultDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
};


// Class FortniteGame.FortAITask_FuzzyQueue
// 0x0020 (0x0130 - 0x0110)
class UFortAITask_FuzzyQueue : public UAITask_MoveTo
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0110(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_FuzzyQueue");
		return ptr;
	}

};


// Class FortniteGame.FortAITask_NavmeshWait
// 0x0010 (0x0080 - 0x0070)
class UFortAITask_NavmeshWait : public UAITask
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0070(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_NavmeshWait");
		return ptr;
	}

};


// Class FortniteGame.FortAITask_RotateToFace
// 0x0020 (0x0090 - 0x0070)
class UFortAITask_RotateToFace : public UAITask
{
public:
	class AActor*                                      FocusTarget;                                              // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     FocalPoint;                                               // 0x0078(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0084(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_RotateToFace");
		return ptr;
	}

};


// Class FortniteGame.FortAITask_StepAside
// 0x0030 (0x0178 - 0x0148)
class UFortAITask_StepAside : public UFortAITask_Move
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0148(0x0010) MISSED OFFSET
	class AActor*                                      GoalActor;                                                // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0160(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITask_StepAside");
		return ptr;
	}

};


// Class FortniteGame.FortAITetheringBoxBoundsInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAITetheringBoxBoundsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAITetheringBoxBoundsInterface");
		return ptr;
	}


	float GetTetheredBoxBoundsWidth();
	float GetTetheredBoxBoundsHeight();
	float GetTetheredBoxBoundsEQSSpaceBetween();
	float GetTetheredBoxBoundsEQSGridSize();
	struct FVector GetTetheredBoxBoundsCenter();
};


// Class FortniteGame.FortAlterableItem
// 0x0020 (0x0100 - 0x00E0)
class UFortAlterableItem : public UFortAccountItem
{
public:
	TArray<struct FString>                             Alterations;                                              // 0x00E0(0x0010) (ZeroConstructor)
	TArray<class UFortAlterationItemDefinition*>       AlterationInstances;                                      // 0x00F0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlterableItem");
		return ptr;
	}

};


// Class FortniteGame.FortAlterableItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortAlterableItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlterableItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAlterationItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortAlterationItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlterationItem");
		return ptr;
	}


	class UFortAlterationItemDefinition* GetAlterationDefinitionBP();
};


// Class FortniteGame.FortAlterationItemDefinition
// 0x0B80 (0x0F10 - 0x0390)
class UFortAlterationItemDefinition : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<EFortAlteration>                       AlterationType;                                           // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	struct FFortCosmeticModification                   DefaultCosmetic;                                          // 0x0398(0x0B20) (Edit)
	TArray<struct FFortConditionalCosmeticModification> ConditionalCosmetics;                                     // 0x0EB8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFortConditionalIncludeTags>         AdditionalGameplayTags;                                   // 0x0EC8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0ED8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortAlterationItemDefinition.AlterationAbilitySet
	TArray<struct FFortItemQuantityPair>               AdditionalRespecCosts;                                    // 0x0F00(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlterationItemDefinition");
		return ptr;
	}


	TEnumAsByte<EFortAlteration> GetAlterationType();
};


// Class FortniteGame.FortAlterationFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortAlterationFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlterationFunctionLibrary");
		return ptr;
	}


	class UParticleSystem* STATIC_GetAlterationImpactPhysicalSurfaceEffects(TEnumAsByte<EPhysicalSurface> HitSurface, const struct FFortCosmeticModification& CosmeticMod);
};


// Class FortniteGame.FortAmbientOneShotInstance
// 0x0038 (0x0060 - 0x0028)
class UFortAmbientOneShotInstance : public UObject
{
public:
	class UFortAmbientAudioController*                 Controller;                                               // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FFortPOIAmbientAudioOneShot                 Data;                                                     // 0x0030(0x0028)
	struct FTimerHandle                                RetriggerTimer;                                           // 0x0058(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAmbientOneShotInstance");
		return ptr;
	}


	void Reset();
	void OnTrigger();
};


// Class FortniteGame.FortAmbientAudioController
// 0x0098 (0x0188 - 0x00F0)
class UFortAmbientAudioController : public UActorComponent
{
public:
	class UFortPOIAmbientAudioBank*                    DefaultAudioBank;                                         // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTag                                RequiredTagSubstr;                                        // 0x00F8(0x0008) (Edit, DisableEditOnInstance)
	class AFortPlayerController*                       PlayerController;                                         // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAudioComponent*                             AudioComp;                                                // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             FadingAudioComp;                                          // 0x0110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortPOIAmbientAudioBank*                    CurrentAudioBank;                                         // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortAmbientOneShotInstance*>         CurrentOneShots;                                          // 0x0120(0x0010) (ZeroConstructor)
	class AFortTimeOfDayManager*                       TimeOfDayManager;                                         // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData)
	TMap<struct FGameplayTag, class AFortPoiVolume*>   VolumeMap;                                                // 0x0138(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAmbientAudioController");
		return ptr;
	}


	void SetAudioBank(class UFortPOIAmbientAudioBank* NewBank);
	void OnLocationTagChanged(const struct FGameplayTag& Tag, int Num);
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	void InitializePlayerState();
	class UFortPOIAmbientAudioBank* GetAudioBank();
	void Crossfade(struct FFortPOIAmbientAudioLoop* NewLoop);
};


// Class FortniteGame.FortAmmoItemDefinition
// 0x03C0 (0x0C90 - 0x08D0)
class UFortAmmoItemDefinition : public UFortWorldItemDefinition
{
public:
	struct FSlateBrush                                 ClipIconBrush;                                            // 0x08D0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bIsConsumed;                                              // 0x0958(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggersFeedbackLines;                                   // 0x0959(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x095A(0x0002) MISSED OFFSET
	float                                              RegenCooldown;                                            // 0x095C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FFortMultiSizeBrush                         AmmoIconBrush;                                            // 0x0960(0x0330) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAmmoItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAnalyticsConfig
// 0x0030 (0x0058 - 0x0028)
class UFortAnalyticsConfig : public UObject
{
public:
	TArray<struct FString>                             AltDomains;                                               // 0x0028(0x0010) (ZeroConstructor, Config)
	struct FString                                     UrlEndpoint;                                              // 0x0038(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnalyticsConfig");
		return ptr;
	}

};


// Class FortniteGame.FortAnalyticsData
// 0x0038 (0x0068 - 0x0030)
class UFortAnalyticsData : public UDataAsset
{
public:
	struct FGameplayTagContainer                       DownedOrFinishTagWhitelist;                               // 0x0030(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                BanhammerTag;                                             // 0x0050(0x0008) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                RemovedFromGameTag;                                       // 0x0058(0x0008) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                LoggedOutTag;                                             // 0x0060(0x0008) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnalyticsData");
		return ptr;
	}

};


// Class FortniteGame.FortAnalyticsItemExclusions
// 0x00C0 (0x00F0 - 0x0030)
class UFortAnalyticsItemExclusions : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortAnalyticsItemExclusions.ExcludedRarities
	unsigned char                                      UnknownData01[0x50];                                      // 0x0080(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortAnalyticsItemExclusions.ExcludedItemTypes
	struct FGameplayTagContainer                       ExcludedItemTags;                                         // 0x00D0(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnalyticsItemExclusions");
		return ptr;
	}

};


// Class FortniteGame.FortAnimInputBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortAnimInputBlueprintLibrary : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimInputBlueprintLibrary");
		return ptr;
	}


	void STATIC_UpdateFortAnimInput_SpeedWarping(const struct FFortAnimInput_SpeedWarping& AnimInput, class UAnimInstance* InAnimInstance, float InSpeedScale);
};


// Class FortniteGame.FortAnimNotify_GenericNotifyGameplayAbility
// 0x0008 (0x0040 - 0x0038)
class UFortAnimNotify_GenericNotifyGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                                NotifyTag;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_GenericNotifyGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_On
// 0x0000 (0x0038 - 0x0038)
class UFortAnimNotify_MeleeAnimTrails_On : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_MeleeAnimTrails_On");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_MeleeAnimTrails_Off
// 0x0000 (0x0038 - 0x0038)
class UFortAnimNotify_MeleeAnimTrails_Off : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_MeleeAnimTrails_Off");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_MeleeComboBlocked
// 0x0000 (0x0038 - 0x0038)
class UFortAnimNotify_MeleeComboBlocked : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_MeleeComboBlocked");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayConsumeSound
// 0x0000 (0x0058 - 0x0058)
class UFortAnimNotify_PlayConsumeSound : public UAnimNotify_PlaySound
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayConsumeSound");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayEmojiItem
// 0x0000 (0x0038 - 0x0038)
class UFortAnimNotify_PlayEmojiItem : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayEmojiItem");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayEmoteMusic
// 0x0008 (0x0060 - 0x0058)
class UFortAnimNotify_PlayEmoteMusic : public UAnimNotify_PlaySound
{
public:
	class USoundBase*                                  Sound3P;                                                  // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayEmoteMusic");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayPetSound
// 0x0000 (0x0058 - 0x0058)
class UFortAnimNotify_PlayPetSound : public UAnimNotify_PlaySound
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayPetSound");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayReloadFX
// 0x0008 (0x0040 - 0x0038)
class UFortAnimNotify_PlayReloadFX : public UAnimNotify
{
public:
	TEnumAsByte<EFortReloadFXState>                    ReloadStage;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayReloadFX");
		return ptr;
	}


	void SetReloadStage(TEnumAsByte<EFortReloadFXState> InReloadStage);
};


// Class FortniteGame.FortAnimNotify_PlaySoundLocalOnly
// 0x0000 (0x0058 - 0x0058)
class UFortAnimNotify_PlaySoundLocalOnly : public UAnimNotify_PlaySound
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlaySoundLocalOnly");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_PlayWindParticleEffect
// 0x0000 (0x0090 - 0x0090)
class UFortAnimNotify_PlayWindParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_PlayWindParticleEffect");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotify_TriggerGameplayAbility
// 0x0018 (0x0050 - 0x0038)
class UFortAnimNotify_TriggerGameplayAbility : public UAnimNotify
{
public:
	struct FGameplayTag                                ApplicationTag;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly)
	struct FName                                       MontageSectionIfBlocked;                                  // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSetNextSectionIfBlocked;                                 // 0x0048(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotify_TriggerGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow
// 0x0048 (0x0078 - 0x0030)
class UFortAnimNotifyState_AbilityDecisionWindow : public UAnimNotifyState
{
public:
	struct FFortMontageInputAction                     PrimaryInput;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortMontageInputAction                     SecondaryInput;                                           // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       DefaultNextSection;                                       // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PrimaryInputStrikeAngle;                                  // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SecondaryInputStrikeAngle;                                // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ComboCounter;                                             // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_AbilityDecisionWindow");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_AllowBlockedActions
// 0x0000 (0x0030 - 0x0030)
class UFortAnimNotifyState_AllowBlockedActions : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_AllowBlockedActions");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_ConsumeSound
// 0x0008 (0x0038 - 0x0030)
class UFortAnimNotifyState_ConsumeSound : public UAnimNotifyState
{
public:
	class USoundBase*                                  ConsumeUseSound;                                          // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_ConsumeSound");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_EmoteSound
// 0x0010 (0x0040 - 0x0030)
class UFortAnimNotifyState_EmoteSound : public UAnimNotifyState
{
public:
	class USoundBase*                                  EmoteSound1P;                                             // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  EmoteSound3P;                                             // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_EmoteSound");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt
// 0x0008 (0x0038 - 0x0030)
class UFortAnimNotifyState_RootMotionInterrupt : public UAnimNotifyState
{
public:
	TEnumAsByte<EMontageInterrupt>                     MontageInterrupt;                                         // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	unsigned char                                      bAllowMoveInput : 1;                                      // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_RootMotionInterrupt");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_SpawnProp
// 0x0070 (0x00A0 - 0x0030)
class UFortAnimNotifyState_SpawnProp : public UAnimNotifyState
{
public:
	struct FName                                       SocketName;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0038(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x0050(0x000C) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UClass*                                      ActorProp;                                                // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               SkeletalMeshProp;                                         // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             SkeletalMeshPropAnimation;                                // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bInheritScale;                                            // 0x0078(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsoluteScale;                                           // 0x0079(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPropAnimLooping;                                         // 0x007A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x007B(0x0005) MISSED OFFSET
	class UStaticMesh*                                 StaticMeshProp;                                           // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PropId;                                                   // 0x0088(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x008C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_SpawnProp");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_StopMeleeAnimTrailsOnEnd
// 0x0000 (0x0030 - 0x0030)
class UFortAnimNotifyState_StopMeleeAnimTrailsOnEnd : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_StopMeleeAnimTrailsOnEnd");
		return ptr;
	}

};


// Class FortniteGame.FortAnimNotifyState_ToySpawn
// 0x00A0 (0x00D0 - 0x0030)
class UFortAnimNotifyState_ToySpawn : public UAnimNotifyState
{
public:
	struct FName                                       SocketName;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0038(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0044(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                PropId;                                                   // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRepositionOnSpawn;                                       // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0055(0x000B) MISSED OFFSET
	struct FTransform                                  ComponentSpaceSpawnPoint;                                 // 0x0060(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bRepositionOnLaunch;                                      // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0091(0x000F) MISSED OFFSET
	struct FTransform                                  ComponentSpaceLaunchPoint;                                // 0x00A0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimNotifyState_ToySpawn");
		return ptr;
	}

};


// Class FortniteGame.FortAnimSet
// 0x00B8 (0x00E8 - 0x0030)
class UFortAnimSet : public UDataAsset
{
public:
	struct FDirectoryPath                              SourceRootPath;                                           // 0x0030(0x0010) (Edit)
	struct FDirectoryPath                              TargetRootPath;                                           // 0x0040(0x0010) (Edit)
	TArray<struct FFortAnimSetRandomAnimation>         RandomAnimations;                                         // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFortAnimSetSoundCue>                RandomSounds;                                             // 0x0060(0x0010) (Edit, ZeroConstructor)
	class UAnimSequenceBase*                           FallbackSequence;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<struct FName, class UAnimationAsset*>         AssetRemapping;                                           // 0x0078(0x0050) (Edit, ZeroConstructor, EditConst)
	TArray<struct FName>                               UniqueInSourceAssets;                                     // 0x00C8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FName>                               UniqueInTargetAssets;                                     // 0x00D8(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimSet");
		return ptr;
	}


	void UpdateReferencesInRandomSection();
	void UpdateAssets();
};


// Class FortniteGame.FortAnimationSharingStateProcessor
// 0x0000 (0x0050 - 0x0050)
class UFortAnimationSharingStateProcessor : public UAnimationSharingStateProcessor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAnimationSharingStateProcessor");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleAnimInstance
// 0x00A0 (0x04B0 - 0x0410)
class UFortVehicleAnimInstance : public UFortAnimInstance
{
public:
	class AFortAthenaSKVehicle*                        Vehicle;                                                  // 0x0410(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AxlePositionF;                                            // 0x0418(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     AxlePositionB;                                            // 0x0424(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    AxleRotationF;                                            // 0x0430(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    AxleRotationB;                                            // 0x043C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelSpinFR;                                              // 0x0448(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelSpinFL;                                              // 0x0454(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelSpinBR;                                              // 0x0460(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelSpinBL;                                              // 0x046C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    DriveShaftSpin;                                           // 0x0478(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelRotationFR;                                          // 0x0484(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WheelRotationFL;                                          // 0x0490(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    SteeringRotation;                                         // 0x049C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortAntelopeVehicleAnimInstance
// 0x0020 (0x04D0 - 0x04B0)
class UFortAntelopeVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	float                                              VehicleSpeed;                                             // 0x04B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsNearlyZero;                                // 0x04B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsGreaterThanOne;                            // 0x04B5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReverseSpeedIsGreaterThanOne;                            // 0x04B6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSpeedIsGreaterThanFiveAndPlayerHitSpace;                 // 0x04B7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBraking;                                               // 0x04B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBoosting;                                              // 0x04B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayerHitSpaceBar;                                       // 0x04BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x04BB(0x0001) MISSED OFFSET
	float                                              ChargingValue;                                            // 0x04BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ChargingMax;                                              // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ChargingMin;                                              // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ChargingInterpSpeed;                                      // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAntelopeVehicleAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleConfigs
// 0x0288 (0x02B0 - 0x0028)
class UFortVehicleConfigs : public UObject
{
public:
	float                                              WaterTestFrequency;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinLinearSpeedRunningVarianceSq;                          // 0x002C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinAngularSpeedRunningVarianceSq;                         // 0x0030(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleSleepCounter;                                      // 0x0034(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleErrorPerDistanceCentimeters;                       // 0x0038(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleErrorPerDistanceCentimetersPerSecond;              // 0x003C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleErrorPerAngleDegrees;                              // 0x0040(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleErrorPerAngleDegreesPerSecond;                     // 0x0044(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleErrorPerUpdate;                                    // 0x0048(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMinSecondsBetweenUpdates;                          // 0x004C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleMinFOV;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMaxFOV;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMinFOVSpeed;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMaxFOVSpeed;                                       // 0x005C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleFOVInterpSpeed;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleInvalidErrorPerSecondTolerance;                    // 0x0064(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleInvalidErrorMaxSeconds;                            // 0x0068(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleInvalidErrorMinSeconds;                            // 0x006C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              InteractDistanceScalar;                                   // 0x0070(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              InPlaceRotationStrength;                                  // 0x0074(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              WheelRadius;                                              // 0x0078(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              IdleBrakeForce;                                           // 0x007C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              TooFastBrakeForce;                                        // 0x0080(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BrakeForce;                                               // 0x0084(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoBrakeSpeed;                                           // 0x0088(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              WaterDragCoefficient;                                     // 0x008C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              LateralFriction;                                          // 0x0090(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleCameraMaxSteerAlpha;                               // 0x0094(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxForwardSpeedToSwapReverseControls;                     // 0x0098(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinSpeedSteeringAngle;                                    // 0x009C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedSteeringAngle;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRestSpeed;                                             // 0x00A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedToDamage;                                         // 0x00A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedToDamage;                                         // 0x00AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedDamage;                                           // 0x00B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedDamage;                                           // 0x00B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpeedDamageNoPlayer;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedDamageNoPlayer;                                   // 0x00BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinFallDamageHeight;                                      // 0x00C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFallDamageHeight;                                      // 0x00C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinFallDamage;                                            // 0x00C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFallDamage;                                            // 0x00CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerFallDamageMultiplier;                               // 0x00D0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinImpactMagnitudeToDealDamageKmH;                        // 0x00D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxImpactDamage;                                          // 0x00D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactDamagePerImpulse;                                   // 0x00DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactReductionPerTransverseVelocity;                     // 0x00E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxImpactDamageReduction;                                 // 0x00E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerImpactDamageMultiplier;                             // 0x00E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleEjectCooldown;                                     // 0x00EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleFlipCooldown;                                      // 0x00F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraSpaceForwardDistanceOverride;                       // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              PlayerToSocketSweepRadius;                                // 0x00F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpringHitNormal;                                       // 0x00FC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleCameraGraceZone;                                   // 0x0100(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLeftAnalogSteeringDeadZone;                        // 0x0104(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleCameraLeftAnalogMultiplier;                        // 0x0108(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleGravity;                                           // 0x010C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerGravityMultiplier;                                  // 0x0110(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DriverGravityMultiplier;                                  // 0x0114(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              InWaterTopSpeedMutliplier;                                // 0x0118(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleInPlaceThreshold;                                  // 0x011C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleWeightShiftPitchStrength;                          // 0x0120(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleWeightShiftRollStrength;                           // 0x0124(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleWeightShiftYawStrength;                            // 0x0128(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              JumpRateMultiplier;                                       // 0x012C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleDebugStrafeMultiplier;                             // 0x0130(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              GravityVelocitySteerForwardThreshold;                     // 0x0134(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              GravityVelocitySteerErrorThreshold;                       // 0x0138(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              GravitySteerMultiplier;                                   // 0x013C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              InWaterPushMultiplier;                                    // 0x0140(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinWheelRotationSpeed;                                    // 0x0144(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              WheelRotationAcceleration;                                // 0x0148(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              WheelRotationDampingPerSecond;                            // 0x014C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              HonkTimeMax;                                              // 0x0150(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HonkCooldownMax;                                          // 0x0154(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HonkTimePerHonk;                                          // 0x0158(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleLookAheadLength;                                   // 0x015C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadInAirLength;                              // 0x0160(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadMinSpeed;                                 // 0x0164(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadMinNormal;                                // 0x0168(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadStiff;                                    // 0x016C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadDamp;                                     // 0x0170(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadInAirStiff;                               // 0x0174(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadInAirDamp;                                // 0x0178(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadMaxAccel;                                 // 0x017C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadMaxAccelInAir;                            // 0x0180(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAirControlStiff;                                   // 0x0184(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAirControlDamp;                                    // 0x0188(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAirYawStrength;                                    // 0x018C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAirPitchStrength;                                  // 0x0190(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DragCoefficient;                                          // 0x0194(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDragSpeed;                                             // 0x0198(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinLinearSpeedToWake;                                     // 0x019C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinAngularSpeedToWake;                                    // 0x01A0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDriveInclineAngle;                                     // 0x01A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAntigravityInclineAngle;                               // 0x01A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDriveTiltAngle;                                        // 0x01AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              AxleOffsetZ;                                              // 0x01B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringStiffMultiplier;                                    // 0x01B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringDampMultiplier;                                     // 0x01B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringMaxAccelMultiplier;                                 // 0x01BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringLengthMultiplier;                                   // 0x01C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              HasGroundSweepLengthMultiplier;                           // 0x01C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              AngularDragCoefficient;                                   // 0x01C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchAngularDrag;                                         // 0x01CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              RollAngularDrag;                                          // 0x01D0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAnalogReverse;                                     // 0x01D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinFallDamageNormalScale;                                 // 0x01D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleLookAheadMinSpeedInAir;                            // 0x01DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAutoAirPitchStrength;                              // 0x01E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAutoAirYawStrength;                                // 0x01E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleAutoAirRollStrength;                               // 0x01E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMinVelAlongContactNormal;                          // 0x01EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleMaxVelAlongContactNormal;                          // 0x01F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSameDirCollision;                                      // 0x01F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinCollisionSpeedToCorrect;                               // 0x01F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinCollisionBoostNormal;                                  // 0x01FC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CollisionSpeedBoostAlpha;                                 // 0x0200(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CancelIgnoreForwardThreshold;                             // 0x0204(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DriverExitLaunchScalar;                                   // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              DriverExitLaunchUpScalar;                                 // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              DriverExitInAirLaunchScalar;                              // 0x0210(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              DriverExitInAirLaunchUpScalar;                            // 0x0214(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerExitLaunchScalar;                                // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerExitLaunchUpScalar;                              // 0x021C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerExitInAirLaunchScalar;                           // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerExitInAirLaunchUpScalar;                         // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              AngularDragCoefficientRampedUp;                           // 0x0228(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PitchAngularDragRampedUp;                                 // 0x022C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleAirYawStrengthRampedUp;                            // 0x0230(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleAirPitchStrengthRampedUp;                          // 0x0234(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              SteerBrakeMultiplier;                                     // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WheelRadiusF;                                             // 0x023C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              WheelRadiusB;                                             // 0x0240(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PitchLeanStrength;                                        // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxForwardVelAccelLean;                                   // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxReverseVelAccelLean;                                   // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxSteerForAccelLean;                                     // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinYawSpeedForLean;                                       // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              YawLeanStrength;                                          // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              AccelerationPitchCooldown;                                // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              YawLeanCooldown;                                          // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxAccelPitch;                                            // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxYawLean;                                               // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              ContactModificationOffset;                                // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFloorFriction;                                     // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleSideScrapeFriction;                                // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleSideScrapeMaxCosAngle;                             // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              GroundCheckSweepRadius;                                   // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              SMSleepCounter;                                           // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              CorrectOrientationTimeout;                                // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              NudgeOrientationTimeout;                                  // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              NudgeDistance;                                            // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     CorrectOrientationCenterOfMassOffset;                     // 0x0290(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Config, IsPlainOldData)
	float                                              CorrectOrientationLinearCoefficient;                      // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              CorrectOrientationAngularCoefficient;                     // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bVehicleCameraSteering;                                   // 0x02A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVehicleScreenSpaceSteering;                              // 0x02A5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVehicleCameraLeftAnalogSteering;                         // 0x02A6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseKinematicReplicationWhenNotRendered;                  // 0x02A7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanDoTricks;                                             // 0x02A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortSKMotorVehicleConfigs
// 0x0028 (0x02D8 - 0x02B0)
class UFortSKMotorVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                              WheelRotationRange;                                       // 0x02B0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontLowLateralFrictionMultiplier;                 // 0x02B4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearLowLateralFrictionMultiplier;                  // 0x02B8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontHighLateralFrictionMultiplier;                // 0x02BC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearHighLateralFrictionMultiplier;                 // 0x02C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LowToHighFrictionDuration;                                // 0x02C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UphillIncline;                                            // 0x02C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardFrontFriction;                            // 0x02CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardRearFriction;                             // 0x02D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardMaxSpeed;                                 // 0x02D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSKMotorVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortAntelopeVehicleConfigs
// 0x0110 (0x03E8 - 0x02D8)
class UFortAntelopeVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                              BounceCrouchTime;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceCrouchTimeDeadzone;                                 // 0x02DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceRecoilTime;                                         // 0x02E0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceForcePerMass;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMagnitude;                                   // 0x02E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMinMagnitude;                                // 0x02EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanLeftRightInterpolationPerSecond;             // 0x02F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanUpInterpolationPerSecond;                    // 0x02F4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDownInterpolationPerSecond;                  // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanResetInterpolationPerSecond;                 // 0x02FC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDeadzone;                                    // 0x0300(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NaturalSlideMinAngle;                                     // 0x0304(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostAccumulationRate;                                    // 0x0308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostExpenseRate;                                         // 0x030C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostPassiveExpenseRate;                                  // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedMultiplier;                                  // 0x0314(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedInAirMultiplier;                             // 0x0318(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplier;                                  // 0x031C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCooldown;                                            // 0x0320(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplierRampTime;                          // 0x0324(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSlowExtraStrength;                                   // 0x0328(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedForceMultiplier;                             // 0x032C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleBoostFrontFrictionMultiplier;                      // 0x0330(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleBoostRearFrictionMultiplier;                       // 0x0334(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostMinPushForce;                                        // 0x0338(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSmashForgivenessDuration;                            // 0x033C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSmashForgivenessImpulse;                             // 0x0340(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMin;                                  // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMax;                                  // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SpringFudgeFactor;                                        // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeNormalizedSpeed;                               // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeSpeedCurvePow;                                 // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostingCameraShakeAmount;                                // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraShakeFrequency;                                // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMin;                             // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMax;                             // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMin;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMax;                                  // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraShakeMultiplier;                           // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeYawFrequencyMultiplier;                        // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                WheelSlideBoostColorWhenNotPowerSliding;                  // 0x0378(0x0010) (Edit, BlueprintVisible, Config, IsPlainOldData)
	float                                              TreadWidth;                                               // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              RumbleMultiplier;                                         // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SparksRumbleMultiplier;                                   // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraOffset;                                        // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSCameraDistance;                                        // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraOffset;                                    // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSInterpSpeed;                                           // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionTraceAheadAmount;                              // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionImpulseAmount;                                 // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     DestructionTraceHalfSize;                                 // 0x03AC(0x000C) (Edit, BlueprintVisible, Config, IsPlainOldData)
	bool                                               bCanDestroyProps;                                         // 0x03B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03B9(0x0003) MISSED OFFSET
	float                                              HitRequiredMinSpeed;                                      // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyProp;                                   // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyPropWhileBoosting;                      // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PawnLaunchVerticalVelocityScale;                          // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PawnLaunchForwardVelocityScale;                           // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PawnLaunchMaxSpeed;                                       // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostDestructionAngle;                                    // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              UpNormalMinProtected;                                     // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              UpForwardMinProtected;                                    // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinBoostTime;                                             // 0x03E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TractionVelocityDelta;                                    // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAntelopeVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayEffectDeliveryActor
// 0x0240 (0x0568 - 0x0328)
class AFortGameplayEffectDeliveryActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0328(0x0020) MISSED OFFSET
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnTouch;                        // 0x0348(0x0080) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bKillOnExplode;                                           // 0x03C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSetHiddenOnKill;                                         // 0x03C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKillOnMaxTargetsTouched;                                 // 0x03CA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x03CB(0x0005) MISSED OFFSET
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnExplode;                      // 0x03D0(0x0080) (BlueprintVisible, BlueprintReadOnly)
	float                                              LifespanAfterKill;                                        // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TouchingActorsEffectApplicationUpdateTime;                // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsBeingKilled : 1;                                       // 0x0458(0x0001) (Net)
	unsigned char                                      bHasExploded : 1;                                         // 0x0458(0x0001) (Net)
	unsigned char                                      UnknownData02 : 1;                                        // 0x0458(0x0001)
	unsigned char                                      bIgnoreInstigatorCollision : 1;                           // 0x0458(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bAddHitResultToTouchApplication : 1;                      // 0x0458(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UPrimitiveComponent*                         CollisionComponent;                                       // 0x0460(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FFortSpawnContext                           SpawnContext;                                             // 0x0468(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	unsigned char                                      UnknownData04[0xC0];                                      // 0x0490(0x00C0) MISSED OFFSET
	unsigned char                                      bDoExplosionReentrancyGuard : 1;                          // 0x0550(0x0001) (Transient)
	unsigned char                                      UnknownData05[0x17];                                      // 0x0551(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectDeliveryActor");
		return ptr;
	}


	void SetIgnoreInstigatorCollision(bool bShouldIgnore);
	void SetCollisionComponent(class UPrimitiveComponent* NewCollisionComponent);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap);
	void OnRep_IsBeingKilled();
	void OnRep_HasExplodedReplay();
	void OnExploded(TArray<class AActor*> HitActors, TArray<struct FHitResult> HitResults);
	void OnComponentTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnComponentOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void KillTimerExpired();
	void Kill();
	bool IsBeingKilled();
	class UPrimitiveComponent* GetCollisionComponent();
	void DoExplosionAtLocation(const struct FVector& ExplosionLocation);
	void DoExplosion();
	void BroadcastExplosion(TArray<class AActor*> HitActors, TArray<struct FHitResult> HitResults);
};


// Class FortniteGame.FortAreaOfEffectCloud
// 0x0000 (0x0568 - 0x0568)
class AFortAreaOfEffectCloud : public AFortGameplayEffectDeliveryActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAreaOfEffectCloud");
		return ptr;
	}

};


// Class FortniteGame.FortArenaCamera
// 0x0020 (0x08A0 - 0x0880)
class AFortArenaCamera : public ACineCameraActor
{
public:
	unsigned char                                      bEnabled : 1;                                             // 0x0880(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0881(0x0007) MISSED OFFSET
	struct FGameplayTag                                CameraZone;                                               // 0x0888(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      CameraComponentType;                                      // 0x0890(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0898(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortArenaCamera");
		return ptr;
	}

};


// Class FortniteGame.FortHLODStreamingData
// 0x0050 (0x0078 - 0x0028)
class UFortHLODStreamingData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortHLODStreamingData.MediumLevelHLODPackageNames

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHLODStreamingData");
		return ptr;
	}

};


// Class FortniteGame.FortAssetManager
// 0x0220 (0x05F8 - 0x03D8)
class UFortAssetManager : public UAssetManager
{
public:
	TMap<class UObject*, struct FName>                 GCPreventionPool;                                         // 0x03D8(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0428(0x0010) MISSED OFFSET
	TArray<struct FName>                               DefaultBundleState;                                       // 0x0438(0x0010) (ZeroConstructor)
	TArray<struct FName>                               PlatformBundleState;                                      // 0x0448(0x0010) (ZeroConstructor)
	class UFortGameData*                               GameData;                                                 // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     GameDataName;                                             // 0x0460(0x0010) (ZeroConstructor, Config)
	struct FString                                     MobileGameDataName;                                       // 0x0470(0x0010) (ZeroConstructor, Config)
	class UAthenaGameData*                             AthenaGameData;                                           // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortChunkDownloadManager*                   ChunkDownloadManager;                                     // 0x0488(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     AthenaGameDataName;                                       // 0x0490(0x0010) (ZeroConstructor, Config)
	struct FString                                     FastCookTheaterPath;                                      // 0x04A0(0x0010) (ZeroConstructor, Config)
	struct FString                                     PerfMemTheaterPath;                                       // 0x04B0(0x0010) (ZeroConstructor, Config)
	struct FString                                     BROnlyTheaterPath;                                        // 0x04C0(0x0010) (ZeroConstructor, Config)
	struct FString                                     ActiveTheaterListPath;                                    // 0x04D0(0x0010) (ZeroConstructor, Config)
	TArray<struct FName>                               BROnlyLootPackagesExclusionList;                          // 0x04E0(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x108];                                     // 0x04F0(0x0108) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAssetManager");
		return ptr;
	}

};


// Class FortniteGame.FortAsyncAction_AbandonSession
// 0x0030 (0x0060 - 0x0030)
class UFortAsyncAction_AbandonSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPlayerController*                       PlayerController;                                         // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_AbandonSession");
		return ptr;
	}


	class UFortAsyncAction_AbandonSession* STATIC_AbandonSession(class AFortPlayerController* PlayerController);
};


// Class FortniteGame.FortAsyncAction_CosmeticAdaptiveStatWatcher
// 0x0030 (0x0060 - 0x0030)
class UFortAsyncAction_CosmeticAdaptiveStatWatcher : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnStatChanged;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPlayerPawn*                             MyPawn;                                                   // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0048(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_CosmeticAdaptiveStatWatcher");
		return ptr;
	}


	class UFortAsyncAction_CosmeticAdaptiveStatWatcher* STATIC_WatchCosmeticStat(class AFortPlayerPawn* Pawn, const struct FFortStatManagerTag& StatTag, int DefaultValue);
	void OnWatchedStatChanged__DelegateSignature(const struct FName& StatName, int StatValue);
};


// Class FortniteGame.FortAsyncAction_EnsureClientQuestLogin
// 0x0028 (0x0058 - 0x0030)
class UFortAsyncAction_EnsureClientQuestLogin : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortQuestManager*                           QuestManager;                                             // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_EnsureClientQuestLogin");
		return ptr;
	}


	class UFortAsyncAction_EnsureClientQuestLogin* STATIC_SendEnsureClientQuestLogin(class UFortQuestManager* QuestManager);
};


// Class FortniteGame.FortAsyncAction_MakeTieredWaveEncounterSettings
// 0x0228 (0x0258 - 0x0030)
class UFortAsyncAction_MakeTieredWaveEncounterSettings : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FTieredWaveSetData                          WaveData;                                                 // 0x0040(0x01B0) (Transient)
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x01F0(0x0058) (Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0248(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_MakeTieredWaveEncounterSettings");
		return ptr;
	}


	class UFortAsyncAction_MakeTieredWaveEncounterSettings* STATIC_CreateAsyncAction_MakeTieredWaveEncounterSettings(const struct FTieredWaveSetData& WaveData, const struct FFortEncounterSettings& InEncounterSettings);
};


// Class FortniteGame.FortAsyncAction_OpenChoiceUI
// 0x0060 (0x0090 - 0x0030)
class UFortAsyncAction_OpenChoiceUI : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPlayerController*                       PlayerController;                                         // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FChoiceData                                 ChoiceItems;                                              // 0x0058(0x0030) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0088(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_OpenChoiceUI");
		return ptr;
	}


	class UFortAsyncAction_OpenChoiceUI* STATIC_OpenChoiceUI(class AFortPlayerController* PlayerController, const struct FChoiceData& ChoiceItems);
};


// Class FortniteGame.FortAsyncAction_PlayConversation
// 0x0058 (0x0088 - 0x0030)
class UFortAsyncAction_PlayConversation : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCanceled;                                               // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPawn*                                   Pawn;                                                     // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortConversation*                           ConversationToPlay;                                       // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0070(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_PlayConversation");
		return ptr;
	}


	class UFortAsyncAction_PlayConversation* STATIC_PlayConversation(class AFortPawn* Pawn, class UFortConversation* ConversationToPlay);
};


// Class FortniteGame.FortAsyncAction_RejoinSession
// 0x0030 (0x0060 - 0x0030)
class UFortAsyncAction_RejoinSession : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPlayerController*                       PlayerController;                                         // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_RejoinSession");
		return ptr;
	}


	class UFortAsyncAction_RejoinSession* STATIC_RejoinSession(class AFortPlayerController* PlayerController);
};


// Class FortniteGame.FortAsyncAction_SendQuestStatEvent
// 0x00B0 (0x00E0 - 0x0030)
class UFortAsyncAction_SendQuestStatEvent : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnSuccess;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIgnored;                                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailure;                                                // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortQuestManager*                           QuestManager;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FDataTableRowHandle                         ObjectiveStat;                                            // 0x0068(0x0010) (Transient)
	struct FGameplayTagContainer                       TargetTags;                                               // 0x0078(0x0020) (Transient)
	struct FGameplayTagContainer                       SourceTags;                                               // 0x0098(0x0020) (Transient)
	struct FGameplayTagContainer                       ContextTags;                                              // 0x00B8(0x0020) (Transient)
	int                                                Count;                                                    // 0x00D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_SendQuestStatEvent");
		return ptr;
	}


	class UFortAsyncAction_SendQuestStatEvent* STATIC_SendClientStatEventWithTags(class UFortQuestManager* QuestManager, const struct FGameplayTagContainer& TargetTags, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& ContextTags, int Count);
	class UFortAsyncAction_SendQuestStatEvent* STATIC_SendClientStatEvent(class UFortQuestManager* QuestManager, const struct FDataTableRowHandle& ObjectiveStat, int Count);
};


// Class FortniteGame.FortAsyncAction_WaitForClientAnnouncement
// 0x0038 (0x0068 - 0x0030)
class UFortAsyncAction_WaitForClientAnnouncement : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnAllClientsReady;                                        // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCanceled;                                               // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGuid                                       AnnouncementID;                                           // 0x0050(0x0010) (Transient, IsPlainOldData)
	struct FTimerHandle                                CheckAllPlayersReadyTimerHandle;                          // 0x0060(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_WaitForClientAnnouncement");
		return ptr;
	}


	class UFortAsyncAction_WaitForClientAnnouncement* STATIC_WaitForClientAnnouncement(class UObject* InWorldContextObject, class AFortClientAnnouncement* AnnouncementToWaitFor);
};


// Class FortniteGame.FortAthenaAircraft
// 0x0228 (0x0550 - 0x0328)
class AFortAthenaAircraft : public AActor
{
public:
	struct FLinearColor                                MinimapIconColorTeammate;                                 // 0x0328(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapIconColorEnemy;                                    // 0x0338(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0348(0x0030) MISSED OFFSET
	int                                                JumpFlashCount;                                           // 0x0378(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	class UClass*                                      CameraModeClass;                                          // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CameraInitialRotation;                                    // 0x0388(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     ExitLocation;                                             // 0x0394(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                NumSpawnSlots;                                            // 0x03A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpawnOffsetRadius;                                        // 0x03A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET
	struct FAircraftFlightInfo                         FlightInfo;                                               // 0x03B8(0x0028) (Net)
	float                                              FlightStartTime;                                          // 0x03E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              FlightEndTime;                                            // 0x03E4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              DropStartTime;                                            // 0x03E8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              DropEndTime;                                              // 0x03EC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedFlightTimestamp;                                // 0x03F0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              FlightElapsedTime;                                        // 0x03F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ClientFlightTimerDrift;                                   // 0x03F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	float                                              MiniMapIconScale;                                         // 0x0400(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0408(0x0088) (Edit, DisableEditOnInstance)
	float                                              MiniMapTeamIndicatorIconScale;                            // 0x0490(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapTeamIndicatorIconBrush;                            // 0x0498(0x0088) (Edit, DisableEditOnInstance)
	class UAthenaBattleBusItemDefinition*              DefaultBusSkin;                                           // 0x0520(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ABattleBusCosmeticInstanceBase*              SpawnedCosmeticActor;                                     // 0x0528(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAthenaBattleBusItemDefinition*              AsyncLoadingSkin;                                         // 0x0530(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0538(0x0010) MISSED OFFSET
	int                                                AircraftIndex;                                            // 0x0548(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x054C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaAircraft");
		return ptr;
	}


	void PlayEffectsForPlayerJumped();
	void OnRep_ReplicatedFlightTimestamp();
	void OnRep_JumpFlashCount();
	float GetDropStartTime();
	float GetDropEndTime();
	void FortAthenaAircraftDelegate__DelegateSignature(class AFortAthenaAircraft* FortAthenaAircraft);
};


// Class FortniteGame.FortAthenaVehicle
// 0x06E8 (0x0A70 - 0x0388)
class AFortAthenaVehicle : public APawn
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0388(0x0028) MISSED OFFSET
	TEnumAsByte<EPhysicalSurface>                      PrimarySurfaceType;                                       // 0x03B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortBaseWeaponDamage>                 WeaponResponseType;                                       // 0x03B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03B2(0x0006) MISSED OFFSET
	float                                              SeatSwitchCooldown;                                       // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDestroyBuildingSMActorOnForceExit;                       // 0x03BC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x13];                                      // 0x03BD(0x0013) MISSED OFFSET
	struct FGameplayTagContainer                       VehicleTags;                                              // 0x03D0(0x0020) (Edit, DisableEditOnInstance)
	TArray<struct FVehicleSpringInfo>                  Springs;                                                  // 0x03F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSMVehicleGear>                      Gears;                                                    // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSMVehicleGear>                      SprintGears;                                              // 0x0410(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSMVehicleGear>                      ReverseGears;                                             // 0x0420(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ForwardDrivingAntiGravityScaler;                          // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraSpaceForwardDistanceOffset;                         // 0x0434(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraAssistStrength;                                     // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeToAutoCamera;                                         // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraAssistBaseHeight;                                   // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraAssistUpHillScaler;                                 // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraAssistSteerScaler;                                  // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraAssistForwardScale;                                 // 0x044C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedForAutoCamera;                                    // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraFOVOffset;                                          // 0x0454(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0458(0x0004) MISSED OFFSET
	bool                                               bIgnoreAllFallingDamage;                                  // 0x045C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreNextFallingDamage;                                 // 0x045D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x045E(0x0002) MISSED OFFSET
	float                                              VehicleMinHorSpeedToDamage;                               // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleMaxHorSpeedToDamage;                               // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleMinHorSpeedDamage;                                 // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleMaxHorSpeedDamage;                                 // 0x046C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseResponseMultiplier;                                // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ImpulseResponseZBias;                                     // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsBraking;                                               // 0x0478(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	float                                              BrakeAboveTopSpeedDelta;                                  // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChangeDirBrakeDelta;                                      // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeToIdleBrake;                                          // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DragCoefficient;                                          // 0x0488(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxRearLateralFriction;                                   // 0x048C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxFrontLateralFriction;                                  // 0x0490(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraPitchConstraint;                                    // 0x0494(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CameraYawConstraint;                                      // 0x0498(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	struct FName                                       MainBodyCollision;                                        // 0x04A0(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     TestInitialLinearVelocity;                                // 0x04A8(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     TestInitialAngularVelocity;                               // 0x04B4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FHitResult                                  LookAheadHit;                                             // 0x04C0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UFortVehicleTrickSet*                        TrickSet;                                                 // 0x0548(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CachedSpeed;                                              // 0x0550(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	struct FName                                       PushForceSocket;                                          // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FrontWheelsSocket;                                        // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RearWheelSockets;                                         // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              LifespanAfterDeath;                                       // 0x0580(0x0004) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayedDying;                                             // 0x0584(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0585(0x0003) MISSED OFFSET
	float                                              LastDamagedTime;                                          // 0x0588(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	TArray<struct FSeatTransitionMontage>              SeatTransitions;                                          // 0x0590(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData10[0x80];                                      // 0x05A0(0x0080) MISSED OFFSET
	class UClass*                                      PlayerCollisionGameplayEffect;                            // 0x0620(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         OverlapComponent;                                         // 0x0628(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bHasDriver;                                               // 0x0630(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0631(0x0007) MISSED OFFSET
	struct FFortAthenaVehicleInputState                EmptyDriverInputState;                                    // 0x0638(0x0028) (Net)
	unsigned char                                      UnknownData12[0xE8];                                      // 0x0660(0x00E8) MISSED OFFSET
	TArray<struct FAthenaCarPlayerSlot>                PlayerSlots;                                              // 0x0748(0x0010) (Edit, Net, ZeroConstructor)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0758(0x0008) MISSED OFFSET
	float                                              GravityMultiplier;                                        // 0x0760(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	class UFortVehicleMovementSet*                     VehicleMovementSet;                                       // 0x0768(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FReplicatedAthenaVehicleAttributes          VehicleAttributes;                                        // 0x0770(0x0014) (Net, Transient)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0784(0x0004) MISSED OFFSET
	TArray<class ABuildingActor*>                      IgnoredBuildingActors;                                    // 0x0788(0x0010) (Net, ZeroConstructor, Transient)
	struct FVehicleTargetOrientation                   CorrectTargetOrientation;                                 // 0x0798(0x0024) (Net, Transient)
	unsigned char                                      UnknownData16[0x8];                                       // 0x07BC(0x0008) MISSED OFFSET
	struct FVector                                     SafeTeleportLocation;                                     // 0x07C4(0x000C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x07D0(0x0008) MISSED OFFSET
	class UClass*                                      CameraModeClass;                                          // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAthenaCarPlayerSlotUnreplicated>    PlayerSlotsUnreplicated;                                  // 0x07E0(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      DrivingAnimClass;                                         // 0x07F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAwaitingCorrectionFromServer;                            // 0x07F8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x167];                                     // 0x07F9(0x0167) MISSED OFFSET
	struct FFortAttributeInitializationKey             AttributeInitKey;                                         // 0x0960(0x0010) (Edit, DisableEditOnInstance)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0970(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFortHealthSet*                              HealthSet;                                                // 0x0978(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFortAthenaImpulseResponseSet*               ImpulseResponseSet;                                       // 0x0980(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFortDamageSet*                              DamageSet;                                                // 0x0988(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortHealthBarIndicator*                     HealthBarIndicator;                                       // 0x0990(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAthenaVehicleCosmeticItemDefinition*        ActiveCosmetic;                                           // 0x0998(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class USceneComponent*>                     SpawnedCosmeticComponents;                                // 0x09A0(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               bPendingDeath;                                            // 0x09B0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x87];                                      // 0x09B1(0x0087) MISSED OFFSET
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0A38(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FIgnoredPawn>                        PawnsToIgnoreForDamge;                                    // 0x0A58(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData20[0x8];                                       // 0x0A68(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaVehicle");
		return ptr;
	}


	void WakeUpOnGroundDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void WakeUp();
	void UpdateClientWithVehicleTestInput(const struct FVector& LinearVelocity, const struct FVector& AngularVelocity);
	void SetShootingCone(int SeatIdx, const struct FAthenaVehicleShootingCone& InCone);
	void SetImpulseResponseZBias(float ZBias);
	void SetImpulseResponseMultiplier(float Multiplier);
	void SetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	void SetIgnoreAllFallingDamage(bool InIgnoreAllFallingDamage);
	void SetDyingPhysics();
	void SetCurrentFocusedSocketLocation(int SeatIndex);
	void ServerUsingRiftPortal(class AFortAthenaRiftPortal* RiftPortal);
	void ServerUpdateStateSync(TArray<unsigned char> StateSyncData);
	void ServerUpdatePhysicsParams(const struct FReplicatedAthenaVehiclePhysicsState& InState);
	void ServerStartFire(unsigned char FireModeNum);
	void ServerSetIgnoreNextFallingDamage(bool InIgnoreNextFallingDamage);
	void ServerSetIgnoreAllFallingDamage(bool InIgnoreAllFallingDamage);
	bool ServerOnAttemptInteract(const struct FInteractionType& InteractType);
	void ServerCorrectionReceived();
	bool RearLateralFrictionHasReachedMax();
	void OnStartFire(unsigned char FireModeNum);
	void OnRep_VehicleAttributes();
	void OnRep_ServerCorrection();
	void OnRep_SafeTeleportLocation(const struct FVector& TeleportLocation);
	void OnRep_PlayerSlots();
	void OnRep_PendingDeath();
	void OnRep_IgnoredBuildingActors();
	void OnRep_HealthSet();
	void OnRep_GravityMultiplier();
	void OnRep_CorrectTargetOrientation();
	void OnRep_AbilitySystemComponent();
	void OnPxComponentWake(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName);
	void OnPawnExitVehicle(class AFortPlayerPawn* PlayerPawn, const struct FName& ExitSocketName);
	void OnPawnEnterVehicle(class AFortPlayerPawn* PlayerPawn, int SeatIdx);
	void OnIsSprintingChanged();
	void OnHonk();
	void OnExitedWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnEnteredWaterVolume(const struct FVector& WaterSurfacePoint);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamaged(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	void OnCollisionHitEffects(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, const struct FVector& HitFrictionImpulse, const struct FVector& HitNormal, class AActor* HitActor);
	void OnCollisionHitDamageEffects(float DamageTaken);
	float ModifyIncomingDamage(float Damage, const struct FGameplayTagContainer& InTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EventInstigator, class AActor* DamageCauser);
	bool IsSprinting();
	bool IsSlowEnoughToInteract();
	bool IsScrapingSidesOrTop();
	bool IsJumping();
	bool IsInWater();
	bool IsInAir();
	bool IsHonking();
	bool IsCorrectingOrientation();
	bool IsCameraControlledRotation();
	bool IsBraking();
	bool IsAsleep();
	bool IsAirControlling();
	bool HasDriver();
	struct FName GetVehicleSeatPrimaryAction(class AFortPlayerPawn* FortPlayerPawn);
	TArray<struct FText> GetVehicleSeatLabels(class AFortPlayerPawn* PlayerPawn, ECommonInputType OverrideInputType);
	TArray<struct FName> GetVehicleSeatActionNames(class AFortPlayerPawn* PlayerPawn, ECommonInputType OverrideInputType);
	TArray<struct FText> GetVehicleSeatActionLabels(class AFortPlayerPawn* PlayerPawn, ECommonInputType OverrideInputType);
	struct FName GetVehicleExitActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetVehicleChangeSeatActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetSteeringAngle();
	struct FVector GetStandingFiringOffsetForSeat(int SeatIdx);
	float GetSpringLengthRatio(int SpringIdx);
	bool GetShootingCone(int SeatIdx, struct FTransform* OutConeTM, struct FAthenaVehicleShootingCone* OutCone);
	struct FVector GetPreviousLinearVelocity();
	struct FVector GetPreviousLinearAcceleration();
	float GetPreviousForwardSpeedKmh();
	class AFortPlayerPawn* GetPawnAtSeat(int SeatIdx);
	float GetMaxHealth();
	struct FVector GetIndicatorRelativeOffset();
	float GetHealth();
	float GetForwardSpeedKmh();
	class AFortPlayerPawn* GetDriver();
	struct FString GetDisplayName();
	float GetDesiredForwardSpeedKmh();
	int GetCurrentGear();
	int GetCurrentBudget();
	float GetCurrentBrakeForce(float ForwardSpeedKmH);
	struct FVector GetCrouchingFiringOffsetForSeat(int SeatIdx);
	float GetBrakingDelta();
	TArray<class AFortPlayerPawn*> GetAllPassengers();
	void GameplayCue_Damage(TEnumAsByte<EGameplayCueEvent> EventType, const struct FGameplayCueParameters& Parameters);
	int FindSeatIndex(class AFortPlayerPawn* PlayerPawn);
	bool EjectSeat(int SeatIndex);
	bool EjectPlayerPawn(class AFortPlayerPawn* InPlayerPawn);
	void EjectAllPlayers();
	void DisableTrickCredit();
	void DestroyVehicle();
	void DebugDrawImpactBucket(const struct FVector& Location, const struct FVector& ImpactVector, const struct FColor& Color);
	bool ContainsPlayers();
	bool ClientIsDriver();
	void ClientBroadcastHitDetection(float Radius, float Relevancy, const struct FVector& HalfPoints, const struct FVector& DoublePoints);
	void ChangeSeat();
	bool CanDriveOnIncline();
	bool CanCorrectOrientation(class AFortPawn* FP);
	bool CanContainPlayers();
	bool CanAntigravityOnIncline();
};


// Class FortniteGame.FortAthenaSKVehicle
// 0x0090 (0x0B00 - 0x0A70)
class AFortAthenaSKVehicle : public AFortAthenaVehicle
{
public:
	class USkeletalMeshComponentBudgeted*              SkeletalMesh;                                             // 0x0A70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              WheelOffsetFR;                                            // 0x0A78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelOffsetFL;                                            // 0x0A7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelOffsetLimitF;                                        // 0x0A80(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              WheelOffsetBR;                                            // 0x0A84(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelOffsetBL;                                            // 0x0A88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelOffsetLimitB;                                        // 0x0A8C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              WheelOffsetLerpPerSecondUp;                               // 0x0A90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WheelOffsetLerpPerSecondDown;                             // 0x0A94(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AxleOffsetZ;                                              // 0x0A98(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AxleCenterF;                                              // 0x0A9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AxleCenterB;                                              // 0x0AA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AxleRollF;                                                // 0x0AA4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AxleRollB;                                                // 0x0AA8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationFR;                                          // 0x0AAC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationFL;                                          // 0x0AB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationBR;                                          // 0x0AB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationBL;                                          // 0x0AB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationVelocityFR;                                  // 0x0ABC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationVelocityFL;                                  // 0x0AC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationVelocityBR;                                  // 0x0AC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelRotationVelocityBL;                                  // 0x0AC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinFR;                                              // 0x0ACC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinFL;                                              // 0x0AD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinBR;                                              // 0x0AD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinBL;                                              // 0x0AD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinVelocityFR;                                      // 0x0ADC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinVelocityFL;                                      // 0x0AE0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinVelocityBR;                                      // 0x0AE4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinVelocityBL;                                      // 0x0AE8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              WheelSpinDampingPerSecond;                                // 0x0AEC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0AF0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSKVehicle");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaSKMotorVehicle
// 0x0080 (0x0B80 - 0x0B00)
class AFortAthenaSKMotorVehicle : public AFortAthenaSKVehicle
{
public:
	float                                              MovementAmountParam;                                      // 0x0B00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentMaxSpringCompression;                              // 0x0B04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SparksLeftParam;                                          // 0x0B08(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SparksRightParam;                                         // 0x0B0C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftSlowDustParam;                                        // 0x0B10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightSlowDustParam;                                       // 0x0B14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftFastDustParam;                                        // 0x0B18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightFastDustParam;                                       // 0x0B1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FastDustParam;                                            // 0x0B20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CoastingMovementParam;                                    // 0x0B24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SkiddingAmountParam;                                      // 0x0B28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InAirParam;                                               // 0x0B2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScrapingAmountParam;                                      // 0x0B30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AudioWindParam;                                           // 0x0B34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0B38(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSKMotorVehicle");
		return ptr;
	}


	void OnSpringCompression();
	bool IsStandingInPlace();
	bool HasTraction();
	float GetStandingInPlaceSteeringAngle();
	float GetDesiredForwardVelocityDelta();
	float GetDesiredForwardVelocity();
	float GetCurrentForwardVelocity();
	bool GasPedalIsDown();
};


// Class FortniteGame.FortAthenaAntelopeVehicle
// 0x01B0 (0x0D30 - 0x0B80)
class AFortAthenaAntelopeVehicle : public AFortAthenaSKMotorVehicle
{
public:
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0B80(0x001C) MISSED OFFSET
	struct FVector                                     LeanPositionFront;                                        // 0x0B9C(0x000C) (Edit, EditConst, IsPlainOldData)
	float                                              LeanPositionFrontMaxLag;                                  // 0x0BA8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              LeanPositionFrontLagCoefficient;                          // 0x0BAC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x0BB0(0x0024) MISSED OFFSET
	float                                              LeanImpulseScaleBack;                                     // 0x0BD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BounceOffsetBack;                                         // 0x0BD8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0BE4(0x0004) MISSED OFFSET
	class UCurveFloat*                                 BounceCurve;                                              // 0x0BE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        BoostSlideColors;                                         // 0x0BF0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              HandBrakeSkidParam;                                       // 0x0C00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BoostParam;                                               // 0x0C04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MovementParam;                                            // 0x0C08(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BatteryParam;                                             // 0x0C0C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RumbleIntensity;                                          // 0x0C10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBoostCameraActive;                                       // 0x0C14(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLocalPlayerADS;                                          // 0x0C15(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0C16(0x0002) MISSED OFFSET
	class UCameraShake*                                DriverCameraShake;                                        // 0x0C18(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraShake*                                PassengerCameraShake;                                     // 0x0C20(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPawn*                             LocalPlayerPawn;                                          // 0x0C28(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_Boost_Flames;                                         // 0x0C30(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x40];                                      // 0x0C38(0x0040) MISSED OFFSET
	class UParticleSystemComponent*                    PSC_WheelDust;                                            // 0x0C78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_WheelSlide;                                           // 0x0C80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailLeft;                                            // 0x0C88(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailRight;                                           // 0x0C90(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UBuildingEditModeMetadata*>           WallsVehicleCanDestroy;                                   // 0x0C98(0x0010) (ZeroConstructor, Transient)
	TArray<class UBuildingEditModeMetadata*>           WallsVehicleCannotDestroyWhenBoosting;                    // 0x0CA8(0x0010) (ZeroConstructor, Transient)
	TArray<class UClass*>                              BuildingPropClassesVehicleCanDestroy;                     // 0x0CB8(0x0010) (ZeroConstructor, Transient)
	TArray<class UClass*>                              BuildingPropClassesVehicleCannotDestroyWhenBoosting;      // 0x0CC8(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      FortAntelopeVehicleConfigsClass;                          // 0x0CD8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlayingBoostFX;                                          // 0x0CE0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayingBoostFXForward;                                   // 0x0CE1(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0CE2(0x0002) MISSED OFFSET
	float                                              BoostFXTime;                                              // 0x0CE4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BoostFXFOVOffset;                                         // 0x0CE8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0CEC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 BoostFXStrengthCurve;                                     // 0x0CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 BoostFXRumbleStrengthCurve;                               // 0x0CF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0D00(0x0008) MISSED OFFSET
	class UFortAntelopeVehicleConfigs*                 FortAntelopeVehicleConfigs;                               // 0x0D08(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x10];                                      // 0x0D10(0x0010) MISSED OFFSET
	TArray<struct FPotentiallyDestroyedBuilding>       PotentiallyDestroyedBuildings;                            // 0x0D20(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaAntelopeVehicle");
		return ptr;
	}


	void SmashedThroughBuildingPiece(const struct FVector& ImpactPoint, const struct FVector& ImpactNormal);
	void SmashedIntoPlayer(class AFortPlayerPawn* Pawn, const struct FVector& ImpactPoint, const struct FVector& ImpactNormal, const struct FVector& LaunchVector);
	void SetSkidActive(bool bActive);
	void SetPropDestructionParams(TArray<class UClass*> BuildingPropClassesVehicleCanDestroy, TArray<class UClass*> BuildingPropClassesVehicleCannotDestroyWhenBoosting, TArray<class UBuildingEditModeMetadata*> WallsVehicleCanDestroy, TArray<class UBuildingEditModeMetadata*> WallsVehicleCannotDestroyWhenBoosting);
	void NaturalSlideEnd();
	void NaturalSlideBegin();
	bool IsSmashing();
	bool IsPassivelyExpendingBoost();
	bool IsNaturalSliding();
	bool IsLocalPlayerRiding();
	bool IsLeaningOrBouncingBack();
	bool IsInBoostSmashForgivenessPeriod();
	bool IsBoosting();
	bool IsAccumulatingBoost();
	struct FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartReverseActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartHonkActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartForwardActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetBoostAccumulated();
	void ClearBoostAccumulated();
	void CacheParticleComponentPointers(class UParticleSystemComponent* WheelDust, class UParticleSystemComponent* WheelSlide, class UParticleSystemComponent* TrailLeft, class UParticleSystemComponent* TrailRight);
	void BoostFailed();
	void BoostEnd();
	void BoostBegin();
};


// Class FortniteGame.FortAthenaSupplyDrop
// 0x0188 (0x0880 - 0x06F8)
class AFortAthenaSupplyDrop : public ABuildingGameplayActor
{
public:
	struct FCollisionProfileName                       GroundCollsionProfile;                                    // 0x06F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	class USoundCue*                                   WaveSpawnSoundCue;                                        // 0x0700(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       LootTableNameOverride;                                    // 0x0708(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  LastGroundLocationHitResult;                              // 0x0710(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              SpawnOffsetZ;                                             // 0x0798(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x079C(0x0004) MISSED OFFSET
	class USoundCue*                                   SearchingSoundCueLoop;                                    // 0x07A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasSpawnedPickups;                                       // 0x07A8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x07A9(0x0007) MISSED OFFSET
	struct FSlateBrush                                 SpectatorMapIndicatorBrush;                               // 0x07B0(0x0088) (Edit)
	int                                                CachedSpecialActorIdx;                                    // 0x0838(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x083C(0x0004) MISSED OFFSET
	struct FName                                       SpecialActorID;                                           // 0x0840(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScalableFloat                              InStormDespawnTimeInSeconds;                              // 0x0848(0x0020) (Edit, BlueprintVisible)
	float                                              CachedInStormDespawnTimeInSeconds;                        // 0x0868(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x086C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSupplyDrop");
		return ptr;
	}


	class AFortPickup* SpawnPickup(class UFortWorldItemDefinition* ItemDefinition, int NumberToSpawn, class AFortPawn* TriggeringPawn, const struct FVector& Position, const struct FVector& Direction);
	void SpawningLootOnDestruction(class AController* EventInstigator);
	void SetLootTableNameOverride(const struct FName& TableNameToUse);
	void OnRep_HasSpawnedPickups(bool bOldHasSpawnedPickups);
	void OnLootSpawned();
	void OnDespawnDueToStorm();
	void OnCheckForBeingInStorm();
	bool IsPlayingAReplay();
	bool GroundTrace(const struct FVector& TraceStart, const struct FVector& TraceEnd, struct FHitResult* OutHit);
	void GetSupplyDropSpawnData(float* MinSpawnHeight, float* MaxSpawnHeight);
	struct FVector FindGroundLocationAt(const struct FVector& InLocation);
};


// Class FortniteGame.FortAthenaCreativeSupplyDrop
// 0x0010 (0x0890 - 0x0880)
class AFortAthenaCreativeSupplyDrop : public AFortAthenaSupplyDrop
{
public:
	TArray<struct FItemAndCount>                       SpawnItems;                                               // 0x0880(0x0010) (BlueprintVisible, Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaCreativeSupplyDrop");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaDoghouseVehicle
// 0x0060 (0x0B60 - 0x0B00)
class AFortAthenaDoghouseVehicle : public AFortAthenaSKVehicle
{
public:
	float                                              CameraYawInterpSpeed;                                     // 0x0B00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5C];                                      // 0x0B04(0x005C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaDoghouseVehicle");
		return ptr;
	}


	bool IsStandingInPlace();
	float GetStandingInPlaceSteeringAngle();
	bool GasPedalIsDown();
};


// Class FortniteGame.FortAthenaExitCraftBalloon
// 0x0010 (0x0338 - 0x0328)
class AFortAthenaExitCraftBalloon : public AActor
{
public:
	class UStaticMeshComponent*                        RootMeshComp;                                             // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPhysicsConstraintComponent*                 PhysicsComp;                                              // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaExitCraftBalloon");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaExitCraft
// 0x0190 (0x0C00 - 0x0A70)
class AFortAthenaExitCraft : public AFortAthenaVehicle
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0A70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        OverlapMesh;                                              // 0x0A78(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UFortAthenaExitCraftInfo*                    ExitCraftInfo;                                            // 0x0A80(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0A88(0x0018) MISSED OFFSET
	struct FName                                       CraftSpecialActorID;                                      // 0x0AA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0AA8(0x0004) MISSED OFFSET
	EExitCraftState                                    CurrentState;                                             // 0x0AAC(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0AAD(0x0003) MISSED OFFSET
	TArray<class AFortPlayerPawnAthena*>               OverlappingPawns;                                         // 0x0AB0(0x0010) (Net, ZeroConstructor)
	class UClass*                                      BalloonClass;                                             // 0x0AC0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AFortAthenaExitCraftBalloon*                 BalloonActor;                                             // 0x0AC8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FortVehicleConfigClass;                                   // 0x0AD0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 GettingIntoPostionCurve_Location;                         // 0x0AD8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 GettingIntoPostionCurve_Rotation;                         // 0x0AE0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BuildingZOffset;                                          // 0x0AE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0AEC(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       TagsToApplyOnAttached;                                    // 0x0AF0(0x0020) (Edit, DisableEditOnInstance)
	struct FText                                       InteractText;                                             // 0x0B10(0x0018) (Edit, DisableEditOnInstance)
	float                                              SafetyTimerTime;                                          // 0x0B28(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0B2C(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  VehicleSkins;                                             // 0x0B30(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                VehicleSkinIndex;                                         // 0x0B40(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x0B44(0x000C) MISSED OFFSET
	TArray<class AFortPlayerPawnAthena*>               PlayersNeedingSeats;                                      // 0x0B50(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0B60(0x0018) MISSED OFFSET
	struct FLocationLerpData                           LocationLerpData;                                         // 0x0B78(0x0038) (Net)
	struct FRotationLerpData                           RotationLerpData;                                         // 0x0BB0(0x0050) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaExitCraft");
		return ptr;
	}


	void OnRep_VehicleSkinIndex();
	void OnRep_RotationLerpData();
	void OnRep_QualifyingPlayers();
	void OnRep_LocationLerpData();
	void OnRep_CurrentState();
	void OnRep_BalloonActor();
	void OnRemakeMIDs();
	void OnOverlapStart(class AActor* TestActor);
	void OnOverlapEnd(class AActor* TestActor);
	void OnNewState(EExitCraftState NewState);
	void OnMoveStart();
	void OnMoveEnd();
	void OnDepartFinished();
	struct FVector GetBalloonLocation();
	void CheatDepart();
};


// Class FortniteGame.FortAthenaExitCraftInfo
// 0x03E8 (0x0418 - 0x0030)
class UFortAthenaExitCraftInfo : public UPrimaryDataAsset
{
public:
	class UClass*                                      ExitCaftClass;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ExitCraftSpawnerClass;                                    // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FExitCraftInfo                              ExitCraftInfo;                                            // 0x0040(0x0188) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                                SpecialActorSpawnerTag;                                   // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 SpawnerMinimapIconBrush;                                  // 0x01D0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   SpawnerMinimapIconScale;                                  // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSlateBrush                                 SpawnerCompassIconBrush;                                  // 0x0260(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   SpawnerCompassIconScale;                                  // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FGameplayTag                                SpecialActorCraftTag;                                     // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 CraftMinimapIconBrush;                                    // 0x02F8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   CraftMinimapIconScale;                                    // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSlateBrush                                 CraftCompassIconBrush;                                    // 0x0388(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   CraftCompassIconScale;                                    // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaExitCraftInfo");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaExitCraftSpawner
// 0x0060 (0x0388 - 0x0328)
class AFortAthenaExitCraftSpawner : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	class UCapsuleComponent*                           DestructionOverlapCapsule;                                // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UFortAthenaExitCraftInfo*                    ExitCraftInfo;                                            // 0x0348(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class ABuildingSMActor*>                    BuildingActorsToDestroy;                                  // 0x0350(0x0010) (ZeroConstructor)
	struct FName                                       SpawnerSpecialActorID;                                    // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0368(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaExitCraftSpawner");
		return ptr;
	}


	void StartExitCraftSpawnTimer();
	void DestroyBlockingActors();
};


// Class FortniteGame.FortAthenaExplosionImpulseExecutionCalculation
// 0x0000 (0x0040 - 0x0040)
class UFortAthenaExplosionImpulseExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaExplosionImpulseExecutionCalculation");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaFerretVehicle
// 0x0070 (0x0BD0 - 0x0B60)
class AFortAthenaFerretVehicle : public AFortAthenaDoghouseVehicle
{
public:
	float                                              RumbleIntensity;                                          // 0x0B60(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBoostCameraActive;                                       // 0x0B64(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLocalPlayerADS;                                          // 0x0B65(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0B66(0x0002) MISSED OFFSET
	class UCameraShake*                                DriverCameraShake;                                        // 0x0B68(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraShake*                                PassengerCameraShake;                                     // 0x0B70(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPawn*                             LocalPlayerPawn;                                          // 0x0B78(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0B80(0x0018) MISSED OFFSET
	class UParticleSystemComponent*                    PSC_WheelDust;                                            // 0x0B98(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_WheelSlide;                                           // 0x0BA0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailLeft;                                            // 0x0BA8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailRight;                                           // 0x0BB0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      FortFerretVehicleConfigsClass;                            // 0x0BB8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortFerretVehicleConfigs*                   FortFerretVehicleConfigs;                                 // 0x0BC0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0BC8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaFerretVehicle");
		return ptr;
	}


	void SetSkidActive(bool bActive);
	bool IsLocalPlayerRiding();
	bool IsBoosting();
	struct FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	void CacheParticleComponentPointers(class UParticleSystemComponent* WheelDust, class UParticleSystemComponent* WheelSlide, class UParticleSystemComponent* TrailLeft, class UParticleSystemComponent* TrailRight);
	void BoostEnd();
	void BoostBegin();
};


// Class FortniteGame.FortAthenaGoatVehicle
// 0x0180 (0x0D00 - 0x0B80)
class AFortAthenaGoatVehicle : public AFortAthenaSKMotorVehicle
{
public:
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0B80(0x001C) MISSED OFFSET
	float                                              LeanImpulseScaleFR;                                       // 0x0B9C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeanPositionBR;                                           // 0x0BA0(0x000C) (Edit, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0BAC(0x0018) MISSED OFFSET
	float                                              LeanImpulseScaleBR;                                       // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeanPositionBL;                                           // 0x0BC8(0x000C) (Edit, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0BD4(0x0018) MISSED OFFSET
	float                                              LeanImpulseScaleBL;                                       // 0x0BEC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BounceOffsetFR;                                           // 0x0BF0(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BounceOffsetBR;                                           // 0x0BFC(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BounceOffsetBL;                                           // 0x0C08(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0C14(0x0004) MISSED OFFSET
	class UCurveFloat*                                 BounceCurve;                                              // 0x0C18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        BoostSlideColors;                                         // 0x0C20(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              HandBrakeSkidParam;                                       // 0x0C30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BoostParam;                                               // 0x0C34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MovementParam;                                            // 0x0C38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BatteryParam;                                             // 0x0C3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RumbleIntensity;                                          // 0x0C40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBoostCameraActive;                                       // 0x0C44(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLocalPlayerADS;                                          // 0x0C45(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0C46(0x0002) MISSED OFFSET
	class UCameraShake*                                DriverCameraShake;                                        // 0x0C48(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraShake*                                PassengerCameraShake;                                     // 0x0C50(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPawn*                             LocalPlayerPawn;                                          // 0x0C58(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x50];                                      // 0x0C60(0x0050) MISSED OFFSET
	class UParticleSystemComponent*                    PSC_WheelDust;                                            // 0x0CB0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_WheelSlide;                                           // 0x0CB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailLeft;                                            // 0x0CC0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    PSC_TrailRight;                                           // 0x0CC8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UBuildingEditModeMetadata*>           WallsVehicleCanDestroy;                                   // 0x0CD0(0x0010) (ZeroConstructor, Transient)
	TArray<class UClass*>                              BuildingPropClassesVehicleCanDestroy;                     // 0x0CE0(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      FortGoatVehicleConfigsClass;                              // 0x0CF0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortGoatVehicleConfigs*                     FortGoatVehicleConfigs;                                   // 0x0CF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaGoatVehicle");
		return ptr;
	}


	void SetSkidActive(bool bActive);
	void SetPropDestructionParams(TArray<class UClass*> BuildingPropClassesVehicleCanDestroy, TArray<class UBuildingEditModeMetadata*> WallsVehicleCanDestroy);
	void PowerSlideEnd();
	void PowerSlideBegin();
	bool IsPowerSliding();
	bool IsLocalPlayerRiding();
	bool IsLeaningOrBouncingFR();
	bool IsLeaningOrBouncingBR();
	bool IsLeaningOrBouncingBL();
	bool IsEBraking();
	bool IsBoosting();
	struct FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartReverseActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartHonkActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartForwardActionName(class AFortPlayerPawn* FortPlayerPawn);
	struct FName GetGolfCartEBrakeActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetBoostAccumulated();
	void EBrakeEnd();
	void EBrakeBegin();
	void ClearBoostAccumulated();
	void CacheParticleComponentPointers(class UParticleSystemComponent* WheelDust, class UParticleSystemComponent* WheelSlide, class UParticleSystemComponent* TrailLeft, class UParticleSystemComponent* TrailRight);
	void BoostIncrease(int AccumulationStepIndex);
	void BoostEnd();
	void BoostBegin();
};


// Class FortniteGame.FortAthenaGrowthManager
// 0x0000 (0x0630 - 0x0630)
class AFortAthenaGrowthManager : public ABuildingActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaGrowthManager");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaImpulseResponseSet
// 0x0078 (0x00A8 - 0x0030)
class UFortAthenaImpulseResponseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  ImpulseMultiplier;                                        // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ImpulseMagnitude;                                         // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ImpulseZAngle;                                            // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0090(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaImpulseResponseSet");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaLowGravZone
// 0x0000 (0x06F8 - 0x06F8)
class AFortAthenaLowGravZone : public ABuildingGameplayActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaLowGravZone");
		return ptr;
	}


	void OnVehicleExitZone(class AFortAthenaVehicle* Vehicle);
	void OnVehicleEnterZone(class AFortAthenaVehicle* Vehicle, float GravityMultiplier);
};


// Class FortniteGame.FortAthenaMapInfo
// 0x02C8 (0x05F0 - 0x0328)
class AFortAthenaMapInfo : public AActor
{
public:
	class UClass*                                      TreasureChestClass;                                       // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              TreasureChestMinSpawnPercent;                             // 0x0330(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              TreasureChestMaxSpawnPercent;                             // 0x0350(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      AmmoBoxClass;                                             // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              AmmoBoxMinSpawnPercent;                                   // 0x0378(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              AmmoBoxMaxSpawnPercent;                                   // 0x0398(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FVehicleClassDetails>                VehicleClassDetails;                                      // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      VendingMachineClass;                                      // 0x03C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              VendingMachineRarityCount;                                // 0x03D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      LlamaClass;                                               // 0x03F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              LlamaQuantityMin;                                         // 0x03F8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              LlamaQuantityMax;                                         // 0x0418(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<class UFortSupplyDropInfo*>                 SupplyDropInfoList;                                       // 0x0438(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FScalableFloat                              SupplyDropMinPlacementHeight;                             // 0x0448(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              SupplyDropMaxPlacementHeight;                             // 0x0468(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      AircraftClass;                                            // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FBox2D                                      AircraftSpawnZone;                                        // 0x0490(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FBox2D                                      AircraftDropZone;                                         // 0x04A4(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	class AVolume*                                     AircraftDropVolume;                                       // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              SkydivingScanForImpactWorldZ;                             // 0x04C0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              SkydivingForceDeployParachuteWorldZ;                      // 0x04E0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FAircraftFlightInfo>                 FlightInfos;                                              // 0x0500(0x0010) (ZeroConstructor)
	struct FScalableFloat                              AircraftDeviationAngle;                                   // 0x0510(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              AircraftDistanceFromMidLine;                              // 0x0530(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              AircraftHeight;                                           // 0x0550(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              AircraftSpeed;                                            // 0x0570(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              SafeZoneStartDelay;                                       // 0x0590(0x0020) (Edit)
	struct FScalableFloat                              SafeZoneStartingRadius;                                   // 0x05B0(0x0020) (Edit)
	TArray<struct FFortSafeZoneVolumeDefinition>       SafeZoneVolumeDefinitions;                                // 0x05D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortSafeZoneDefinition>             SafeZoneDefinitions;                                      // 0x05E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMapInfo");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayMutator
// 0x0010 (0x0338 - 0x0328)
class AFortGameplayMutator : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	unsigned char                                      bMutatorActive : 1;                                       // 0x0330(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayMutator");
		return ptr;
	}


	void SetMutatorActive(bool bEnable);
	bool IsMutatorActive();
};


// Class FortniteGame.FortAthenaMutator
// 0x0018 (0x0350 - 0x0338)
class AFortAthenaMutator : public AFortGameplayMutator
{
public:
	bool                                               bMutatesGameMode;                                         // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMutatesGameState;                                        // 0x0339(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x033A(0x0006) MISSED OFFSET
	class AFortGameModeAthena*                         CachedGameMode;                                           // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortGameStateAthena*                        CachedGameState;                                          // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_AI
// 0x0028 (0x0360 - 0x0338)
class AFortAthenaMutator_AI : public AFortGameplayMutator
{
public:
	TArray<class UFortMovementComp_AIChar*>            DeimosMoveComponents;                                     // 0x0338(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0348(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_AI");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_Barrier
// 0x0318 (0x0668 - 0x0350)
class AFortAthenaMutator_Barrier : public AFortAthenaMutator
{
public:
	class UClass*                                      BigBaseWallClass;                                         // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ObjectiveFlag;                                            // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AAthenaBigBaseWall*                          BigBaseWall;                                              // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FBarrierTeamState                           Team_0_State;                                             // 0x0368(0x0020)
	struct FBarrierTeamState                           Team_1_State;                                             // 0x0388(0x0020)
	struct FScalableFloat                              ObjectiveDistanceFromWall;                                // 0x03A8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              SafeZonePhaseToStartObjectiveDestructionTimer;            // 0x03C8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              ObjectiveDestructionTimer;                                // 0x03E8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallHeight;                                               // 0x0408(0x0020) (Edit)
	struct FScalableFloat                              WallThickness;                                            // 0x0428(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallLength;                                               // 0x0448(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallZLevel;                                               // 0x0468(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallGravity;                                              // 0x0488(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallSpeed;                                                // 0x04A8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              SafeZonePhaseWhenToBringDownWall;                         // 0x04C8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              WallYawOffset;                                            // 0x04E8(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              MinRespawnDistanceFromCenter;                             // 0x0508(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              MaxRespawnDistanceFromCenter;                             // 0x0528(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              MinRespawnDistanceFromGround;                             // 0x0548(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              MaxRespawnDistanceFromGround;                             // 0x0568(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              RespawnDirectionDeviation;                                // 0x0588(0x0020) (Edit, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_WallComingDown;                                   // 0x05A8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_WallDown;                                         // 0x05D8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_Objective_Destroyed_Friendly;                     // 0x0608(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_Objective_Destroyed_Enemy;                        // 0x0638(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Barrier");
		return ptr;
	}


	void OnMutatorGameplayEvent(int EventId, int EventParam1, int EventParam2, int EventParam3);
	void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);
};


// Class FortniteGame.FortAthenaMutator_Disco
// 0x0450 (0x07A0 - 0x0350)
class AFortAthenaMutator_Disco : public AFortAthenaMutator
{
public:
	struct FScalableFloat                              GoalScoreToWin;                                           // 0x0350(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              PointAccrualFrequency;                                    // 0x0370(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              LastRespawnableSafeZone;                                  // 0x0390(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              LastSafeZone;                                             // 0x03B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              RespawnDirectionDeviation;                                // 0x03D0(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                              MinRespawnDistanceFromCenter;                             // 0x03F0(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                              MaxRespawnDistanceFromCenter;                             // 0x0410(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                              MinRespawnDistanceFromGround;                             // 0x0430(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                              MaxRespawnDistanceFromGround;                             // 0x0450(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                              PercentAmmoToDrop;                                        // 0x0470(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              CachedPercentAmmoToDrop;                                  // 0x0490(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastRespawnableSafeZoneIndex;                             // 0x0494(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRespawnWarningGiven;                                     // 0x0498(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0499(0x0003) MISSED OFFSET
	int                                                LastSafeZoneIndex;                                        // 0x049C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FControlPointAssetData                      ControlPointAssets;                                       // 0x04A0(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FControlPointSpawnData>              ControlPointSpawnData;                                    // 0x04D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FControlPointInstanceData>           SpawnedControlPoints;                                     // 0x04E8(0x0010) (ZeroConstructor, Transient)
	float                                              TimeUntilPointAccrual;                                    // 0x04F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SentDiscoOpenedMessagesIndex;                             // 0x04FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FAthenaGameMessageData                      GameMsg_Intro;                                            // 0x0500(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_FirstCapturePointsEnabled;                        // 0x0530(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_SecondCapturePointsEnabled;                       // 0x0560(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_ThirdCapturePointsEnabled;                        // 0x0590(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_LastCapturePointsEnabled;                         // 0x05C0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_CapturePointsEnabled;                             // 0x05F0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_CapturePointsDisabled;                            // 0x0620(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_EnemyCapturedAllPoints;                           // 0x0650(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_AlliesCapturedAllPoints;                          // 0x0680(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_AllyCapturePointLost;                             // 0x06B0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_EnemyAboutToWin;                                  // 0x06E0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_AlliesAboutToWin;                                 // 0x0710(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_NoMoreRespawnsWarning;                            // 0x0740(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_NoMoreRespawns;                                   // 0x0770(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Disco");
		return ptr;
	}


	void OnMutatorGameplayEvent(int EventId, int EventParam1, int EventParam2, int EventParam3);
	void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);
	void OnGamePhaseChanged(EAthenaGamePhase GamePhase);
	void OnCaptureLockBroken(class AAthenaCapturePoint* CapturePoint, TEnumAsByte<EFortTeam> LockTeam, TEnumAsByte<EFortTeam> BreakTeam);
	void OnCaptureLock(class AAthenaCapturePoint* CapturePoint, TEnumAsByte<EFortTeam> LockTeam, bool bIsNewLock);
	bool IsRespawningAllowed();
};


// Class FortniteGame.FortAthenaMutator_EnvironmentalDamage
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_EnvironmentalDamage : public AFortAthenaMutator
{
public:
	float                                              EnvironmentalDamage;                                      // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_EnvironmentalDamage");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_FallDamageMultiplier
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_FallDamageMultiplier : public AFortAthenaMutator
{
public:
	float                                              FallDamageMultiplier;                                     // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_FallDamageMultiplier");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_Flag
// 0x0018 (0x0368 - 0x0350)
class AFortAthenaMutator_Flag : public AFortAthenaMutator
{
public:
	struct FText                                       GameMsgText_Intro;                                        // 0x0350(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Flag");
		return ptr;
	}


	void OnMutatorGameplayEvent(int EventId, int EventParam1, int EventParam2, int EventParam3);
};


// Class FortniteGame.FortAthenaMutator_GravityMultiplier
// 0x0018 (0x0368 - 0x0350)
class AFortAthenaMutator_GravityMultiplier : public AFortAthenaMutator
{
public:
	int                                                GravityOverride;                                          // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	TArray<struct FGravityMovementData>                CustomGravityData;                                        // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_GravityMultiplier");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_HealthAndShield
// 0x0018 (0x0368 - 0x0350)
class AFortAthenaMutator_HealthAndShield : public AFortAthenaMutator
{
public:
	EAthenaMutatorEvaluators                           NumericalMutatorOverride;                                 // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartingHealth;                                           // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxShield;                                                // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartingShield;                                           // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0364(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_HealthAndShield");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_Heist
// 0x05D0 (0x0920 - 0x0350)
class AFortAthenaMutator_Heist : public AFortAthenaMutator
{
public:
	class UFortAthenaExitCraftInfo*                    ExitCraftInfo;                                            // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FHeistExitCraftSpawnData>            HeistExitCraftSpawnData;                                  // 0x0358(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FHeistBlingDropSpawnData>            HeistBlingDropSpawnData;                                  // 0x0368(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class USoundCue*                                   HeistVictorySoundCue;                                     // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScalableFloat                              SpawnExitCraftInitialDelay;                               // 0x0380(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              BlingCarryingEnemiesVisibleTime;                          // 0x03A0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03C0(0x0008) MISSED OFFSET
	TArray<struct FHeistExitCraftData>                 SpawnedExitCraftList;                                     // 0x03C8(0x0010) (ZeroConstructor, Transient)
	bool                                               bCurrExitCraftDeparted;                                   // 0x03D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET
	TArray<class AFortPlayerPawnAthena*>               ExitCraftOverlappingPawns;                                // 0x03E0(0x0010) (ZeroConstructor, Transient)
	float                                              SpawnExitCraftTime;                                       // 0x03F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrExitCraftIndexToSpawn;                                // 0x03F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SupplyDropStartingAngle;                                  // 0x03F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ExitCraftStartingAngle;                                   // 0x03FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrBlingSupplyDropIndexHandled;                          // 0x0400(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	TArray<int>                                        RemainingExitCraftSpawnIndexes;                           // 0x0408(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        RemainingSupplyDropSpawnIndexes;                          // 0x0418(0x0010) (ZeroConstructor, Transient)
	int                                                NumUnspawnedExitCrafts;                                   // 0x0428(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumSpawnedExitCrafts;                                     // 0x042C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumDepartedExitCrafts;                                    // 0x0430(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	TArray<int>                                        NumPlayersAliveOnDeparture;                               // 0x0438(0x0010) (ZeroConstructor, Transient)
	int                                                JewelsLostToStorm;                                        // 0x0448(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SafesLostToStorm;                                         // 0x044C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<TEnumAsByte<EFortTeam>, struct FHeistTeamHoldingJewelInfo> JewelHeldByTeamMap;                                       // 0x0450(0x0050) (ZeroConstructor, Transient)
	struct FGameplayTag                                BlingTrackingCategoryTag;                                 // 0x04A0(0x0008) (Transient)
	struct FGameplayTag                                SafeSupplyDropTag;                                        // 0x04A8(0x0008) (Transient)
	struct FGameplayTag                                BlingItemTag;                                             // 0x04B0(0x0008) (Transient)
	struct FGameplayTag                                CarryingBlingItemTag;                                     // 0x04B8(0x0008) (Transient)
	struct FGameplayTag                                ExitCraftTag;                                             // 0x04C0(0x0008) (Transient)
	struct FGameplayTag                                BlingLootItemTag;                                         // 0x04C8(0x0008) (Transient)
	float                                              LastAcquiredEnemyMsgTime;                                 // 0x04D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MinTimeAllowedBetweenAcquiredEnemyMessages;               // 0x04D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAthenaGameMessageData                      GameMsg_Intro;                                            // 0x04D8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_InitialBlingIncoming;                             // 0x0508(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_InitialExitCraftsIncoming;                        // 0x0538(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_FinalExitCraftIncoming;                           // 0x0568(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_HeistCompleted;                                   // 0x0598(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_HeistCompletedOneRemains;                         // 0x05C8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_DiamondAcquiredByEnemy;                           // 0x05F8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_DiamondAcquiredByAlly;                            // 0x0628(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_DiamondAcquiredByAllyNoVans;                      // 0x0658(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_DiamondAcquiredByLocalPlayer;                     // 0x0688(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAthenaGameMessageData                      GameMsg_DiamondAcquiredByLocalPlayerNoVans;               // 0x06B8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateBrush                                 FriendlyCarrierBrush;                                     // 0x06E8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FVector2D                                   FriendlyCarrierBrushScale;                                // 0x0770(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FSlateBrush                                 CompassFriendlyCarrierBrush;                              // 0x0778(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateBrush                                 EnemyCarrierBrush;                                        // 0x0800(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FVector2D                                   EnemyCarrierBrushScale;                                   // 0x0888(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FSlateBrush                                 CompassEnemyCarrierBrush;                                 // 0x0890(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UTexture2D*                                  IconToShowInSquadBar;                                     // 0x0918(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Heist");
		return ptr;
	}


	void SendPlayerAcquiredMessage(class AFortPlayerStateAthena* CarryingPlayerState);
	void OnSpecialActorRemoved(const struct FSpecialActorRepData& SpecialActorData);
	void OnSpecialActorAdded(const struct FSpecialActorRepData& SpecialActorData);
	void OnMutatorGenericIntegerUpdated(int GenericIntegerIndex, int NewIntegerValue);
	void OnMutatorGameplayEvent(int EventId, int EventParam1, int EventParam2, int EventParam3);
	void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);
	void OnGamePhaseChanged(EAthenaGamePhase GamePhase);
	void OnExitCraftSpawned(class AFortAthenaExitCraft* ExitCraft, class AFortAthenaExitCraftSpawner* ExitCraftSpawner);
	void OnExitCraftIsDestroying(class AFortAthenaExitCraft* ExitCraft);
};


// Class FortniteGame.FortAthenaMutator_InfiniteAmmo
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_InfiniteAmmo : public AFortAthenaMutator
{
public:
	bool                                               bInfiniteAmmo;                                            // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_InfiniteAmmo");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_InfiniteResources
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_InfiniteResources : public AFortAthenaMutator
{
public:
	bool                                               bInfiniteResources;                                       // 0x0350(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_InfiniteResources");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_ItemDropOverride
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_ItemDropOverride : public AFortAthenaMutator
{
public:
	EAthenaLootDropOverride                            DropAllItemsOverride;                                     // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            TrapDropOverride;                                         // 0x0351(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            WeaponDropOverride;                                       // 0x0352(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            MaterialDropOverride;                                     // 0x0353(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            GadgetDropOverride;                                       // 0x0354(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            ConsumableDropOverride;                                   // 0x0355(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaLootDropOverride                            AmmoDropOverride;                                         // 0x0356(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0357(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_ItemDropOverride");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_Missions
// 0x0010 (0x0360 - 0x0350)
class AFortAthenaMutator_Missions : public AFortAthenaMutator
{
public:
	TArray<class UFortMissionInfo*>                    Missions;                                                 // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Missions");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_MovementSpeed
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_MovementSpeed : public AFortAthenaMutator
{
public:
	float                                              MovementSpeed;                                            // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_MovementSpeed");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_NamePlate
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_NamePlate : public AFortAthenaMutator
{
public:
	EIndicatorDisplayMode                              DisplayMode;                                              // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_NamePlate");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_PickaxeDamage
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_PickaxeDamage : public AFortAthenaMutator
{
public:
	bool                                               PickaxeInstantDestroy;                                    // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_PickaxeDamage");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_PlayerDamage
// 0x0050 (0x03A0 - 0x0350)
class AFortAthenaMutator_PlayerDamage : public AFortAthenaMutator
{
public:
	struct FGameplayTagQuery                           DamageTagQuery;                                           // 0x0350(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance)
	float                                              DamageMultiplier;                                         // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x039C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_PlayerDamage");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_RespawnLocation
// 0x0058 (0x03A8 - 0x0350)
class AFortAthenaMutator_RespawnLocation : public AFortAthenaMutator
{
public:
	bool                                               bRespawnInAir;                                            // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	struct FGameplayTagQuery                           LocationQuery;                                            // 0x0358(0x0048) (Edit, BlueprintVisible)
	bool                                               bRespawnAtDeath;                                          // 0x03A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_RespawnLocation");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_Score
// 0x0050 (0x03A0 - 0x0350)
class AFortAthenaMutator_Score : public AFortAthenaMutator
{
public:
	int                                                NumCoinWaves;                                             // 0x0350(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	struct FText                                       GameMsgText_Intro;                                        // 0x0358(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       GameMsgText_FirstCoinsSpawned;                            // 0x0370(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FText                                       GameMsgText_CoinsSpawned;                                 // 0x0388(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_Score");
		return ptr;
	}


	void OnMutatorGameplayEvent(int EventId, int EventParam1, int EventParam2, int EventParam3);
	void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);
};


// Class FortniteGame.FortAthenaMutator_StartingInventory
// 0x0010 (0x0360 - 0x0350)
class AFortAthenaMutator_StartingInventory : public AFortAthenaMutator
{
public:
	TArray<struct FItemAndCount>                       StartingInventory;                                        // 0x0350(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_StartingInventory");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_SupplyDrop
// 0x0010 (0x0360 - 0x0350)
class AFortAthenaMutator_SupplyDrop : public AFortAthenaMutator
{
public:
	TArray<struct FFortSupplyDropMutatorData>          SafeZoneMutatorData;                                      // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_SupplyDrop");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_TimeStep
// 0x0008 (0x0358 - 0x0350)
class AFortAthenaMutator_TimeStep : public AFortAthenaMutator
{
public:
	float                                              TimeStep;                                                 // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_TimeStep");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaMutator_TODOverride
// 0x0030 (0x0380 - 0x0350)
class AFortAthenaMutator_TODOverride : public AFortAthenaMutator
{
public:
	EAthenaTimeOfDayOverride                           TimeOfDayOverride;                                        // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	float                                              TimeOverride;                                             // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpeedOverride;                                            // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<struct FTimeOfDayPhase>                     TimeOfDayPhases;                                          // 0x0360(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FTimeOfDaySpeed>                     TimeOfDaySpeeds;                                          // 0x0370(0x0010) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaMutator_TODOverride");
		return ptr;
	}


	TArray<struct FText> GetTimeOfDaySpeedNames();
	TArray<struct FText> GetTimeOfDayPhaseNames();
};


// Class FortniteGame.FortAthenaRiftPortal
// 0x0000 (0x0738 - 0x0738)
class AFortAthenaRiftPortal : public ABuildingGameplayActorConsumable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaRiftPortal");
		return ptr;
	}


	void TeleportVehicle(class AFortAthenaVehicle* Vehicle, const struct FVector& TeleportLocation);
	void OverlappingOnBeginPlay(class AActor* Actor);
	void NotifyTeleportedVehicle(class AFortAthenaVehicle* Vehicle);
};


// Class FortniteGame.FortAthenaSimpleCar
// 0x0020 (0x0A90 - 0x0A70)
class AFortAthenaSimpleCar : public AFortAthenaVehicle
{
public:
	class UFortAthenaSimpleCarMovementComponent*       WheeledVehicleMovementComponent;                          // 0x0A70(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      MeshComponent;                                            // 0x0A78(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0A80(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSimpleCar");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaSKPushVehicle
// 0x00B0 (0x0BB0 - 0x0B00)
class AFortAthenaSKPushVehicle : public AFortAthenaSKVehicle
{
public:
	struct FVector                                     DestructionTraceHalfSize;                                 // 0x0B00(0x000C) (Edit, BlueprintVisible, Config, IsPlainOldData)
	bool                                               bCanDestroyProps;                                         // 0x0B0C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0B0D(0x0003) MISSED OFFSET
	float                                              HitRequiredMinSpeed;                                      // 0x0B10(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyProp;                                   // 0x0B14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SpringCompressionRefireTime;                              // 0x0B18(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementAmountParam;                                      // 0x0B1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentMaxSpringCompression;                              // 0x0B20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SparksLeftParam;                                          // 0x0B24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SparksRightParam;                                         // 0x0B28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftSlowDustParam;                                        // 0x0B2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightSlowDustParam;                                       // 0x0B30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftFastDustParam;                                        // 0x0B34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightFastDustParam;                                       // 0x0B38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FastDustParam;                                            // 0x0B3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CoastingMovementParam;                                    // 0x0B40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SkiddingAmountParam;                                      // 0x0B44(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InAirParam;                                               // 0x0B48(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScrapingAmountParam;                                      // 0x0B4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AudioWindParam;                                           // 0x0B50(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0B54(0x0004) MISSED OFFSET
	class UClass*                                      SKPushVehicleConfigsClass;                                // 0x0B58(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortSKPushVehicleConfigs*                   SKPushVehicleConfigs;                                     // 0x0B60(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0B68(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSKPushVehicle");
		return ptr;
	}


	bool PlayerWantsToCoast();
	void OnSpringCompression();
	void OnIsCoastingChanged();
	bool IsStandingInPlace();
	bool IsReadyToPedalFromCoast();
	bool IsMounting();
	bool IsEndCoasting();
	bool IsDismountingFromCoast();
	bool IsCoasting();
	bool IsApplyingPedalForce();
	struct FName GetVehicleJumpActionName(class AFortPlayerPawn* FortPlayerPawn);
	float GetStandingInPlaceSteeringAngle();
	struct FName GetShoppingCartCoastActionName(class AFortPlayerPawn* FortPlayerPawn);
	ECoastState GetCoastState();
};


// Class FortniteGame.FortAthenaSMVehicle
// 0x0010 (0x0A80 - 0x0A70)
class AFortAthenaSMVehicle : public AFortAthenaVehicle
{
public:
	class UStaticMeshComponent*                        Mesh;                                                     // 0x0A70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0A78(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSMVehicle");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaSupplyDropBalloon
// 0x0000 (0x0BE8 - 0x0BE8)
class AFortAthenaSupplyDropBalloon : public ABuildingSMActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSupplyDropBalloon");
		return ptr;
	}

};


// Class FortniteGame.FortStaticReplicatedActor
// 0x0000 (0x0328 - 0x0328)
class AFortStaticReplicatedActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStaticReplicatedActor");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaWater
// 0x0000 (0x0328 - 0x0328)
class AFortAthenaWater : public AFortStaticReplicatedActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaWater");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaHoverCarMovementComponent
// 0x0018 (0x02E8 - 0x02D0)
class UFortAthenaHoverCarMovementComponent : public USimpleWheeledVehicleMovementComponent
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x02D0(0x000C) MISSED OFFSET
	struct FReplicatedAthenaVehicleState               ReplicatedAthenaState;                                    // 0x02DC(0x000C) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaHoverCarMovementComponent");
		return ptr;
	}


	void ServerUpdateAthenaState(float InThrottleInput, float InSteeringInput, const struct FVector& InForwardVectorTarget);
};


// Class FortniteGame.FortAthenaSimpleCarMovementComponent
// 0x0000 (0x0428 - 0x0428)
class UFortAthenaSimpleCarMovementComponent : public UWheeledVehicleMovementComponent4W
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaSimpleCarMovementComponent");
		return ptr;
	}

};


// Class FortniteGame.FortAthenaZipline
// 0x0020 (0x0348 - 0x0328)
class AFortAthenaZipline : public AActor
{
public:
	struct FVector                                     StartPosition;                                            // 0x0328(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     EndPosition;                                              // 0x0334(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bInitialized;                                             // 0x0340(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0341(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAthenaZipline");
		return ptr;
	}


	void Initialize(const struct FVector& NewStartPosition, const struct FVector& NewEndPosition);
};


// Class FortniteGame.FortProjectileBase
// 0x0160 (0x06C8 - 0x0568)
class AFortProjectileBase : public AFortGameplayEffectDeliveryActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0568(0x0010) MISSED OFFSET
	struct FCurveTableRowHandle                        VerticleFireOffset;                                       // 0x0578(0x0010) (Edit, BlueprintVisible)
	struct FCurveTableRowHandle                        InitialSpeed;                                             // 0x0588(0x0010) (Edit, BlueprintVisible)
	struct FCurveTableRowHandle                        MaxSpeed;                                                 // 0x0598(0x0010) (Edit, BlueprintVisible)
	float                                              ReplicatedMaxSpeed;                                       // 0x05A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              GravityScale;                                             // 0x05AC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ChargePercent;                                            // 0x05B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MomentumTransfer;                                         // 0x05B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAddOwnerVelocity;                                        // 0x05B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnPointCanBeUsedByOtherPlayers;                       // 0x05B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05BA(0x0002) MISSED OFFSET
	float                                              PlayerSpawnOffset;                                        // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x05C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                              // 0x05C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bDummyProjectile;                                         // 0x05D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bStopSimulatingOnHit;                                     // 0x05D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableCollisionOnStop;                                  // 0x05D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bStoppedSimulatingDueToHit;                               // 0x05D3(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReplicateStopSimulationLocation;                         // 0x05D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bClientInterpMovement;                                    // 0x05D5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bClientInterpRotation;                                    // 0x05D6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoSelectAttachedForInterp;                             // 0x05D7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FHitResult                                  SimulationStoppingHit;                                    // 0x05D8(0x0088) (Net, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	TEnumAsByte<EFortBaseWeaponDamage>                 WeaponResponseType;                                       // 0x0668(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x37];                                      // 0x0669(0x0037) MISSED OFFSET
	struct FGameplayTagContainer                       DefaultTags;                                              // 0x06A0(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData04[0x8];                                       // 0x06C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProjectileBase");
		return ptr;
	}


	void SetGravityScale(float InitialGravityScale);
	void OnStoppedOnServer();
	void OnStopCallback(const struct FHitResult& Hit);
	void OnStop(const struct FHitResult& Hit);
	void OnShot(const struct FHitResult& Hit);
	void OnRep_SimulationStoppingHit();
	void OnRep_ReplicatedMaxSpeed();
	void OnRep_GravityScale();
	void OnBounceCallback(const struct FHitResult& Hit, const struct FVector& ImpactVelocity);
	void OnBounce(const struct FHitResult& Hit);
	class AFortPlayerController* GetOwnerPlayerController();
	float GetGravityScale();
};


// Class FortniteGame.FortAttachableProjectileBase
// 0x00B8 (0x0780 - 0x06C8)
class AFortAttachableProjectileBase : public AFortProjectileBase
{
public:
	struct FAttachedInfo                               AttachedInfo;                                             // 0x06C8(0x00B8) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttachableProjectileBase");
		return ptr;
	}


	void ServerAttachToActor(const struct FHitResult& Hit, class AActor* AttachToActor, float StickyOffsetFromPhysicsMesh, float StickyOffsetFromBoneCenter, float NarrowPlacementAgainstVelocityThreshold);
	void OnRep_ReplicatedAttachedInfo();
	void OnFinalizeAttachmentSocketLocandRot(const struct FVector& InWorldPos, const struct FRotator& InWorldRot, const struct FName& InSocketName, bool bFoundClosestOnPhysicsAsset, struct FVector* OutWorldPos, struct FRotator* OutWorldRot, struct FName* OutSocketName);
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	class AActor* GetAttachedToActor();
};


// Class FortniteGame.FortAttachToActorInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAttachToActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttachToActorInterface");
		return ptr;
	}


	class AActor* GetActorAttachedTo();
};


// Class FortniteGame.FortAttributeCategory
// 0x0010 (0x0040 - 0x0030)
class UFortAttributeCategory : public UDataAsset
{
public:
	TArray<struct FMyFortCategoryData>                 Categories;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttributeCategory");
		return ptr;
	}

};


// Class FortniteGame.FortAttributeFuelInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAttributeFuelInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttributeFuelInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAttributeLookupTable
// 0x0060 (0x0090 - 0x0030)
class UFortAttributeLookupTable : public UDataAsset
{
public:
	TArray<struct FFortAttributeInfo>                  AttributeInfoList;                                        // 0x0030(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAttributeLookupTable");
		return ptr;
	}

};


// Class FortniteGame.FortAutoFireTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UFortAutoFireTargetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAutoFireTargetInterface");
		return ptr;
	}

};


// Class FortniteGame.FortAwardDetector
// 0x0008 (0x0030 - 0x0028)
class UFortAwardDetector : public UObject
{
public:
	class UFortAwardItemDefinition*                    AwardDefinition;                                          // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardDetector");
		return ptr;
	}

};


// Class FortniteGame.FortAwardDetectorFirstKill
// 0x0008 (0x0038 - 0x0030)
class UFortAwardDetectorFirstKill : public UFortAwardDetector
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardDetectorFirstKill");
		return ptr;
	}

};


// Class FortniteGame.FortAwardDetectorKillDeveloper
// 0x0000 (0x0030 - 0x0030)
class UFortAwardDetectorKillDeveloper : public UFortAwardDetector
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardDetectorKillDeveloper");
		return ptr;
	}

};


// Class FortniteGame.FortAwardDetectorKillStreak
// 0x0008 (0x0038 - 0x0030)
class UFortAwardDetectorKillStreak : public UFortAwardDetector
{
public:
	int                                                NeededKills;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardDetectorKillStreak");
		return ptr;
	}

};


// Class FortniteGame.FortAwardItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortAwardItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                               bSingleSharedDetector;                                    // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanEarnMultipleTimes;                                    // 0x0391(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0392(0x0006) MISSED OFFSET
	class UClass*                                      DetectorClass;                                            // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAwardManager
// 0x0018 (0x0040 - 0x0028)
class UFortAwardManager : public UObject
{
public:
	class AFortPlayerController*                       PlayerController;                                         // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UFortAwardDetector*>                  ActiveAwards;                                             // 0x0030(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAwardManager");
		return ptr;
	}


	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
};


// Class FortniteGame.FortBackpackItemDefinition
// 0x0000 (0x08D0 - 0x08D0)
class UFortBackpackItemDefinition : public UFortWorldItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBackpackItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortBadgeItemDefinition
// 0x0090 (0x0960 - 0x08D0)
class UFortBadgeItemDefinition : public UFortWorldItemDefinition
{
public:
	struct FText                                       DisplayText;                                              // 0x08D0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       FailedDisplayText;                                        // 0x08E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FLinearColor                                BadgeColor;                                               // 0x0900(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FDataTableRowHandle                         BadgeScoringValuesHandle;                                 // 0x0910(0x0010) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0920(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortBadgeItemDefinition.BadgeCardPackReward
	TArray<struct FFortItemQuantityPair>               ItemRewards;                                              // 0x0948(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0958(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBadgeItemDefinition");
		return ptr;
	}


	int GetScoreAwarded(class APlayerController* PlayerController);
	int GetMissionPoints();
	int GetBadgeScoreThreshold();
	EStatCategory GetBadgeScoreCategory();
};


// Class FortniteGame.FortBallSpawner
// 0x0018 (0x0340 - 0x0328)
class AFortBallSpawner : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UClass*                                      BallToSpawn;                                              // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            SphereComp;                                               // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBallSpawner");
		return ptr;
	}

};


// Class FortniteGame.FortBannerUtilities
// 0x0000 (0x0028 - 0x0028)
class UFortBannerUtilities : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBannerUtilities");
		return ptr;
	}


	struct FLinearColor STATIC_GetSecondaryColor(const struct FHomebaseBannerColor& BannerColor);
	struct FName STATIC_GetRowNameForBannerIconItem(class UFortHomebaseBannerIconItem* BannerIcon);
	struct FName STATIC_GetRowNameForBannerColorItem(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor STATIC_GetPrimaryColor(const struct FHomebaseBannerColor& BannerColor);
	void STATIC_GetBannerSmallIconAssetFromRowName(const struct FName& BannerIconRowName, EBannerUsageContext Usage);
	void STATIC_GetBannerSmallIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, EBannerUsageContext Usage);
	void STATIC_GetBannerLargeIconAssetFromRowName(const struct FName& BannerIconRowName, EBannerUsageContext Usage);
	void STATIC_GetBannerLargeIconAsset(class UFortHomebaseBannerIconItem* BannerIcon, EBannerUsageContext Usage);
	void STATIC_GetBannerIconsForCategory(class AFortPlayerController* FortPC, const struct FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerIcons);
	class UFortHomebaseBannerIconItem* STATIC_GetBannerIconItemFromRowName(class AFortPlayerController* FortPC, const struct FName& BannerIconRowName);
	struct FName STATIC_GetBannerIconCategoryRowName(const struct FName& BannerIconRowName);
	struct FText STATIC_GetBannerIconCategoryName(const struct FName& CategoryRowName);
	bool STATIC_GetBannerFullUsageRightsFromRowName(const struct FName& BannerIconRowName);
	void STATIC_GetBannerColorsForCategory(class AFortPlayerController* FortPC, const struct FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerColors);
	struct FLinearColor STATIC_GetBannerColorSecondaryColorFromRowName(const struct FName& BannerColorRowName);
	struct FLinearColor STATIC_GetBannerColorSecondaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	struct FLinearColor STATIC_GetBannerColorPrimaryColorFromRowName(const struct FName& BannerColorRowName);
	struct FLinearColor STATIC_GetBannerColorPrimaryColor(class UFortHomebaseBannerColorItem* BannerColor);
	class UFortHomebaseBannerColorItem* STATIC_GetBannerColorItemFromRowName(class AFortPlayerController* FortPC, const struct FName& BannerColorRowName);
	struct FHomebaseBannerColor STATIC_GetBannerColorFromRowName(const struct FName& BannerColorRowName);
	struct FName STATIC_GetBannerColorCategoryRowName(const struct FName& BannerColorRowName);
	struct FText STATIC_GetBannerColorCategoryName(const struct FName& CategoryRowName);
	struct FHomebaseBannerColor STATIC_GetBannerColor(class UFortHomebaseBannerColorItem* BannerColor);
};


// Class FortniteGame.FortBehaviorTreeComponent
// 0x0000 (0x02A0 - 0x02A0)
class UFortBehaviorTreeComponent : public UBehaviorTreeComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBehaviorTreeComponent");
		return ptr;
	}

};


// Class FortniteGame.FortBenchManager
// 0x0058 (0x0080 - 0x0028)
class UFortBenchManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBenchManager");
		return ptr;
	}


	void StopFortBench();
};


// Class FortniteGame.FortBlueprintAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortBlueprintAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBlueprintAnalytics");
		return ptr;
	}


	void STATIC_FireQuestAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const struct FString& EventName, class UFortQuestItem* Quest, TArray<struct FFortAnalyticsEventAttribute> Attributes);
	void STATIC_FireQuestAnalyticsEvent_Blueprint(class UObject* SourceBp, const struct FString& EventName, class UFortQuestItem* Quest);
	void STATIC_FireMissionAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const struct FString& EventName, TArray<struct FFortAnalyticsEventAttribute> Attributes);
	void STATIC_FireMissionAnalyticsEvent_Blueprint(class UObject* SourceBp, const struct FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute);
	void STATIC_FireEvent_MatchmakingClientStatusTextChanged(class UObject* SourceBp, bool bMatchmakingIsLocal, bool bUserIsMatchmaking, bool bPartyIsPostMatchmaking, bool bIsStormShieldMission, const struct FString& QueueState, TEnumAsByte<EMatchmakingState> MatchmakingState);
	void STATIC_FireEvent_MatchmakingClientStarted(class UObject* SourceBp, bool bMatchmakingStarted, bool bClientPartyStateMatchmaking, bool bClientPartyStateChangedPostMatchmaking);
	void STATIC_FireEvent_MatchmakingClientEnded(class UObject* SourceBp, bool bPartyStateIsWorldView, bool bPartyStateIsTheaterView, bool bPartyStateIsReturningToFrontEnd, bool bMatchmakingComplete, bool bLobbyStarted, bool bMatchmakingCancelled);
	void STATIC_FireEvent_ItemThrownBP(class UObject* SourceBp, const struct FString& ItemName, const struct FVector& Velocity);
	void STATIC_FireEvent_GrapplingHookAttachEvent(class UObject* SourceBp, bool bAttached);
	void STATIC_FireEvent_BuildLimitProgressIncremented(class UObject* SourceBp, class AFortPlayerController* FortPC, class AFortMission* Mission, TEnumAsByte<EFortBuildingType> BuildingType, int BuildLimitProgress, int BuildLimit);
	void STATIC_FireEvent_BuildLimitProgressDecremented(class UObject* SourceBp, class AController* Destroyer, class AFortMission* Mission, TEnumAsByte<EFortBuildingType> BuildingType, int BuildLimitProgress, int BuildLimit);
	void STATIC_FireAnalyticsEvent_BlueprintArray(class UObject* SourceBp, const struct FString& EventName, TArray<struct FFortAnalyticsEventAttribute> Attributes);
	void STATIC_FireAnalyticsEvent_Blueprint(class UObject* SourceBp, const struct FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute);
	struct FFortAnalyticsEventAttribute STATIC_ConstructAnalyticsAttribute(const struct FString& AttributeName, const struct FString& StringValue, const struct FGuid& FGuidValue, int IntValue, float FloatValue, bool BoolValue);
};


// Class FortniteGame.FortOnboardingAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortOnboardingAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOnboardingAnalytics");
		return ptr;
	}


	void STATIC_FireAnalyticsEvent_VinderTipPlayed(class UObject* SourceBp, const struct FString& VinderTipTag);
	void STATIC_FireAnalyticsEvent_TutorialStartupFailed(class UObject* SourceBp, int MatchmakingResult);
	void STATIC_FireAnalyticsEvent_TutorialCompleted(class UObject* SourceBp, bool WasSuccessful);
	void STATIC_FireAnalyticsEvent_TutorialCanceled(class UObject* SourceBp);
	void STATIC_FireAnalyticsEvent_MineCartDestroyed(class UObject* SourceBp);
	void STATIC_FireAnalyticsEvent_CinematicSkipped(class UObject* SourceBp, const struct FString& CinematicName);
};


// Class FortniteGame.FortOutpostAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortOutpostAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostAnalytics");
		return ptr;
	}


	void STATIC_FireAnalyticsEvent_OutpostSupplyDropPickedUp(class UObject* SourceBp, TArray<struct FFortAnalyticsEventAttribute> Resourcees);
	void STATIC_FireAnalyticsEvent_OutpostLoaded(class UObject* SourceBp, int DefenseLeg);
	void STATIC_FireAnalyticsEvent_OutpostLeaveOutpost(class UObject* SourceBp, const struct FString& BuildingType, int NumWavesStarted, int DefenseLeg);
	void STATIC_FireAnalyticsEvent_OutpostDefenseStart(class UObject* SourceBp, int NumWavesTotal, int DefenseLeg);
	void STATIC_FireAnalyticsEvent_OutpostDefenseEnd(class UObject* SourceBp, int NumWavesStarted, int NumWavesTotal, bool bSucceeded, bool bAbandoned, int DefenseLeg);
	void STATIC_FireAnalyticsEvent_OutpostBuildingDefended(class UObject* SourceBp, const struct FString& BuildingType, int NumMissionsCompleted);
	void STATIC_FireAnalyticsEvent_OutpostBuildingActivated(class UObject* SourceBp, const struct FString& BuildingType, int NumMissionsCompleted);
	void STATIC_FireAnalyticsEvent_OutpostAttackWaveStarted(class UObject* SourceBp, const struct FString& BuildingType, int NumWavesStarted, const struct FString& Direction, int DefenseLeg);
	void STATIC_FireAnalyticsEvent_OutpostAttackWaveCompleted(class UObject* SourceBp, const struct FString& BuildingType, int NumWavesCompleted, bool Succeeded, const struct FString& Direction, int DefenseLeg);
};


// Class FortniteGame.FortDeployableBaseAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortDeployableBaseAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseAnalytics");
		return ptr;
	}


	void STATIC_FireAnalyticsEvent_Neighborhood_ConsoleOpened(class AFortPlayerController* FortPC, const struct FUniqueNetIdRepl& OwnerId);
	void STATIC_FireAnalyticsEvent_CombatZone_WaveStarted(class AFortPlayerController* FortPC, int Tier, int Wave, int NumberOfPlayers, TArray<class ADeployableBaseCore*> TargetCores, TArray<class ADeployableBaseCore*> AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData);
	void STATIC_FireAnalyticsEvent_CombatZone_WaveFailed(class AFortPlayerController* FortPC, int Tier, int Wave, int NumberOfPlayers, TArray<class ADeployableBaseCore*> TargetCores, TArray<class ADeployableBaseCore*> AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData);
	void STATIC_FireAnalyticsEvent_CombatZone_TierStarted(class AFortPlayerController* FortPC, int Tier, int NumberOfPlayers, const struct FFortTierCollectionLayoutOutput& CollectionData);
	void STATIC_FireAnalyticsEvent_CombatZone_TierFailed(class AFortPlayerController* FortPC, int Tier, int Wave, int NumberOfPlayers, const struct FFortTierCollectionLayoutOutput& CollectionData);
	void STATIC_FireAnalyticsEvent_CombatZone_TierCompleted(class AFortPlayerController* FortPC, int Tier, int FinalWave, int NumberOfPlayers, TArray<class ADeployableBaseCore*> TargetCores, TArray<class ADeployableBaseCore*> AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData);
	void STATIC_FireAnalyticsEvent_CombatZone_ConsoleOpened(class AFortPlayerController* FortPC);
};


// Class FortniteGame.FortExpeditionAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortExpeditionAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortExpeditionAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortCollectionBookAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortCollectionBookAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortSurvivorAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortSurvivorAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSurvivorAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortTwitchAnalytics
// 0x0000 (0x0028 - 0x0028)
class UFortTwitchAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTwitchAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortBlueprintContext
// 0x0000 (0x0028 - 0x0028)
class UFortBlueprintContext : public UBlueprintContextBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBlueprintContext");
		return ptr;
	}

};


// Class FortniteGame.FortBluGloManager
// 0x0090 (0x03B8 - 0x0328)
class AFortBluGloManager : public AActor
{
public:
	float                                              BluGloPerMinute;                                          // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x032C(0x0004) MISSED OFFSET
	struct FSlateBrush                                 BluGloIcon;                                               // 0x0330(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBluGloManager");
		return ptr;
	}


	class UFortItemDefinition* GetBluGloItemDefinition();
};


// Class FortniteGame.FortBodyPartOverridePreviewActor
// 0x0020 (0x0348 - 0x0328)
class AFortBodyPartOverridePreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UAthenaCharacterPartItemDefinition*          MyCosmeticItem;                                           // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             OnSettingsChangedDelegate;                                // 0x0338(0x0010) (ZeroConstructor, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBodyPartOverridePreviewActor");
		return ptr;
	}


	void OnPreviewCosmeticItem();
	void ApplyMyCosmeticItemToHero(class AFortPlayerPawn* PawnToModify, class AFortPlayerController* FortPC);
};


// Class FortniteGame.FortBotController
// 0x0008 (0x0530 - 0x0528)
class AFortBotController : public AFortAIController
{
public:
	class UFortBotMissionLogic*                        CurrentMissionLogic;                                      // 0x0528(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBotController");
		return ptr;
	}

};


// Class FortniteGame.FortBotMissionLogic
// 0x0050 (0x0078 - 0x0028)
class UFortBotMissionLogic : public UObject
{
public:
	class AFortMission*                                Mission;                                                  // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              Goals;                                                    // 0x0030(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	TArray<class AFortBotStructureBuilder*>            Builders;                                                 // 0x0040(0x0010) (ZeroConstructor, Transient)
	class UBehaviorTree*                               CurrentBehaviorAsset;                                     // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortBotController*>                  AssignedAI;                                               // 0x0058(0x0010) (ZeroConstructor, Transient)
	TArray<unsigned char>                              GoalHasLocator;                                           // 0x0068(0x0010) (BlueprintVisible, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBotMissionLogic");
		return ptr;
	}


	class AFortBotStructureBuilder* SpawnStructureBuilder(class AActor* MissionGoal, class UFortBuildingInstructions* BuildingInstructions);
	void SetGoalsInvulnerable(bool bGodMode);
	void SetCurrentBehavior(class UBehaviorTree* Behavior);
	void ResetBehavior();
	void OnMissionStarted();
	void OnMissionFinished();
	void OnMissionActivated();
	bool OnInteractWithMissionGoal(class AFortAIController* BotAI, class AActor* MissionGoal);
	bool OnCanStartOtherMission(class AFortAIController* BotAI, class AFortMission* OtherMission);
	void OnAssignedBehavior(class AFortAIController* BotAI);
	void MarkSingleLocator(class AActor* LocatorActor);
	void MarkAllLocated();
	void ClearAllLocated();
};


// Class FortniteGame.FortBotMissionManager
// 0x00A8 (0x00D0 - 0x0028)
class UFortBotMissionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortBotMissionManager.BotPawnClass
	TArray<class AFortPawn*>                           BotPawns;                                                 // 0x0050(0x0010) (ZeroConstructor)
	TArray<class UFortBotMissionLogic*>                ActiveMissionsLogicData;                                  // 0x0060(0x0010) (ZeroConstructor)
	class UFortBotMissionLogic*                        PrimaryMissionLogicData;                                  // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0078(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBotMissionManager");
		return ptr;
	}

};


// Class FortniteGame.FortBotPawn
// 0x0000 (0x20F0 - 0x20F0)
class AFortBotPawn : public AFortAIPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBotPawn");
		return ptr;
	}

};


// Class FortniteGame.FortBotStructureBuilder
// 0x0038 (0x0360 - 0x0328)
class AFortBotStructureBuilder : public AActor
{
public:
	class UFortBuildingInstructions*                   BuildingInstructions;                                     // 0x0328(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TArray<class ABuildingActor*>                      BuiltActors;                                              // 0x0330(0x0010) (ZeroConstructor, Transient)
	class AActor*                                      CachedGoal;                                               // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0348(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBotStructureBuilder");
		return ptr;
	}


	void RunDeconstructor();
	void OnBuildingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void BuildAll();
};


// Class FortniteGame.FortBTService_ContextOverride
// 0x0000 (0x0070 - 0x0070)
class UFortBTService_ContextOverride : public UBTService
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTService_ContextOverride");
		return ptr;
	}

};


// Class FortniteGame.FortBTContext_MoveUrgency
// 0x0008 (0x0078 - 0x0070)
class UFortBTContext_MoveUrgency : public UFortBTService_ContextOverride
{
public:
	TEnumAsByte<EFortMovementUrgency>                  MoveUrgency;                                              // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTContext_MoveUrgency");
		return ptr;
	}

};


// Class FortniteGame.FortBTContext_SkipNotPerceivedGoals
// 0x0000 (0x0070 - 0x0070)
class UFortBTContext_SkipNotPerceivedGoals : public UFortBTService_ContextOverride
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTContext_SkipNotPerceivedGoals");
		return ptr;
	}

};


// Class FortniteGame.FortBTContext_SuppressGoalUpdate
// 0x0008 (0x0078 - 0x0070)
class UFortBTContext_SuppressGoalUpdate : public UFortBTService_ContextOverride
{
public:
	bool                                               bUnregisterFromGoalManager;                               // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTContext_SuppressGoalUpdate");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_CanBeConsideredAirborne
// 0x0000 (0x0090 - 0x0090)
class UFortBTDecorator_CanBeConsideredAirborne : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_CanBeConsideredAirborne");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_DistanceBetween
// 0x0068 (0x00D0 - 0x0068)
class UFortBTDecorator_DistanceBetween : public UBTDecorator
{
public:
	TEnumAsByte<EArithmeticKeyOperation>               Operator;                                                 // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FBlackboardKeySelector                      BlackboardKeyA;                                           // 0x0070(0x0028) (Edit)
	struct FBlackboardKeySelector                      BlackboardKeyB;                                           // 0x0098(0x0028) (Edit)
	float                                              SpecifiedDistance;                                        // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseSelf : 1;                                             // 0x00C4(0x0001)
	unsigned char                                      bCalculateAs2D : 1;                                       // 0x00C4(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	float                                              DistanceCalculationUpdateRate;                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_DistanceBetween");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_QueryGameplayAbility
// 0x0070 (0x00D8 - 0x0068)
class UFortBTDecorator_QueryGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                       // 0x0068(0x0020) (Edit)
	struct FBlackboardKeySelector                      Target;                                                   // 0x0088(0x0028) (Edit)
	struct FGameplayTagContainer                       ActiveAbilityTagsToSkipTesting;                           // 0x00B0(0x0020) (Edit)
	bool                                               bUseTarget;                                               // 0x00D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_QueryGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate
// 0x0000 (0x00D8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_CanActivate : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CanActivate");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget
// 0x0008 (0x00E0 - 0x00D8)
class UFortBTDecorator_GameplayAbility_CanHitTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:
	unsigned char                                      UseIdealYawRotationToTarget : 1;                          // 0x00D8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CanHitTarget");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance
// 0x0010 (0x00E8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_CompareDistance : public UFortBTDecorator_QueryGameplayAbility
{
public:
	TArray<struct FDistanceToTargetComparison>         DistanceComparisons;                                      // 0x00D8(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_CompareDistance");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags
// 0x0000 (0x00D8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_DoesTargetHaveProhibitedTags");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility
// 0x0020 (0x0088 - 0x0068)
class UFortBTDecorator_GameplayAbility_HasGameplayAbility : public UBTDecorator
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                       // 0x0068(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_HasGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown
// 0x0000 (0x00D8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_IsOnCooldown : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsOnCooldown");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget
// 0x0000 (0x00D8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_IsRotatedToAttackTarget : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsRotatedToAttackTarget");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange
// 0x0000 (0x00D8 - 0x00D8)
class UFortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange : public UFortBTDecorator_QueryGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_GameplayAbility_IsWithinMaxTargetSelectionRange");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_IsGoalPawn
// 0x0000 (0x0090 - 0x0090)
class UFortBTDecorator_IsGoalPawn : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_IsGoalPawn");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_IsTakerAirborne
// 0x0000 (0x0068 - 0x0068)
class UFortBTDecorator_IsTakerAirborne : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_IsTakerAirborne");
		return ptr;
	}

};


// Class FortniteGame.FortBTDecorator_WeaponStatus
// 0x0030 (0x0098 - 0x0068)
class UFortBTDecorator_WeaponStatus : public UBTDecorator
{
public:
	float                                              WeaponStatusUpdateRate;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTestIfCurrentWeaponIsValid : 1;                          // 0x006C(0x0001) (Edit)
	unsigned char                                      bCurrentWeaponShouldBeValid : 1;                          // 0x006C(0x0001) (Edit)
	unsigned char                                      bTestAllowedCurrentWeaponTags : 1;                        // 0x006C(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	struct FGameplayTagContainer                       AllowedCurrentWeaponTags;                                 // 0x0070(0x0020) (Edit)
	unsigned char                                      bTestIfCurrentWeaponIsReloading : 1;                      // 0x0090(0x0001) (Edit)
	unsigned char                                      bCurrentWeaponShouldBeReloading : 1;                      // 0x0090(0x0001) (Edit)
	unsigned char                                      bTestIfCurrentWeaponHasAmmoInMagazine : 1;                // 0x0090(0x0001) (Edit)
	unsigned char                                      bCurrentWeaponShouldHaveAmmoInMagazine : 1;               // 0x0090(0x0001) (Edit)
	unsigned char                                      bTestIfCurrentWeaponHasExtraAmmo : 1;                     // 0x0090(0x0001) (Edit)
	unsigned char                                      bCurrentWeaponShouldHaveExtraAmmo : 1;                    // 0x0090(0x0001) (Edit)
	unsigned char                                      bAllInterestedTestsMustPass : 1;                          // 0x0090(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTDecorator_WeaponStatus");
		return ptr;
	}

};


// Class FortniteGame.FortBTService_UpdateBotMissionBuilding
// 0x0050 (0x00C0 - 0x0070)
class UFortBTService_UpdateBotMissionBuilding : public UBTService
{
public:
	struct FBlackboardKeySelector                      InterestLocationKey;                                      // 0x0070(0x0028) (Edit)
	struct FBlackboardKeySelector                      BuildOrderKey;                                            // 0x0098(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTService_UpdateBotMissionBuilding");
		return ptr;
	}

};


// Class FortniteGame.FortBTService_UpdateBotMissionGoal
// 0x0008 (0x00A0 - 0x0098)
class UFortBTService_UpdateBotMissionGoal : public UBTService_BlackboardBase
{
public:
	unsigned char                                      bRequireInteraction : 1;                                  // 0x0098(0x0001) (Edit)
	unsigned char                                      bRequireInteractionOrLocator : 1;                         // 0x0098(0x0001) (Edit)
	unsigned char                                      bRequireEncounter : 1;                                    // 0x0098(0x0001) (Edit)
	unsigned char                                      bPickClosest : 1;                                         // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTService_UpdateBotMissionGoal");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_BotMissionBuild
// 0x0000 (0x0098 - 0x0098)
class UFortBTTask_BotMissionBuild : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_BotMissionBuild");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_BotMissionInteract
// 0x0000 (0x0098 - 0x0098)
class UFortBTTask_BotMissionInteract : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_BotMissionInteract");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_ExecuteGameplayAbility
// 0x0020 (0x0098 - 0x0078)
class UFortBTTask_ExecuteGameplayAbility : public UBTTask_GameplayTaskBase
{
public:
	struct FGameplayTagContainer                       GameplayAbilityTag;                                       // 0x0078(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_ExecuteGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_GameMoveTo
// 0x0040 (0x00F0 - 0x00B0)
class UFortBTTask_GameMoveTo : public UBTTask_MoveTo
{
public:
	struct FBlackboardKeySelector                      FocalPointWhileMoving;                                    // 0x00B0(0x0028) (Edit)
	TEnumAsByte<EPathObstacleAction>                   PathObstacleAction;                                       // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	class UClass*                                      PushBumpedPawnClass;                                      // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDetectUnexpectedPathBlockingObstacles : 1;               // 0x00E8(0x0001) (Edit)
	unsigned char                                      bEnableSlowdownAtGoal : 1;                                // 0x00E8(0x0001) (Edit)
	unsigned char                                      bFinishMoveOnOverlap : 1;                                 // 0x00E8(0x0001) (Edit, Config)
	unsigned char                                      bDeimosFlavor : 1;                                        // 0x00E8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_GameMoveTo");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_GameMoveDirectlyToward
// 0x0000 (0x00F0 - 0x00F0)
class UFortBTTask_GameMoveDirectlyToward : public UFortBTTask_GameMoveTo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_GameMoveDirectlyToward");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_RequestUndermining
// 0x0000 (0x0070 - 0x0070)
class UFortBTTask_RequestUndermining : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_RequestUndermining");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_SetFrustrationDiscouragement
// 0x0008 (0x0078 - 0x0070)
class UFortBTTask_SetFrustrationDiscouragement : public UBTTaskNode
{
public:
	float                                              DiscouragementDuration;                                   // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_SetFrustrationDiscouragement");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_Sleep
// 0x0000 (0x0070 - 0x0070)
class UFortBTTask_Sleep : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_Sleep");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_TakerMoveToNavmesh
// 0x0000 (0x00B0 - 0x00B0)
class UFortBTTask_TakerMoveToNavmesh : public UBTTask_MoveTo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_TakerMoveToNavmesh");
		return ptr;
	}

};


// Class FortniteGame.FortBTTask_TriggerVOEvent
// 0x0030 (0x00A0 - 0x0070)
class UFortBTTask_TriggerVOEvent : public UBTTaskNode
{
public:
	unsigned char                                      bUseFeedbackBank : 1;                                     // 0x0070(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FString                                     CustomEventName;                                          // 0x0078(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SelectedEvent;                                            // 0x0088(0x0010) (Edit, ZeroConstructor)
	class UFortFeedbackBank*                           FeedbackBank;                                             // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBTTask_TriggerVOEvent");
		return ptr;
	}

};


// Class FortniteGame.FortHealthSet
// 0x0298 (0x02C8 - 0x0030)
class UFortHealthSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  Health;                                                   // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxHealth;                                                // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CurrentShield;                                            // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Shield;                                                   // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DamageResistance;                                         // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DamageVulnerability;                                      // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReflectDamageAbsolute;                                    // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReflectDamageFromSource;                                  // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Armour;                                                   // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  HealingSourceBaseMultiplier;                              // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Damage;                                                   // 0x0170(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ShieldDamage;                                             // 0x0190(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  HealingSource;                                            // 0x01B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  HealingBonusTarget;                                       // 0x01D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Healing;                                                  // 0x01F0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0210(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHealthSet");
		return ptr;
	}


	void OnRep_Shield();
	void OnRep_MaxHealth();
	void OnRep_Health();
	void OnRep_CurrentShield();
};


// Class FortniteGame.FortBuildingActorSet
// 0x0040 (0x0308 - 0x02C8)
class UFortBuildingActorSet : public UFortHealthSet
{
public:
	struct FFortGameplayAttributeData                  BuildTime;                                                // 0x02C8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RepairTime;                                               // 0x02E8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingActorSet");
		return ptr;
	}


	void OnRep_RepairTime();
	void OnRep_BuildTime();
};


// Class FortniteGame.FortBuildingAudioBank
// 0x0480 (0x04B0 - 0x0030)
class UFortBuildingAudioBank : public UDataAsset
{
public:
	struct FFortBuildingSoundsPerResourceType          Sounds[0x4];                                              // 0x0030(0x0120) (Edit, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingAudioBank");
		return ptr;
	}

};


// Class FortniteGame.FortBuildingInstructions
// 0x00B8 (0x00E8 - 0x0030)
class UFortBuildingInstructions : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortBuildingInstructions.TemplateMap
	TArray<struct FFortBuildingInstruction>            Instructions;                                             // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, SaveGame)
	struct FBoxSphereBounds                            Bounds;                                                   // 0x0068(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, IsPlainOldData)
	int                                                NumOfPiecesToSpawnAtOnce;                                 // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenSpawns;                                        // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSetOwnerID;                                              // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	struct FString                                     MapName;                                                  // 0x0090(0x0010) (ZeroConstructor, SaveGame)
	unsigned char                                      UnknownData02[0x48];                                      // 0x00A0(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingInstructions");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponItemDefinition
// 0x0340 (0x0C10 - 0x08D0)
class UFortWeaponItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x08D0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWeaponItemDefinition.WeaponActorClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x08F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.WeaponMeshOverride
	struct FDataTableRowHandle                         WeaponStatHandle;                                         // 0x0920(0x0010) (Edit)
	struct FName                                       AlterationSlotsLoadoutRow;                                // 0x0930(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BaselineAlterationSlotsLoadoutRow;                        // 0x0938(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0940(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.BaseAlteration
	unsigned char                                      UnknownData03[0x28];                                      // 0x0968(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.BaseCosmeticAlteration
	unsigned char                                      UnknownData04[0x28];                                      // 0x0990(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWeaponItemDefinition.PrimaryFireAbility
	unsigned char                                      UnknownData05[0x28];                                      // 0x09B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWeaponItemDefinition.SecondaryFireAbility
	unsigned char                                      UnknownData06[0x28];                                      // 0x09E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWeaponItemDefinition.ReloadAbility
	unsigned char                                      UnknownData07[0x10];                                      // 0x0A08(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortWeaponItemDefinition.EquippedAbilities
	unsigned char                                      UnknownData08[0x28];                                      // 0x0A18(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.AmmoData
	float                                              LowAmmoPercentage;                                        // 0x0A40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DegradedPercentage;                                       // 0x0A44(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUsesCustomAmmoType;                                      // 0x0A48(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortWeaponTriggerType>                TriggerType;                                              // 0x0A49(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowTargetingDuringReload;                              // 0x0A4A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTargetingPreventsReload;                                 // 0x0A4B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysChargeUpToMin;                                     // 0x0A4C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0A4D(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData10[0x28];                                      // 0x0A4D(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.ReticleImage
	unsigned char                                      UnknownData11[0x28];                                      // 0x0A78(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.ReticleAutoFireImage
	TArray<float>                                      ReticleCornerAngles;                                      // 0x0AA0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData12[0x28];                                      // 0x0AB0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.HitNotifyImage
	unsigned char                                      UnknownData13[0x28];                                      // 0x0AD8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.HitNotifyLocationImage
	unsigned char                                      UnknownData14[0x28];                                      // 0x0B00(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.MuzzleBlockedImage
	unsigned char                                      UnknownData15[0x28];                                      // 0x0B28(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.ReticleCenterImage
	unsigned char                                      UnknownData16[0x28];                                      // 0x0B50(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.ReticleCenterPerfectAimImage
	struct FVector2D                                   ReticleCenterImageOffset;                                 // 0x0B78(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData17[0x28];                                      // 0x0B80(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.ReticleInvalidTargetImage
	bool                                               bReticleCornerOutsideSpreadRadius;                        // 0x0BA8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0BA9(0x0003) MISSED OFFSET
	float                                              HitNotifyDuration;                                        // 0x0BAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x28];                                      // 0x0BB0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponItemDefinition.HitNotifyOpacityCurve
	bool                                               bValidForLastEquipped;                                    // 0x0BD8(0x0001) (ZeroConstructor, IsPlainOldData)
	EFortDisplayTier                                   DisplayTier;                                              // 0x0BD9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x6];                                       // 0x0BDA(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       AnalyticTags;                                             // 0x0BE0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FName>                               ActualAnalyticFNames;                                     // 0x0C00(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponItemDefinition");
		return ptr;
	}


	bool TargetingPreventsReload();
	bool ShouldAllowTargetingDuringReload();
	bool HasUniqueAmmo();
	struct FDataTableRowHandle GetWeaponStatHandle();
	class USkeletalMesh* GetWeaponMeshOverride();
	class UClass* GetWeaponActorClass();
	bool GetUsesCustomAmmoType();
	TEnumAsByte<EFortWeaponTriggerType> GetTriggerType();
	struct FText GetShortDisplayName();
	class UClass* GetSecondaryFireAbility();
	class UTexture2D* GetReticleInvalidTargetImage();
	class UTexture2D* GetReticleImage();
	TArray<float> GetReticleCornerAngles();
	class UTexture2D* GetReticleCenterPerfectAimImage();
	struct FVector2D GetReticleCenterImageOffset();
	class UTexture2D* GetReticleCenterImage();
	class UTexture2D* GetReticleAutoFireImage();
	class UClass* GetReloadAbility();
	class UClass* GetPrimaryFireAbility();
	class UTexture2D* GetMuzzleBlockedImage();
	float GetLowAmmoPercentage();
	class UCurveFloat* GetHitNotifyOpacityCurve();
	class UTexture2D* GetHitNotifyLocationImage();
	class UTexture2D* GetHitNotifyImage();
	float GetHitNotifyDuration();
	TArray<class UClass*> GetEquippedAbilities();
	struct FText STATIC_GetDisplayTierAsText(EFortDisplayTier DisplayTier);
	EFortDisplayTier GetDisplayTier();
	float GetDegradedPercentage();
	class UFortAlterationItemDefinition* GetBaseCosmeticAlteration();
	class UFortAlterationItemDefinition* GetBaseAlteration();
	TArray<struct FName> GetAnalyticTags();
	bool AlwaysChargeUpToMin();
};


// Class FortniteGame.FortBuildingItemDefinition
// 0x0030 (0x0C40 - 0x0C10)
class UFortBuildingItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0C10(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortBuildingItemDefinition.BuildingMetaData
	unsigned char                                      UnknownData01[0x8];                                       // 0x0C38(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortBuildingTrapSet
// 0x00D0 (0x03D8 - 0x0308)
class UFortBuildingTrapSet : public UFortBuildingActorSet
{
public:
	struct FFortGameplayAttributeData                  Durability;                                               // 0x0308(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxDurability;                                            // 0x0328(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DurabilityCostPerFire;                                    // 0x0348(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ArmTime;                                                  // 0x0368(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReloadTime;                                               // 0x0388(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x30];                                      // 0x03A8(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingTrapSet");
		return ptr;
	}


	void OnRep_Durability();
};


// Class FortniteGame.FortCameraBase
// 0x0040 (0x0880 - 0x0840)
class AFortCameraBase : public ACameraActor
{
public:
	float                                              MinDistanceToDrag;                                        // 0x0840(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultFieldOfView;                                       // 0x0844(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    DefaultRotation;                                          // 0x0848(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     DefaultLocation;                                          // 0x0854(0x000C) (Transient, IsPlainOldData)
	class AFortExhibitActor*                           ExhibitActor;                                             // 0x0860(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bExhibitActorChanged;                                     // 0x0868(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               CheckForDragBegin;                                        // 0x0869(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x086A(0x0002) MISSED OFFSET
	struct FVector2D                                   DownDelta;                                                // 0x086C(0x0008) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0874(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCameraBase");
		return ptr;
	}


	void OnDragEnd();
	void OnDragBegin();
	void OnDeactivated();
	void OnActivated();
	void Exhibit(class AFortExhibitActor* TargetActor);
};


// Class FortniteGame.FortUICameraFrameInterface
// 0x0000 (0x0028 - 0x0028)
class UFortUICameraFrameInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUICameraFrameInterface");
		return ptr;
	}

};


// Class FortniteGame.FortItemPreviewBoundsInterface
// 0x0000 (0x0028 - 0x0028)
class UFortItemPreviewBoundsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemPreviewBoundsInterface");
		return ptr;
	}

};


// Class FortniteGame.FortUICameraFrameTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UFortUICameraFrameTargetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUICameraFrameTargetInterface");
		return ptr;
	}


	void SetFrameTargetSettingsChangedDelegate(const struct FScriptDelegate& Delegate);
	struct FFortUICameraFrameTargetSettings GetZoomedOutCameraFramingSettings();
	struct FFortUICameraFrameTargetSettings GetZoomedInCameraFramingSettings();
};


// Class FortniteGame.FortUICameraFramingFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortUICameraFramingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUICameraFramingFunctionLibrary");
		return ptr;
	}


	struct FFortUICameraFrameTargetBounds STATIC_CalculateComponentSetBoundsForCameraFraming();
	struct FFortUICameraFrameTargetBounds STATIC_CalculateComponentBoundsForCameraFraming(class USceneComponent* ParentComponent);
	struct FFortUICameraFrameTargetBounds STATIC_CalculateCharacterCapsuleForCameraFraming(class ACharacter* Character);
	struct FFortUICameraFrameTargetBounds STATIC_CalculateCharacterBoundsForCameraFraming(class AFortPlayerPawn* PlayerPawn);
	struct FFortUICameraFrameTargetBounds STATIC_CalculateActorBoundsForCameraFraming(class AActor* Actor);
};


// Class FortniteGame.FortCameraMode_ThirdPerson
// 0x0BD0 (0x0C20 - 0x0050)
class UFortCameraMode_ThirdPerson : public UFortCameraMode
{
public:
	float                                              FOV;                                                      // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraSpaceForwardDistance;                               // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bClampCameraPitch;                                        // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              CameraPitchMin;                                           // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraPitchMax;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECameraOrigin>                         CameraOrigin;                                             // 0x0064(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	struct FName                                       CameraOriginSocketName;                                   // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CameraOriginInterpSpeed;                                  // 0x0070(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FInterpOffset                               ViewTargetSpaceViewOffset;                                // 0x0080(0x0010) (Edit, BlueprintVisible)
	struct FInterpOffset                               ViewTargetSpaceViewOffset_Crouch;                         // 0x0090(0x0010) (Edit, BlueprintVisible)
	struct FVector                                     ViewTargetSpaceViewOffseInterpSpeed;                      // 0x00A0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	struct FInterpOffset                               CameraSpaceViewOffset;                                    // 0x00B0(0x0010) (Edit, BlueprintVisible)
	bool                                               bSupportsShoulderSwap;                                    // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x33];                                      // 0x00C1(0x0033) MISSED OFFSET
	struct FVector                                     LastCameraOrigin;                                         // 0x00F4(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     CameraOriginLocalOffset;                                  // 0x0100(0x000C) (Transient, IsPlainOldData)
	float                                              PenetrationBlendInTime;                                   // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PenetrationBlendOutTime;                                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPreventPenetration;                                      // 0x0114(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDoPredictiveAvoidance;                                   // 0x0115(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0116(0x0002) MISSED OFFSET
	float                                              CollisionPushOutDistance;                                 // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HidePawnPenetrationPercent;                               // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x38];                                      // 0x0120(0x0038) MISSED OFFSET
	struct FName                                       LastAttachSocketName;                                     // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FMinimalViewInfo                            LastBasePOV;                                              // 0x0160(0x0530) (Transient)
	struct FMinimalViewInfo                            DeltaBasePOV;                                             // 0x0690(0x0530) (Transient)
	float                                              BlendAlpha;                                               // 0x0BC0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x14];                                      // 0x0BC4(0x0014) MISSED OFFSET
	TArray<struct FPenetrationAvoidanceFeeler>         PenetrationAvoidanceFeelers;                              // 0x0BD8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              SafeLocToAimLineBlockedPct;                               // 0x0BE8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimLineToDesiredPosBlockedPct;                            // 0x0BEC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastDrawDebugTime;                                        // 0x0BF0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastViewTargetSpaceViewOffset;                            // 0x0BF4(0x000C) (Transient, IsPlainOldData)
	class AActor*                                      IgnoreActorForCameraPenetration;                          // 0x0C00(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bWasInVehicle : 1;                                        // 0x0C08(0x0001) (Transient)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0C09(0x0007) MISSED OFFSET
	class AActor*                                      PreviousIgnoreActorForCameraPenetration;                  // 0x0C10(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0C18(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCameraMode_ThirdPerson");
		return ptr;
	}

};


// Class FortniteGame.FortCameraMode_AthenaAircraft
// 0x0010 (0x0C30 - 0x0C20)
class UFortCameraMode_AthenaAircraft : public UFortCameraMode_ThirdPerson
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0C20(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCameraMode_AthenaAircraft");
		return ptr;
	}

};


// Class FortniteGame.FortCameraMode_AthenaVehicle
// 0x0010 (0x0C30 - 0x0C20)
class UFortCameraMode_AthenaVehicle : public UFortCameraMode_ThirdPerson
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0C20(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCameraMode_AthenaVehicle");
		return ptr;
	}

};


// Class FortniteGame.FortCampaignHeroLoadoutItem
// 0x0088 (0x0168 - 0x00E0)
class UFortCampaignHeroLoadoutItem : public UFortAccountItem
{
public:
	struct FString                                     loadout_name;                                             // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                loadout_index;                                            // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TMap<struct FString, struct FString>               crew_members;                                             // 0x00F8(0x0050) (ZeroConstructor)
	TArray<struct FFilledGadgetSlot>                   Gadgets;                                                  // 0x0148(0x0010) (ZeroConstructor)
	TArray<struct FFortCrewSlot>                       CrewMembers;                                              // 0x0158(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCampaignHeroLoadoutItem");
		return ptr;
	}

};


// Class FortniteGame.FortCampaignHeroLoadoutItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortCampaignHeroLoadoutItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortCrewSlotInformation>            CrewSlots;                                                // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCampaignHeroLoadoutItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCardPackItem
// 0x0020 (0x0100 - 0x00E0)
class UFortCardPackItem : public UFortAccountItem
{
public:
	TArray<struct FMcpLootEntry>                       Options;                                                  // 0x00E0(0x0010) (ZeroConstructor)
	struct FString                                     pack_source;                                              // 0x00F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCardPackItem");
		return ptr;
	}


	bool IsChoicePack();
	void GetChoices(TArray<class UFortAccountItemDefinition*>* Choices);
	bool CanStoreOpen();
};


// Class FortniteGame.FortCardPackItemDefinition
// 0x0090 (0x0420 - 0x0390)
class UFortCardPackItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                               bIsLlama;                                                 // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	struct FString                                     LootTierGroup;                                            // 0x0398(0x0010) (Edit, ZeroConstructor)
	int                                                LootTier;                                                 // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsChoicePack;                                            // 0x03AC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoOpenAsReward;                                        // 0x03AD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x03AE(0x0002) MISSED OFFSET
	int                                                DisplayRarityLevel;                                       // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x03B4(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortCardPackItemDefinition.PackImage
	struct FLinearColor                                PackColor;                                                // 0x03E0(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x03F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortCardPackItemDefinition.PackPersonality
	unsigned char                                      UnknownData05[0x8];                                       // 0x0418(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCardPackItemDefinition");
		return ptr;
	}


	bool IsLlama();
	bool IsChoicePack();
	class UFortPackPersonality* GetPackPersonality();
	class UTexture* GetPackImage();
	struct FLinearColor GetPackColor();
};


// Class FortniteGame.FortCarriedObject
// 0x0168 (0x0490 - 0x0328)
class AFortCarriedObject : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	class UProjectileMovementComponent*                ProjectileComp;                                           // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	struct FCarriedObjectAttachmentInfo                HolderInfo;                                               // 0x0350(0x0028) (Net)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0378(0x0028) MISSED OFFSET
	struct FVector                                     IndicatorRelativeOffset;                                  // 0x03A0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	struct FSlateBrush                                 Indicator;                                                // 0x03B0(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateColor                                 DefaultIndicatorColor;                                    // 0x0438(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector                                     RelativeTranslation;                                      // 0x0460(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x046C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bPickupOnTouch;                                           // 0x0478(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x0479(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x047A(0x0006) MISSED OFFSET
	class ABuildingFlagSpawn*                          SpawnPointActor;                                          // 0x0480(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0488(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCarriedObject");
		return ptr;
	}


	void ReturnToSpawnPoint();
	void OnRep_HolderInfo(struct FCarriedObjectAttachmentInfo* PreviousInfo);
	class AActor* GetHoldingActor();
};


// Class FortniteGame.FortCarriedObjectHolderInterface
// 0x0000 (0x0028 - 0x0028)
class UFortCarriedObjectHolderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCarriedObjectHolderInterface");
		return ptr;
	}


	void OnCarriedObjectDetach(class AActor* DetachedObject);
	void OnCarriedObjectAttach(class AActor* AttachedObject);
	void GetCarriedObjectAttachmentInfo(struct FCarriedObjectAttachmentInfo* OutAttachInfo);
	class USceneComponent* GetAttachmentComponent(const struct FName& SocketName);
	bool CanHoldObject(class AActor* CarriableObject);
};


// Class FortniteGame.FortCarriedObjectInterface
// 0x0000 (0x0028 - 0x0028)
class UFortCarriedObjectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCarriedObjectInterface");
		return ptr;
	}

};


// Class FortniteGame.FortChallengeBundleItem
// 0x0018 (0x00F8 - 0x00E0)
class UFortChallengeBundleItem : public UFortAccountItem
{
public:
	TArray<struct FString>                             GrantedQuestInstanceIds;                                  // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                num_quests_completed;                                     // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                num_progress_quests_completed;                            // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChallengeBundleItem");
		return ptr;
	}


	void GetQuests(class UFortQuestManager* QuestManager, EChallengeBundleQuestVisualStyle QuestStyle, bool bGetAllQuestsInChain, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests);
	float GetPercentageComplete();
	class UFortChallengeBundleItemDefinition* GetChallengeDefinitionBP();
	void GetAchievedCount(int* OutTotalAchievedCount, int* OutTotalRequiredCount);
};


// Class FortniteGame.FortChallengeBundleItemDefinition
// 0x0070 (0x0400 - 0x0390)
class UFortChallengeBundleItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleQuestEntry>      QuestInfos;                                               // 0x0390(0x0010) (Edit, ZeroConstructor)
	struct FString                                     EventName;                                                // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FText                                       ShortName;                                                // 0x03B0(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       ShortNameNumber;                                          // 0x03C8(0x0018) (Edit, DisableEditOnInstance)
	TArray<struct FFortChallengeBundleRewards>         BundleCompletionRewards;                                  // 0x03E0(0x0010) (Edit, ZeroConstructor)
	EChallengeBundleVisualStyle                        VisualStyle;                                              // 0x03F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	int                                                MaxChainDepth;                                            // 0x03F4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChallengeBundleItemDefinition");
		return ptr;
	}


	bool IsLinearChainQuest(class UFortQuestItemDefinition* InQuestDef, int* ChainLength, int* ChainPos);
	EChallengeBundleVisualStyle GetVisualStyle();
	struct FText GetShortNameNumber();
	struct FText GetShortName();
	int GetRewardCompletionThreshold();
	void GetQuests(class UFortQuestManager* QuestManager, EChallengeBundleQuestVisualStyle QuestStyle, TArray<class UFortQuestItem*> GrantedQuests, bool bGetAllQuestsInChain, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests);
	int GetNumVisibleQuests();
	int GetNumQuests();
	struct FString GetEventName();
	TArray<struct FAthenaRewardItemReference> GetCompletionRewards();
};


// Class FortniteGame.FortChallengeBundleScheduleDefinition
// 0x0050 (0x03E0 - 0x0390)
class UFortChallengeBundleScheduleDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortChallengeBundleScheduleEntry>   ScheduleEntries;                                          // 0x0390(0x0010) (Edit, ZeroConstructor)
	struct FString                                     EventName;                                                // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       CategoryId;                                               // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       CategoryName;                                             // 0x03B8(0x0018) (Edit, DisableEditOnInstance)
	int                                                SortPriority;                                             // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CleanUpOnBundleCompletion;                                // 0x03D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x03D5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChallengeBundleScheduleDefinition");
		return ptr;
	}


	int GetSortPriority();
	int GetNumBundles();
	struct FString GetEventName();
	struct FText GetCategoryName();
	struct FName GetCategoryID();
	TArray<class UFortChallengeBundleItemDefinition*> GetBundleDefinitions();
	bool DoesChallengeBundleScheduleExpire();
};


// Class FortniteGame.FortChallengeBundleScheduleItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortChallengeBundleScheduleItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChallengeBundleScheduleItem");
		return ptr;
	}


	class UFortChallengeBundleScheduleDefinition* GetScheduleDefinitionBP();
	float GetPercentageComplete();
	void GetAchievedCount(int* OutTotalAchievedCount, int* OutTotalRequiredCount);
};


// Class FortniteGame.FortCharacter
// 0x0018 (0x00F8 - 0x00E0)
class UFortCharacter : public UFortAccountItem
{
public:
	struct FString                                     squad_id;                                                 // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                squad_slot_idx;                                           // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacter");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterCosmeticItem
// 0x0010 (0x00F0 - 0x00E0)
class UFortCharacterCosmeticItem : public UFortAccountItem
{
public:
	struct FString                                     equipped_character_id;                                    // 0x00E0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterCosmeticItem");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterCosmeticItemDefinition
// 0x0050 (0x03E0 - 0x0390)
class UFortCharacterCosmeticItemDefinition : public UFortAccountItemDefinition
{
public:
	TEnumAsByte<EFortCharacterCosmetic>                Cosmetic_Type;                                            // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x10];                                      // 0x0391(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortCharacterCosmeticItemDefinition.Hero_Types_Allowed
	bool                                               bModifyColor;                                             // 0x03A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x03A9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortCharacterCosmeticItemDefinition.ColorAlteration
	unsigned char                                      UnknownData04[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterCosmeticItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterCosmeticManager
// 0x0140 (0x0168 - 0x0028)
class UFortCharacterCosmeticManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x140];                                     // 0x0028(0x0140) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterCosmeticManager");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterTooltip
// 0x0020 (0x00B0 - 0x0090)
class UFortCharacterTooltip : public UFortAccountItemTooltip
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0090(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortCharacterType
// 0x0000 (0x0390 - 0x0390)
class UFortCharacterType : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCharacterType");
		return ptr;
	}

};


// Class FortniteGame.FortChat
// 0x0000 (0x0058 - 0x0058)
class UFortChat : public UChatroom
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChat");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerController
// 0x1388 (0x1A00 - 0x0678)
class AFortPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0678(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputFiltered;                                          // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0698(0x0018) MISSED OFFSET
	unsigned char                                      bFailedToRespawn : 1;                                     // 0x06B0(0x0001) (Net)
	unsigned char                                      bIsDisconnecting : 1;                                     // 0x06B0(0x0001)
	unsigned char                                      bIsBeingKicked : 1;                                       // 0x06B0(0x0001)
	unsigned char                                      bHasInitiallySpawned : 1;                                 // 0x06B0(0x0001) (Net)
	unsigned char                                      bAssignedStartSpawn : 1;                                  // 0x06B0(0x0001)
	unsigned char                                      bReadyToStartMatch : 1;                                   // 0x06B0(0x0001)
	unsigned char                                      bClientPawnIsLoaded : 1;                                  // 0x06B0(0x0001)
	unsigned char                                      UnknownData02[0x3];                                       // 0x06B1(0x0003) MISSED OFFSET
	struct FVector                                     SpawnLoc;                                                 // 0x06B4(0x000C) (Transient, IsPlainOldData)
	int                                                NumPreviousSpawns;                                        // 0x06C0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBlueprintReadyCheckCompleted;                           // 0x06C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x30];                                      // 0x06D8(0x0030) MISSED OFFSET
	TArray<class AFortAIPawn*>                         ManagedAIs;                                               // 0x0708(0x0010) (ZeroConstructor, Transient)
	class AFortPlayerPawn*                             MyFortPawn;                                               // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasClientFinishedLoading;                                // 0x0720(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasServerFinishedLoading;                                // 0x0721(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0722(0x0002) MISSED OFFSET
	float                                              TimeStartedWaiting;                                       // 0x0724(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeFinishedNavigationBuild;                              // 0x0728(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PendingSpectatorLocation;                                 // 0x072C(0x000C) (IsPlainOldData)
	TWeakObjectPtr<class AActor>                       ActorUnderReticle;                                        // 0x0738(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       AutoFireReticleTarget;                                    // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                AutofireTimerHandle;                                      // 0x0748(0x0008) (Transient)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0750(0x0008) MISSED OFFSET
	TWeakObjectPtr<class ABuildingWeakSpot>            WeakspotUnderReticle;                                     // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FBuildingWeakSpotData>               ActiveWeakSpots;                                          // 0x0760(0x0010) (ZeroConstructor, Transient)
	float                                              LastActiveTime;                                           // 0x0770(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x34];                                      // 0x0774(0x0034) MISSED OFFSET
	class UInputComponent*                             VehicleInputComponent;                                    // 0x07A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              AutoFireReticleWeaponDistanceScale;                       // 0x07B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSupportNextPieceAssist;                                  // 0x07B4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNoControllerLighting;                                    // 0x07B5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1A];                                      // 0x07B6(0x001A) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMcpProfilesInitializedEvent;                            // 0x07D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData09[0x208];                                     // 0x07E0(0x0208) MISSED OFFSET
	class UAudioComponent*                             LongInteractAudioComponent;                               // 0x09E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData10[0x18];                                      // 0x09F0(0x0018) MISSED OFFSET
	class UFortInteractContextInfo*                    PossibleInteractContextInfo;                              // 0x0A08(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortInteractContextInfo*                    InteractResponse;                                         // 0x0A10(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      InteractActor;                                            // 0x0A18(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x14];                                      // 0x0A20(0x0014) MISSED OFFSET
	float                                              MobileUpdateCachedInteractActorsCooldown;                 // 0x0A34(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MobileUpdateCachedInteractActorsCooldownLength;           // 0x0A38(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bWantsToSprint;                                           // 0x0A3C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHoldingSprint;                                           // 0x0A3D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSprintToggleable;                                        // 0x0A3E(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSprintByDefault;                                         // 0x0A3F(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSprintCancelsReload;                                     // 0x0A40(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSprintWasCancelledByReload;                              // 0x0A41(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAutoRunOn;                                               // 0x0A42(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTapInteractEnabled;                                      // 0x0A43(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTargetingToggleable;                                     // 0x0A44(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMovementDisabledDueToCancellableAction;                  // 0x0A45(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPlayerActivelyMoving;                                  // 0x0A46(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1];                                       // 0x0A47(0x0001) MISSED OFFSET
	int                                                InMovementCancellableAction;                              // 0x0A48(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHoldingUse;                                              // 0x0A4C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRetryUse;                                                // 0x0A4D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowRetryUse;                                           // 0x0A4E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsClientTimingOut;                                       // 0x0A4F(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ClientTimeoutBlockInputTime;                              // 0x0A50(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LastMoveInputTime;                                        // 0x0A54(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastPressGamepadSprintTime;                               // 0x0A58(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAutoRunWasHoldingForward;                                // 0x0A5C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAtNameBaseScreen;                                        // 0x0A5D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bInventoryToggledByAlt;                                   // 0x0A5E(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x0A5F(0x0001) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSetFirstPersonCamera;                                   // 0x0A60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData14[0x8];                                       // 0x0A70(0x0008) MISSED OFFSET
	class UClass*                                      CinematicCameraClassOverride;                             // 0x0A78(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bOnPressExecuteJetpack;                                   // 0x0A80(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x1F];                                      // 0x0A81(0x001F) MISSED OFFSET
	class UFortInteractContextInfo*                    AutoDoorInteractResponse;                                 // 0x0AA0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnUiChoiceCompleted;                                      // 0x0AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRegainedFocus;                                          // 0x0AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleFullscreenMap;                                    // 0x0AC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOpenVoteDialog;                                         // 0x0AD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData16[0x258];                                     // 0x0AE8(0x0258) MISSED OFFSET
	bool                                               bIsInQuickToggleCursorMode;                               // 0x0D40(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bGamepadAbilityPending;                                   // 0x0D41(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForceAllowCursorMode;                                    // 0x0D42(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bForceAllowCameraMode;                                    // 0x0D43(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bDragDropPending;                                         // 0x0D44(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSuppressEventNotifications;                              // 0x0D45(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x6A];                                      // 0x0D46(0x006A) MISSED OFFSET
	float                                              LastSpotTime;                                             // 0x0DB0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0DB4(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AFortMarkActor>>       CurrentMarks;                                             // 0x0DB8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData19[0x50];                                      // 0x0DC8(0x0050) MISSED OFFSET
	class UFortGameplayAbility*                        PreviewAbility;                                           // 0x0E18(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FAIDirectorDebugInfo                        IntensityGraphInfo;                                       // 0x0E20(0x0028) (Net)
	struct FAIDirectorDebugInfo                        PIDValuesGraphInfo;                                       // 0x0E48(0x0028) (Net)
	struct FAIDirectorDebugInfo                        PIDContributionsGraphInfo;                                // 0x0E70(0x0028) (Net)
	class AFortCombatManager*                          CombatManager;                                            // 0x0E98(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortAIDirectorDataManager*                  AIDirectorDataManager;                                    // 0x0EA0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortMusicManager*                           MusicManager;                                             // 0x0EA8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0xE0];                                      // 0x0EB0(0x00E0) MISSED OFFSET
	class UInputComponent*                             BuildPreviewModeInputComponent;                           // 0x0F90(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ABuildingPlayerPrimitivePreview*             BuildPreviewMarker;                                       // 0x0F98(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData21[0x30];                                      // 0x0FA0(0x0030) MISSED OFFSET
	bool                                               bAllowBuildingPreviewAutoRotation;                        // 0x0FD0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData22[0xA7];                                      // 0x0FD1(0x00A7) MISSED OFFSET
	class ABuildingActor*                              TargetedBuilding;                                         // 0x1078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortAthenaVehicle*                          TargetedVehicle;                                          // 0x1080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      ContextualConversionClass;                                // 0x1088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0x28];                                      // 0x1090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlayerController.StartUpgradeSound
	TArray<class ABuildingActor*>                      HighlightedPrimaryBuildings;                              // 0x10B8(0x0010) (ZeroConstructor, Transient)
	TArray<class ABuildingActor*>                      HighlightedInteractionBuildings;                          // 0x10C8(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class ABuildingActor>               HighlightedPrimaryBuilding;                               // 0x10D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x28];                                      // 0x10E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlayerController.BuildPreviewMarkerParentMaterial
	TArray<class UMaterialInstanceDynamic*>            BuildPreviewMarkerMIDs;                                   // 0x1108(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      BuildPreviewRotationIterations;                           // 0x1118(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData25[0x3];                                       // 0x1119(0x0003) MISSED OFFSET
	unsigned char                                      bBuildPreviewMirrored : 1;                                // 0x111C(0x0001) (Transient)
	unsigned char                                      bBuildFree : 1;                                           // 0x111C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      bCraftFree : 1;                                           // 0x111C(0x0001) (Net, Transient)
	unsigned char                                      UnknownData26[0x3];                                       // 0x111D(0x0003) MISSED OFFSET
	TEnumAsByte<EFortCostInfoTypes>                    CurrentCostInfoType;                                      // 0x1120(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData27[0x7];                                       // 0x1121(0x0007) MISSED OFFSET
	class UClass*                                      CurrentBuildableClass;                                    // 0x1128(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      PreviousBuildableClass;                                   // 0x1130(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortResourceLevel>                    CurrentResourceLevel;                                     // 0x1138(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortResourceType>                     CurrentResourceType;                                      // 0x1139(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData28[0x6];                                       // 0x113A(0x0006) MISSED OFFSET
	struct FLastBuildableState                         LastBuildableStateData[0xC];                              // 0x1140(0x0010) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x10];                                      // 0x1200(0x0010) MISSED OFFSET
	TArray<struct FFortDamageNumberInfo>               QueuedDamageNumbers;                                      // 0x1210(0x0010) (ZeroConstructor, Transient)
	class AFortDamageNumbersActor*                     DamageNumbersActor;                                       // 0x1220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInputComponent*                             EditModeInputComponent;                                   // 0x1228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ABuildingSMActor*                            EditBuildingActor;                                        // 0x1230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EditModeDistance;                                         // 0x1238(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastBuildPreviewGridSnapLoc;                              // 0x123C(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    LastBuildPreviewGridSnapRot;                              // 0x1248(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastBuildPreviewGridSnapCentroid;                         // 0x1254(0x000C) (Transient, IsPlainOldData)
	class UInputComponent*                             PickerInputComponent;                                     // 0x1260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AFortDecoHelper*                             TrapPickerDecoHelper;                                     // 0x1268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FHitResult>                          TouchEditResults;                                         // 0x1270(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData30[0x8];                                       // 0x1280(0x0008) MISSED OFFSET
	class AFortQuickBars*                              QuickBars;                                                // 0x1288(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x30];                                      // 0x1290(0x0030) MISSED OFFSET
	TArray<struct FString>                             PinnedSchematics;                                         // 0x12C0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData32[0x90];                                      // 0x12D0(0x0090) MISSED OFFSET
	unsigned char                                      bAutoEquipBetterItems : 1;                                // 0x1360(0x0001) (Net)
	unsigned char                                      UnknownData33[0x7];                                       // 0x1361(0x0007) MISSED OFFSET
	class AFortInventory*                              WorldInventory;                                           // 0x1368(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortInventory*                              OutpostInventory;                                         // 0x1370(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData34[0x4C];                                      // 0x1378(0x004C) MISSED OFFSET
	bool                                               bHasInitializedWorldInventory;                            // 0x13C4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasInitializedHeroInventory;                             // 0x13C5(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAccountInventoryWasUpdated;                              // 0x13C6(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsSavingGadgetLoadout;                                   // 0x13C7(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData35[0x60];                                      // 0x13C8(0x0060) MISSED OFFSET
	class UFortClientPilot_Base*                       BotPilot;                                                 // 0x1428(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData36[0x18];                                      // 0x1430(0x0018) MISSED OFFSET
	class UFortClientBotManager*                       BotManager;                                               // 0x1448(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData37[0x8];                                       // 0x1450(0x0008) MISSED OFFSET
	class UClass*                                      ClientBotManagerClass;                                    // 0x1458(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortCustomizationAssetLoader*               LocalPawnCustomizationAssetLoader;                        // 0x1460(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData38[0x18];                                      // 0x1468(0x0018) MISSED OFFSET
	bool                                               bDropWeaponsDuringAllMissionStates;                       // 0x1480(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData39[0x1F];                                      // 0x1481(0x001F) MISSED OFFSET
	struct FFortRewardReport                           LatestRewardReport;                                       // 0x14A0(0x0070) (Net)
	class UFortRegisteredPlayerInfo*                   MyPlayerInfo;                                             // 0x1510(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FFortUpdatedObjectiveStat>           UpdatedObjectiveStats;                                    // 0x1518(0x0010) (Net, ZeroConstructor)
	bool                                               bHasUnsavedPrimaryMissionProgress;                        // 0x1528(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData40[0x47];                                      // 0x1529(0x0047) MISSED OFFSET
	class UStatManager*                                StatManager;                                              // 0x1570(0x0008) (ZeroConstructor, IsPlainOldData)
	class UHeartbeatManager*                           HeartbeatManager;                                         // 0x1578(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortStatEventManager*                       StatEventManager;                                         // 0x1580(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FFortPersistentGameplayStatContainer        CachedPersistentGameplayStats;                            // 0x1588(0x0010)
	unsigned char                                      UnknownData41[0x10];                                      // 0x1598(0x0010) MISSED OFFSET
	class UFortMontageItemDefinitionBase*              LastEmotePlayed;                                          // 0x15A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<class UFortMontageItemDefinitionBase*, int>   EmoteUsageCounts;                                         // 0x15B0(0x0050) (ZeroConstructor, Transient)
	class UMcpProfileGroup*                            McpProfileGroup;                                          // 0x1600(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMcpProfileCommonPublic*                 CommonPublicMcpProfile;                                   // 0x1608(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMcpProfileCommonCore*                   CommonCoreMcpProfile;                                     // 0x1610(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMcpProfileCampaign*                     MainMcpProfile;                                           // 0x1618(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMcpProfileAthena*                       AthenaProfile;                                            // 0x1620(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMcpProfileMetadata*                     MetadataProfile;                                          // 0x1628(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bTutorialCompleted : 1;                                   // 0x1630(0x0001) (Net, Transient)
	unsigned char                                      UnknownData42[0x3];                                       // 0x1631(0x0003) MISSED OFFSET
	bool                                               bShouldReceiveCriticalMatchBonus;                         // 0x1634(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x3];                                       // 0x1635(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnServerPlayerChangedBuildMode;                           // 0x1638(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAutoRunEnabled;                                         // 0x1648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData44[0x110];                                     // 0x1658(0x0110) MISSED OFFSET
	struct FVector                                     LocationUnderReticle;                                     // 0x1768(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      bEnableVoiceChatPTT : 1;                                  // 0x1774(0x0001) (Transient)
	unsigned char                                      bInfiniteAmmo : 1;                                        // 0x1774(0x0001) (Net, Transient)
	unsigned char                                      bNoCoolDown : 1;                                          // 0x1774(0x0001) (Net, Transient)
	unsigned char                                      bInfiniteDurability : 1;                                  // 0x1774(0x0001) (Net, Transient)
	unsigned char                                      bUsePickers : 1;                                          // 0x1774(0x0001) (Transient, Config)
	unsigned char                                      bPickerOpen : 1;                                          // 0x1774(0x0001) (Transient)
	unsigned char                                      bCheatGhost : 1;                                          // 0x1774(0x0001) (Net, Transient)
	unsigned char                                      bCheatFly : 1;                                            // 0x1774(0x0001) (Net, Transient)
	unsigned char                                      UnknownData45 : 1;                                        // 0x1775(0x0001)
	unsigned char                                      bEnableShotLogging : 1;                                   // 0x1775(0x0001) (Net, Transient)
	unsigned char                                      bIsNearActiveEncounters : 1;                              // 0x1775(0x0001) (Net, Transient)
	unsigned char                                      UnknownData46[0x2];                                       // 0x1776(0x0002) MISSED OFFSET
	int                                                OverriddenBackpackSize;                                   // 0x1778(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           AimHelpMode;                                              // 0x177C(0x0004) (Net, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EFortJumpStaminaCost>                  JumpStaminaCost;                                          // 0x1780(0x0001) (Net, ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      UnknownData47[0x7];                                       // 0x1781(0x0007) MISSED OFFSET
	struct FName                                       CameraPrototypeName;                                      // 0x1788(0x0008) (Net, ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      UnknownData48[0x10];                                      // 0x1790(0x0010) MISSED OFFSET
	bool                                               bHideHudEnglishText;                                      // 0x17A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTurboBuild;                                              // 0x17A1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData49[0x2];                                       // 0x17A2(0x0002) MISSED OFFSET
	float                                              TurboBuildFirstInterval;                                  // 0x17A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TurboBuildInterval;                                       // 0x17A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAutoChangeMaterial;                                      // 0x17AC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData50[0x3];                                       // 0x17AD(0x0003) MISSED OFFSET
	float                                              EmoteOffCooldownTime;                                     // 0x17B0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SprayOffCooldownTime;                                     // 0x17B4(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class AFortSprayDecalInstance*>             ActiveSprayInstances;                                     // 0x17B8(0x0010) (ZeroConstructor, Transient)
	TArray<class AActor*>                              ActiveToyInstances;                                       // 0x17C8(0x0010) (ZeroConstructor, Transient)
	TMap<class UClass*, int>                           ToySummonCounts;                                          // 0x17D8(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData51[0x138];                                     // 0x1828(0x0138) MISSED OFFSET
	class ABuildingSMActor*                            PendingEnterModeActor;                                    // 0x1960(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                RandomCharacterIndex;                                     // 0x1968(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AntiAddictionPlayTimeMultiplier;                          // 0x196C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData52[0x2C];                                      // 0x1970(0x002C) MISSED OFFSET
	struct FLockOnInfo                                 LockOnInfo;                                               // 0x199C(0x0038) (Transient)
	unsigned char                                      UnknownData53[0x4];                                       // 0x19D4(0x0004) MISSED OFFSET
	class UFortIndicatorManager*                       IndicatorManager;                                         // 0x19D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData54[0x20];                                      // 0x19E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerController");
		return ptr;
	}


	void UnMutePlayer(const struct FUniqueNetIdRepl& UniqueNetId);
	void TogglePersonalVehicle(bool bOn);
	void ToggleInventory();
	void ToggleFullScreenMap();
	void ToggleClientBot();
	void SwapQuickBarFocus(EFortQuickBars InQuickBar, int SlotOverride);
	void SuppressEventNotifications(bool bSuppress);
	void Suicide();
	bool StartReadyCheck(const struct FText& QueryText, const struct FText& YesText, const struct FText& NoText, float PercentageToPass);
	class AActor* SpawnToyInstance(class UClass* ToyClass, const struct FTransform& SpawnPosition);
	void SetRotatePawnToCamera(bool bNewRotatePawnToCamera);
	void SetLockOnTargetStickCoords(const struct FVector2D& Coords);
	void SetInputYawScale(float InInputYawScale);
	void SetInputPitchScale(float InInputPitchScale);
	void SetFullscreenMapVisible(bool Visible);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetCinematicOverrideClass(class UClass* OverrideCameraClass);
	void SetCinematicModeWithWeapon(bool bInCinematicMode, bool bHidePlayer, bool bHideWeapon, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning);
	void SetBuildingHighlight(TArray<class ABuildingActor*> TargetedBuildings, TEnumAsByte<EBuildingHighlightType> HighlightType, bool bValidHighlight);
	void SetAtNameHomeBaseScreen(bool AtScreen);
	void ServerUpgradeBuildingActor(class ABuildingActor* BuildingActorToUpgrade, int NewUpgradeLevel);
	void ServerUIChoiceCompleted(int ChosenItem, int MenuIdentifier);
	void ServerTriggerGenericObjectiveEvent(class AFortObjectiveBase* Objective);
	void ServerTriggerCombatEventBatch(TArray<struct FFortCombatManagerEvent> Payload);
	void ServerTriggerCombatEvent(TEnumAsByte<EFortCombatEvents> TriggeredEvent, float HeatMultiplier);
	void ServerTouchActiveTime();
	void ServerTeleportToReticle(const struct FVector& TeleportLocation);
	void ServerTeamChatRoomReady(const struct FString& ChatRoomId);
	void ServerSuicide();
	void ServerStartPIDValueGraphing();
	void ServerStartPIDContributionsGraphing();
	void ServerStartIntensityGraphing();
	void ServerSpotActor(class AActor* NewlySpottedActor);
	void ServerSpawnMark(class AActor* ActorToAttachTo, const struct FVector& AttachOffset, const struct FText& PreapprovedText);
	void ServerSetShouldUsePilotComponent(bool InValue);
	void ServerSetShouldUseBotManager(bool InValue);
	void ServerSetReadyToContinue(bool bReady, TEnumAsByte<EFortGameplayState> RequestedState, bool bTryStartTimer);
	void ServerSetPartyOwner(const struct FUniqueNetIdRepl& PartyOwnerUniqueId);
	void ServerSetMarkText(class AFortMarkActor* MarkActor, const struct FString& MarkText);
	void ServerSetInventoryStateValue(const struct FGuid& ItemGuid, const struct FFortItemEntryStateValue& StateValue);
	void ServerSetHero(const struct FString& NewHeroID);
	void ServerSetClientHasFinishedLoading(bool bInHasFinishedLoading);
	void ServerSetAutoEquipBetterItems(bool bAutoEquip);
	void ServerSetAntiAddictionPlayTimeMultiplier(float NewPlayTimeRewardRate);
	void ServerSendClientProgressUpdate(int ClientProgressState, TArray<uint64_t> ClientProgressUpdate);
	void ServerReturnToMainMenu();
	void ServerRequestGameplayAction(TEnumAsByte<EFortRequestedGameplayAction> RequestedAction);
	void ServerRequestAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent);
	void ServerRequestAIDebug();
	void ServerReportClientFPS(float ClientAvgFPS, unsigned char ClientAvgFrameScore, unsigned char ClientMaxFrameScore);
	void ServerReplyToReadyCheck(bool bReady);
	void ServerRepairBuildingActor(class ABuildingSMActor* BuildingActorToRepair);
	void ServerRemoveInventoryStateValue(const struct FGuid& ItemGuid, TEnumAsByte<EFortItemEntryState> StateValueType);
	void ServerRemoveInventoryItem(const struct FGuid& ItemGuid, int Count, bool bForceRemoveFromQuickBars, bool bForceRemoval);
	void ServerRemoveDefender(class ABuildingTrapDefender* DefenderTrap);
	void ServerReleaseInventoryItemKey(EFortQuickBars InQuickBar, int Slot);
	void ServerReadyToStartMatch();
	void ServerPlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void ServerPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor, TEnumAsByte<EFortTeam> RequiredTeam);
	void ServerModifyStat(const struct FName& StatName, int Amount, EStatMod ModType, bool bForceStatSave);
	void ServerModDurability(const struct FGuid& ItemGuid, float DurabilityMod, bool bForceSet);
	void ServerLoadingScreenDropped();
	void ServerKillAllAIPawnsAroundPlayer();
	void ServerKickPlayer(const struct FUniqueNetIdRepl& PlayerToKick, const struct FText& Reason);
	void ServerItemWillBeDestroyed(const struct FGuid& DestroyedItemGuid, int Count);
	void ServerHandleMissionEvent_ToggledEditMode(class AFortPlayerController* PlayerThatToggledEditMode, class ABuildingSMActor* EditableActor, bool bOpened);
	void ServerHandleMissionEvent_ToggledCursorMode(class AFortPlayerController* PlayerThatToggledCursorMode, bool bOpened);
	void ServerHandleMissionEvent_StartLeavingZone();
	void ServerGiftInventoryItemToOtherPlayer(const struct FGuid& ItemGuid, const struct FUniqueNetIdRepl& PlayerID, int Quantity);
	void ServerExecutePresetTeamChat(const struct FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ServerExecuteInventoryItem(const struct FGuid& ItemGuid);
	void ServerEndEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing);
	void ServerEmote(const struct FName& AssetName);
	void ServerEditBuildingActor(class ABuildingSMActor* BuildingActorToEdit, class UClass* NewBuildingClass, int RotationIterations, bool bMirrored);
	void ServerDropCarriedObject();
	void ServerDropAllItems(class UFortItemDefinition* IgnoreItemDef);
	void ServerDisassembleInventoryItems(TArray<struct FGuid> ItemGuids, TArray<int> ItemCounts);
	void ServerDeployDefender(class ABuildingTrapDefender* DefenderTrap, const struct FString& SelectedItemInstanceId, const struct FName& DefenderSquadId, const struct FGuid& WeaponToGiveGuid, int AmmoQuantity);
	void ServerCreateCombatManager();
	void ServerCreateBuildingActor(const struct FBuildingClassData& BuildingClassData, const struct FVector_NetQuantize10& BuildLoc, const struct FRotator& BuildRot, bool bMirrored, float SyncKey);
	void ServerCreateAIDirectorDataManager();
	void ServerCraftSchematic(const struct FString& ItemId, int PostCraftSlot, bool bIsQuickCrafted);
	void ServerCombineInventoryItems(const struct FGuid& TargetItemGuid, const struct FGuid& SourceItemGuid);
	void ServerClientPawnLoaded(bool bIsPawnLoaded);
	void ServerCheatAll(const struct FString& Msg);
	void ServerCheat(const struct FString& Msg);
	void ServerBroadcastUIFeedbackEvent(const struct FName& EventName);
	void ServerBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToEdit);
	void ServerAttemptUnpinSchematic(const struct FString& ItemId, bool bSave);
	void ServerAttemptPinSchematic(const struct FString& ItemId, bool bSave);
	void ServerAttemptInventoryDrop(const struct FGuid& ItemGuid, int Count);
	void ServerAttemptInteract(class AActor* ReceivingActor, class UPrimitiveComponent* InteractComponent, TEnumAsByte<ETInteractionType> InteractType, class UObject* OptionalObjectData);
	void ServerAnnouncementStoppedOnClient(const struct FGuid& AnnouncementID);
	void ServerAddPawnMovementInput(class AFortPawn* InChar, const struct FVector& WorldDirection, float ScaleValue, bool bForce);
	void SendMessage(const struct FText& MESSAGE);
	void ReturnToMainMenu();
	void ResetInputRotationScale();
	void RemoveItemFromQuickBars(class UFortItemDefinition* ItemDefinition);
	void PrintEventInfo();
	void PrintDebugInfo();
	void PostHeroStatSkillPointsEarned(int NumSkillPoints);
	void PostHeroStatMissionCompleted(int DifficultyRating);
	void PostHeroStatCollectionBookProgressMade(int LevelReached);
	void PlaySpatialSound(class USoundBase* Sound, const struct FVector& Location);
	void PlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void OpenVoteDialog();
	void OpenChoiceUI(const struct FChoiceData& ChoiceData);
	void OnRep_UpdatedUnsavedPrimaryMissionProgress();
	void OnRep_UpdatedObjectiveStats();
	void OnRep_QuickBar();
	void OnRep_PinnedSchematics();
	void OnRep_PIDValuesGraphInfo();
	void OnRep_PIDContributionsGraphInfo();
	void OnRep_LatestRewardReport();
	void OnRep_IntensityGraphInfo();
	void OnRep_CombatManager();
	void OnRep_CheatMovement();
	void OnRep_bHasServerFinishedLoading();
	void OnDisplayHitMarker(const struct FGameplayTagContainer& HitTags, TEnumAsByte<EFortDamageZone> Zone);
	void MutePlayer(const struct FUniqueNetIdRepl& UniqueNetId);
	void ModifyStat(const struct FName& StatName, int Amount, EStatMod ModType, bool bForceStatSave);
	void LocalStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FName& Tag);
	void LocalPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, const struct FName& Tag);
	void LocalOverrideBuildMode(bool bVisible, class UClass* InBuildingClass, const struct FVector& BuildingOverrideDistance, class UMaterialInterface* PreviewMaterial, const struct FVector& NewScale, const struct FRotator& NewRotation);
	void LocalOnUiChoiceCompleted(int ChosenItem, int MenuIdentifier);
	void LocalOnBlueprintEdit(class ABuildingSMActor* EditedActor);
	class UFortItem* K2_GetInventoryItemWithGuid(const struct FGuid& ItemGuid);
	class UFortInteractContextInfo* K2_GetInteractResponse();
	class UFortItem* K2_FindExistingItemForDefinition(class UFortItemDefinition* ItemDefinition, bool bInStorageVault);
	bool IsUsingTouch();
	bool IsUsingHarvestingTool();
	bool IsUsingGamepad();
	bool IsUsingFirstPersonCamera();
	bool IsRequirementsMet(const struct FFortRequirementsInfo& InRequirements);
	bool IsPlayingEmote();
	bool IsPersonalVehicleAvailable();
	bool IsPersonalVehicleActive();
	bool IsNearActiveEncounters();
	bool IsInRespawnCountdown();
	bool IsInBuildMode();
	bool IsFullscreenMapVisible();
	bool IsClientTimingOut();
	bool IsClientBot();
	bool IsBuildToolOverridden();
	bool IsActionInputIgnored();
	void HideFullScreenMap();
	bool HasPermissionToEditWorld(class ABuildingActor* Building, const struct FVector& Location, const struct FRotator& Rotation);
	bool HasLockOnTarget();
	void HandleWorldInventoryLocalUpdate();
	void HandleOutpostInventoryLocalUpdate();
	void GivePlayerAmmo(int AmmoCount);
	float GetTimeRemainingForRespawnBP();
	bool GetRotatePawnToCamera();
	class UFortRegisteredPlayerInfo* GetRegisteredPlayerInfo();
	class UAthenaCharacterItemDefinition* GetRandomDefaultAthenaCharacterDefinition(class UFortMcpProfileAthena* McpAthenaProfile);
	class UFortQuestManager* GetQuestManager(ESubGame SubGame);
	class AFortPlayerPawn* GetPlayerPawn();
	ELockOnState GetLockOnState();
	struct FUniqueNetIdRepl GetGameAccountId();
	bool GetForceAllowCameraMode();
	class UFortCollectionBookManager* GetCollectionBookManager();
	class ABuildingSMActor* GetBuildPreviewMarker();
	class UFortAwardManager* GetAwardManager(ESubGame SubGame);
	bool GetAtNameHomeBaseScreen();
	class AFortAIDirectorDataManager* GetAIDirectorDataManager();
	class AActor* GetActorUnderReticle();
	int GetAccountLevel();
	class UFortAccountItem* GetAccountItem(const struct FString& ID);
	void FortClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void FortClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);
	void ForceUpdateQuickbar(EFortQuickBars QuickbarToRefresh);
	void ForceCancelBuildingTool();
	void FixupInteractionWidgetsOnUnzoom();
	void Emote(const struct FName& AssetName);
	void DumpHomebaseRatingInfo();
	void DropAllItems(class UFortItemDefinition* IgnoreItemDef);
	void DeployDefender(class ABuildingTrapDefender* DefenderTrap, class UFortDefenderItem* DefenderItem, const struct FName& DefenderSquadId, class UFortItem* WeaponItem, int AmmoQuantity);
	void ClientUpdateRichPresence(ERichPresenceStateChange RichPresenceChange, bool bImportant);
	void ClientUpdatePlayerList();
	void ClientTriggerUIFeedbackEvent(const struct FName& EventName);
	void ClientTellServerEnteredPlayspace(class AFortPlayspace* EnteredPlayspace);
	void ClientStopUIFeedbackEvent(const struct FName& EventName);
	void ClientStayWithParty(bool bStayWithParty);
	void ClientSpawnWeakSpotOnBuildingActor(const struct FBuildingWeakSpotData& ReplicatedWeakSpotData);
	void ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation);
	void ClientSetInviteFlags(const struct FJoinabilitySettings& Settings);
	void ClientSetActionMappingEnabled(const struct FName& ActionName, bool bEnabled);
	void ClientSendMessage(const struct FText& MESSAGE);
	void ClientSendConfirmationMessage(const struct FText& ConfirmationMessage, bool bClientQuitAfterMessage);
	void ClientResendLoadoutConfig(bool bPrepareLoadoutConfig, bool bRequestPlayerList, bool bRequestControllerSpec);
	void ClientRequestReadyCheck(const struct FText& QueryText, const struct FText& YesText, const struct FText& NoText);
	void ClientReportDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, TEnumAsByte<EFortResourceType> PotentialResourceType, int PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot);
	void ClientRegisterWithParty();
	void ClientRefreshPlayerList();
	void ClientReceivePresetTeamChat(const struct FText& ChatText, const struct FUniqueNetIdRepl& SenderID);
	void ClientReceivedAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent, TArray<struct FAttributeModifierInfo> Sources);
	void ClientReadyCheckComplete(bool bPassed);
	void ClientPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor);
	void ClientOpenChoiceUI(const struct FChoiceData& ChoiceItems);
	void ClientOnGenericPlayerInitialization();
	void ClientJoinConsoleSession(const struct FString& ConsoleSession);
	void ClientGivePlayerLocalAccountItem(class UFortAccountItemDefinition* ItemDefinition, int Count);
	void ClientForceProfileQuery();
	void ClientForceCancelBuildingTool();
	void ClientFinishedInteractionInZone();
	void ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay, bool bForceExecute, bool bActivateSlotAfterSettingFocused);
	void ClientCreateOrJoinChatRoom(const struct FString& ChatRoomId);
	void ClientCancelCrafting();
	void ClientBotEnqueueCommand(const struct FString& CommandToEnqueue);
	void ClientAddScoreNumber(int Score, EStatCategory ScoreCategory, const struct FVector_NetQuantize& ScoreLocation, bool bDisplayScoreOnPlayer);
	void ClientAddHeroSpecialization(class UFortHeroSpecialization* NewSpecialization);
	void CheatAll(const struct FString& Msg);
	void Cheat_ForcePlayEmoteItem(class UFortMontageItemDefinitionBase* EmoteAsset);
	void Cheat_ForceAthenaCosmeticItemInSlot(class UFortAccountItemDefinition* CosmeticItem, EAthenaCustomizationCategory Slot, int Index);
	void Cheat_ClearForcedCosmeticItems();
	void Cheat(const struct FString& Msg);
	void AddItemToQuickBars(class UFortItemDefinition* ItemDefinition, EFortQuickBars QuickBarType, int SlotIndex);
	void ActivateSlot(EFortQuickBars InQuickBar, int Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot);
};


// Class FortniteGame.FortCheatManager
// 0x0050 (0x00C8 - 0x0078)
class UFortCheatManager : public UCheatManager
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0078(0x0010) MISSED OFFSET
	unsigned char                                      bDebugInteractTrace : 1;                                  // 0x0088(0x0001)
	unsigned char                                      bDebugPickupSpline : 1;                                   // 0x0088(0x0001)
	unsigned char                                      bDebugFloorsOnMiniMap : 1;                                // 0x0088(0x0001)
	unsigned char                                      bEnableScoreboard : 1;                                    // 0x0088(0x0001)
	unsigned char                                      bDebugBounceCurve : 1;                                    // 0x0088(0x0001)
	unsigned char                                      bDebugBeautyMode : 1;                                     // 0x0088(0x0001) (Transient)
	unsigned char                                      bDisplayWindDebugging : 1;                                // 0x0088(0x0001) (Transient)
	unsigned char                                      bDebugStructuralSupportSystem : 1;                        // 0x0088(0x0001) (Transient)
	unsigned char                                      bInfiniteStamina : 1;                                     // 0x0089(0x0001) (Transient)
	unsigned char                                      bShowGameDifficultyHUD : 1;                               // 0x0089(0x0001) (Transient)
	unsigned char                                      bShowIntensityHUD : 1;                                    // 0x0089(0x0001) (Transient)
	unsigned char                                      bShowSpawnPointsHUD : 1;                                  // 0x0089(0x0001) (Transient)
	unsigned char                                      bShowMaxAIHUD : 1;                                        // 0x0089(0x0001) (Transient)
	unsigned char                                      bShowItemIDsOnCards : 1;                                  // 0x0089(0x0001) (Transient)
	unsigned char                                      bEnableContextMenus : 1;                                  // 0x0089(0x0001) (Transient)
	unsigned char                                      bUnlimitedHealth : 1;                                     // 0x0089(0x0001) (Transient)
	unsigned char                                      bUnlimitedAIHealth : 1;                                   // 0x008A(0x0001) (Transient)
	unsigned char                                      bPickersUseLeftThumbstick : 1;                            // 0x008A(0x0001) (Transient)
	unsigned char                                      bFreezeAILOD : 1;                                         // 0x008A(0x0001) (Transient)
	unsigned char                                      bForceAILOD : 1;                                          // 0x008A(0x0001) (Transient)
	unsigned char                                      bUnlockAllDefenders : 1;                                  // 0x008A(0x0001) (Transient)
	unsigned char                                      bUseNewFrontEndCameraManagement : 1;                      // 0x008A(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x1];                                       // 0x008B(0x0001) MISSED OFFSET
	EFortAILODLevel                                    ForcedAILODValue;                                         // 0x008C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x008D(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortCheatManager.TransparentTextureData
	unsigned char                                      UnknownData04[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCheatManager");
		return ptr;
	}


	void WriteLootReport();
	void WannaGun();
	void ViewStuck();
	void UnlockAllZones();
	void UnlockAllDefenders(bool inUnlockAllDefenders);
	void UnforceAILODs();
	void TutorialRemoveHighlight(const struct FName& Highlight);
	void TutorialRemoveHidden(const struct FName& Hidden);
	void TutorialListHighlights();
	void TutorialListHidden();
	void TutorialListAll();
	void TutorialAddHighlight(const struct FName& Highlight);
	void TutorialAddHidden(const struct FName& Hidden);
	void TriggerOutOfStaminaFeedback();
	void ToggleWindDebugVolumeDisplay();
	void ToggleWindDebugDisplay(float NewRefreshRate);
	void ToggleWindDebugDeltaBoundsDisplay();
	void ToggleWalkOnWalls();
	void ToggleVoiceDebug();
	void ToggleUtilitiesGraph();
	void ToggleUseNewItemCards();
	void ToggleUnlimitedHealth();
	void ToggleUnlimitedAIHealth();
	void ToggleTreeVisibility();
	void ToggleSpawnPointsHUD();
	void ToggleShotLogging();
	void ToggleSecondaryMissionHeaders();
	void TogglePlaysets();
	void TogglePlayerNames();
	void TogglePIDValuesGraph();
	void TogglePIDContributionsGraph();
	void TogglePickupSpline();
	void TogglePickers();
	void ToggleNoCoolDown();
	void ToggleNewFrontEndCameraManagement();
	void ToggleMustUseJetpackToggle();
	void ToggleMaxAIHUD();
	void ToggleLogCharacterCustomization();
	void ToggleItemIdsOnCards();
	void ToggleInWorldScoreNumbers();
	void ToggleInvincibleCornerstones();
	void ToggleInteractTrace();
	void ToggleIntensityHUD();
	void ToggleIntensityGraph();
	void ToggleInfiniteStamina();
	void ToggleInfiniteDurability();
	void ToggleInfiniteAmmo();
	void ToggleIndestructibleKeep();
	void ToggleHeroVisibility();
	void ToggleGameDifficultyHUD();
	void ToggleFreezeAILOD();
	void ToggleForceUsingGamepad();
	void ToggleFloorsOnMiniMap();
	void ToggleFactorGraph();
	void ToggleExplorationLogging();
	void ToggleExplorationBadgeView();
	void ToggleEncounterModifierTags();
	void ToggleEncounterEQSDebug();
	void ToggleDrawTurnTransitionDebug();
	void ToggleDrawTargetSelectionDebugByClass(class UClass* TargetSelectionDebugSourceClass);
	void ToggleDrawTargetSelectionDebug();
	void ToggleDrawRunVariationDebug();
	void ToggleDebugHUDObjectiveHeight();
	void ToggleContextMenus();
	void ToggleCombatGraph();
	void ToggleCharacterHeadAccessories();
	void ToggleCharacterBackpack();
	void ToggleBuildingHighlights();
	void ToggleBuildingActorsTransparency();
	void ToggleAutoSlotting();
	void ToggleAISpawning();
	void ToggleAISpawnCap();
	void ToggleAIDirectorLogging();
	void ToggleAIDespawning();
	void ToggleAIAnim();
	void TestUpgradeOutpostItem(const struct FString& ItemTemplateId);
	void TestTournamentOver();
	void TestStun(float StunStime);
	void TestSetOutpostDefenseActive(bool bActive);
	void TestSafeZoneLocations(int NumPasses, int PhaseToDraw);
	void TestRegenId();
	void TestOutpostUI();
	void TestLeaveGame();
	void TestKnockback(float KnockbackMagnitude, float KnockbackZAngle);
	void TestJoin();
	void TestEncryptAPI(const struct FString& InUserId, const struct FString& InSessionId);
	void TestDisconnect();
	void TestCloseClientConfirmationMessage();
	void TestCheckBansAtMatchStart();
	void TestChangePartySize(int NewSize);
	void TestChangePartyPrivacy(bool bPrivate, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void TestCancelLobby();
	void TestBanhammer(const struct FString& InUserId, int BanCode, const struct FString& BanReason, int DesiredAction, int BanhammerActivation, int BanhammerTiming, int BanhammerMessageType, const struct FString& BanhammerCustomMessage, const struct FString& BanhammerDetails);
	void TestAddingNonTeamPlayerStates();
	void TeleportToMissionActor();
	void TeleportToLocation(float X, float Y, float Z);
	void TeleportToActor(const struct FString& ClassOrInstanceName);
	void SwitchTeam();
	void SwapPickerThumbstick();
	void StopHighlights();
	void StopDummyDebugEncounter();
	void StartLiveStreamingWindow(float Seconds);
	void SpawnScriptedPawnsInFormation(const struct FString& ProfileName, int RowWidth, int ColumnDepth, float Spacing);
	class AFortPlayerPawn* SpawnScriptedPawn(const struct FString& ProfileName);
	void SpawnPickup(const struct FString& ItemName, int NumItems, float SpawnDistance, float SpawnRotation);
	class AFortPawn* SpawnPawn(const struct FString& PawnType);
	class AFortPlayerPawn* SpawnEnemyPlayer(float MaxHealth, float MaxShield);
	void SpawnContainer(const struct FString& ContainerClassName);
	void SpawnAIGroupWithUpgrade(const struct FString& SpawnGroupName, const struct FString& UpgradeName);
	void SpawnAIGroupFromExternalSpawner(const struct FString& SpawnGroupName);
	void SpawnAIGroup(const struct FString& SpawnGroupName);
	void SkipSafeZones();
	void SkipAircraft();
	void SimulateLootDrops();
	void SimulateLoot(const struct FName& TierGroup, int LootTier, int LootLevel);
	void ShowHUDElement(const struct FGameplayTag& HUDElementTag);
	void ShowHighlightSummary();
	void ShowGameplayCaptureUI();
	void ShowAllMinimapIcons();
	void ShowActiveGameplayModifiers();
	void SetWorldLevel(float Level);
	void SetWorldDaysElapsed(float days);
	void SetWallTimer(float Seconds);
	void SetTeam(int TeamIndex);
	void SetShieldPercent(float Percent);
	void SetScriptedPawnTargeting(bool bIsTargeting);
	void SetScriptedPawnRotation(float Yaw);
	void SetScriptedPawnLocation(float X, float Y, float Z);
	void SetSafeZoneRadius(float NewRadius);
	void SetSafeZoneLocationToPlayer();
	void SetRespawnTimerOverride(float TimeUntilRespawn);
	void SetReplStat(TEnumAsByte<EFortReplicatedStat> Stat, int Amount);
	void SetRandomAircraftFlightPath();
	void SetPvPStalemateTime(int NumSeconds);
	void SetPvPRoundTime(int NumSeconds, int CriticalThreshold);
	void SetMaxClouds(int MaxClouds);
	void SetLFG(bool bLFG);
	void SetJumpStaminaCost(const struct FName& ModeName);
	void SetInteractionDistances(float InteractionDistance, float InteractionHighlightDistance);
	void SetInteractExtent(float Extent);
	void SetInputPresetName(const struct FString& PresetName);
	void SetHordePlotExpansionSize(int XSize, int YSize, int ZSize);
	void SetHeroLevel(int Level);
	void SetHeroClass(const struct FString& NewHeroName, int Level);
	void SetHealthPercent(float Percent);
	void SetHasSeenSeasonSixTrailer(bool bInHasSeen);
	void SetGlobalWind(float Magnitude, float HeadingDegrees);
	void SetGameStat(const struct FString& StatName, int Amount);
	void SetGameDifficultyOverride(float GameDifficultyOverrideValue);
	void SetFrameSyncMode(int Mode);
	void SetEventCalendarTime(const struct FString& TimeString);
	void SetEncounterTopUtilityPercentages(const struct FString& UtilitiesAndPercentages);
	void SetEncounterSpawnPointsCurve(const struct FString& CurveName);
	void SetEncounterSpawnPointsCap(int SpawnPointsCap);
	void SetEncounterSimulatedNumberOfPlayers(int NumPlayers);
	void SetEncounterGraphsHistoryLength(int Seconds);
	void SetEncounterDirections(TArray<TEnumAsByte<EFortEncounterDirection>> Directions);
	void SetDifficultyIncreaseRewardTier(int RewardTier);
	void SetCurrentEncounterToDebug(int EncounterIndex);
	void SetCullValues(float MinCullObjectSize, float MinCullDistance, float MaxCullObjectSize, float MaxCullDistance);
	void SetCrossplayPreference(int NewPreference);
	void SetConsole60FPSMode(bool bEnabled);
	void SetCombatGraphHistoryLength(int Seconds);
	void SetCloudAltitude(float CloudAltitude);
	void SetCapturePercentage(float NewCapturePercentage);
	void SetCameraPrototype(const struct FName& ProtoName);
	void SetCameraFOVMultiplier(float Multiplier);
	void SetCameraDistanceMultiplier(float XMultiplier, float YMultiplier, float ZMultiplier);
	void SetAthenaHeroOnScriptedPawn(const struct FString& NewHeroName);
	void SetAthenaHero(const struct FString& NewHeroName);
	void SetAircraftFlightPath(float StartDegrees, float OffsetFactor);
	void SetAimMode(uint32_t Mode);
	void SetActionMappingEnabled(const struct FName& Action, bool bEnabled);
	void SendTwitchToastNotification(const struct FString& Title, const struct FString& Description);
	void SendRemoteBotCommand(const struct FString& CommandToSend);
	void SendQuestEvent(const struct FName& Type, const struct FName& TargetTag, const struct FName& SourceTag, const struct FName& ContextTag);
	void SendMissionEvent(const struct FString& MissionEventName);
	void SaveCreativePlot();
	void RunPerfMemCheatScript(bool bStartStatFiles);
	void RunPawnScriptLocally(const struct FString& ProfileName);
	void RunMonteCarlo(int X, int Y, const struct FString& TileGroup, int NumIterations);
	void ReviveFromDBNO();
	void RespawnPlayerServer();
	void RespawnPlayer();
	void ResetWall();
	void ResetPlayspace();
	void ResetMaxAITracking();
	void ResetLastSeenAthenaStoreRefreshTime();
	void ResetForcedAthenaCosmeticItems();
	void ResetEncounterWave();
	void ReRandomizeTiles();
	void ReplayLastPerfTest(const struct FString& Params);
	void RemoveGameplayModifier(const struct FString& ModifierName);
	void RemoveDebugSpawnAIGroupTag(const struct FName& Tag);
	void RemoveDebugEncounterTag(const struct FName& Tag);
	void ReloadUMG();
	void ReloadUI();
	void ReInitHUD();
	void RegenerateZoneMissionsWithDifficultyLevel(float DifficultyLevelOverride);
	void RegenerateZoneMissions();
	void RefreshTournamentManager();
	void RefreshTheaters();
	void RefreshEventWindow(const struct FString& EventWindowId);
	void RefreshAllCalendars();
	void RedoHuskSpecialEventModifiers(float TargetRate);
	void QueryHighlightCount();
	void PrintTileWorld();
	void PrintShotReport();
	void PrintScriptedActionManagerState();
	void PlayAthenaEmoteOnScriptedPawn(const struct FString& EmoteName);
	void PlaceInCurrentEventWindow(int NumElims, int FinalPlacement, const struct FString& TeamType);
	void PerfMemStatMonitor(const struct FString& ToggleState);
	void Pain(float Amount);
	void OpenAllContainersAndWriteLootEconomy();
	void ModItemDurability(float InValue);
	void MMS(const struct FString& Command);
	void MissionForceSuccess(const struct FString& MissionName, float FractionCompleted);
	void MissionForcePrimarySuccess(float FractionCompleted);
	void MissionForceFailure(const struct FString& MissionName);
	void McpUpgradeItem(const struct FString& ItemToUpgrade);
	void McpTestVerifyProfileToken();
	void McpTestFriendCodes_OnQueryUnredeemedFriendCodes(bool bSuccess, TArray<struct FFriendCode> FriendCodes);
	void McpTestFriendCodes(const struct FString& TokenId);
	void McpStorageTransfer(TArray<struct FString> ItemIdsToMoveToOutpost, TArray<struct FString> ItemIdsToMoveToTheater);
	void McpSlotItem(const struct FString& ItemToSlot);
	void McpResetPersistence();
	void McpRefreshProfile();
	void McpRefreshCatalog();
	void McpRedeemPurchases();
	void McpRecycleItem(const struct FString& ItemToRecycle);
	void McpPrintPartyInviteToken(bool OnlyPrintIfJoinable);
	void McpPrintFriendInviteToken(const struct FString& FriendName, bool OnlyPrintIfJoinable);
	void McpOpenCardPack(const struct FString& CardPackItemId, int SelectionIdx);
	void McpLogout();
	void McpJoinFromPartyInviteToken(const struct FString& Token, bool bIsFromInvite);
	void McpIssueCodeToken(const struct FString& TokenId);
	void McpHostGetPlayers();
	void McpHostGetAllPlayerCachedPersistence();
	void McpGetVersion();
	void McpGetUnredeemedCodes();
	void McpGetSchematicXP();
	void McpGetPrivacySettings();
	void McpGetPersonnelXP();
	void McpGetHexMission();
	void McpGetCurrencyAmount();
	void McpGetCachedPersistence();
	void McpForceHttpFailRate(float Factor);
	void McpEquipCharCosmetic(const struct FString& CharacterId, const struct FString& CosmeticId, int CosmeticType);
	void McpEarnScore(int ScoreAmount);
	void McpConvertItem(const struct FString& ItemToConvert, int ConversionIdx);
	void McpCompleteHexMission();
	void McpClaimAllResourceCollectors(bool bDebugPrint);
	void McpClaimAllAvailableCollectionBookRewards();
	void McpCheat();
	void McpApplyStash(const struct FString& StashName);
	void McpApplyAlteration(const struct FString& Schematic, const struct FString& Alteration);
	void MassSuicide();
	void MakeGods(class UClass* aClass);
	void MakeBuildingActorsGod();
	void MakeAIsGod();
	void LoadMissionGenerator(const struct FString& GeneratorName);
	void LoadMission(const struct FString& MissionName);
	void LoadCreativePlot();
	void LiveStreamingSelectedViewers(TArray<struct FString> Names);
	void ListWeapons();
	void ListTraps();
	void ListSpawnGroups();
	void ListPlayerIDs();
	void ListMissions();
	void ListMissionGenerators();
	void ListGadgets();
	void ListEmotes();
	void ListConsumables();
	void ListCheats();
	void ListAthenaEmotes();
	void ListAmmo();
	void ListAIUtilities();
	void ListActiveEncounters();
	void KillPawns(class UClass* aClass);
	bool STATIC_IsUsingNewFrontEndCameraManagement();
	bool STATIC_IsAutoSlottingEnabled();
	void HideHUDElement(const struct FGameplayTag& HUDElementTag);
	void HideGameplayCaptureUI();
	void GrantHeroTacticalAbility(const struct FString& SupportHeroName, int Level);
	void GrantHeroSupportAbility(const struct FString& SupportHeroName, int Level);
	void GoFast(float NewSpeed);
	void GiveWood(int Amount);
	void GiveWeaponToScriptedPawn(const struct FString& WeaponName);
	void GiveWeapons(const struct FName& Tag);
	void GiveWeapon(const struct FString& WeaponName, int RequestedLevel, int Count);
	void GiveUsefulThings(int NumOfUsefulThings);
	void GiveTrap(const struct FString& TrapName, int RequestedLevel, int NumTrapsToGive);
	void GiveStone(int Amount);
	void GiveSpecificItem(const struct FString& ItemPath, int ItemAmount, int ItemLevel);
	void GiveSBA(const struct FString& StrategicBuildingName);
	void GiveResources(int Amount);
	void GivePickaxe(const struct FString& PickName);
	void GiveMetal(int Amount);
	void GiveHeroSpecialization(const struct FString& SpecializationName);
	void GiveGoodWeapons();
	void GiveGadgets(const struct FString& GadgetName, int Quantity, int ItemLevel);
	void GiveGadget(const struct FString& GadgetName, int ItemLevel);
	void GiveDeployablePlotAllIngredients(int NumIngredients);
	void GiveConsumable(const struct FString& ConsumableName, int RequestedLevel, int Count);
	void GiveCheatInventory();
	void GiveBluGlo(int Amount);
	void GiveAthenaWeapons();
	void GiveAthenaTraps();
	void GiveAthenaLoadout();
	void GiveAthenaFullKit();
	void GiveAthenaConsumables();
	void GiveAthenaAmmo();
	void GiveAmmo(const struct FString& AmmoNameAndAmmount);
	void GiveAllWeapons();
	void GiveAllTraps(int NumItems);
	void GiveAllShotguns();
	void GiveAllRifles();
	void GiveAllPistols();
	void GiveAllMelee();
	void GiveAllIngredients(int NumIngredients);
	void GiveAllConsumables(int NumItems);
	void GetWTFRotations();
	void GetWorldLevel();
	void GetWorldDifficulty();
	void GetReplStat(TEnumAsByte<EFortReplicatedStat> Stat);
	void GetPoiVolumeData();
	void GetPoiInfoForPlayer();
	void GetGameStat(const struct FString& StatName);
	void GetAllReplStats();
	void GenerateTravelLogEntries(int Count);
	void GeneratePolysInPathingRange(float MaxDistance, float MinDistance);
	void GenerateMockMatchReport();
	void FortniteForceCharLOD(int LOD);
	void ForceUnlockHordeTiers(int MaxTierNumber);
	void ForceSetHeroRemoteCharacter(int PartyMemberIndex, bool bEnabled);
	void ForceServerShutdown(int ExitCode);
	void ForceSaveWholeCreativePlot();
	void ForceSaveMissionStateAndWorld(const struct FString& SaveFileName);
	void ForceInputFilter(EFortInputFilterLevel InputFilter);
	void ForceHeroType(const struct FString& HeroPersistentName);
	void ForceExternalRichPresenceUpdate();
	void ForceAthenaCosmeticItemInSlot(const struct FString& TemplateId, EAthenaCustomizationCategory Slot, int SlotIndex);
	void ForceAthenaCosmeticItem(const struct FString& TemplateId);
	void ForceAILODs(EFortAILODLevel inForcedAILODValue);
	void FakeKillHighlight();
	void FakeDownHighlight();
	void ExtAuthReset(bool bWipeDeviceAccountInfo);
	void ExecuteNewMissionGeneration(float DifficultyLevel, const struct FString& GeneratorName);
	void EvolveHero();
	void EnvPain(float Amount);
	void EndLiveStreamingWindow();
	void EncounterTopUtilityPercentages();
	void EncounterSpawnProbabilities();
	void EncounterSetDifficultyLevel(float NewDifficulty);
	void EncounterInitialUtilities();
	void EncounterCurrentUtilities();
	void EnableSubtitles(bool bEnable);
	void EnableNewCustomizationPanel(bool bEnable);
	void EnableFixedTimeStep(int AsIfItWasFPS);
	void DumpMatchAnalytics();
	void DumpGameStats(const struct FString& FilterName);
	void DumpAppliedHomebaseEffectsWithCoreAttributes();
	void DumpAllActorsWithAssetTags();
	void DumpAllActiveMissions();
	void DumpActorsWithAssetTags(const struct FString& TagList);
	void DumpActiveGameplayEffects();
	void DiscardAILogging();
	void DisableAI();
	void DevSkipTutorial();
	void DestroyAllScriptedPawns();
	void DebugUseDedicatedServer(bool bUse);
	void DebugThisAI();
	void DebugStructuralSupport();
	void DebugSanitizeMessage(const struct FString& MesageToSanitize);
	void DebugLoadingScreen(const struct FString& MissionGen, bool bShowBullets);
	void DebugKickPlayerDueToInactivity();
	void DebugHotSpots();
	void DebugHideLoadingScreen();
	void DebugForceEnsure();
	void DebugBuildingGroups();
	void DebugBuildingDetection();
	void DebugAttributeModifiers();
	void DebugAttributeClear();
	void DebugAttribute(struct FString* Attribute);
	void DebugAbilityTags();
	void DBNO();
	void CycleTheaterDisplayed();
	void CycleEncounterEQSQueryToDebug();
	void CycleCurrentEncounterToDebug();
	void CraftFree();
	void CountPlayerBuiltBuildingActors();
	void ConstructTileWorld(int MaxTiles, int X, int Y);
	void ClearRespawnTimer();
	void ClearMapFog();
	void ClearKeepSave();
	void ClearEncounterSpawnPointsCurve();
	void ClearEncounterSpawnPointsCap();
	void ClearEncounterSimulatedNumberOfPlayers();
	void ClearDebugSpawnAIGroupTags();
	void ClearDebugEncounterTags();
	void ClearCreativePlot();
	void CheatMountExitVan();
	void ChangeHeroClass(int Index);
	void BuildWith(const struct FString& ResourceTypeAndOrLevel);
	void BuildFree();
	void BringDownWall();
	void BounceContainer();
	void BotStopDogpile();
	void BotStartDogpile();
	void BeautyMode();
	void Badass();
	void BackpackSetSize(int Size);
	void AutoSlotSurvivors();
	void AthenaGiveScoreTo(int PlayerStateIdx, int Score);
	void AthenaForceVictory(bool bVictory);
	void AthenaEndlessGame();
	void AthenaEmote(const struct FString& EmoteName);
	bool STATIC_AreContextMenusEnabled(class APlayerController* PC);
	void ApplyWeaponAlteration(const struct FString& AlterationName);
	void ApplyGameplayModifier(const struct FString& ModifierName);
	void AllowRespawn();
	void AddUtilityScore(int Amount);
	void AddKillFeedMessage();
	void AddDebugSpawnAIGroupTag(const struct FName& Tag);
	void AddDebugEncounterTag(const struct FName& Tag);
	void AddCombatScore(int Amount);
	void AddBuildingScore(int Amount);
	void AddAllScores(int Amount);
};


// Class FortniteGame.FortChunkDownloadManager
// 0x00F8 (0x0120 - 0x0028)
class UFortChunkDownloadManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FString                                     PakChunk0Name;                                            // 0x0030(0x0010) (ZeroConstructor, Config)
	TArray<uint32_t>                                   RequiredChunkIds;                                         // 0x0040(0x0010) (ZeroConstructor, Config)
	float                                              DownloadTimeoutSeconds;                                   // 0x0050(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	bool                                               bAssumeAllDataPresent;                                    // 0x0058(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC7];                                      // 0x0059(0x00C7) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortChunkDownloadManager");
		return ptr;
	}

};


// Class FortniteGame.FortCinematicCamera
// 0x0008 (0x0058 - 0x0050)
class UFortCinematicCamera : public UFortCameraMode
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCinematicCamera");
		return ptr;
	}

};


// Class FortniteGame.FortClientAnnouncement
// 0x0070 (0x0398 - 0x0328)
class AFortClientAnnouncement : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FGuid                                       AnnouncementID;                                           // 0x0330(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	class UClass*                                      DisplayWidget;                                            // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeToLive;                                               // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRetrigger;                                               // 0x034C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyOnAllClientsStopped;                              // 0x034D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortAnnouncementChannel                           Channel;                                                  // 0x034E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x034F(0x0001) MISSED OFFSET
	int                                                Priority;                                                 // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0354(0x0001) MISSED OFFSET
	EFortAnnouncementDelivery                          ClientDeliveryStatus;                                     // 0x0355(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0356(0x0002) MISSED OFFSET
	float                                              ClientDeliveryTime;                                       // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnUpdateAnnouncementData;                                 // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAnnouncementStopped;                                    // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortPlayerController*>               RecipientControllers;                                     // 0x0380(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0390(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement");
		return ptr;
	}


	void StopClientAnnouncement();
	void OnClientAnnouncementStop();
	void OnClientAnnouncementStart();
	int GetPriority();
	void CancelClientAnnouncement();
};


// Class FortniteGame.FortClientAnnouncement_Basic
// 0x00E8 (0x0480 - 0x0398)
class AFortClientAnnouncement_Basic : public AFortClientAnnouncement
{
public:
	struct FFortClientAnnouncementData_Basic           BasicData;                                                // 0x0398(0x00E8) (Edit, BlueprintVisible, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_Basic");
		return ptr;
	}


	void SetTitleText(const struct FText& TitleText);
	void SetIcon(struct FSlateBrush* Icon);
	void SetDisplayTime(float DisplayTime);
	void SetDetailText(const struct FText& DetailText);
	void OnRep_BasicData(const struct FFortClientAnnouncementData_Basic& PreviousBasicData);
};


// Class FortniteGame.FortClientAnnouncement_Cinematic
// 0x0000 (0x0398 - 0x0398)
class AFortClientAnnouncement_Cinematic : public AFortClientAnnouncement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_Cinematic");
		return ptr;
	}


	void OnPlayerSkippedCutscene();
};


// Class FortniteGame.FortClientAnnouncement_Conversation
// 0x0070 (0x0408 - 0x0398)
class AFortClientAnnouncement_Conversation : public AFortClientAnnouncement
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0398(0x0010) MISSED OFFSET
	struct FFortClientAnnouncementData_Conversation    ConversationData;                                         // 0x03A8(0x0010) (Edit, BlueprintVisible, Net)
	struct FScriptMulticastDelegate                    OnConversationStarted;                                    // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConversationStopped;                                    // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UAudioComponent*                             SpeechComponent;                                          // 0x03D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bAutoPlayConversation;                                    // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCurrentlyPlaying;                                        // 0x03E1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x03E2(0x0002) MISSED OFFSET
	int                                                CurrentSentenceIndex;                                     // 0x03E4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x03E8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_Conversation");
		return ptr;
	}


	void CurrentSentenceAudioFinished();
};


// Class FortniteGame.FortClientAnnouncement_ConversationCodeInterface
// 0x0000 (0x0028 - 0x0028)
class UFortClientAnnouncement_ConversationCodeInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_ConversationCodeInterface");
		return ptr;
	}


	void StopConversation();
	bool PlayConversationFromSentenceIndex(int StartingSentenceIndex);
	bool PlayConversationFromSentence(const struct FFortConversationSentence& StartingSentence);
	bool PlayConversation();
	bool IsPlayingSentenceIndex(int SentenceIndex);
	bool IsPlayingSentence(const struct FFortConversationSentence& Sentence);
	bool IsPlayingConversation(bool bCheckAudioComponent);
};


// Class FortniteGame.FortClientAnnouncement_ConversationInterface
// 0x0000 (0x0028 - 0x0028)
class UFortClientAnnouncement_ConversationInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_ConversationInterface");
		return ptr;
	}


	bool ShouldPlaySentence(const struct FFortConversationSentence& NewSentence);
	void OnSentenceStarted(const struct FFortConversationSentence& Sentence, int SentenceIndex);
	void OnSentenceFinished(const struct FFortConversationSentence& Sentence, int SentenceIndex);
	void OnConversationStarted(const struct FFortConversationSentence& StartingSentence, int StartingSentenceIndex);
	void OnConversationFinished(const struct FFortConversationSentence& FinishingSentence, int FinishingSentenceSentenceIndex);
};


// Class FortniteGame.FortClientAnnouncement_Tutorial
// 0x0160 (0x04F8 - 0x0398)
class AFortClientAnnouncement_Tutorial : public AFortClientAnnouncement
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0398(0x0008) MISSED OFFSET
	struct FFortClientAnnouncementData_Tutorial        TutorialData;                                             // 0x03A0(0x0138) (Edit, BlueprintVisible, Net)
	float                                              AutoContinueDelay;                                        // 0x04D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x04DC(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_Tutorial");
		return ptr;
	}


	void OnRep_TutorialData(const struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};


// Class FortniteGame.FortClientAnnouncement_TutorialConversation
// 0x0160 (0x0568 - 0x0408)
class AFortClientAnnouncement_TutorialConversation : public AFortClientAnnouncement_Conversation
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	struct FFortClientAnnouncementData_Tutorial        TutorialData;                                             // 0x0410(0x0138) (Edit, BlueprintVisible, Net)
	float                                              AutoContinueDelay;                                        // 0x0548(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x054C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_TutorialConversation");
		return ptr;
	}


	void OnRep_TutorialData(const struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData);
};


// Class FortniteGame.FortClientAnnouncement_TutorialInterface
// 0x0000 (0x0028 - 0x0028)
class UFortClientAnnouncement_TutorialInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_TutorialInterface");
		return ptr;
	}


	void WaitForContinue(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void SetVAlign(TEnumAsByte<EVerticalAlignment> VAlign);
	void SetTitleText(const struct FText& NameText);
	void SetSystemText(const struct FText& SystemText);
	void SetPadding(const struct FMargin& Padding);
	void SetNameText(const struct FText& NameText);
	void SetLightboxEnabled(bool bLightboxEnabled);
	void SetLightboxDisableInputOnly(bool bLightboxDisableInputOnly);
	void SetHAlign(TEnumAsByte<EHorizontalAlignment> HAlign);
	void SetDetailText(const struct FText& NameText);
	void SetButtonEnabled(bool bButtonEnabled);
	void HideTutorialWidget();
};


// Class FortniteGame.FortClientAnnouncement_ZoneModifiers
// 0x0018 (0x03B0 - 0x0398)
class AFortClientAnnouncement_ZoneModifiers : public AFortClientAnnouncement
{
public:
	float                                              DisplayTime;                                              // 0x0398(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	struct FFortClientAnnouncementData_ZoneModifiers   ModifiersData;                                            // 0x03A0(0x0010) (Edit, BlueprintVisible, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncement_ZoneModifiers");
		return ptr;
	}

};


// Class FortniteGame.FortClientAnnouncementManager
// 0x0128 (0x0450 - 0x0328)
class AFortClientAnnouncementManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0328(0x0028) MISSED OFFSET
	TArray<class AFortClientAnnouncement*>             ClientAnnouncements;                                      // 0x0350(0x0010) (Net, ZeroConstructor)
	TArray<class AFortClientAnnouncement*>             LocalClientAnnouncements;                                 // 0x0360(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               CancelledAnnouncements;                                   // 0x0370(0x0010) (Net, ZeroConstructor)
	struct FFortClientAnnouncementQueue                Channels[0x3];                                            // 0x0380(0x0010)
	unsigned char                                      UnknownData01[0xA0];                                      // 0x03B0(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientAnnouncementManager");
		return ptr;
	}


	void OnRep_ClientAnnouncements(TArray<class AFortClientAnnouncement*>* PreviousClientAnnouncements);
	void OnRep_CancelledAnnouncements();
};


// Class FortniteGame.FortClientBotManager
// 0x02C8 (0x02F0 - 0x0028)
class UFortClientBotManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET
	struct FTimerHandle                                MissionEndTimerHandle;                                    // 0x0068(0x0008)
	unsigned char                                      UnknownData01[0x24];                                      // 0x0070(0x0024) MISSED OFFSET
	bool                                               bHasAttemptedAbandon;                                     // 0x0094(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsMatchmaking;                                           // 0x0095(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShouldPickRandomMap;                                     // 0x0096(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShouldRecordFPSCharts;                                   // 0x0097(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShouldRecordMemoryReports;                               // 0x0098(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0099(0x0001) MISSED OFFSET
	bool                                               bFPSRecordingStarted;                                     // 0x009A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bWatchingForCallStack;                                    // 0x009B(0x0001) (ZeroConstructor, IsPlainOldData)
	int                                                iSelectedTheater;                                         // 0x009C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                iSelectedTile;                                            // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<int>                                        SelectedTileList;                                         // 0x00A8(0x0010) (ZeroConstructor)
	float                                              RandomZoneDifficultyMinimum;                              // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomZoneDifficultyMaximum;                              // 0x00BC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumSkillPurchasesAttempted;                               // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxSkillPurchaseAttempts;                                 // 0x00C4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumWorkerSlotsAttempted;                                  // 0x00C8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxWorkerSlotAttempts;                                    // 0x00CC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LobbyActionTimer;                                         // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenLobbyActions;                                  // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bWaitingForSkillTreePurchase;                             // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bWaitingForWorkerSlot;                                    // 0x00D9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00DA(0x0002) MISSED OFFSET
	int                                                LoopsSpentWaitingForFrontend;                             // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenStartButtonClicks;                             // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	float                                              TimeSinceFriendInvitesSent;                               // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastMatchmakeTime;                                        // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastLoginCycleTime;                                       // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MatchmakingStartTime;                                     // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastChangedStateTime;                                     // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastRandomTurnTime;                                       // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastPickLootTime;                                         // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastPickEnemyTime;                                        // 0x0104(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyKilledTime;                                      // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastBuildingKilledTime;                                   // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastGoodInteraction;                                      // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastCheckGoodTarget;                                      // 0x0114(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0118(0x0050) MISSED OFFSET
	class AFortPawn*                                   EnemyTarget;                                              // 0x0168(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPickup*                                 PickupTarget;                                             // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              BuildingTarget;                                           // 0x0178(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              MissionTarget;                                            // 0x0180(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              PrimaryMissionTarget;                                     // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class ABuildingActor*>                      AllMissionTargets;                                        // 0x0190(0x0010) (ZeroConstructor)
	TArray<class ABuildingActor*>                      ActiveMissionTargets;                                     // 0x01A0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData07[0xA0];                                      // 0x01B0(0x00A0) MISSED OFFSET
	struct FVector                                     ViewLocation;                                             // 0x0250(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x025C(0x0004) MISSED OFFSET
	class AFortPlayerPawn*                             MyPawn;                                                   // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortWorldItem*>                      ItemsToCheckForMaxStackSize;                              // 0x0268(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData09[0x78];                                      // 0x0278(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManager");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManager_Smoke
// 0x0040 (0x0330 - 0x02F0)
class UFortClientBotManager_Smoke : public UFortClientBotManager
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x02F0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManager_Smoke");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManagerAthena
// 0x0080 (0x0370 - 0x02F0)
class UFortClientBotManagerAthena : public UFortClientBotManager
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x02F0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManagerAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManagerAthena_Smoke
// 0x0080 (0x03F0 - 0x0370)
class UFortClientBotManagerAthena_Smoke : public UFortClientBotManagerAthena
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0370(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManagerAthena_Smoke");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManagerAthena_SanityCheck
// 0x0000 (0x03F0 - 0x03F0)
class UFortClientBotManagerAthena_SanityCheck : public UFortClientBotManagerAthena_Smoke
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManagerAthena_SanityCheck");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManagerAthena_Teleporter
// 0x0070 (0x03E0 - 0x0370)
class UFortClientBotManagerAthena_Teleporter : public UFortClientBotManagerAthena
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0370(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManagerAthena_Teleporter");
		return ptr;
	}

};


// Class FortniteGame.FortClientBotManagerMemoryReport
// 0x0000 (0x02F0 - 0x02F0)
class UFortClientBotManagerMemoryReport : public UFortClientBotManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientBotManagerMemoryReport");
		return ptr;
	}

};


// Class FortniteGame.FortDynamicBuilder
// 0x0078 (0x06A8 - 0x0630)
class AFortDynamicBuilder : public ABuildingActor
{
public:
	class UFortBuildingInstructions*                   BuildingInstructions;                                     // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSelectiveDestruction;                                    // 0x0638(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyOverlapping;                                      // 0x0639(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyMatchingPiece;                                    // 0x063A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNoCollisionFail;                                         // 0x063B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreMissionActors;                                     // 0x063C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShrinkAndDestroyEffect;                                  // 0x063D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugDrawBounds;                                         // 0x063E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUsePlayerBuildAnimations;                                // 0x063F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BuildingConstructionTime;                                 // 0x0640(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFDynamicBuildOrder>                   BuildOrder;                                               // 0x0644(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bReverseBuild;                                            // 0x0645(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0646(0x0002) MISSED OFFSET
	int                                                OverrideOwnerPersistentId;                                // 0x0648(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x44];                                      // 0x064C(0x0044) MISSED OFFSET
	int                                                CurrentIndex;                                             // 0x0690(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	TArray<class ABuildingActor*>                      AllBuiltActors;                                           // 0x0698(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDynamicBuilder");
		return ptr;
	}

};


// Class FortniteGame.FortClientDynamicBuilder
// 0x0000 (0x06A8 - 0x06A8)
class AFortClientDynamicBuilder : public AFortDynamicBuilder
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientDynamicBuilder");
		return ptr;
	}

};


// Class FortniteGame.FortClientEventData
// 0x0010 (0x0040 - 0x0030)
class UFortClientEventData : public UDataAsset
{
public:
	TArray<struct FFortClientEventName>                ClientEventNames;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientEventData");
		return ptr;
	}

};


// Class FortniteGame.FortClientEventInterface
// 0x0000 (0x0028 - 0x0028)
class UFortClientEventInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientEventInterface");
		return ptr;
	}


	void BlueprintCustomHandleClientEvent(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
};


// Class FortniteGame.FortClientPilot_Base
// 0x00D8 (0x0100 - 0x0028)
class UFortClientPilot_Base : public UClientPilotComponent
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0028(0x0098) MISSED OFFSET
	class AFortPawn*                                   EnemyTarget;                                              // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPickup*                                 PickupTarget;                                             // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              BuildingTarget;                                           // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x00D8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_Base");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_GameplayBase
// 0x0160 (0x0260 - 0x0100)
class UFortClientPilot_GameplayBase : public UFortClientPilot_Base
{
public:
	float                                              LastPickLootTime;                                         // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastPickEnemyTime;                                        // 0x0104(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastEnemyKilledTime;                                      // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastBuildingKilledTime;                                   // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastGoodInteraction;                                      // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastCheckGoodTarget;                                      // 0x0114(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0118(0x00B8) MISSED OFFSET
	struct FVector                                     ViewLocation;                                             // 0x01D0(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	class AFortPlayerPawn*                             MyPawn;                                                   // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortWorldItem*>                      ItemsToCheckForMaxStackSize;                              // 0x01E8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x60];                                      // 0x01F8(0x0060) MISSED OFFSET
	struct FTimerHandle                                MissionEndTimerHandle;                                    // 0x0258(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_GameplayBase");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_GameplayAthena
// 0x0060 (0x02C0 - 0x0260)
class UFortClientPilot_GameplayAthena : public UFortClientPilot_GameplayBase
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0260(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_GameplayAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_BaseSmokeAthena
// 0x0080 (0x0340 - 0x02C0)
class UFortClientPilot_BaseSmokeAthena : public UFortClientPilot_GameplayAthena
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x02C0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_BaseSmokeAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_FrontendBase
// 0x0040 (0x0140 - 0x0100)
class UFortClientPilot_FrontendBase : public UFortClientPilot_Base
{
public:
	int                                                MaxSkillPurchaseAttempts;                                 // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NumWorkerSlotsAttempted;                                  // 0x0104(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxWorkerSlotAttempts;                                    // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LoopsSpentWaitingForFrontend;                             // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0110(0x000C) MISSED OFFSET
	float                                              LobbyActionTimer;                                         // 0x011C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenLobbyActions;                                  // 0x0120(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bHasAttemptedAbandon;                                     // 0x0124(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	float                                              LastMatchmakeTime;                                        // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastLoginCycleTime;                                       // 0x012C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_FrontendBase");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_FrontendAthena
// 0x0030 (0x0170 - 0x0140)
class UFortClientPilot_FrontendAthena : public UFortClientPilot_FrontendBase
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0140(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_FrontendAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_FrontendCampaign
// 0x0020 (0x0160 - 0x0140)
class UFortClientPilot_FrontendCampaign : public UFortClientPilot_FrontendBase
{
public:
	int                                                iSelectedTile;                                            // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	TArray<int>                                        SelectedTileList;                                         // 0x0148(0x0010) (ZeroConstructor)
	float                                              RandomZoneDifficultyMinimum;                              // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RandomZoneDifficultyMaximum;                              // 0x015C(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_FrontendCampaign");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_GameplayCampaign
// 0x0040 (0x02A0 - 0x0260)
class UFortClientPilot_GameplayCampaign : public UFortClientPilot_GameplayBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0260(0x0010) MISSED OFFSET
	class ABuildingActor*                              MissionTarget;                                            // 0x0270(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              PrimaryMissionTarget;                                     // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class ABuildingActor*>                      AllMissionTargets;                                        // 0x0280(0x0010) (ZeroConstructor)
	TArray<class ABuildingActor*>                      ActiveMissionTargets;                                     // 0x0290(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_GameplayCampaign");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_LongSmokeAthena
// 0x0000 (0x0340 - 0x0340)
class UFortClientPilot_LongSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_LongSmokeAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_QuickSmokeAthena
// 0x0000 (0x0340 - 0x0340)
class UFortClientPilot_QuickSmokeAthena : public UFortClientPilot_BaseSmokeAthena
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_QuickSmokeAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilot_TeleporterAthena
// 0x0070 (0x0330 - 0x02C0)
class UFortClientPilot_TeleporterAthena : public UFortClientPilot_GameplayAthena
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x02C0(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilot_TeleporterAthena");
		return ptr;
	}

};


// Class FortniteGame.FortClientPilotBlackboard
// 0x00B8 (0x0130 - 0x0078)
class UFortClientPilotBlackboard : public UClientPilotBlackboard
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0078(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientPilotBlackboard");
		return ptr;
	}

};


// Class FortniteGame.FortLocalPlayer
// 0x01D0 (0x0460 - 0x0290)
class UFortLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0290(0x0030) MISSED OFFSET
	class UFortOnlineAccount*                          FortOnlineAccount;                                        // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x02C8(0x0010) MISSED OFFSET
	struct FFortRewardReport                           CachedRewardReport;                                       // 0x02D8(0x0070)
	TArray<struct FFortPlayerScoreReport>              CachedScoreReports;                                       // 0x0348(0x0010) (ZeroConstructor)
	class UFortClientSettingsRecord*                   ClientSettingsRecord;                                     // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0360(0x0002) MISSED OFFSET
	bool                                               bControllerAttached;                                      // 0x0362(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD5];                                      // 0x0363(0x00D5) MISSED OFFSET
	struct FUniqueNetIdRepl                            PlatformUID;                                              // 0x0438(0x0028)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLocalPlayer");
		return ptr;
	}

};


// Class FortniteGame.FortGenericRecord
// 0x00A8 (0x00D0 - 0x0028)
class UFortGenericRecord : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0028(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGenericRecord");
		return ptr;
	}

};


// Class FortniteGame.FortClientSettingsRecord
// 0x0478 (0x0548 - 0x00D0)
class UFortClientSettingsRecord : public UFortGenericRecord
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x00D0(0x0090) MISSED OFFSET
	float                                              HUDScale;                                                 // 0x0160(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              InitialHUDScale;                                          // 0x0164(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   GamepadLookSensitivity;                                   // 0x0168(0x0008) (IsPlainOldData)
	float                                              TargetingSlow;                                            // 0x0170(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ScopedSlow;                                               // 0x0174(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadTargetingSlow;                                     // 0x0178(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadScopedSlow;                                        // 0x017C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadBuildingMultiplier;                                // 0x0180(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MotionTargetingSlow;                                      // 0x0184(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MotionScopedSlow;                                         // 0x0188(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MotionHarvestingToolSlow;                                 // 0x018C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MouseSensitivity;                                         // 0x0190(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MouseSensitivityX;                                        // 0x0194(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MouseSensitivityY;                                        // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TouchLookSensitivitySetting;                              // 0x019C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TouchTargetingSlow;                                       // 0x01A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TouchScopedSlow;                                          // 0x01A4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TouchVerticalMultiplier;                                  // 0x01A8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bMotionControlsEnabled;                                   // 0x01AC(0x0001) (ZeroConstructor, IsPlainOldData)
	EFortMotionYawAxis                                 MotionYawAxis;                                            // 0x01AD(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x01AE(0x0002) MISSED OFFSET
	float                                              GyroSensitivity;                                          // 0x01B0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	struct FString                                     ControllerPlatform;                                       // 0x01B8(0x0010) (ZeroConstructor)
	struct FString                                     InputKBMPresetNameForCampaign;                            // 0x01C8(0x0010) (ZeroConstructor)
	struct FString                                     InputKBMPresetNameForAthena;                              // 0x01D8(0x0010) (ZeroConstructor)
	struct FString                                     InputPresetNameForCampaign;                               // 0x01E8(0x0010) (ZeroConstructor)
	struct FString                                     InputPresetNameForAthena;                                 // 0x01F8(0x0010) (ZeroConstructor)
	struct FString                                     InputTemplatePresetNameForCampaign;                       // 0x0208(0x0010) (ZeroConstructor)
	struct FString                                     InputTemplatePresetNameForAthena;                         // 0x0218(0x0010) (ZeroConstructor)
	float                                              XboxSafeZone;                                             // 0x0228(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	struct FString                                     PendingCulture;                                           // 0x0230(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortActionKeyMapping>               UserActionBindings;                                       // 0x0240(0x0010) (ZeroConstructor)
	TMap<ESubGame, struct FUserActionBindings>         UserBindingsPerSubGame;                                   // 0x0250(0x0050) (ZeroConstructor)
	TArray<struct FFortActionKeyMapping>               DisabledActionBindings;                                   // 0x02A0(0x0010) (ZeroConstructor)
	TArray<struct FFortActionKeyMapping>               CustomGamepadActionBindings;                              // 0x02B0(0x0010) (ZeroConstructor)
	bool                                               bInvertedLook;                                            // 0x02C0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedLookMobile;                                      // 0x02C1(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedPitchForMotion;                                  // 0x02C2(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedYaw;                                             // 0x02C3(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedYawMobile;                                       // 0x02C4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedYawForMotion;                                    // 0x02C5(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bToggleSprint;                                            // 0x02C6(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSprintByDefault;                                         // 0x02C7(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bSprintCancelsReload;                                     // 0x02C8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTapInteractEnabled;                                      // 0x02C9(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTargetingToggleable;                                     // 0x02CA(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoEquipBetterItems;                                    // 0x02CB(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAimAssistEnabled;                                        // 0x02CC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTouchAimAssistEnabled;                                   // 0x02CD(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bForceFeedbackEnabled;                                    // 0x02CE(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseFirstPersonCamera;                                    // 0x02CF(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseGamepadAimAssist;                                     // 0x02D0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseGamepadEditModeAimAssist;                             // 0x02D1(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseGamepadAutoRun;                                       // 0x02D2(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFocusOnFirstBuildingPieceWhenQuickbarSwapped;            // 0x02D3(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNewFocusOnFirstBuildingPieceWhenQuickbarSwapped;         // 0x02D4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena;      // 0x02D5(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNewFocusOnFirstBuildingPieceWhenQuickbarSwappedAthena;   // 0x02D6(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTurboBuild;                                              // 0x02D7(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bTurboBuildMobile;                                        // 0x02D8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoChangeMaterial;                                      // 0x02D9(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoChangeMaterialMobile;                                // 0x02DA(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseTapToShoot;                                           // 0x02DB(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoOpenDoors;                                           // 0x02DC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoOpenDoorsNonMobile;                                  // 0x02DD(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoPickupWeapons;                                       // 0x02DE(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoPickupWeaponsConsolePC;                              // 0x02DF(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAutoSortConsumablesToRight;                              // 0x02E0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableTryBuildOnFocus;                                   // 0x02E1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x02E2(0x0002) MISSED OFFSET
	float                                              EditButtonHoldTime;                                       // 0x02E4(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bUnlockConsoleFPS;                                        // 0x02E8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bConsoleFPS60;                                            // 0x02E9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x02EA(0x0006) MISSED OFFSET
	TMap<struct FGameplayTag, bool>                    UserHUDVisibiltyMappings;                                 // 0x02F0(0x0050) (ZeroConstructor)
	TMap<struct FGameplayTag, bool>                    UserHUDDefaultMappings;                                   // 0x0340(0x0050) (ZeroConstructor)
	EPartyType                                         LastPartyType;                                            // 0x0390(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bLastLeaderInvitesOnly;                                   // 0x0391(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bLastLeaderFriendsOnly;                                   // 0x0392(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAudioVolumesInitialized;                                 // 0x0393(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MusicVolume;                                              // 0x0394(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SoundFXVolume;                                            // 0x0398(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DialogVolume;                                             // 0x039C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ChatVolume;                                               // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CinematicsVolume;                                         // 0x03A4(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableSubtitles;                                         // 0x03A8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVoiceChat;                                         // 0x03A9(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVoiceChatIOS;                                      // 0x03AA(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVoiceChat3D;                                       // 0x03AB(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVoiceChatPTT;                                      // 0x03AC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bEnablePeripheralLighting;                                // 0x03AD(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowViewerCount;                                         // 0x03AE(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bStreamerMode;                                            // 0x03AF(0x0001) (ZeroConstructor, IsPlainOldData)
	int                                                HiddenMatchmakingDelayMaxSeconds;                         // 0x03B0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bReplayRecordingEnabled;                                  // 0x03B4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bLargeTeamReplayRecordingEnabled;                         // 0x03B5(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShadowPlayHighlightsEnabled;                             // 0x03B6(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowHeroHeadAccessories;                                 // 0x03B7(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowHeroBackpack;                                        // 0x03B8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShowGlobalChatEnabled;                                   // 0x03B9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x03BA(0x0002) MISSED OFFSET
	float                                              InitialGammaValue;                                        // 0x03BC(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialUseTapToShoot;                                    // 0x03C0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialAutoOpenDoors;                                    // 0x03C1(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialAutoPickupWeapons;                                // 0x03C2(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialAutoPickupWeaponsConsolePC;                       // 0x03C3(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialAutoSortConsumablesToRight;                       // 0x03C4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialEnableTryBuildOnFocus;                            // 0x03C5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x03C6(0x0002) MISSED OFFSET
	float                                              InitialEditButtonHoldTime;                                // 0x03C8(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bStWQuickbarUpdated;                                      // 0x03CC(0x0001) (ZeroConstructor, IsPlainOldData)
	EColorBlindMode                                    ColorBlindMode;                                           // 0x03CD(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x03CE(0x0002) MISSED OFFSET
	float                                              ColorBlindStrength;                                       // 0x03D0(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bVisualizeAudioSources;                                   // 0x03D4(0x0001) (ZeroConstructor, IsPlainOldData)
	EColorBlindMode                                    InitialColorBlindMode;                                    // 0x03D5(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x03D6(0x0002) MISSED OFFSET
	float                                              InitialColorBlindStrength;                                // 0x03D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIgnoreGamepadInput;                                      // 0x03DC(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInitialIgnoreGamepadInput;                               // 0x03DD(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x03DE(0x0002) MISSED OFFSET
	struct FString                                     SelectedRegionId;                                         // 0x03E0(0x0010) (ZeroConstructor)
	struct FString                                     PrevSavedRegion;                                          // 0x03F0(0x0010) (ZeroConstructor, Transient)
	struct FString                                     LastKnownBestRegionId;                                    // 0x0400(0x0010) (ZeroConstructor)
	int                                                CrossplayPreference;                                      // 0x0410(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData12[0x50];                                      // 0x0414(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortClientSettingsRecord.CustomInventoryFilterSet
	bool                                               bHasSeenSeasonSixTrailer;                                 // 0x0468(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowAudioInBackground;                                  // 0x0469(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUsePowerSavingMode;                                      // 0x046A(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bHidePerkRecombobulatorHelp;                              // 0x046B(0x0001) (ZeroConstructor, IsPlainOldData)
	EAndroidAppStoreTypes                              SelectedAndroidAppStore;                                  // 0x046C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bDirty;                                                   // 0x046D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2];                                       // 0x046E(0x0002) MISSED OFFSET
	unsigned char                                      bSaveToCloud : 1;                                         // 0x0470(0x0001) (Transient)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0471(0x0003) MISSED OFFSET
	ECloudFileState                                    CloudFileState;                                           // 0x0474(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0475(0x0003) MISSED OFFSET
	uint32_t                                           bDisableCloudSave;                                        // 0x0478(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastRequestSaveCount;                                     // 0x047C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastAttemptedSaveCount;                                   // 0x0480(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0484(0x0004) MISSED OFFSET
	double                                             LastSaveAttemptTime;                                      // 0x0488(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	double                                             LastSuccessSaveTime;                                      // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	double                                             NextCloudSaveTime;                                        // 0x0498(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0xA8];                                      // 0x04A0(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortClientSettingsRecord");
		return ptr;
	}

};


// Class FortniteGame.FortMetadataItem
// 0x0038 (0x00B0 - 0x0078)
class UFortMetadataItem : public UFortItem
{
public:
	int                                                Level;                                                    // 0x0078(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FString                                     InstanceId;                                               // 0x0080(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     TemplateId;                                               // 0x0090(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                Quantity;                                                 // 0x00A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class UFortMetadataItemDefinition*                 ItemDefinition;                                           // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMetadataItem");
		return ptr;
	}

};


// Class FortniteGame.FortCloudSaveItem
// 0x0018 (0x00C8 - 0x00B0)
class UFortCloudSaveItem : public UFortMetadataItem
{
public:
	struct FFortCloudSaveInfo                          cloud_save_info;                                          // 0x00B0(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCloudSaveItem");
		return ptr;
	}

};


// Class FortniteGame.FortMetadataItemDefinition
// 0x0000 (0x0320 - 0x0320)
class UFortMetadataItemDefinition : public UFortItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMetadataItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCloudSaveItemDefinition
// 0x0010 (0x0330 - 0x0320)
class UFortCloudSaveItemDefinition : public UFortMetadataItemDefinition
{
public:
	int                                                ContentVersion;                                           // 0x0320(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0324(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCloudSaveItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCodeTokenItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortCodeTokenItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCodeTokenItem");
		return ptr;
	}

};


// Class FortniteGame.FortCodeTokenItemDefinition
// 0x0040 (0x03D0 - 0x0390)
class UFortCodeTokenItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FString                                     RedemptionCodeRule;                                       // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     RedemptionCodeGroup;                                      // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<ECodeTokenPlatform>                         AllowedPlatforms;                                         // 0x03B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	EItemProfileType                                   ProfileType;                                              // 0x03C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x03C1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCodeTokenItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCollectedResourceItem
// 0x0020 (0x0100 - 0x00E0)
class UFortCollectedResourceItem : public UFortAccountItem
{
public:
	double                                             stored_value;                                             // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     last_updated;                                             // 0x00E8(0x0010) (ZeroConstructor)
	class UFortItemDefinition*                         PayoutResource;                                           // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectedResourceItem");
		return ptr;
	}

};


// Class FortniteGame.FortCollectedResourceItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortCollectedResourceItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectedResourceItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCollectionBookCategory
// 0x0020 (0x0048 - 0x0028)
class UFortCollectionBookCategory : public UObject
{
public:
	struct FName                                       CategoryDataRowName;                                      // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SortPriority;                                             // 0x0030(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FName>                               ChildrenPageIds;                                          // 0x0038(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookCategory");
		return ptr;
	}

};


// Class FortniteGame.FortCollectionBookData
// 0x0070 (0x00A0 - 0x0030)
class UFortCollectionBookData : public UDataAsset
{
public:
	class UDataTable*                                  PageCategoryData;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  PageData;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SectionData;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SlotData;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SlotSourceData;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  XPWeightData;                                             // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 SlotRarityFactorData;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  BookXPData;                                               // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortItemQuantityPair>               UnslotCost;                                               // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                       UnslotCatalysts;                                          // 0x0080(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookData");
		return ptr;
	}


	void GetPageIdsFromCategoryId(const struct FName& CategoryId, TArray<struct FName>* PageIds);
};


// Class FortniteGame.FortCollectionBookManager
// 0x0210 (0x0238 - 0x0028)
class UFortCollectionBookManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnSlottedItemOperationComplete;                           // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSlotItemComplete;                                       // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRewardClaimed;                                          // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnslotItemComplete;                                     // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResearchItemComplete;                                   // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0078(0x00F0) MISSED OFFSET
	TArray<struct FFortPendingSlottedItemOperation>    PendingSlottedItems;                                      // 0x0168(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortPendingSlottedItemOperation>    PendingUpdatedItems;                                      // 0x0178(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0188(0x0008) MISSED OFFSET
	TMap<struct FName, class UFortMcpProfileCollectionBook*> ProfileTable;                                             // 0x0190(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x50];                                      // 0x01E0(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortCollectionBookManager.ActivePages
	unsigned char                                      UnknownData03[0x8];                                       // 0x0230(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookManager");
		return ptr;
	}


	bool UnSlotItem(class UFortAccountItem* Item);
	bool SlotItem(class UFortAccountItem* Item, const struct FName& SlotId);
	bool PurchaseItem(class UFortAccountItem* Item);
	void PopulateCollectionBookRewards(TArray<struct FFortCollectionBookRewards>* OutAvailableRewards);
	class UFortItem* GetItemInSlot(const struct FName& SlotId);
	float GetBookXPPercentToNextLevel(int CurrentLevel, int NewXP);
	int GetBookTotalXPToNextLevel(int CurrentLevel);
	void ClaimReward(const struct FFortCollectionBookRewards& RewardToClaim, int RewardIndex);
	bool CanSlotItem(class UFortAccountItem* AccountItem, bool bOnlyAllowIfSlotEmpty, struct FName* OutSlotId);
	int CalculatePageXp(const struct FName& PageId);
	int CalculateBookXp();
};


// Class FortniteGame.FortCollectionBookPage
// 0x0048 (0x0070 - 0x0028)
class UFortCollectionBookPage : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FString                                     TemplateId;                                               // 0x0030(0x0010) (ZeroConstructor, Transient)
	struct FString                                     InstanceId;                                               // 0x0040(0x0010) (ZeroConstructor, Transient)
	struct FName                                       PageRowName;                                              // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EFortCollectionBookState                           State;                                                    // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<struct FFortCollectionBookSectionState>     SectionStates;                                            // 0x0060(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookPage");
		return ptr;
	}


	EFortCollectionBookState GetSectionState(const struct FName& SectionId);
	EFortCollectionBookState GetPageState();
};


// Class FortniteGame.FortCollectionBookSection
// 0x0010 (0x0038 - 0x0028)
class UFortCollectionBookSection : public UObject
{
public:
	struct FName                                       SectionDataRowName;                                       // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortCollectionBookPage*                     OwningPage;                                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollectionBookSection");
		return ptr;
	}

};


// Class FortniteGame.FortCollisionAudioComponent
// 0x0020 (0x0110 - 0x00F0)
class UFortCollisionAudioComponent : public UActorComponent
{
public:
	TArray<struct FFortCollisionAudioTriggerData>      CollisionSounds;                                          // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              CheckCollisionLeashInterval;                              // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0104(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCollisionAudioComponent");
		return ptr;
	}


	void SetCollisionSoundAtIndex(int Index, class USoundBase* SoundToUse);
	void OnCollision(const struct FVector& HitLocation, const struct FVector& HitNormalImpulse, bool* OutResult, float* OutMagnitude);
};


// Class FortniteGame.FortCombatManager
// 0x09C8 (0x0CF0 - 0x0328)
class AFortCombatManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              ReplicatedCombatEventHeat[0x1C];                          // 0x0330(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CombatEventHeat[0x1C];                                    // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CombatFactors[0xC];                                       // 0x0410(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentTotalHeat;                                         // 0x0440(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MaximumTotalHeat;                                         // 0x0444(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxHeatEver;                                              // 0x0448(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x044C(0x001C) MISSED OFFSET
	struct FCombatEventData                            Events[0x1C];                                             // 0x0468(0x0030) (Edit)
	struct FCombatFactorData                           Factors[0xC];                                             // 0x09A8(0x0038) (Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0C48(0x0008) MISSED OFFSET
	struct FCombatThresholdData                        Thresholds[0x4];                                          // 0x0C50(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCombatManager");
		return ptr;
	}


	void OnThresholdChange(TEnumAsByte<EFortCombatThresholds> OldThreshold, TEnumAsByte<EFortCombatThresholds> NewThreshold);
	void OnRep_CombatEventHeat();
	float GetEventHeatPercentTotal(TEnumAsByte<EFortCombatEvents> CombatEvent);
	float GetEventHeatPercent(TEnumAsByte<EFortCombatEvents> CombatEvent);
};


// Class FortniteGame.FortConsole
// 0x0000 (0x0130 - 0x0130)
class UFortConsole : public UConsole
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsole");
		return ptr;
	}

};


// Class FortniteGame.FortConstructionSet
// 0x01A0 (0x01D0 - 0x0030)
class UFortConstructionSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  BuildSpeed;                                               // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RepairSpeed;                                              // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BuildCost;                                                // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RepairCost;                                               // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxBuildLevel;                                            // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BuildingSkill;                                            // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapArmSpeed;                                             // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapReloadSpeed;                                          // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapBaseDamage;                                           // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapMaxDurability;                                        // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapDiceCritChance;                                       // 0x0170(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapDiceCritMultiplier;                                   // 0x0190(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TrapHealingSource;                                        // 0x01B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConstructionSet");
		return ptr;
	}


	void OnRep_TrapReloadSpeed();
	void OnRep_TrapMaxDurability();
	void OnRep_TrapHealingSource();
	void OnRep_TrapDiceCritMultiplier();
	void OnRep_TrapDiceCritChance();
	void OnRep_TrapBaseDamage();
	void OnRep_TrapArmSpeed();
	void OnRep_RepairSpeed();
	void OnRep_RepairCost();
	void OnRep_MaxBuildLevel();
	void OnRep_BuildSpeed();
	void OnRep_BuildingSkill();
	void OnRep_BuildCost();
};


// Class FortniteGame.FortConstructorBASE
// 0x0370 (0x0FA8 - 0x0C38)
class AFortConstructorBASE : public ABuildingProp
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0C38(0x0008) MISSED OFFSET
	TArray<struct FBASEGameplayEffect>                 BASEBuildingApplicationEffects;                           // 0x0C40(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FBASEGameplayEffect>                 BASEFriendlyApplicationEffects;                           // 0x0C50(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FBASEGameplayEffect>                 BASEFriendlyApplicationTrapEffects;                       // 0x0C60(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FBASEGameplayEffect>                 BASEEnemyApplicationEffects;                              // 0x0C70(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTag                                InBASETag;                                                // 0x0C80(0x0008) (Edit, DisableEditOnInstance)
	int                                                NodesToAffect;                                            // 0x0C88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BaseLevel;                                                // 0x0C8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FPatternBASEEffect>                  BASEEffectPatterns;                                       // 0x0C90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FFortBaseWeaponStats                        DamageStats;                                              // 0x0CA0(0x0138) (Edit, DisableEditOnInstance)
	class UFortDamageSet*                              DamageAttributeSet;                                       // 0x0DD8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C8];                                     // 0x0DE0(0x01C8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConstructorBASE");
		return ptr;
	}


	void StopBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void StartBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp);
	void OnPlaced(class UAbilitySystemComponent* InstigatorAbilitySystemComponent);
	void OnPawnRemovedFromBase(class AFortPawn* Pawn);
	void OnPawnAddedToBase(class AFortPawn* Pawn);
	void OnBasePawnDied(class AFortPawn* Pawn);
	void OnBasePawnDestroyed(class AFortPawn* Pawn);
	void OnBaseCollisionUnTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBaseCollisionTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void GetResourceAmountsBasedOnUpgradeTier(int TierOneUpgradeAmount, int TierTwoUpgradeAmount, int TierThreeUpgradeAmount, int* WoodResult, int* StoneResult, int* MetalResult);
	TArray<class ABuildingSMActor*> GetBuildingActorsInBase();
	void AddNeighborToBaseOnFinishedConstruction(class ABuildingSMActor* PlaceOn);
};


// Class FortniteGame.FortConsumableAccountItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortConsumableAccountItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsumableAccountItem");
		return ptr;
	}


	bool CanActivateOnSelf();
	bool CanActivateOnOthers();
};


// Class FortniteGame.FortConsumableItemDefinition
// 0x0040 (0x0910 - 0x08D0)
class UFortConsumableItemDefinition : public UFortWorldItemDefinition
{
public:
	TArray<struct FConsumeEffectData>                  ConsumeEffects;                                           // 0x08D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x08E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortConsumableItemDefinition.UseAnimation
	float                                              UseTime;                                                  // 0x0908(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresMissingHealth;                                   // 0x090C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x090D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsumableItemDefinition");
		return ptr;
	}


	class UAnimMontage* GetUseAnimation();
	float GetHealthRestored(int ItemLevel);
	float GetAnimPlayRate();
	void ConsumeItem(const struct FGameplayEventData& EventData);
};


// Class FortniteGame.FortConsumableItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortConsumableItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsumableItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWorldItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortWorldItemTooltip : public UFortItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortConsumableItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortConsumableItemTooltip : public UFortWorldItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConsumableItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortDecoItemDefinition
// 0x0090 (0x0CA0 - 0x0C10)
class UFortDecoItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0C10(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortDecoItemDefinition.BlueprintClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x0C38(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortDecoItemDefinition.PlacementPreviewClass
	float                                              GridSnapSizeOverride;                                     // 0x0C60(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationAngleIncrement;                                   // 0x0C64(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EPlacementType>                        PlacementTypeOverride;                                    // 0x0C68(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0C69(0x0003) MISSED OFFSET
	unsigned char                                      bForceIgnoreOverlapTest : 1;                              // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bForceIgnoreBuildingOverlaps : 1;                         // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIgnoreCollisionWithCriticalActors : 1;                   // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIgnoreCollisionWithStructuralGridActors : 1;             // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIgnoreCollisionWithFortStaticMeshActors : 1;             // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDisableLocationLerpWhilePlacing : 1;                     // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDisableRotationLerpWhilePlacing : 1;                     // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDisableScaleLerpWhilePlacing : 1;                        // 0x0C6C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAttachWhenPlacing : 1;                                   // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowPlacementOnWorldGeometry : 1;                       // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowPlacementOnBuildings : 1;                           // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDestroySmallObjectsWhenPlaced : 1;                       // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bConsumeWhenPlaced : 1;                                   // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCancelToolWhenPlaced : 1;                                // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCancelAbilityOnUnequip : 1;                              // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRequiresPlayerPlaceableAttachmentActors : 1;             // 0x0C6D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseRelativeCameraRotation : 1;                           // 0x0C6E(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowStairsWhenAttachingToFloors : 1;                    // 0x0C6E(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSnapYawToHorizontalAxes : 1;                             // 0x0C6E(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowAnyFloorPlacement : 1;                              // 0x0C6E(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRequiresPermissionToEditWorld : 1;                       // 0x0C6E(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0C6F(0x0001) MISSED OFFSET
	unsigned char                                      UnknownData04[0x10];                                      // 0x0C6F(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortDecoItemDefinition.AllowedShapes
	unsigned char                                      UnknownData05[0x10];                                      // 0x0C80(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortDecoItemDefinition.AllowedPlayerBuiltShapes
	int                                                MaxPlacementDistance;                                     // 0x0C90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0xC];                                       // 0x0C94(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoItemDefinition");
		return ptr;
	}


	bool ShouldUseRelativeCameraRotation();
	bool ShouldSnapYawToHorizontalAxes();
	bool ShouldIgnoreCollisionWithStructuralGridActors();
	bool ShouldIgnoreCollisionWithFortStaticMeshActors();
	bool ShouldIgnoreCollisionWithCriticalActors();
	bool ShouldForceIgnoreOverlapTest();
	bool ShouldForceIgnoreBuildingOverlaps();
	bool ShouldDisableScaleLerpWhilePlacing();
	bool ShouldDisableRotationLerpWhilePlacing();
	bool ShouldDisableLocationLerpWhilePlacing();
	bool ShouldDestroySmallObjectsWhenPlaced();
	bool ShouldConsumeWhenPlaced();
	bool ShouldCancelToolWhenPlaced();
	bool ShouldCancelAbilityOnUnequip();
	bool ShouldAttachWhenPlacing();
	bool ShouldAllowStairsWhenAttachingToFloors();
	bool ShouldAllowPlacementOnWorldGeometry();
	bool ShouldAllowPlacementOnBuildings();
	bool ShouldAllowAnyFloorPlacement();
	bool RequiresPlayerPlaceableAttachmentActors();
	bool RequiresPermissionToEditWorld();
	float GetRotationAngleIncrement();
	TEnumAsByte<EPlacementType> GetPlacementTypeOverride();
	class UClass* GetPlacementPreviewClass();
	int GetMaxPlacementDistance();
	float GetGridSnapSizeOverride();
	class UClass* GetBlueprintClass();
};


// Class FortniteGame.FortTrapItemDefinition
// 0x0030 (0x0CD0 - 0x0CA0)
class UFortTrapItemDefinition : public UFortDecoItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0CA0(0x0004) MISSED OFFSET
	bool                                               bKnockBackUsingPawnDir;                                   // 0x0CA4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0CA5(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0CA5(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortTrapItemDefinition.EquipSound

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrapItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortContextTrapItemDefinition
// 0x0020 (0x0CF0 - 0x0CD0)
class UFortContextTrapItemDefinition : public UFortTrapItemDefinition
{
public:
	class UFortTrapItemDefinition*                     FloorTrap;                                                // 0x0CD0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTrapItemDefinition*                     CeilingTrap;                                              // 0x0CD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTrapItemDefinition*                     WallTrap;                                                 // 0x0CE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0CE8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortContextTrapItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortControlResistanceSet
// 0x0178 (0x01A8 - 0x0030)
class UFortControlResistanceSet : public UFortAttributeSet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  ControlResistance;                                        // 0x0038(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxControlResistance;                                     // 0x0058(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ControlResistanceRegenRate;                               // 0x0078(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ControlResistanceRegenDelay;                              // 0x0098(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ControlResistanceRegenThreshold;                          // 0x00B8(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  KnockbackThreshold;                                       // 0x00D8(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  KnockbackMultiplier;                                      // 0x00F8(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ImpactDamageResistance;                                   // 0x0118(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ImpactDamageMultiplier;                                   // 0x0138(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ImpactDamage;                                             // 0x0158(0x0020) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0178(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortControlResistanceSet");
		return ptr;
	}


	void OnRep_MaxControlResistance();
	void OnRep_ControlResistance();
};


// Class FortniteGame.FortConversation
// 0x0010 (0x0040 - 0x0030)
class UFortConversation : public UDataAsset
{
public:
	TArray<struct FFortConversationSentence>           Sentences;                                                // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConversation");
		return ptr;
	}

};


// Class FortniteGame.FortConversionControlItemDefinition
// 0x0040 (0x03D0 - 0x0390)
class UFortConversionControlItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FString                                     LootTierGroup;                                            // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FDataTableRowHandle                         ConversionPointsToTierCosts;                              // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bConsumedOnConversion;                                    // 0x03B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03B1(0x0007) MISSED OFFSET
	struct FText                                       RewardName;                                               // 0x03B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortConversionControlItemDefinition");
		return ptr;
	}


	bool GetTierFromSacrificePoints(int SacrificePoints, EFortRarity* CalculatedTier);
	struct FText GetRewardName();
	int GetRequiredItemQuantity(int SacrificePoints);
	class UFortAccountItemDefinition* GetRequiredItemDefinition();
	struct FGameplayTagContainer GetRequiredCatalysts();
	int GetPointsForTier(EFortRarity InTier);
	EFortRarity GetMaxConversionTier();
	EFortRarity GetFirstConversionTier();
};


// Class FortniteGame.FortCosmeticVariant
// 0x0028 (0x0050 - 0x0028)
class UFortCosmeticVariant : public UObject
{
public:
	struct FGameplayTag                                VariantChannelTag;                                        // 0x0028(0x0008) (Edit)
	struct FText                                       VariantChannelName;                                       // 0x0030(0x0018) (Edit)
	struct FGameplayTag                                ActiveVariantTag;                                         // 0x0048(0x0008) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticVariant");
		return ptr;
	}


	struct FText GetVariantUnlockRequirement(const struct FGameplayTag& InVariantTag);
	struct FText GetVariantText(const struct FGameplayTag& InVariantTag);
	struct FText GetVariantChannelText();
	struct FGameplayTagContainer GetAllVariantTags();
};


// Class FortniteGame.FortCosmeticVariantBackedByArray
// 0x0000 (0x0050 - 0x0050)
class UFortCosmeticVariantBackedByArray : public UFortCosmeticVariant
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticVariantBackedByArray");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticCharacterPartVariant
// 0x0010 (0x0060 - 0x0050)
class UFortCosmeticCharacterPartVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FPartVariantDef>                     PartOptions;                                              // 0x0050(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticCharacterPartVariant");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticGameplayTagVariant
// 0x0010 (0x0060 - 0x0050)
class UFortCosmeticGameplayTagVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FGameplayTagVariantDef>              GenericTagOptions;                                        // 0x0050(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticGameplayTagVariant");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticItemMarkupTable
// 0x0020 (0x0050 - 0x0030)
class UFortCosmeticItemMarkupTable : public UDataAsset
{
public:
	TArray<class UDataTable*>                          SetDescriptions;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UDataTable*>                          MarkupTagDescriptions;                                    // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticItemMarkupTable");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticMaterialVariant
// 0x0010 (0x0060 - 0x0050)
class UFortCosmeticMaterialVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FMaterialVariantDef>                 MaterialOptions;                                          // 0x0050(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticMaterialVariant");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticNumericalVariant
// 0x0030 (0x0080 - 0x0050)
class UFortCosmeticNumericalVariant : public UFortCosmeticVariant
{
public:
	int                                                DefaultStartingNumeric;                                   // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinNumericalValue;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxNumbericalValue;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FName                                       ZerosDigitParamName;                                      // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TensDigitParamName;                                       // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortCosmeticNumericalVariant.MaterialsToAlter

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticNumericalVariant");
		return ptr;
	}

};


// Class FortniteGame.FortCosmeticParticleVariant
// 0x0010 (0x0060 - 0x0050)
class UFortCosmeticParticleVariant : public UFortCosmeticVariantBackedByArray
{
public:
	TArray<struct FParticlVariantDef>                  ParticleOptions;                                          // 0x0050(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCosmeticParticleVariant");
		return ptr;
	}

};


// Class FortniteGame.FortPlaysetGrenadeInputComponent
// 0x0018 (0x0108 - 0x00F0)
class UFortPlaysetGrenadeInputComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPlaysetGrenadeTarget;                                   // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UInputComponent*                             PlaysetGrenadeInputComponent;                             // 0x0100(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaysetGrenadeInputComponent");
		return ptr;
	}


	void PushPlaysetGrenadeInputMode(class APlayerController* PlayerController);
	void PopPlaysetGrenadeInputMode(class APlayerController* PlayerController);
};


// Class FortniteGame.FortObjectMoverInputComponent
// 0x00A8 (0x0198 - 0x00F0)
class UFortObjectMoverInputComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnRotateHeldItemPressed;                                  // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRotateHeldItemReleased;                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRotateAugmentPressed;                                   // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRotateAugmentReleased;                                  // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExtendGravityDistancePressed;                           // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExtendGravityDistanceReleased;                          // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDuplicateBuildingActor;                                 // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangePalletePressed;                                   // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortPlayerController*                       OwningPC;                                                 // 0x0170(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UInputComponent*                             ObjectMoverModeInputComponent;                            // 0x0178(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             GravityGunModeInputComponent;                             // 0x0180(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             CreativeClonerModeInputComponent;                         // 0x0188(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             CreativeOverrideInputcomponent;                           // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortObjectMoverInputComponent");
		return ptr;
	}


	void PushObjectMoverInputMode(class APlayerController* PlayerController);
	void PushGravityGunInputMode(class APlayerController* PlayerController);
	void PushCreativeOverrideInputComponent(class APlayerController* PlayerController);
	void PushCreativeClonerInputMode(class APlayerController* PlayerController);
	void PopObjectMoverInputMode(class APlayerController* PlayerController);
	void PopGravityGunInputMode(class APlayerController* PlayerController);
	void PopCreativeOverrideInputComponent(class APlayerController* PlayerController);
	void PopCreativeClonerInputMode(class APlayerController* PlayerController);
};


// Class FortniteGame.FortCreativePlot
// 0x0150 (0x0848 - 0x06F8)
class AFortCreativePlot : public ABuildingGameplayActor
{
public:
	class UStaticMeshComponent*                        BuildableBounds;                                          // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    PlotSizeChangedDelegate;                                  // 0x0700(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FString                                     ExplicitSaveFile;                                         // 0x0710(0x0010) (Edit, ZeroConstructor)
	struct FUniqueNetIdRepl                            OwnerNetID;                                               // 0x0720(0x0028) (Net, Transient)
	struct FUniqueNetIdRepl                            OccupantNetID;                                            // 0x0748(0x0028) (Net, Transient)
	unsigned char                                      bDirty : 1;                                               // 0x0770(0x0001) (Transient)
	unsigned char                                      bLocked : 1;                                              // 0x0770(0x0001) (Transient)
	unsigned char                                      bDirtiedSinceLastWriteToBuffer : 1;                       // 0x0770(0x0001) (Transient)
	unsigned char                                      bInitialized : 1;                                         // 0x0770(0x0001) (Net, Transient)
	unsigned char                                      bFinalized : 1;                                           // 0x0770(0x0001) (Net, Transient)
	unsigned char                                      bDummyDeployment : 1;                                     // 0x0770(0x0001) (Transient)
	unsigned char                                      bPlaysetLoaded : 1;                                       // 0x0770(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0771(0x0003) MISSED OFFSET
	uint32_t                                           CurrentPlotSize;                                          // 0x0774(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	ECreativePlotRotation                              CurrentRotation;                                          // 0x0778(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0779(0x0007) MISSED OFFSET
	class ABuildingTrap*                               TrapCreator;                                              // 0x0780(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0788(0x0018) MISSED OFFSET
	class UFortCreativePlotRecord*                     OccupantCreativeRecord;                                   // 0x07A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              WhitelistActors;                                          // 0x07A8(0x0010) (ZeroConstructor, Transient)
	int                                                MaxActorsToCreatePerBuildingCall;                         // 0x07B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxActorsWithinPlot;                                      // 0x07BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ConstructionTimeEffect;                                   // 0x07C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortPlaysetItemDefinition*                  ActivePlayset;                                            // 0x07C8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FUniqueNetIdRepl>                    EnabledUsers;                                             // 0x07D0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x07E0(0x0010) MISSED OFFSET
	unsigned char                                      bPendingLoad : 1;                                         // 0x07F0(0x0001) (Transient)
	unsigned char                                      bPendingPlotDelete : 1;                                   // 0x07F0(0x0001) (Transient)
	unsigned char                                      UnknownData04[0x7];                                       // 0x07F1(0x0007) MISSED OFFSET
	TArray<struct FDeferredActorData>                  DeferredConstructionActors;                               // 0x07F8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0808(0x0008) MISSED OFFSET
	TArray<class ABuildingActor*>                      DeferredDeleteActors;                                     // 0x0810(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x20];                                      // 0x0820(0x0020) MISSED OFFSET
	class ULevelStreamingDynamic*                      StreamedInPlayset;                                        // 0x0840(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCreativePlot");
		return ptr;
	}


	void UpdatePlotSize(const struct FVector& NewScale);
	void StartSpawnPlayset();
	void StartDespawnPlayset();
	void SetPlotSize(int NewSize);
	void SetPlotRotation(ECreativePlotRotation NewRotation);
	void SetLockOnPlot(bool NewLockState);
	void SetActivePlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void SavePlot(bool bUseLocalSave);
	void RotatePlot();
	void ResetPlot();
	void PushAllPlayersOutsidePlot();
	void OnRep_PlotSize();
	void OnRep_Playset();
	void OnRep_OccupantNetID();
	void OnRep_bFinalized();
	void OnFinishUnloadingPlayset();
	void OnFinishLoadingPlayset();
	void LoadUnloadPlayset();
	void LoadThenDelete();
	void LoadPlot(bool bShouldClearBeforeLoad, bool bUseLocalSave);
	bool IsInitialized();
	bool IsActorWithinPlot(class AActor* ActorToCheck);
	void GiveUserPermissions(const struct FUniqueNetIdRepl& NewUser);
	int GetPlotSize();
	struct FUniqueNetIdRepl GetOccupantNetID();
	struct FVector GetBoundsExtent();
	bool ForceSaveEntirePlot(bool bUseLocalSave);
	void FailsafeTimerExpired();
	void ClearPlot();
	bool CanSave();
	bool CanReload();
	bool CanPerformIOOperation();
	TEnumAsByte<EFortStructuralGridQueryResults> CanAcceptNewActor(const struct FUniqueNetIdRepl& PlayerID);
	void AddWhitelistActor(class AActor* NewActor);
};


// Class FortniteGame.FortCreativePlotManager
// 0x0040 (0x0368 - 0x0328)
class AFortCreativePlotManager : public AInfo
{
public:
	bool                                               bDeployableBasesReadOnly;                                 // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLocalPlayerEntersCreativePlotEvent;                     // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerLeavesCreativePlotEvent;                     // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortCreativePlot*>                   CachedCreativePlots;                                      // 0x0350(0x0010) (Net, ZeroConstructor)
	unsigned char                                      bWorldInitialized : 1;                                    // 0x0360(0x0001) (Net, Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0361(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCreativePlotManager");
		return ptr;
	}


	void UpdatePlotSizeFromLocation(const struct FVector& PlotLocation, int NewSize);
	bool RegisterNewPlot(class AFortCreativePlot* NewPlot, const struct FUniqueNetIdRepl& PlotOwner);
	void LoadAllPlots();
	class AFortCreativePlotManager* STATIC_GetCurrent(class UObject* WorldContextObject);
	class AFortCreativePlot* GetCreativePlotFromLocation(const struct FVector& Location);
	void GetAllCreativePlots(TArray<class AFortCreativePlot*>* OutCreativePlots);
	bool DeregisterPlot(class AFortCreativePlot* Plot);
	class AFortCreativePlot* CreateAndRegisterNewPlot(const struct FUniqueNetIdRepl& PlotOwner, class ABuildingTrap* TrapCreator, int Size);
	TEnumAsByte<EFortStructuralGridQueryResults> CanPlotAcceptNewActor(const struct FUniqueNetIdRepl& PlayerID, const struct FVector& ActorLocation);
};


// Class FortniteGame.FortCreativePlotRecord
// 0x0028 (0x00F8 - 0x00D0)
class UFortCreativePlotRecord : public UFortGenericRecord
{
public:
	bool                                               bNeedsFullActorSave;                                      // 0x00D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	struct FAthenaCreativeLevelRecord                  LevelData;                                                // 0x00D8(0x0018)
	int                                                PlotSize;                                                 // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCreativePlotRecord");
		return ptr;
	}

};


// Class FortniteGame.FortCrowdManager
// 0x0008 (0x00F8 - 0x00F0)
class UFortCrowdManager : public UCrowdManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCrowdManager");
		return ptr;
	}

};


// Class FortniteGame.FortCurrencyItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortCurrencyItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCurrencyItem");
		return ptr;
	}

};


// Class FortniteGame.FortCurrencyItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortCurrencyItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCurrencyItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortCustomizableAbilityDecoTool
// 0x0008 (0x0BE8 - 0x0BE0)
class AFortCustomizableAbilityDecoTool : public AFortAbilityDecoTool
{
public:
	bool                                               bExecuteToolAbilityOnPress;                               // 0x0BE0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0BE1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCustomizableAbilityDecoTool");
		return ptr;
	}


	void ServerReleaseTrigger();
	void ServerReleaseSecondaryFire();
	void ServerPressTrigger();
	void ServerPressSecondaryFire();
	void ExecuteDecoAbility();
	void BPServerReleaseSecondaryFire();
	void BPServerPressSecondaryFire();
	void BPReleaseTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPPressTrigger(class AFortDecoHelper* FortDecoHelper);
	void BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper);
	void BPOnUnEquip();
	void BPOnSetDecoObjectPreview(class AFortDecoHelper* FortDecoHelper);
	void BPOnEquip(class AFortWeapon* OldWeapon);
};


// Class FortniteGame.FortCustomizationAssetLoader
// 0x0090 (0x00B8 - 0x0028)
class UFortCustomizationAssetLoader : public UObject
{
public:
	struct FFortCustomizationAssetsToLoad              CurrentAssetsToLoad;                                      // 0x0028(0x0030) (Transient)
	struct FFortCustomizationAssetsToLoad              PendingAssetsToLoad;                                      // 0x0058(0x0030) (Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0088(0x0018) MISSED OFFSET
	TArray<class UObject*>                             AllLoadedAssets;                                          // 0x00A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCustomizationAssetLoader");
		return ptr;
	}

};


// Class FortniteGame.FortCustomSpawnCollectionManager
// 0x0060 (0x0088 - 0x0028)
class UFortCustomSpawnCollectionManager : public UObject
{
public:
	TArray<struct FPrimaryAssetId>                     PrimaryAssetIds;                                          // 0x0028(0x0010) (Edit, ZeroConstructor, Config)
	TMap<EFortItemType, int>                           SpawnAmountMap;                                           // 0x0038(0x0050) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortCustomSpawnCollectionManager");
		return ptr;
	}

};


// Class FortniteGame.FortDailyRewardScheduleDefinitions
// 0x0010 (0x0040 - 0x0030)
class UFortDailyRewardScheduleDefinitions : public UDataAsset
{
public:
	TArray<struct FFortDailyRewardScheduleDefinition>  Schedules;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDailyRewardScheduleDefinitions");
		return ptr;
	}

};


// Class FortniteGame.FortTokenType
// 0x0060 (0x03F0 - 0x0390)
class UFortTokenType : public UFortAccountItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0390(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortTokenType.ScriptedAction
	struct FSlateColor                                 NodeTintColour;                                           // 0x03B8(0x0028) (Edit, BlueprintVisible)
	bool                                               bPercentageRepresentation;                                // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EItemProfileType                                   ProfileType;                                              // 0x03E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x03E2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTokenType");
		return ptr;
	}

};


// Class FortniteGame.FortDailyRewardScheduleTokenDefinition
// 0x0000 (0x03F0 - 0x03F0)
class UFortDailyRewardScheduleTokenDefinition : public UFortTokenType
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDailyRewardScheduleTokenDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortDamageableActorInterface
// 0x0000 (0x0028 - 0x0028)
class UFortDamageableActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageableActorInterface");
		return ptr;
	}

};


// Class FortniteGame.FortDamageFormulaExecutionCalculation
// 0x0008 (0x0048 - 0x0040)
class UFortDamageFormulaExecutionCalculation : public UFortGameplayEffectExecutionCalculation
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageFormulaExecutionCalculation");
		return ptr;
	}

};


// Class FortniteGame.FortIndicator
// 0x0028 (0x0050 - 0x0028)
class UFortIndicator : public UObject
{
public:
	struct FVector                                     RelativeLocation;                                         // 0x0028(0x000C) (Transient, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMoveWithPawnState;                                       // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0039(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIndicator");
		return ptr;
	}


	void OnParentActorEndPlay(class AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);
};


// Class FortniteGame.FortMiniMapIndicator
// 0x00B8 (0x0108 - 0x0050)
class UFortMiniMapIndicator : public UFortIndicator
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0050(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMiniMapIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortMiniMapPingIndicator
// 0x0080 (0x0188 - 0x0108)
class UFortMiniMapPingIndicator : public UFortMiniMapIndicator
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0108(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMiniMapPingIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortDamageMiniMapIndicator
// 0x0000 (0x0188 - 0x0188)
class UFortDamageMiniMapIndicator : public UFortMiniMapPingIndicator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageMiniMapIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortDamageNumbersActor
// 0x01E8 (0x0518 - 0x0330)
class AFortDamageNumbersActor : public AFortClientOnlyActor
{
public:
	float                                              ComponentLifespan;                                        // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	class UStaticMesh*                                 MeshesByElement[0x5];                                     // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 CritBuildingImpactMesh;                                   // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 MeshesByScoreCategory[0x3];                               // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PlayerMaterialParameterName;                              // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerMaterialParameterValue;                             // 0x0388(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                CriticalHitPlayerColor;                                   // 0x038C(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                StandardHitPlayerColor;                                   // 0x039C(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                CriticalHitBuildingColor;                                 // 0x03AC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                CriticalHitEnemyColor;                                    // 0x03BC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                StandardHitColor;                                         // 0x03CC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                CriticalHitShieldColor;                                   // 0x03DC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ShieldHitColor;                                           // 0x03EC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	struct FName                                       ColorParameterName;                                       // 0x0400(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AnimationLifespanParameterName;                           // 0x0408(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IsCriticalHitParameterName;                               // 0x0410(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpacingPercentageForOnes;                                 // 0x0418(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	TArray<struct FName>                               PositionParameterNames;                                   // 0x0420(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              DistanceFromCameraBeforeDoublingSize;                     // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CriticalHitSizeMultiplier;                                // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FontXSize;                                                // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FontYSize;                                                // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NumberOfNumberRotations;                                  // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	TArray<struct FName>                               ScaleRotationAngleParameterNames;                         // 0x0448(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               DurationParameterNames;                                   // 0x0458(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              MaxScoreNumberDistance;                                   // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	struct FPooledDamageNumberComponents               PooledComponentsByElement[0x5];                           // 0x0470(0x0010) (Transient)
	struct FPooledDamageNumberComponents               PooledComponentsCritBuildingImpact;                       // 0x04C0(0x0010) (Transient)
	struct FPooledDamageNumberComponents               PooledComponentsByScoreCategory[0x3];                     // 0x04D0(0x0010) (Transient)
	TArray<struct FLiveDamageNumberComponent>          LiveComponents;                                           // 0x0500(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0510(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageNumbersActor");
		return ptr;
	}


	void SetMaterialParameters(const struct FTransform& CameraTransform, const struct FVector& NumberLocation, struct FFortDamageNumberInfo* NewDamageNumberInfo);
	void OnNewDamageNumber(const struct FFortDamageNumberInfo& NewDamageNumberInfo);
};


// Class FortniteGame.FortDamageSet
// 0x0200 (0x0230 - 0x0030)
class UFortDamageSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  OutgoingBaseDamage;                                       // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  OutgoingBaseEnvironmentalDamage;                          // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  OutgoingBaseImpactDamage;                                 // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  OutgoingAbilityDamage;                                    // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  OutgoingBaseAbilityDamageMultiplier;                      // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ZoneCritMultiplier;                                       // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DiceCritChance;                                           // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DiceCritMultiplier;                                       // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  KnockbackMagnitude;                                       // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  KnockbackZAngle;                                          // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StunTime;                                                 // 0x0170(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponSkill;                                              // 0x0190(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CritRating;                                               // 0x01B0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  MaxMeleeComboLevel;                                       // 0x01D0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ShieldDamageScale;                                        // 0x01F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  HealthDamageScale;                                        // 0x0210(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageSet");
		return ptr;
	}


	void OnRep_ZoneCritMultiplier();
	void OnRep_WeaponSkill();
	void OnRep_StunTime();
	void OnRep_ShieldDamageScale();
	void OnRep_OutgoingBaseImpactDamage();
	void OnRep_OutgoingBaseEnvironmentalDamage();
	void OnRep_OutgoingBaseDamage();
	void OnRep_OutgoingBaseAbilityDamageMultiplier();
	void OnRep_OutgoingAbilityDamage();
	void OnRep_KnockbackZAngle();
	void OnRep_KnockbackMagnitude();
	void OnRep_HealthDamageScale();
	void OnRep_DiceCritMultiplier();
	void OnRep_DiceCritChance();
};


// Class FortniteGame.FortDamageSourceInterface
// 0x0000 (0x0028 - 0x0028)
class UFortDamageSourceInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDamageSourceInterface");
		return ptr;
	}

};


// Class FortniteGame.FortDateTimeLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortDateTimeLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDateTimeLibrary");
		return ptr;
	}


	struct FText STATIC_GetTimespanAsText(const struct FTimespan& Timespan, bool bShowSeconds, ETimespanAsTextFormat FormatType);
	struct FTimespan STATIC_GetTimeSinceAthenaSeasonStart(class AFortPlayerController* FortPC);
	struct FDateTime STATIC_GetMcpRelativeUtcNow(class AFortPlayerController* FortPC);
};


// Class FortniteGame.FortDeathCameraMode
// 0x0030 (0x0080 - 0x0050)
class UFortDeathCameraMode : public UFortCameraMode
{
public:
	float                                              FOV;                                                      // 0x0050(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToTrackTarget;                                        // 0x0054(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackToTargetSpeed;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x005C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeathCameraMode");
		return ptr;
	}

};


// Class FortniteGame.FortDeathReasons
// 0x0010 (0x0040 - 0x0030)
class UFortDeathReasons : public UDataAsset
{
public:
	TArray<struct FFortDeathReason>                    Reasons;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeathReasons");
		return ptr;
	}

};


// Class FortniteGame.FortDecoHelper
// 0x0168 (0x0490 - 0x0328)
class AFortDecoHelper : public AActor
{
public:
	class AFortDecoPreview*                            DecoPreview;                                              // 0x0328(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlacementActorClass;                                      // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AFortDecoTool>                DecoTool;                                                 // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DecoToolReach;                                            // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBuildingAttachmentType>               CurrentAttachmentType;                                    // 0x0344(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPlacementType>                        CurrentPlacementType;                                     // 0x0345(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0346(0x0002) MISSED OFFSET
	class UFortDecoItemDefinition*                     DecoItemDefinition;                                       // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationData[0x2];                                        // 0x0350(0x000C) (IsPlainOldData)
	struct FRotator                                    RelativeRotationData[0x2];                                // 0x0368(0x000C) (IsPlainOldData)
	struct FRotator                                    AbsoluteRotationData[0x2];                                // 0x0380(0x000C) (IsPlainOldData)
	float                                              ScaleData[0x2];                                           // 0x0398(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FDecoPlacementState                         PlacementInfo;                                            // 0x03A0(0x0080)
	bool                                               bInFallbackPosition;                                      // 0x0420(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              FallbackTinyScale;                                        // 0x0424(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortDecoPlacementQueryResults>        CanPlaceState;                                            // 0x0428(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	struct FText                                       CustomPlacementText;                                      // 0x0430(0x0018) (BlueprintVisible)
	float                                              DesiredRelativeRotation;                                  // 0x0448(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DirectionChange;                                          // 0x044C(0x000C) (IsPlainOldData)
	float                                              GridSnapSize;                                             // 0x0458(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    FreeFloorPlacementRelativeRotationOffset;                 // 0x045C(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0468(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoHelper");
		return ptr;
	}

};


// Class FortniteGame.FortDecoPreview
// 0x0168 (0x0490 - 0x0328)
class AFortDecoPreview : public AActor
{
public:
	TEnumAsByte<EBuildingAttachmentType>               FallbackAttachmentType;                                   // 0x0328(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EPlacementType>                        FallbackPlacementType;                                    // 0x0329(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x032A(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x032A(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortDecoPreview.PreviewPlacementMaterial
	unsigned char                                      UnknownData02[0x28];                                      // 0x0358(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortDecoPreview.MotionBounceCurve
	struct FName                                       CanBePlacedMaterialScalarParam;                           // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ValidPlacementScalarParam;                                // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InvalidPlacementScalarParam;                              // 0x038C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       InverseMovementVectorMaterialParam;                       // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MovementEffectScale;                                      // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x039C(0x0004) MISSED OFFSET
	struct FName                                       InverseOuterScaleVectorParam;                             // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       InverseInnerScaleVectorParam;                             // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WorldSpacePivotVectorParam;                               // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DiffuseTextureParam;                                      // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FreePlacementOffset;                                      // 0x03C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	struct FTimeline                                   BounceTimeline;                                           // 0x03C8(0x0098)
	TArray<class UMaterialInstanceDynamic*>            PreviewMIDs;                                              // 0x0460(0x0010) (ZeroConstructor)
	struct FVector                                     DirectionChange;                                          // 0x0470(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     WorldSpacePivot;                                          // 0x047C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class AFortDecoHelper*                             ParentDecoHelper;                                         // 0x0488(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview");
		return ptr;
	}


	void SetVectorParameterValueOnAllPreviewMIDs(const struct FName& ParamName, const struct FLinearColor& ParamValue);
	void SetScalarParameterValueOnAllPreviewMIDs(const struct FName& ParamName, float ParamValue);
	void OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace);
	void OnUpdateScale(float Scale, const struct FVector& InWorldSpacePivot);
	void OnInitializeDecoPreview(class ABuildingActor* NewBuildingActor, class UFortDecoItemDefinition* NewDecoItemDefinition);
	void OnBounceMotionUpdate(float VectorScale);
	class UTexture* GetTextureParameterValueFromMeshComponent(class UMeshComponent* MeshComp, int ElementIdx, const struct FName& ParamName);
	class UMaterialInstanceDynamic* CreatePreviewMID(class UMaterialInterface* OverrideParentMaterial);
};


// Class FortniteGame.FortDecoPreview_ComponentHarvester
// 0x0000 (0x0490 - 0x0490)
class AFortDecoPreview_ComponentHarvester : public AFortDecoPreview
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_ComponentHarvester");
		return ptr;
	}

};


// Class FortniteGame.FortDecoPreview_GenericBuildingSMActor
// 0x0008 (0x0498 - 0x0490)
class AFortDecoPreview_GenericBuildingSMActor : public AFortDecoPreview
{
public:
	class UStaticMeshComponent*                        PrimaryMeshComponent;                                     // 0x0490(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_GenericBuildingSMActor");
		return ptr;
	}

};


// Class FortniteGame.FortDecoPreview_GenericTrap
// 0x0008 (0x04A0 - 0x0498)
class AFortDecoPreview_GenericTrap : public AFortDecoPreview_GenericBuildingSMActor
{
public:
	class UStaticMeshComponent*                        TrapRangeMeshComponent;                                   // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_GenericTrap");
		return ptr;
	}

};


// Class FortniteGame.FortDecoPreview_MeshHarvester
// 0x0000 (0x0490 - 0x0490)
class AFortDecoPreview_MeshHarvester : public AFortDecoPreview_ComponentHarvester
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoPreview_MeshHarvester");
		return ptr;
	}

};


// Class FortniteGame.FortTrapTool
// 0x0000 (0x0BB8 - 0x0BB8)
class AFortTrapTool : public AFortDecoTool
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrapTool");
		return ptr;
	}

};


// Class FortniteGame.FortDecoTool_ContextTrap
// 0x0008 (0x0BC0 - 0x0BB8)
class AFortDecoTool_ContextTrap : public AFortTrapTool
{
public:
	class UFortContextTrapItemDefinition*              ContextTrapItemDefinition;                                // 0x0BB8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDecoTool_ContextTrap");
		return ptr;
	}

};


// Class FortniteGame.FortDefenderAnimInstance
// 0x0010 (0x0450 - 0x0440)
class UFortDefenderAnimInstance : public UFortAIAnimInstance
{
public:
	float                                              SpeedAdjustedPlayRate;                                    // 0x0440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredJogSpeed;                                         // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredWalkSpeed;                                        // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x044C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDefenderAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortDefenderItem
// 0x0028 (0x0120 - 0x00F8)
class UFortDefenderItem : public UFortCharacter
{
public:
	TArray<struct FString>                             Alterations;                                              // 0x00F8(0x0010) (ZeroConstructor)
	TArray<class UFortAlterationItemDefinition*>       AlterationInstances;                                      // 0x0108(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDefenderItem");
		return ptr;
	}


	EFortDefenderSubtype GetDefenderSubtype();
};


// Class FortniteGame.FortDefenderItemDefinition
// 0x0050 (0x03E0 - 0x0390)
class UFortDefenderItemDefinition : public UFortCharacterType
{
public:
	TArray<struct FGameplayEffectApplicationInfo>      CombinedStatGEs;                                          // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       AppearanceOverrideName;                                   // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFortAttributeInitializationKey             AttributeInitKey;                                         // 0x03A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x03B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortDefenderItemDefinition.PawnClass

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDefenderItemDefinition");
		return ptr;
	}


	struct FGameplayTag GetDefenderSubtypeTag();
	EFortDefenderSubtype GetDefenderSubtype();
};


// Class FortniteGame.FortDeployableBaseCloudSaveItem
// 0x0010 (0x00D8 - 0x00C8)
class UFortDeployableBaseCloudSaveItem : public UFortCloudSaveItem
{
public:
	struct FFortTierProgression                        tier_progression;                                         // 0x00C8(0x0010)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseCloudSaveItem");
		return ptr;
	}

};


// Class FortniteGame.FortDeployableBaseCloudSaveItemDefinition
// 0x0010 (0x0340 - 0x0330)
class UFortDeployableBaseCloudSaveItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0330(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseCloudSaveItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortDeployableBaseLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortDeployableBaseLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseLibrary");
		return ptr;
	}


	void STATIC_UpdateDeployableBaseTierProgressionForPlayers(class UObject* WorldContextObject, class UFortTieredCollectionLayout* CollectionLayout, int TierDefeated);
	void STATIC_SetupDeployableBaseCombatZoneInventoriesOnPlayers(class UObject* WorldContextObject, TArray<struct FName> TierGroups, TArray<class AFortPlayerController*> PlayerControllers);
	void STATIC_SetDeployableBaseMatchJoinability(class UObject* WorldContextObject, bool bMatchJoinable);
	void STATIC_ResetDeployableBaseHordePlayerInventories(class UObject* WorldContextObject);
	void STATIC_OnPreHordeTierStart(class UObject* WorldContextObject, int Tier, int ModifierRRVSeed);
	bool STATIC_IsWorldItemDefValidToPersistForDeployableBasePlayerInventory(class UFortWorldItemDefinition* ItemDefinition);
	void STATIC_GrantPlayersCompletedWaveRewards(class UObject* WorldContextObject, int Tier, int Wave, int NumberOfPlayers, TArray<class ADeployableBaseCore*> TargetCores, TArray<class ADeployableBaseCore*> AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData, TArray<struct FName> TierGroups);
	void STATIC_GetTieredModifierSet(const struct FName& TieredModifierSetName, TArray<struct FTieredModifierSetData>* OutModifierSetData);
	class AFortMission* STATIC_GetPrimaryHordeMission(class UObject* WorldContextObject);
	EHordeTierStartStatus STATIC_GetHordeTierStartStatus(class UObject* WorldContextObject);
	struct FGameDifficultyInfo STATIC_GetGameDifficultyInfo(const struct FName& RowName);
	void STATIC_ForceRestartDeployableBasePlayers(class UObject* WorldContextObject, bool bRestartInvulnerable);
	void STATIC_ForceDeployableBaseHordePlayersToResetAndRespawn(class UObject* WorldContextObject);
	void STATIC_ForceClearAllDefenders(class UObject* WorldContextObject);
	void STATIC_BroadcastHordeTierComplete(class UObject* WorldContextObject, EFortCompletionResult Result);
	void STATIC_ApplyTieredModifierSet(class UObject* WorldContextObject, TArray<struct FTieredModifierSetData> ModifierSetData, int Tier, int WaveNum, bool bDeferTemporaryModifiers, TArray<struct FActiveGameplayModifierHandle>* OutAppliedModifiers);
};


// Class FortniteGame.FortDeployableBaseManager
// 0x02C8 (0x05F0 - 0x0328)
class AFortDeployableBaseManager : public AInfo
{
public:
	unsigned char                                      bRestrictedBuildingActive : 1;                            // 0x0328(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bBusyWithPlotActions : 1;                                 // 0x0328(0x0001) (Net, Transient)
	unsigned char                                      bDestroyAllBuildingPiecesOnReload : 1;                    // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	int                                                NumPiecesDestroyedOnZoneCleanupPerUpdate;                 // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumEnvPiecesRestoredPerUpdate;                            // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDeployableBasesReadOnly;                                 // 0x0334(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	EDeployableBaseUseType                             DeployableBaseUseType;                                    // 0x0335(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0336(0x0002) MISSED OFFSET
	struct FActiveTieredCollectionLayoutArray          ActiveTieredCollectionLayouts;                            // 0x0338(0x00C8) (Net, Transient)
	struct FScriptMulticastDelegate                    OnDeployableBasePlotsSpawned;                             // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerEntersDeployablePlotEvent;                   // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerLeavesDeployablePlotEvent;                   // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalDeployablePlotInventoryChangedEvent;               // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FDeployableBaseArray                        DeployableBaseArray;                                      // 0x0440(0x00C0) (Net, Transient)
	class UFortDeployableBaseCloudSaveItemDefinition*  DeployableBaseItemDefinition;                             // 0x0500(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      DeployableBasePlotClass;                                  // 0x0508(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortDeployableBaseSkillTreeUnlocks*         SupportedSkillTreeBasedUnlocks;                           // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumExpectedPlots;                                         // 0x0518(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	TArray<struct FPendingDeployableBaseUser>          PendingUsers;                                             // 0x0520(0x0010) (ZeroConstructor, Transient)
	TArray<struct FPendingDeployableManagerAction>     PendingDeployableManagerActions;                          // 0x0530(0x0010) (ZeroConstructor, Transient)
	TArray<struct FEnvironmentBuildingRestorationRecord> EnvironmentActorsRequiringRestoration;                    // 0x0540(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bCaptureEnvironmentActorsForRestoration : 1;              // 0x0550(0x0001) (Transient)
	unsigned char                                      bWorldInitialized : 1;                                    // 0x0550(0x0001) (Transient)
	unsigned char                                      bKeepBasesOnLogout : 1;                                   // 0x0550(0x0001) (Transient)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	TArray<struct FUniqueNetIdRepl>                    PlayersPendingPlotReset;                                  // 0x0558(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x88];                                      // 0x0568(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseManager");
		return ptr;
	}


	void SetKeepDeployableBasesOnLogout(bool bInKeepBasesOnLogout);
	void ReloadAllPlots();
	bool GetTierOutputForSelectedTier(int Tier, class UFortTieredCollectionLayout* Layout, struct FFortTierCollectionLayoutOutput* Output);
	int GetHighestDefeatedTierForPlayerAndLayout(const struct FUniqueNetIdRepl& PlayerID, class UFortTieredCollectionLayout* Layout);
	EDeployableBaseUseType GetDeployableBaseUseType();
	class ADeployableBasePlot* GetDeployableBasePlotFromLocation(const struct FVector& Location);
	class AFortDeployableBaseManager* STATIC_GetCurrent(class UObject* WorldContextObject);
	void GetAvailableTiers(TArray<struct FAvailableTierLayout>* OutAvailableTiers);
	void GetAllDeployableBasePlots(TArray<class ADeployableBasePlot*>* OutDeployableBasePlots);
	void BroadcastHordeWaveStinger(EHordeWaveStingerType StingerType);
};


// Class FortniteGame.FortPickup
// 0x0298 (0x05C0 - 0x0328)
class AFortPickup : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	bool                                               bUsePickupWidget;                                         // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWeaponsCanBeAutoPickups;                                 // 0x0331(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAutoUpgradeWeapons;                                      // 0x0332(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0333(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPickup;                                                 // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPickupAttempted;                                        // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bRandomRotation;                                          // 0x0358(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	struct FFortItemEntry                              PrimaryPickupItemEntry;                                   // 0x0360(0x00D0) (Net, Transient)
	TArray<struct FFortItemEntry>                      MultiItemPickupEntries;                                   // 0x0430(0x0010) (Net, ZeroConstructor, Transient)
	struct FFortPickupLocationData                     PickupLocationData;                                       // 0x0440(0x0060) (Net, Transient)
	uint32_t                                           PickupSourceTypeFlags;                                    // 0x04A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                OptionalOwnerID;                                          // 0x04A4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       OptionalMissionGuid;                                      // 0x04A8(0x0010) (Transient, IsPlainOldData)
	class UFortItem*                                   PrimaryPickupDummyItem;                                   // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AFortPickupEffect>            PickupEffectBlueprint;                                    // 0x04C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCapsuleComponent*                           TouchCapsule;                                             // 0x04C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UProjectileMovementComponent*                MovementComponent;                                        // 0x04D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bPickedUp;                                                // 0x04D8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSplitOnPickup;                                           // 0x04D9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTossedFromContainer;                                     // 0x04DA(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCombinePickupsWhenTossCompletes;                         // 0x04DB(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bServerStoppedSimulation;                                 // 0x04DC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClientUseInterpolationOnly;                              // 0x04DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ServerImpactSoundFlash;                                   // 0x04DE(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x04DF(0x0001) MISSED OFFSET
	float                                              LastLandedSoundPlayTime;                                  // 0x04E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LandSoundZForceThreshold;                                 // 0x04E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAudioComponent*                             DroppedLoopingSoundComp;                                  // 0x04E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AFortPawn*                                   PawnWhoDroppedPickup;                                     // 0x04F0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedSpecialActorIdx;                                    // 0x04F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	struct FName                                       SpecialActorID;                                           // 0x0500(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortSimpleMiniMapIndicator*                 MiniMapIndicator;                                         // 0x0508(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortSlateHUDIndicator*                      HUDLabel;                                                 // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0xA8];                                      // 0x0518(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPickup");
		return ptr;
	}


	void TossPickup(const struct FVector& FinalLocation, class AFortPawn* ItemOwner, int OverrideMaxStackCount, bool bToss);
	bool PickedUp();
	void OnServerStopCallback(const struct FHitResult& Hit);
	void OnRep_TossedFromContainer();
	void OnRep_ServerStoppedSimulation();
	void OnRep_ServerImpactSoundFlash();
	void OnRep_PrimaryPickupItemEntry();
	void OnRep_PickupOwnerData();
	void OnRep_PickupLocationData();
	void OnRep_bPickedUp();
	bool GetInteractText(struct FText* InteractText);
	bool GetInteractErrorText(struct FText* InteractErrorText);
	struct FText GetDisplayName();
};


// Class FortniteGame.FortDeployableBasePickup
// 0x0028 (0x05E8 - 0x05C0)
class AFortDeployableBasePickup : public AFortPickup
{
public:
	struct FUniqueNetIdRepl                            AssociatedPlotOccupant;                                   // 0x05C0(0x0028) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBasePickup");
		return ptr;
	}

};


// Class FortniteGame.FortDeployableBaseRecord
// 0x0018 (0x00E8 - 0x00D0)
class UFortDeployableBaseRecord : public UFortGenericRecord
{
public:
	TArray<struct FFortActorRecord>                    Actors;                                                   // 0x00D0(0x0010) (ZeroConstructor)
	unsigned char                                      bNeedsFullActorSave : 1;                                  // 0x00E0(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseRecord");
		return ptr;
	}

};


// Class FortniteGame.FortDeployableBaseSkillTreeUnlocks
// 0x0040 (0x0070 - 0x0030)
class UFortDeployableBaseSkillTreeUnlocks : public UDataAsset
{
public:
	TArray<struct FFortTaggedDeployableBasePlotExpansionUnlock> PlotSizeUnlocks;                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> NeighborhoodLootGrantUnlocks;                             // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneStartLootGrantUnlocks;                          // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortTaggedDeployableBaseLootUnlock> CombatZoneWaveCompleteLootGrantUnlocks;                   // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeployableBaseSkillTreeUnlocks");
		return ptr;
	}

};


// Class FortniteGame.FortDeveloperSettings
// 0x0000 (0x0038 - 0x0038)
class UFortDeveloperSettings : public UDeveloperSettings
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDeveloperSettings");
		return ptr;
	}

};


// Class FortniteGame.FortNotificationHandler
// 0x0018 (0x0040 - 0x0028)
class UFortNotificationHandler : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnNotificationCleared;                                    // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bNotificationCleared;                                     // 0x0038(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNotificationHandler");
		return ptr;
	}


	void NotificationShown();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};


// Class FortniteGame.FortDialogNotificationHandler
// 0x0160 (0x01A0 - 0x0040)
class UFortDialogNotificationHandler : public UFortNotificationHandler
{
public:
	struct FScriptMulticastDelegate                    OnAccepted;                                               // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeclined;                                               // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTimedOut;                                               // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FFortDialogDescription                      DialogDescription;                                        // 0x0070(0x0130) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDialogNotificationHandler");
		return ptr;
	}


	void Timeout();
	void SetDialogDescription(const struct FFortDialogDescription& InDialogDescription);
	void OnActionComplete__DelegateSignature();
	void Decline();
	void Accept();
};


// Class FortniteGame.FortDifficultyOption
// 0x0018 (0x0040 - 0x0028)
class UFortDifficultyOption : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FDataTableRowHandle                         CostAndAvailability;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOption");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategory
// 0x0008 (0x0038 - 0x0030)
class UFortDifficultyOptionCategory : public UDataAsset
{
public:
	bool                                               bIsRequired;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsStatic;                                                // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasValueRange;                                           // 0x0032(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0033(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategory");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter
// 0x0000 (0x0038 - 0x0038)
class UFortDifficultyOptionCategoryEncounter : public UFortDifficultyOptionCategory
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_Breathers : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Breathers");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_DirectionChange : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionChange");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_DirectionNumber : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_DirectionNumber");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_Distance : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Distance");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_IntensityCurveSequence");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_ModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_ModifierTags");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_PawnNumberCap : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_PawnNumberCap");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression
// 0x0008 (0x0040 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression : public UFortDifficultyOptionCategoryEncounter
{
public:
	class UClass*                                      SpawnGroupProgression;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnGroupProgression");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPawns");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnLimitPoints");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsBurst");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsCurve");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnTiming
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_SpawnTiming : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_SpawnTiming");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_Time : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_Time");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_TimedModifierTags
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_TimedModifierTags : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_TimedModifierTags");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesAdjustment");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_UtilitiesFree : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesFree");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked
// 0x0010 (0x0048 - 0x0038)
class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked : public UFortDifficultyOptionCategoryEncounter
{
public:
	TArray<class UClass*>                              Options;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryEncounter_UtilitiesLocked");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionCategoryMission
// 0x0000 (0x0038 - 0x0038)
class UFortDifficultyOptionCategoryMission : public UFortDifficultyOptionCategory
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionCategoryMission");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter
// 0x0008 (0x0048 - 0x0040)
class UFortDifficultyOptionEncounter : public UFortDifficultyOption
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_Breathers
// 0x0038 (0x0080 - 0x0048)
class UFortDifficultyOptionEncounter_Breathers : public UFortDifficultyOptionEncounter
{
public:
	bool                                               bUseBreathers;                                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FCurveTableRowHandle                        LowPlayerPerformanceBreatherTimeSecondsCurve;             // 0x0050(0x0010) (Edit)
	struct FCurveTableRowHandle                        NormalPlayerPerformanceBreatherTimeSecondsCurve;          // 0x0060(0x0010) (Edit)
	struct FCurveTableRowHandle                        HighPlayerPerformanceBreatherTimeSecondsCurve;            // 0x0070(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Breathers");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_DirectionChange : public UFortDifficultyOptionEncounter
{
public:
	bool                                               bChangeDirectionsOnRest;                                  // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_DirectionChange");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_DirectionNumber : public UFortDifficultyOptionEncounter
{
public:
	int                                                NumberOfDirections;                                       // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_DirectionNumber");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_Distance
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_Distance : public UFortDifficultyOptionEncounter
{
public:
	float                                              MinSpawnDistance;                                         // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpawnDistance;                                         // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Distance");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_IntensityCurveSequence : public UFortDifficultyOptionEncounter
{
public:
	class UFortIntensityCurveSequence*                 CurveSequence;                                            // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_IntensityCurveSequence");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags
// 0x0020 (0x0068 - 0x0048)
class UFortDifficultyOptionEncounter_ModifierTags : public UFortDifficultyOptionEncounter
{
public:
	struct FGameplayTagContainer                       ModifierTags;                                             // 0x0048(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_ModifierTags");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap
// 0x0018 (0x0060 - 0x0048)
class UFortDifficultyOptionEncounter_PawnNumberCap : public UFortDifficultyOptionEncounter
{
public:
	struct FFortEncounterPawnNumberCaps                PawnCapsPerPlayerCount;                                   // 0x0048(0x0018) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_PawnNumberCap");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnGroupProgression : public UFortDifficultyOptionEncounter
{
public:
	class UFortAISpawnGroupProgressionInfo*            SpawnGroupProgression;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnGroupProgression");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnLimitPawns : public UFortDifficultyOptionEncounter
{
public:
	int                                                PawnNumberLimit;                                          // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPawns");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnLimitPoints : public UFortDifficultyOptionEncounter
{
public:
	float                                              SpawnPointsPercentageLimit;                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnLimitPoints");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst
// 0x0020 (0x0068 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnPointsBurst : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                              BurstSpawnPointsPercentage;                               // 0x0048(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsBurst");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnPointsCurve : public UFortDifficultyOptionEncounter
{
public:
	class UFortSpawnPointsPercentageCurveSequence*     CurveSequence;                                            // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsCurve");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier
// 0x0020 (0x0068 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnPointsMultiplier : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                              Multiplier;                                               // 0x0048(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnPointsMultiplier");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_SpawnTiming
// 0x0020 (0x0068 - 0x0048)
class UFortDifficultyOptionEncounter_SpawnTiming : public UFortDifficultyOptionEncounter
{
public:
	struct FScalableFloat                              SpawnIntervalSeconds;                                     // 0x0048(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_SpawnTiming");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_Time
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_Time : public UFortDifficultyOptionEncounter
{
public:
	float                                              EncounterTimeSeconds;                                     // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_Time");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_TimedModifierTags
// 0x0010 (0x0058 - 0x0048)
class UFortDifficultyOptionEncounter_TimedModifierTags : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortAIEncounterTimedModifierTags>   TimedModifierTags;                                        // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_TimedModifierTags");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_UtilitiesAdjustment : public UFortDifficultyOptionEncounter
{
public:
	float                                              UtilitiesAdjustmentIntervalSeconds;                       // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesAdjustment");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree
// 0x0008 (0x0050 - 0x0048)
class UFortDifficultyOptionEncounter_UtilitiesFree : public UFortDifficultyOptionEncounter
{
public:
	int                                                NumFreeUtilitySlots;                                      // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesFree");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked
// 0x0010 (0x0058 - 0x0048)
class UFortDifficultyOptionEncounter_UtilitiesLocked : public UFortDifficultyOptionEncounter
{
public:
	TArray<struct FFortEncounterLockedUtility>         LockedUtilities;                                          // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionEncounter_UtilitiesLocked");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionMission
// 0x0000 (0x0040 - 0x0040)
class UFortDifficultyOptionMission : public UFortDifficultyOption
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionMission");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionSetEncounter
// 0x00B8 (0x00E8 - 0x0030)
class UFortDifficultyOptionSetEncounter : public UDataAsset
{
public:
	TEnumAsByte<EFortEncounterPacingMode>              PacingMode;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UFortDifficultyOptionCategoryEncounter_IntensityCurveSequence* IntensityCurveSequenceCategory;                           // 0x0038(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsCurve* SpawnPointsPercentageCurveSequenceCategory;               // 0x0040(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsBurst* SpawnPointsBurstCategory;                                 // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_Breathers* BreathersCategory;                                        // 0x0050(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnPointsMultiplier* SpawnPointsMultiplierCategory;                            // 0x0058(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_PawnNumberCap* PawnNumberCapCategory;                                    // 0x0060(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnTiming* OptionalSpawnTimingCategory;                              // 0x0068(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	TEnumAsByte<EFortEncounterSpawnLimitType>          SpawnLimitMode;                                           // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPoints* SpawnPointsLimitCategory;                                 // 0x0078(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnLimitPawns* PawnLimitCategory;                                        // 0x0080(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	TEnumAsByte<EFortEncounterUtilitiesMode>           UtilitiesMode;                                            // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class UFortDifficultyOptionCategoryEncounter_UtilitiesLocked* LockedUtilitiesCategory;                                  // 0x0090(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesFree* FreeUtilitiesCategory;                                    // 0x0098(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_UtilitiesAdjustment* UtilitiesAdjustmentCategory;                              // 0x00A0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	EFortEncounterSpawnLocationManagementMode          SpawnLocationManagementMode;                              // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortEncounterSpawnLocationPlacementMode> SpawnLocationPlacementMode;                               // 0x00A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x00AA(0x0006) MISSED OFFSET
	class UFortDifficultyOptionCategoryEncounter_DirectionNumber* DirectionNumberCategory;                                  // 0x00B0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_DirectionChange* DirectionChangeCategory;                                  // 0x00B8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_Distance* DistanceCategory;                                         // 0x00C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_SpawnGroupProgression* SpawnGroupProgressionCategory;                            // 0x00C8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_Time* TimeCategory;                                             // 0x00D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_ModifierTags* OptionalModifierTagsCategory;                             // 0x00D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UFortDifficultyOptionCategoryEncounter_TimedModifierTags* OptionalMiniBossStartTimedTagsCategory;                   // 0x00E0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionSetEncounter");
		return ptr;
	}

};


// Class FortniteGame.FortDifficultyOptionSetMission
// 0x0010 (0x0040 - 0x0030)
class UFortDifficultyOptionSetMission : public UDataAsset
{
public:
	TArray<class UFortDifficultyOptionCategoryMission*> MissionOptionsCategories;                                 // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDifficultyOptionSetMission");
		return ptr;
	}

};


// Class FortniteGame.FortDoghouseVehicleConfigs
// 0x0028 (0x02D8 - 0x02B0)
class UFortDoghouseVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                              WheelRotationRange;                                       // 0x02B0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontLowLateralFrictionMultiplier;                 // 0x02B4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearLowLateralFrictionMultiplier;                  // 0x02B8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontHighLateralFrictionMultiplier;                // 0x02BC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearHighLateralFrictionMultiplier;                 // 0x02C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LowToHighFrictionDuration;                                // 0x02C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UphillIncline;                                            // 0x02C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardFrontFriction;                            // 0x02CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardRearFriction;                             // 0x02D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardMaxSpeed;                                 // 0x02D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDoghouseVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortDoorLinkComponent
// 0x0000 (0x01C8 - 0x01C8)
class UFortDoorLinkComponent : public UNavLinkCustomComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDoorLinkComponent");
		return ptr;
	}

};


// Class FortniteGame.FortDynamicBuildingDeconstructor
// 0x0050 (0x0378 - 0x0328)
class AFortDynamicBuildingDeconstructor : public AActor
{
public:
	struct FBoxSphereBounds                            Bounds;                                                   // 0x0328(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bDebugDrawBounds;                                         // 0x0344(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSelectiveDestruction;                                    // 0x0345(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreMissionActors;                                     // 0x0346(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShrinkAndDestroyEffect;                                  // 0x0347(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumOfPiecesToDestroyAtOnce;                               // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenChunks;                                        // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class ABuildingSMActor>>     SortedBuildingActors;                                     // 0x0350(0x0010) (ZeroConstructor)
	int                                                CurrentIndex;                                             // 0x0360(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0364(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDynamicBuildingDeconstructor");
		return ptr;
	}

};


// Class FortniteGame.FortEditToolItemDefinition
// 0x0000 (0x0C10 - 0x0C10)
class UFortEditToolItemDefinition : public UFortWeaponItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEditToolItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortEmitterCameraLensEffectDirectional
// 0x0030 (0x0410 - 0x03E0)
class AFortEmitterCameraLensEffectDirectional : public AEmitterCameraLensEffectBase
{
public:
	class AFortPawn*                                   DamageInstigator;                                         // 0x03E0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     DamageInstigatorLocation;                                 // 0x03E8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	struct FName                                       RotationParameterName;                                    // 0x03F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bRotateActor : 1;                                         // 0x0400(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0401(0x0003) MISSED OFFSET
	float                                              Strength;                                                 // 0x0404(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0408(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEmitterCameraLensEffectDirectional");
		return ptr;
	}


	void SetTint(const struct FLinearColor& Color);
	void SetStrength(float InStrength);
};


// Class FortniteGame.FortEmojiPreviewComponent
// 0x0010 (0x0100 - 0x00F0)
class UFortEmojiPreviewComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEmojiPreviewComponent");
		return ptr;
	}


	void PushPreviewEmoji(class UAthenaEmojiItemDefinition* EmojiItem);
};


// Class FortniteGame.FortEmoteItemDefinition
// 0x0010 (0x04C0 - 0x04B0)
class UFortEmoteItemDefinition : public UFortMontageItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEmoteItemDefinition");
		return ptr;
	}


	struct FText GetCommandName();
};


// Class FortniteGame.FortEmotePreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortEmotePreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEmotePreviewActor");
		return ptr;
	}


	void PreviewEmote(class UFortMontageItemDefinitionBase* Emote);
};


// Class FortniteGame.FortEnemySpawn
// 0x0008 (0x0638 - 0x0630)
class AFortEnemySpawn : public ABuildingActor
{
public:
	float                                              ClusterRadius;                                            // 0x0630(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEnemySpawn");
		return ptr;
	}

};


// Class FortniteGame.FortEngine
// 0x0018 (0x0CE8 - 0x0CD0)
class UFortEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0CD0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEngine");
		return ptr;
	}


	void StartFortBench(const struct FString& ReplayName);
};


// Class FortniteGame.FortEventPurchaseTrackerItem
// 0x0060 (0x0140 - 0x00E0)
class UFortEventPurchaseTrackerItem : public UFortAccountItem
{
public:
	struct FString                                     event_instance_id;                                        // 0x00E0(0x0010) (ZeroConstructor)
	TMap<struct FString, int>                          event_purchases;                                          // 0x00F0(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEventPurchaseTrackerItem");
		return ptr;
	}

};


// Class FortniteGame.FortEventPurchaseTrackerItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortEventPurchaseTrackerItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEventPurchaseTrackerItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortExhibitActor
// 0x0048 (0x0370 - 0x0328)
class AFortExhibitActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FTransform                                  CameraOffset;                                             // 0x0330(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              CameraFOV;                                                // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0364(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortExhibitActor");
		return ptr;
	}

};


// Class FortniteGame.FortExpeditionItem
// 0x0060 (0x0140 - 0x00E0)
class UFortExpeditionItem : public UFortAccountItem
{
public:
	int                                                expedition_max_target_power;                              // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                expedition_min_target_power;                              // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FDateTime                                   expedition_start_time;                                    // 0x00E8(0x0008)
	struct FDateTime                                   expedition_end_time;                                      // 0x00F0(0x0008)
	struct FDateTime                                   expedition_expiration_start_time;                         // 0x00F8(0x0008)
	struct FDateTime                                   expedition_expiration_end_time;                           // 0x0100(0x0008)
	struct FString                                     expedition_squad_id;                                      // 0x0108(0x0010) (ZeroConstructor)
	struct FString                                     expedition_slot_id;                                       // 0x0118(0x0010) (ZeroConstructor)
	TArray<struct FString>                             expedition_criteria;                                      // 0x0128(0x0010) (ZeroConstructor)
	float                                              expedition_success_chance;                                // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortExpeditionItem");
		return ptr;
	}


	bool IsExpeditionInProgress();
	bool IsExpeditionCompleted(const struct FDateTime& UtcNow);
	bool HasExpeditionExpired(const struct FDateTime& UtcNow);
	float GetTargetPowerLevel();
	struct FTimespan GetRemainingExpeditionExpirationDuration(const struct FDateTime& UtcNow);
	struct FTimespan GetRemainingExpeditionDuration(const struct FDateTime& UtcNow);
	float GetMinTargetPowerLevelToBegin();
	float GetExpeditionSuccessChance();
	struct FName GetExpeditionSquadId();
	void GetBonusCriteriaTags(TArray<struct FGameplayTag>* OutBonusCriteria);
	void GetBonusCriteriaBP(TArray<struct FFortCriteriaRequirementData>* OutBonusCriteria);
};


// Class FortniteGame.FortExpeditionItemDefinition
// 0x0040 (0x03D0 - 0x0390)
class UFortExpeditionItemDefinition : public UFortAccountItemDefinition
{
public:
	struct FString                                     CriteriaRequirementsLootTier;                             // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              ExpeditionDuration_Minutes;                               // 0x03A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExpeditionExpirationDuration_Minutes;                     // 0x03A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BaseTargetPowerRating;                                    // 0x03A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TierFactor;                                               // 0x03AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxTargetPowerClamp;                                      // 0x03B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	struct FDataTableRowHandle                         ExpeditionRules;                                          // 0x03B8(0x0010) (Edit)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortExpeditionItemDefinition");
		return ptr;
	}


	struct FGameplayTagContainer GetRequiredTags();
	void GetExpeditionCosts(TArray<struct FItemAndCount>* OutExpeditionCosts);
	void GetAllRewards(TArray<class UFortCardPackItemDefinition*>* OutRewards);
};


// Class FortniteGame.FortExpeditionManager
// 0x0010 (0x0038 - 0x0028)
class UFortExpeditionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortExpeditionManager");
		return ptr;
	}

};


// Class FortniteGame.FortFallbackCameraFrameTargetProxy
// 0x0028 (0x0050 - 0x0028)
class UFortFallbackCameraFrameTargetProxy : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	struct FScriptDelegate                             OnSettingsChangedDelegate;                                // 0x0040(0x0010) (ZeroConstructor, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFallbackCameraFrameTargetProxy");
		return ptr;
	}


	void SetItemToRepresent(class UFortItem* ItemToRepresent, class USceneComponent* ComponentToView);
};


// Class FortniteGame.FortFastLoadConfig
// 0x0008 (0x0030 - 0x0028)
class UFortFastLoadConfig : public UObject
{
public:
	unsigned char                                      bDisableStreamInBuildings : 1;                            // 0x0028(0x0001) (Config)
	unsigned char                                      bDisableStartupAIDirector : 1;                            // 0x0028(0x0001) (Config)
	unsigned char                                      bDisableUpgradePlayerBuildingClasses : 1;                 // 0x0028(0x0001) (Config)
	unsigned char                                      bUseMinimalPlayerBuildingClasses : 1;                     // 0x0028(0x0001) (Config)
	unsigned char                                      bDisableStartingMissions : 1;                             // 0x0028(0x0001) (Config)
	unsigned char                                      bUseFastLoadDefaultInventory : 1;                         // 0x0028(0x0001) (Config)
	unsigned char                                      bDisableNavAgentCostData : 1;                             // 0x0028(0x0001) (Config)
	unsigned char                                      bDisableThreatVisualsManager : 1;                         // 0x0028(0x0001) (Config)
	unsigned char                                      bDisablePreLoadAssets : 1;                                // 0x0029(0x0001) (Config)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFastLoadConfig");
		return ptr;
	}

};


// Class FortniteGame.FortFeedbackBank
// 0x00C0 (0x00F0 - 0x0030)
class UFortFeedbackBank : public UPrimaryDataAsset
{
public:
	TArray<struct FFortFeedbackActionBankDefined>      BankDefinedFeedbackEvents;                                // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFortFeedbackAction>                 FeedbackEvents;                                           // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0050(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFeedbackBank");
		return ptr;
	}

};


// Class FortniteGame.FortFeedbackManager
// 0x0138 (0x0460 - 0x0328)
class AFortFeedbackManager : public AActor
{
public:
	TArray<struct FFortFeedbackEventData>              FeedbackEvents;                                           // 0x0328(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	bool                                               bUsesStWFeedbackEvents;                                   // 0x0338(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	TArray<struct FFortFeedbackEventData>              BankDefinedFeedbackEvents;                                // 0x0340(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      AnnouncerPawnClass;                                       // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AFortPawn_FeedbackAnnouncer*                 Announcer;                                                // 0x0358(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class AController>>          SuppressedControllers;                                    // 0x0360(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData01[0xF0];                                      // 0x0370(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFeedbackManager");
		return ptr;
	}


	void SuppressProceduralFeedback(TArray<class AController*> ControllersToSuppress);
	class AFortFeedbackManager* STATIC_GetFeedbackManager(class UObject* WorldContextObject);
	class AFortPawn_FeedbackAnnouncer* STATIC_GetAnnouncerPawn(class UObject* WorldContextObject);
};


// Class FortniteGame.FortFerretVehicleAnimInstance
// 0x0010 (0x04C0 - 0x04B0)
class UFortFerretVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	float                                              FerretVehicleSpeed;                                       // 0x04B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsNearlyZero;                                // 0x04B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsGreaterThanOne;                            // 0x04B5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReverseSpeedIsGreaterThanOne;                            // 0x04B6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSpeedIsGreaterThanFiveAndPlayerHitSpace;                 // 0x04B7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBraking;                                               // 0x04B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBoosting;                                              // 0x04B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayerHitSpaceBar;                                       // 0x04BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x04BB(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFerretVehicleAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortFerretVehicleConfigs
// 0x0118 (0x03F0 - 0x02D8)
class UFortFerretVehicleConfigs : public UFortDoghouseVehicleConfigs
{
public:
	float                                              BounceCrouchTime;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceCrouchTimeDeadzone;                                 // 0x02DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceRecoilTime;                                         // 0x02E0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceForcePerMass;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMagnitude;                                   // 0x02E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMinMagnitude;                                // 0x02EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanLeftRightInterpolationPerSecond;             // 0x02F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanUpInterpolationPerSecond;                    // 0x02F4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDownInterpolationPerSecond;                  // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanResetInterpolationPerSecond;                 // 0x02FC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDeadzone;                                    // 0x0300(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HandBrakeForce;                                           // 0x0304(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinAngle;                                       // 0x0308(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinLateralSpeedForPowerSlideBoost;                        // 0x030C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxAccumulatedPowerSlideBoost;                            // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET
	TArray<struct FFerretVehicleBoostLevel>            PowerSlideBoostAccumulationSteps;                         // 0x0318(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	float                                              PowerSlideAccumulationMultiplier;                         // 0x0328(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideTopSpeedMultiplier;                             // 0x032C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideTopSpeedInAirMultiplier;                        // 0x0330(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideStrength;                                       // 0x0334(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinAngularSpeed;                                // 0x0338(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMaxAngularSpeed;                                // 0x033C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplier;                                  // 0x0340(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCooldown;                                            // 0x0344(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplierRampTime;                          // 0x0348(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSlowExtraStrength;                                   // 0x034C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinForwardSpeedBoostExtraStrength;                        // 0x0350(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedForceMultiplier;                             // 0x0354(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehiclePowerSlideFrontMultiplier;                         // 0x0358(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehiclePowerSlideRearMultiplier;                          // 0x035C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinPushForce;                                   // 0x0360(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMin;                                  // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMax;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SpringFudgeFactor;                                        // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeNormalizedSpeed;                               // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeSpeedCurvePow;                                 // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideShakeMultiplierMin;                             // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideShakeMultiplierMax;                             // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostingCameraShakeAmount;                                // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraShakeFrequency;                                // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMin;                             // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMax;                             // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinSpringCompression;                           // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMin;                                  // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMax;                                  // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraShakeMultiplier;                           // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeYawFrequencyMultiplier;                        // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                WheelSlideBoostColorWhenNotPowerSliding;                  // 0x03A4(0x0010) (Edit, BlueprintVisible, Config, IsPlainOldData)
	float                                              TreadWidth;                                               // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              RumbleMultiplier;                                         // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SparksRumbleMultiplier;                                   // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraOffset;                                        // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSCameraDistance;                                        // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraOffset;                                    // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSInterpSpeed;                                           // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionTraceAheadAmount;                              // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionImpulseAmount;                                 // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     DestructionTraceHalfSize;                                 // 0x03D8(0x000C) (Edit, BlueprintVisible, Config, IsPlainOldData)
	bool                                               bCanDestroyProps;                                         // 0x03E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03E5(0x0003) MISSED OFFSET
	float                                              HitRequiredMinSpeed;                                      // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyProp;                                   // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFerretVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortFlag
// 0x0010 (0x04A0 - 0x0490)
class AFortFlag : public AFortCarriedObject
{
public:
	class UStaticMeshComponent*                        FlagMeshComp;                                             // 0x0490(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           CollisionComp;                                            // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFlag");
		return ptr;
	}

};


// Class FortniteGame.FortFOBCoreDecoItemDefinition
// 0x0040 (0x0CE0 - 0x0CA0)
class UFortFOBCoreDecoItemDefinition : public UFortDecoItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0CA0(0x0010) MISSED OFFSET
	struct FText                                       FlavorText;                                               // 0x0CB0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGuid                                       SaveFilenameGUID;                                         // 0x0CC8(0x0010) (Edit, EditConst, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0CD8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFOBCoreDecoItemDefinition");
		return ptr;
	}


	int GetMaximumHealth();
};


// Class FortniteGame.FortFoliageSpawnerSet
// 0x0010 (0x0040 - 0x0030)
class UFortFoliageSpawnerSet : public UDataAsset
{
public:
	TArray<class UProceduralFoliageSpawner*>           FoliageSpawners;                                          // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFoliageSpawnerSet");
		return ptr;
	}

};


// Class FortniteGame.FortFootstepAudioBank
// 0x0A68 (0x0A98 - 0x0030)
class UFortFootstepAudioBank : public UDataAsset
{
public:
	struct FFortFootstepAudioData                      FootstepData1P[0x7];                                      // 0x0030(0x00B8) (Edit, DisableEditOnInstance)
	struct FFortFootstepAudioData                      FootstepData3P[0x7];                                      // 0x0538(0x00B8) (Edit, DisableEditOnInstance)
	TEnumAsByte<EFortFootstepSurfaceType>              PhysicalSurfaceMappings[0x3F];                            // 0x0A40(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0A7F(0x0001) MISSED OFFSET
	float                                              TeammateVolumeMultiplier;                                 // 0x0A80(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxFootstepDistance;                                      // 0x0A84(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalPitchMaxBelow;                                    // 0x0A88(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalPitchMaxAbove;                                    // 0x0A8C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalPitchTileRange;                                   // 0x0A90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0A94(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFootstepAudioBank");
		return ptr;
	}


	class USoundBase* GetSoundAsset(bool bIsLocal, TEnumAsByte<EFortFootstepAudioType> StepType, TEnumAsByte<EFortFootstepSurfaceType> SurfaceType, TEnumAsByte<EFortFootstepPosition> StepPosition);
	float GetFootstepVolumeMultiplier(bool bIsLocal, bool bApplyTeammateVolume, TEnumAsByte<EFortFootstepAudioType> StepType);
	class USoundAttenuation* GetAttenuationAsset(bool bIsLocal, TEnumAsByte<EFortFootstepAudioType> StepType, TEnumAsByte<EFortFootstepPosition> StepPosition);
};


// Class FortniteGame.FortForcedLODZone
// 0x0008 (0x0330 - 0x0328)
class AFortForcedLODZone : public AActor
{
public:
	EFortAILODLevel                                    ForcedLODLevel;                                           // 0x0328(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortForcedLODZone");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerCameraBase
// 0x05D0 (0x2A50 - 0x2480)
class AFortPlayerCameraBase : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x2480(0x0008) MISSED OFFSET
	TArray<struct FFortCameraInstanceEntry>            CameraInstances;                                          // 0x2488(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      CurrentAbilitySpecifiedCameraClass;                       // 0x2498(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayAbilitySpecHandle                  AbilitySpecForCameraClassRequest;                         // 0x24A0(0x0004) (Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x24A4(0x0004) MISSED OFFSET
	class UClass*                                      Base3PClass;                                              // 0x24A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Targeting3PClass;                                         // 0x24B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OverrideCameraClass;                                      // 0x24B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CinematicCameraClass;                                     // 0x24C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DBNOCameraClass;                                          // 0x24C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DeathCameraClass;                                         // 0x24D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SkydiveGlideCameraClass;                                  // 0x24D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SkydiveDiveCameraClass;                                   // 0x24E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SkydiveParachuteCameraClass;                              // 0x24E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HoverboardCameraClass;                                    // 0x24F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FFortCameraPrototype>                CameraPrototypes;                                         // 0x24F8(0x0010) (Edit, ZeroConstructor)
	class APostProcessVolume*                          ZoomPostProcessVolume;                                    // 0x2508(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x540];                                     // 0x2510(0x0540) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerCameraBase");
		return ptr;
	}

};


// Class FortniteGame.FortFrontEndCameraManager
// 0x00E0 (0x2B30 - 0x2A50)
class AFortFrontEndCameraManager : public AFortPlayerCameraBase
{
public:
	EFrontEndCamera                                    CurrentCamera;                                            // 0x2A50(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x2A51(0x0007) MISSED OFFSET
	class AFrontEndSettings*                           FrontEndSettings;                                         // 0x2A58(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x2A60(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFrontEndCameraManager");
		return ptr;
	}


	void SetZoomLevel(float ZoomLevel);
	void SetFrameTarget(const TScriptInterface<class UFortUICameraFrameTargetInterface>& FrameTarget);
	void SetCustomCameraRotationOffset(const struct FRotator& Offset);
	void SetCameraFrame(const TScriptInterface<class UFortUICameraFrameInterface>& NewFrame);
	void SetCamera(EFrontEndCamera NewCamera);
	void HandleCameraFrameTargetSettingsChanged(const TScriptInterface<class UFortUICameraFrameTargetInterface>& FrameTarget);
	float GetZoomLevel();
	class AFortCameraBase* GetCameraActor();
	EFrontEndCamera GetCamera();
};


// Class FortniteGame.FortFrontendItemViewSettingsManager
// 0x0000 (0x0028 - 0x0028)
class UFortFrontendItemViewSettingsManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFrontendItemViewSettingsManager");
		return ptr;
	}


	struct FFortItemViewSettings GetItemViewSettings(EFrontEndCamera Camera, ESubGame GameMode, class UFortItemDefinition* ItemDefinition);
};


// Class FortniteGame.FortFXManager
// 0x0148 (0x0478 - 0x0330)
class AFortFXManager : public AFortClientOnlyActor
{
public:
	TArray<struct FFortSplineMeshAnimSet>              SplineAnimSets;                                           // 0x0330(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortMIDAnimSet>                     MIDAnimSets;                                              // 0x0340(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortParticleAnimSet>                ParticleAnimSets;                                         // 0x0350(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortLightAnimSet>                   LightAnimSets;                                            // 0x0360(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortWeaponRanged*>                   PendingWeaponFX;                                          // 0x0370(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0380(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortFXManager");
		return ptr;
	}


	class AActor* STATIC_SpawnPooledFXActor(class UObject* WorldContextObject, class UClass* FXActorClass, const struct FTransform& SpawnTransform);
	void STATIC_ReturnPickupStretchMIDToPool(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int ElementIndex);
	void STATIC_ReturnFXActorToPool(class UObject* WorldContextObject, class AActor* FXActor);
	void STATIC_RemoveSplineMeshAnimations(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh);
	void STATIC_RemoveParticleAnimations(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp);
	void STATIC_RemoveMIDAnimations(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid);
	void STATIC_RemoveLightAnimations(class UObject* WorldContextObject, class ULightComponent* LightComp);
	class UMaterialInstanceDynamic* STATIC_GetPickupStretchMIDFromPool(class AFortPickupEffect* PickupObject, class UMaterialInterface* SourceMaterial, class UPrimitiveComponent* Component, int ElementIndex, bool* bNeedsToBeInitialized);
	class UMaterialInstanceDynamic* STATIC_GetPickupRarityMID(class AFortPickupEffect* PickupObject, class UPrimitiveComponent* Component, int ElementIndex, int Rarity, bool* bNeedsToBeInitialized);
	void STATIC_AddSplineMeshSnapAnimation(class UObject* WorldContextObject, TArray<class USplineMeshComponent*> SplineMeshes, class USplineComponent* TargetSpline, class UCurveFloat* GrowthCurve, float Duration, bool bPlayGrowthReverse);
	void STATIC_AddSplineMeshScaleAnimation(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh, float StartScaleStart, float StartScaleEnd, float EndScaleStart, float EndScaleEnd, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void STATIC_AddParticleAnimationFloat(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp, const struct FName& ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void STATIC_AddMIDAnimationFloat(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, const struct FName& ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void STATIC_AddMIDAnimationColorCurve(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, const struct FName& ParamName, class UCurveLinearColor* ColorCurve, float Duration, bool bPlayReverse);
	void STATIC_AddMIDAnimationColor(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, const struct FName& ParamName, const struct FLinearColor& StartValue, const struct FLinearColor& EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
	void STATIC_AddLightAnimationIntensity(class UObject* WorldContextObject, class ULightComponent* LightComp, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse);
};


// Class FortniteGame.FortGadgetItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortGadgetItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGadgetItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortGadgetItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortGadgetItemTooltip : public UFortWorldItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGadgetItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortGameData
// 0x2E08 (0x2E38 - 0x0030)
class UFortGameData : public UPrimaryDataAsset
{
public:
	class UClass*                                      TestEncounter;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GameModeAthenaClass;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaylistManagerClass;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CombatManager;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultCameraManager;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      UIMapManager;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MusicManager;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortMusicManagerBank*                       MusicManagerBank;                                         // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       DefaultHeroName;                                          // 0x0070(0x0018) (Edit)
	class UAthenaGliderItemDefinition*                 DefaultGliderSkin;                                        // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAthenaPickaxeItemDefinition*                DefaultPickaxeSkin;                                       // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortAnalyticsData*                          AnalyticsData;                                            // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAnalyticsItemExclusions*                StWAnalyticsItemExclusionData;                            // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAnalyticsItemExclusions*                BRAnalyticsItemExclusionData;                             // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortGameplayTagData*                        GameplayTagData;                                          // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTooltipMap*                             ObjClassToTooltipClassMap;                                // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.DefaultDamageReceiverClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x00E8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.DefaultDamageReceiverClassAthena
	class UFortTokenToTextTable*                       TooltipTokenToTextTable;                                  // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTokenToAttributeTable*                  TooltipTokenToAttributeTable;                             // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickupSplineOffsetRange[0x2];                             // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PickupSplineRandomMax;                                    // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickupSplineDropToGroundLength;                           // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickupMaxCollectionTime;                                  // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickupMaxDelayPerItem;                                    // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                PickupSplineCurve;                                        // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  PickupLandedSound;                                        // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AccountInventoryBonusToken
	unsigned char                                      UnknownData03[0x28];                                      // 0x0170(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.WorldInventoryBonusToken
	unsigned char                                      UnknownData04[0x28];                                      // 0x0198(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.FounderChatUnlockToken
	class UFortRarityData*                             RarityData;                                               // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortScoreStylingData*                       ScoreStylingData;                                         // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortItemCategory*                           ItemCategories;                                           // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FQuickBarData                               QuickBarDefinitions[0x2];                                 // 0x01D8(0x0010) (Edit)
	TArray<struct FName>                               AutoEquipTags;                                            // 0x01F8(0x0010) (ZeroConstructor)
	struct FGameplayTagContainer                       AutoEquipTagContainer;                                    // 0x0208(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FLinearColor                                BuildingFullHealthFlashColor;                             // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                InvalidEditPatternColor;                                  // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FFortHighlightColorsContainer               HighlightColors[0x4];                                     // 0x0248(0x0060) (Edit)
	float                                              ScoreDisplayFactor;                                       // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	TArray<struct FFortReplicatedStatMapping>          StatMappings;                                             // 0x03D0(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance)
	class UDataTable*                                  ScoreMultiplierDataTable;                                 // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScoreDivisor;                                             // 0x03E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                XPMult;                                                   // 0x03EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroupScoreRates[0x5];                                     // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreToXPLinearRate;                                      // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LinearEnd;                                                // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                XpPerAccountLevel;                                        // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CriticalMatch_XpBonusPercent;                             // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PersonalBoost_XpBonusPercent;                             // 0x0414(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroupBoost_XpBonusPercent;                                // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroupBoost_BuffMultiplier;                                // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Rest_XpBonusPercent;                                      // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	class USoundMix*                                   LoadingScreenSoundMix;                                    // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundMix*                                   BaseSoundMix;                                             // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AbilityTargetingActorBlueprintClass;                      // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0440(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.HarvestingTools
	unsigned char                                      UnknownData08[0x10];                                      // 0x0450(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.AthenaHarvestingToolsToPreload
	TArray<struct FKeybindIcon>                        IconKeyList;                                              // 0x0460(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FKeybindIcon>                        IconKeyListPS4;                                           // 0x0470(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FKeybindIcon>                        IconKeyListXboxOne;                                       // 0x0480(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x28];                                      // 0x0490(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MobileInteractionMaterial
	unsigned char                                      UnknownData10[0x28];                                      // 0x04B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MobileInteractionMesh
	struct FVector                                     MobileInteractionIconScale;                               // 0x04E0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MobileRarityColor[0xA];                                   // 0x04EC(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	class UTexture2D*                                  MobileInteractionIcons[0x4];                              // 0x0590(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSubGameInfo                                SubGameInfo[0x2];                                         // 0x05B0(0x0010) (Edit)
	struct FGameplayTagContainer                       PlacementActorUsedTags;                                   // 0x05D0(0x0020) (Edit, DisableEditOnInstance)
	struct FFortPlayerSpawnPadPlacementData            DefaultPlayerSpawnPadPlacementData;                       // 0x05F0(0x0058) (Edit)
	unsigned char                                      UnknownData12[0x28];                                      // 0x0648(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DefaultBackpackCharacterPart
	unsigned char                                      UnknownData13[0x10];                                      // 0x0670(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.DefaultCharacterParts
	TArray<struct FDefaultCharacterPartsForPawnClass>  DefaultCharacterPartOverridesPerPawnClass;                // 0x0680(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      AIGoalManagerClass;                                       // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x28];                                      // 0x0698(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.SharedMissionListsClass
	float                                              QueuedAnnouncementPauseTimes[0x3];                        // 0x06C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x06CC(0x0004) MISSED OFFSET
	struct FCurveTableRowHandle                        WeakSpotEnabledTimeoutHandle;                             // 0x06D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              BuildingStructuralCollapseDelay;                          // 0x06E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BuildingStructuralCollapseDelayVariance;                  // 0x06E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BuildingStructuralCollapseCellDistAdditiveDelay;          // 0x06E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BuildingStructuralCollapseCellDistAdditiveDelayVariance;  // 0x06EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EditModeCancelDistance;                                   // 0x06F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x06F4(0x0004) MISSED OFFSET
	struct FCurveTableRowHandle                        BuildingExcessDamageRewardTimeoutHandle;                  // 0x06F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCurveTableRowHandle                        BuildingCostHandles[0x4];                                 // 0x0708(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingDeconCostMultHandles[0x4];                        // 0x0748(0x0010) (Edit)
	struct FCurveTableRowHandle                        PlayerBuildingDeconCostMultHandles[0x4];                  // 0x0788(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingInitialHealthPercentHandles[0x4];                 // 0x07C8(0x0010) (Edit)
	struct FCurveTableRowHandle                        AthenaBuildingInitialHealthPercentHandles[0x4];           // 0x0808(0x0010) (Edit)
	struct FCurveTableRowHandle                        AthenaBuildingDropPercentHandles[0x4];                    // 0x0848(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingRepairCostMultiplierHandles[0x4];                 // 0x0888(0x0010) (Edit)
	float                                              FORTAttributeToPowerMultiplier;                           // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x08CC(0x0004) MISSED OFFSET
	struct FCurveTableRowHandle                        BuildingBreakAnimDurationHandles[0x4];                    // 0x08D0(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingDestroyAnimDurationHandles[0x4];                  // 0x0910(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingPlacementAnimDurationHandles[0x4];                // 0x0950(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingCritDamagePctHandles[0x4];                        // 0x0990(0x0010) (Edit)
	struct FCurveTableRowHandle                        BuildingCritDestroyAnimScaleCapHandles[0x4];              // 0x09D0(0x0010) (Edit)
	unsigned char                                      UnknownData18[0x28];                                      // 0x0A10(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.StencilDefinitionCollection
	class UFortBuildingAudioBank*                      BuildingAudioBank;                                        // 0x0A38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       ResourceNames[0x4];                                       // 0x0A40(0x0018)
	struct FText                                       BuildingTypeNames[0xC];                                   // 0x0AA0(0x0018)
	class UFortResourceItemDefinition*                 StoneItemDefinition;                                      // 0x0BC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortResourceItemDefinition*                 WoodItemDefinition;                                       // 0x0BC8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortResourceItemDefinition*                 MetalItemDefinition;                                      // 0x0BD0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAmmoItemDefinition*                     PistolAmmoItemDefinition;                                 // 0x0BD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortResourceItemDefinition*                 PermaniteItemDefinition;                                  // 0x0BE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAmmoItemDefinition*                     ShotgunAmmoItemDefinition;                                // 0x0BE8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAmmoItemDefinition*                     RifleAmmoItemDefinition;                                  // 0x0BF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAmmoItemDefinition*                     AssaultAmmoItemDefinition;                                // 0x0BF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortAmmoItemDefinition*                     EnergyAmmoItemDefinition;                                 // 0x0C00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortNeverPersistItemDefinition*             BluGloItemDefinition;                                     // 0x0C08(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortItemDefinition*                         CriticalMissionRewardItemDefinition;                      // 0x0C10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortItemDefinition*                         ScoreBonusMultiplerItemDefinition;                        // 0x0C18(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortItemDefinition*                         GenericCampaignEventCurrency;                             // 0x0C20(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x28];                                      // 0x0C28(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.BackpackItemDefinition
	unsigned char                                      UnknownData20[0x28];                                      // 0x0C50(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MissionRewardPackItemDefinition
	struct FText                                       OutpostRefundDialogTitle;                                 // 0x0C78(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       OutpostRefundDialogText;                                  // 0x0C90(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       OutpostRefundButtonText;                                  // 0x0CA8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UFortInputData*                              FortInputData;                                            // 0x0CC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTimeOfDayData*                          FortTimeOfDayData;                                        // 0x0CC8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortMissionCSVEventMap*                     MissionCSVEventMap;                                       // 0x0CD0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortHeroData*                               FortHeroData;                                             // 0x0CD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x28];                                      // 0x0CE0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GamepadSettingsDefault
	unsigned char                                      UnknownData22[0x28];                                      // 0x0D08(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GamepadSettingsPS4
	unsigned char                                      UnknownData23[0x28];                                      // 0x0D30(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GamepadSettingsXboxOne
	unsigned char                                      UnknownData24[0x28];                                      // 0x0D58(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GamepadSettingsSwitch
	unsigned char                                      UnknownData25[0x28];                                      // 0x0D80(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.TouchInputSettings
	unsigned char                                      UnknownData26[0x28];                                      // 0x0DA8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationMigrationMapping
	unsigned char                                      UnknownData27[0x28];                                      // 0x0DD0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationIntrinsicMapping
	unsigned char                                      UnknownData28[0x28];                                      // 0x0DF8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationNamedExclusions
	unsigned char                                      UnknownData29[0x28];                                      // 0x0E20(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationGroups
	unsigned char                                      UnknownData30[0x28];                                      // 0x0E48(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationSlotDefinitions
	unsigned char                                      UnknownData31[0x28];                                      // 0x0E70(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AlterationSlotsLoadouts
	unsigned char                                      UnknownData32[0x10];                                      // 0x0E98(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.LootTierDataTables
	unsigned char                                      UnknownData33[0x10];                                      // 0x0EA8(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.LootPackageDataTables
	unsigned char                                      UnknownData34[0x28];                                      // 0x0EB8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.WaveSetCollectionData
	unsigned char                                      UnknownData35[0x28];                                      // 0x0EE0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.WaveSetData
	unsigned char                                      UnknownData36[0x28];                                      // 0x0F08(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.ModifierSetData
	unsigned char                                      UnknownData37[0x28];                                      // 0x0F30(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.WaveSetCollectionLootData
	unsigned char                                      UnknownData38[0x28];                                      // 0x0F58(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.PlayerStatClampingData
	struct FGameplayTagContainer                       NonGameplayRelevantTags;                                  // 0x0F80(0x0020) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData39[0x28];                                      // 0x0FA0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.CraftingTimeTable
	unsigned char                                      UnknownData40[0x28];                                      // 0x0FC8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DefaultCraftingSuccessSound
	struct FCurveTableRowHandle                        CritRatingTable;                                          // 0x0FF0(0x0010) (Edit)
	class UClass*                                      TeamStatsGameplayEffect;                                  // 0x1000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortDailyRewardScheduleDefinitions*         DailyRewardSchedules;                                     // 0x1008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData41[0x28];                                      // 0x1010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.ExpeditionCriteriaRequirementsData
	class UDataTable*                                  DifficultyData;                                           // 0x1038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LowXpConningValue;                                        // 0x1040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VeryLowXpConningValue;                                    // 0x1044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NoXpConningValue;                                         // 0x1048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData42[0x4];                                       // 0x104C(0x0004) MISSED OFFSET
	struct FText                                       FullXpConningMsg;                                         // 0x1050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       LowXpConningMsg;                                          // 0x1068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       VeryLowXpConningMsg;                                      // 0x1080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       NoXpConningMsg;                                           // 0x1098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                MaxCraftQueueSize;                                        // 0x10B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x4];                                       // 0x10B4(0x0004) MISSED OFFSET
	class UDataTable*                                  LootQuotaData;                                            // 0x10B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  LootLevelData;                                            // 0x10C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultLootInstancingRange;                               // 0x10C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData44[0x4];                                       // 0x10CC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData45[0x28];                                      // 0x10CC(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.TagQueryTable
	unsigned char                                      UnknownData46[0x8];                                       // 0x10F8(0x0008) MISSED OFFSET
	class UDataTable*                                  SurfaceRatioBySurfaceCategoryData;                        // 0x1100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SurfaceRatioByAffiliationData;                            // 0x1108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  QuestObjectiveStatData;                                   // 0x1110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  XPAccountLevelsTable;                                     // 0x1118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveTable*                                 XPAccountItemLevelsTable;                                 // 0x1120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveTable*                                 XPAccountItemRewardsTable;                                // 0x1128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveTable*                                 XPConningTable;                                           // 0x1130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      TeamIdentifications[0x68];                                // 0x1138(0x0008) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortQuestPackInfo>                  QuestPackInfos;                                           // 0x1478(0x0010) (Edit, ZeroConstructor)
	class UFortQuestItemDefinition*                    OnboardingQuestItemDefinition;                            // 0x1488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         OnboardingCompleteZoneObjective;                          // 0x1490(0x0010) (Edit)
	struct FGameplayTagContainer                       DamageDoneTargetQuest_AllowedTags;                        // 0x14A0(0x0020) (Edit)
	struct FGameplayTagContainer                       DamageDoneQuest_AllowedTags;                              // 0x14C0(0x0020) (Edit)
	unsigned char                                      UnknownData47[0x28];                                      // 0x14E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.QuestAchievementData
	struct FFortSubGameLoadingScreen                   LoadingScreenFallback;                                    // 0x1508(0x0050) (Edit)
	struct FFortSubGameLoadingScreen                   LoadingScreens[0x2];                                      // 0x1558(0x0050) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 LoadingScreenEABackground;                                // 0x15F8(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 LoadingScreenMissionBackground;                           // 0x1680(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 LoadingScreenTipBackground;                               // 0x1708(0x0088) (Edit, DisableEditOnInstance)
	struct FProgressBarStyle                           LoadingProgressBar;                                       // 0x1790(0x01A0) (Edit, DisableEditOnInstance)
	struct FConditionalFoundationQuota                 ConditionalFoundationQuota;                               // 0x1930(0x0010) (Edit, DisableEditOnInstance)
	class UFortItemDefinition*                         SkillPointItemDef;                                        // 0x1940(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortItemDefinition*                         ResearchPointItemDef;                                     // 0x1948(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  StatNamesToTrackTable;                                    // 0x1950(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData48[0x28];                                      // 0x1958(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MissionGenerationData
	unsigned char                                      UnknownData49[0x10];                                      // 0x1980(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.CheatInventoryItems
	unsigned char                                      UnknownData50[0x28];                                      // 0x1990(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.TheaterMapViewerClass
	unsigned char                                      UnknownData51[0x28];                                      // 0x19B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MissionAlertCategories
	unsigned char                                      UnknownData52[0x28];                                      // 0x19E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.MyFortData
	unsigned char                                      UnknownData53[0x28];                                      // 0x1A08(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.HomebaseManager
	unsigned char                                      UnknownData54[0x28];                                      // 0x1A30(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.CollectionBookData
	unsigned char                                      UnknownData55[0x28];                                      // 0x1A58(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.SurvivorData
	unsigned char                                      UnknownData56[0x28];                                      // 0x1A80(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.OutpostData
	unsigned char                                      UnknownData57[0x28];                                      // 0x1AA8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AttributeLookupTable
	unsigned char                                      UnknownData58[0x28];                                      // 0x1AD0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AttributeCategories
	unsigned char                                      UnknownData59[0x28];                                      // 0x1AF8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.UITagDataTable
	struct FCurveTableRowHandle                        PowerPointToRatingConversion;                             // 0x1B20(0x0010) (Edit)
	struct FFortQuestMapDataEntry                      CampaignQuestMapData;                                     // 0x1B30(0x0010) (Edit, IsPlainOldData)
	struct FFortQuestMapDataEntry                      EventQuestMapData;                                        // 0x1B40(0x0010) (Edit, IsPlainOldData)
	bool                                               bUseSpecialEventsCamera;                                  // 0x1B50(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData60[0x7];                                       // 0x1B51(0x0007) MISSED OFFSET
	TArray<struct FSettingsHUDVisibilityAndText>       HUDVisibilityGameplayTags;                                // 0x1B58(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData61[0x28];                                      // 0x1B68(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.DamageNumbersActorClass
	unsigned char                                      UnknownData62[0x28];                                      // 0x1B90(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.WeakSpotBlueprintClass
	class UPhysicalMaterial*                           WeakSpotWoodPhysicalMaterial;                             // 0x1BB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           WeakSpotStonePhysicalMaterial;                            // 0x1BC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           WeakSpotMetalPhysicalMaterial;                            // 0x1BC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData63[0x28];                                      // 0x1BD0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.PickupEffectBlueprintClass
	struct FDataTableRowHandle                         GameDifficultyRowPIE;                                     // 0x1BF8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData64[0x10];                                      // 0x1C08(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameData.AIDirectors
	int                                                AIDirectorIndex;                                          // 0x1C18(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AlternateBalanceAIDirectorIndex;                          // 0x1C1C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData65[0x28];                                      // 0x1C20(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.FeedbackManagerClass
	unsigned char                                      UnknownData66[0x28];                                      // 0x1C48(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.FeedbackManagerClassAthena
	unsigned char                                      UnknownData67[0x28];                                      // 0x1C70(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.BluGloManagerClass
	unsigned char                                      UnknownData68[0x28];                                      // 0x1C98(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.UIFeedbackBank
	unsigned char                                      UnknownData69[0x28];                                      // 0x1CC0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.AthenaUIFeedbackBank
	class UGameplayTagTableManager*                    TagTableManager;                                          // 0x1CE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData70[0x28];                                      // 0x1CF0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.StatEventManagerClass
	unsigned char                                      UnknownData71[0x28];                                      // 0x1D18(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DefaultHero
	unsigned char                                      UnknownData72[0x28];                                      // 0x1D40(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DefaultAthenaHero
	TArray<struct FItemDefinitionAndCount>             DefaultInventoryList;                                     // 0x1D68(0x0010) (Edit, ZeroConstructor)
	TArray<struct FItemDefinitionAndCount>             FastLoadDefaultInventoryList;                             // 0x1D78(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData73[0x28];                                      // 0x1D88(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.ThreatVisualsManager
	unsigned char                                      UnknownData74[0x28];                                      // 0x1DB0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.WindManager
	unsigned char                                      UnknownData75[0x28];                                      // 0x1DD8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.EditToolItem
	unsigned char                                      UnknownData76[0x28];                                      // 0x1E00(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GenericPlayerAbilitySet
	unsigned char                                      UnknownData77[0x28];                                      // 0x1E28(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.GenericTrapAbilitySet
	class UFortAbilityTagRelationshipMapping*          AbilityTagRelationshipMapping;                            // 0x1E50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData78[0x28];                                      // 0x1E58(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.EnvironmentDamageTemplateGE
	unsigned char                                      UnknownData79[0x28];                                      // 0x1E80(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.FallingDamageTemplateGE
	unsigned char                                      UnknownData80[0x28];                                      // 0x1EA8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.HealingTemplateGE
	unsigned char                                      UnknownData81[0x28];                                      // 0x1ED0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.FatalDamageTemplateGE
	unsigned char                                      UnknownData82[0x28];                                      // 0x1EF8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.SquadMemberStatBonusGE
	unsigned char                                      UnknownData83[0x28];                                      // 0x1F20(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.TeamTrapBonusGE
	float                                              SquadMemberStatBonusMultiplier;                           // 0x1F48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData84[0x4];                                       // 0x1F4C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData85[0x28];                                      // 0x1F4C(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.BASEClass
	unsigned char                                      UnknownData86[0x28];                                      // 0x1F78(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.EmoteGameplayAbility
	unsigned char                                      UnknownData87[0x28];                                      // 0x1FA0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.SprayGameplayAbility
	unsigned char                                      UnknownData88[0x28];                                      // 0x1FC8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.QuestNotificationHandlerClass
	unsigned char                                      UnknownData89[0x28];                                      // 0x1FF0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.BasicNotificationClass
	unsigned char                                      UnknownData90[0x28];                                      // 0x2018(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.FriendNotificationClass
	unsigned char                                      UnknownData91[0x28];                                      // 0x2040(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.TwitchNotificationClass
	unsigned char                                      UnknownData92[0x28];                                      // 0x2068(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.MissionVoteNotificationClass
	struct FUISoundFeedback                            FriendFeedbackSounds[0x3];                                // 0x2090(0x0008) (Edit)
	struct FUISoundFeedback                            FriendFeedbackSoundsAthena[0x3];                          // 0x20A8(0x0008) (Edit)
	struct FUISoundFeedback                            PartyFeedbackSounds[0x2];                                 // 0x20C0(0x0008) (Edit)
	struct FUISoundFeedback                            PartyFeedbackSoundsAthena[0x2];                           // 0x20D0(0x0008) (Edit)
	unsigned char                                      UnknownData93[0x28];                                      // 0x20E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.HealthScreenDamagePostProcessMat
	unsigned char                                      UnknownData94[0x28];                                      // 0x2108(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.ZoneModifiersAnnouncementClass
	unsigned char                                      UnknownData95[0x28];                                      // 0x2130(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.SessionXPCurveTable
	unsigned char                                      UnknownData96[0x28];                                      // 0x2158(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.TieredWavesDefenseReqTable
	unsigned char                                      UnknownData97[0x28];                                      // 0x2180(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.FallbackDeathParticles
	unsigned char                                      UnknownData98[0x28];                                      // 0x21A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.WallFallbackDeathParticles
	unsigned char                                      UnknownData99[0x28];                                      // 0x21D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.FallbackConstructedEffect
	unsigned char                                      UnknownData100[0x28];                                     // 0x21F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.RepairEffect
	unsigned char                                      UnknownData101[0x28];                                     // 0x2220(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.ConstructionCompleteSound
	unsigned char                                      UnknownData102[0x28];                                     // 0x2248(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DamageMaterial
	unsigned char                                      UnknownData103[0x28];                                     // 0x2270(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.BounceCurve
	unsigned char                                      UnknownData104[0x28];                                     // 0x2298(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.BlueprintParentMaterial
	unsigned char                                      UnknownData105[0x28];                                     // 0x22C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.EditCurve
	unsigned char                                      UnknownData106[0x28];                                     // 0x22E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.BlueprintDamageCurve
	unsigned char                                      UnknownData107[0x28];                                     // 0x2310(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.FullHealthAnimCurve
	unsigned char                                      UnknownData108[0x28];                                     // 0x2338(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.RepairAnimCurve
	unsigned char                                      UnknownData109[0x28];                                     // 0x2360(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.DynamicLODEffectCurve
	unsigned char                                      UnknownData110[0x28];                                     // 0x2388(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.InteractFullBounceCurve
	unsigned char                                      UnknownData111[0x28];                                     // 0x23B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.InteractFullBounceNormalCurve
	unsigned char                                      UnknownData112[0x28];                                     // 0x23D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.InteractEmptyBounceCurve
	unsigned char                                      UnknownData113[0x28];                                     // 0x2400(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameData.InteractEmptyBounceNormalCurve
	struct FGameplayTag                                ExpeditionUnlockedTag;                                    // 0x2428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FGameplayTagContainer                       ExpeditionVehicleTags;                                    // 0x2430(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      UnknownData114[0x28];                                     // 0x2450(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameData.ExpeditionMasterWidgetClass
	int                                                DailyMissionAlertQuota;                                   // 0x2478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData115[0x4];                                      // 0x247C(0x0004) MISSED OFFSET
	struct FOnlineAccountTexts                         OnlineAccountTexts;                                       // 0x2480(0x0978) (Edit)
	TArray<struct FName>                               ServerOnlyAssetTypes;                                     // 0x2DF8(0x0010) (Edit, ZeroConstructor)
	class UDataTable*                                  BannerIconData;                                           // 0x2E08(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  BannerIconCategoryData;                                   // 0x2E10(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  BannerColorData;                                          // 0x2E18(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  BannerColorCategoryData;                                  // 0x2E20(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortHomebaseBannerColorMap*                 BannerColorMap;                                           // 0x2E28(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortHomebaseBannerIconItemDefinition*       BannerIconItemDefinition;                                 // 0x2E30(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameData");
		return ptr;
	}


	int STATIC_GetXpPerAccountLevel();
	float STATIC_GetTeamXpBoost();
	float STATIC_GetPersonalXpBoost();
};


// Class FortniteGame.FortGameDeathPenalty
// 0x0078 (0x00A8 - 0x0030)
class UFortGameDeathPenalty : public UDataAsset
{
public:
	float                                              PercentResourcesToDrop;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentWeaponsToDrop;                                     // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentCraftingIngredientsToDrop;                         // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentConsumablesToDrop;                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentAmmoToDrop;                                        // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentResourcesToRecover;                                // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentWeaponsToRecover;                                  // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentCraftingIngredientsToRecover;                      // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentConsumablesToRecover;                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentAmmoToRecover;                                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinResourcesToKeep;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinWeaponsToKeep;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinCraftingIngredientsToKeep;                             // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinConsumablesToKeep;                                     // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinAmmoToKeep;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FCurveTableRowHandle                        RespawnDelays;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UCurveFloat*                                 RespawnDelayOverTime;                                     // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxRespawnDelay;                                          // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSelfResurrectDelay;                                    // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseRegenHealthOnRespawn;                                 // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	float                                              PercentHealthOnRespawn;                                   // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PercentStaminaOnRespawn;                                  // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RespawnDurabilityPenalty;                                 // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SelfResurrectDurabilityPenalty;                           // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TeammateResurrectDurabilityPenalty;                       // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameDeathPenalty");
		return ptr;
	}

};


// Class FortniteGame.FortGameInstance
// 0x04D8 (0x0640 - 0x0168)
class UFortGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0168(0x0008) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x0168(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortGameInstance.EventFlagsForcedOnByHotfix
	unsigned char                                      UnknownData02[0x50];                                      // 0x01C0(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortGameInstance.EventFlagsForcedOffByHotfix
	unsigned char                                      UnknownData03[0x50];                                      // 0x0210(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortGameInstance.CosmeticsBlacklistedByHotfix
	bool                                               bBattleRoyaleMatchmakingEnabled;                          // 0x0260(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	TArray<struct FPlaylistOverrideData>               PlaylistOverrides;                                        // 0x0268(0x0010) (ZeroConstructor, Config)
	TArray<struct FPlaylistFrontEndSettings>           FrontEndPlaylistData;                                     // 0x0278(0x0010) (ZeroConstructor, Config)
	struct FAthenaDataTableSet                         AthenaDataTables;                                         // 0x0288(0x0030)
	TScriptInterface<class UFortUIManagerInterface>    UIManagerInterface;                                       // 0x02B8(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSoftObjectPath                             UIManagerClassPath;                                       // 0x02C8(0x0018) (Edit, Config)
	class UMcpProfileManager*                          ProfileManager;                                           // 0x02E0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x02E8(0x0010) MISSED OFFSET
	class UFortMatchmaking*                            Matchmaking;                                              // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMatchmakingV2*                          MatchmakingV2;                                            // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortRejoinCheck*                            RejoinCheck;                                              // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortParty*                                  Party;                                                    // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMatchAnalytics*                         MatchAnalytics;                                           // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1C8];                                     // 0x0320(0x01C8) MISSED OFFSET
	struct FGuid                                       GlobalUnregistrationSaveGUID;                             // 0x04E8(0x0010) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x20];                                      // 0x04F8(0x0020) MISSED OFFSET
	class UFortTooltipManager*                         TooltipManager;                                           // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x50];                                      // 0x0520(0x0050) MISSED OFFSET
	TArray<class UFortRegisteredPlayerInfo*>           RegisteredPlayers;                                        // 0x0570(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData09[0x18];                                      // 0x0580(0x0018) MISSED OFFSET
	class UFortUpdateManager*                          UpdateManager;                                            // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortInteractabilityTracker*                 InteractabilityTracker;                                   // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x10];                                      // 0x05A8(0x0010) MISSED OFFSET
	class UFortChat*                                   Chatroom;                                                 // 0x05B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<TWeakObjectPtr<class UFortRegisteredPlayerInfo>> RegisteredPlayerInfosAwaitingRefresh;                     // 0x05C0(0x0010) (ZeroConstructor, Transient)
	struct FString                                     LastGameHighlightGroupId;                                 // 0x05D0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0x20];                                      // 0x05E0(0x0020) MISSED OFFSET
	class UFortSeasonalEventManager*                   SeasonalEventManager;                                     // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortTournamentManager*                      TournamentManager;                                        // 0x0608(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortPushNotificationManager*                MobilePushNotificationManager;                            // 0x0610(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0618(0x0008) MISSED OFFSET
	class UFortMissionGenerator*                       CurrentMissionGenerator;                                  // 0x0620(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x18];                                      // 0x0628(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameInstance");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeBase
// 0x0000 (0x0410 - 0x0410)
class AFortGameModeBase : public AGameMode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeBase");
		return ptr;
	}

};


// Class FortniteGame.FortGameMode
// 0x02E8 (0x06F8 - 0x0410)
class AFortGameMode : public AFortGameModeBase
{
public:
	unsigned char                                      bDisableCloudStorage : 1;                                 // 0x0410(0x0001) (Transient)
	unsigned char                                      bTravelInitiated : 1;                                     // 0x0410(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	struct FString                                     CurrentWUID;                                              // 0x0418(0x0010) (ZeroConstructor, Transient)
	struct FString                                     CurrentBucketId;                                          // 0x0428(0x0010) (ZeroConstructor, Transient)
	int                                                CurrentPlaylistId;                                        // 0x0438(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	struct FName                                       CurrentPlaylistName;                                      // 0x0440(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0448(0x0020) MISSED OFFSET
	struct FString                                     MatchmakingRegionId;                                      // 0x0468(0x0010) (ZeroConstructor, Transient)
	struct FString                                     CurrentZoneInstanceId;                                    // 0x0478(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0488(0x0004) MISSED OFFSET
	int                                                ZoneIndex;                                                // 0x048C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bPlayersInvincible : 1;                                   // 0x0490(0x0001) (Transient)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0491(0x0003) MISSED OFFSET
	bool                                               bKickIdlers;                                              // 0x0494(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0495(0x0003) MISSED OFFSET
	float                                              MaxIdleTime;                                              // 0x0498(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              NoScoreKickTime;                                          // 0x049C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableNotifications;                                     // 0x04A0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableReplicationGraph;                                  // 0x04A1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x04A2(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData07[0x28];                                      // 0x04A2(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameMode.DefaultDeathPenaltyData
	class UFortGameDeathPenalty*                       DeathPenaltyData;                                         // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AFortGameSession*                            FortGameSession;                                          // 0x04D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     GameModeSessionString;                                    // 0x04E0(0x0010) (ZeroConstructor)
	unsigned char                                      bIsAutomatedTest : 1;                                     // 0x04F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08[0x7];                                       // 0x04F1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData09[0x28];                                      // 0x04F1(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameMode.DefaultPawnClassStringRef
	class UClass*                                      MissionManagerClass;                                      // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortPlaylistManager*                        PlaylistManager;                                          // 0x0528(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTagContainer                       GameModeGameplayTags;                                     // 0x0530(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0550(0x0010) MISSED OFFSET
	bool                                               bOverrideRotationOnRestartPlayer;                         // 0x0560(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortGameplayState>                    PendingTimerState;                                        // 0x0561(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x0562(0x0006) MISSED OFFSET
	unsigned char                                      bWorldIsReady : 1;                                        // 0x0568(0x0001) (Transient)
	unsigned char                                      bTheaterDataIsReady : 1;                                  // 0x0568(0x0001) (Transient)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0569(0x0003) MISSED OFFSET
	int                                                TheaterSlot;                                              // 0x056C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              GameplayServerHitchThreshold;                             // 0x0570(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MovementTimeDiscrepancyHitchCooldown;                     // 0x0574(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AbilityRefireHitchCooldown;                               // 0x0578(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCheckWeaponTracesForPlayerBuiltWalls;                    // 0x057C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x057D(0x0003) MISSED OFFSET
	class UMatchHeartbeatManager*                      MatchHeartbeatManager;                                    // 0x0580(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortAwardItemDefinition*>            ActiveAwards;                                             // 0x0588(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0598(0x0010) MISSED OFFSET
	struct FGameplayTagContainer                       GameContextTags;                                          // 0x05A8(0x0020) (Transient)
	class UFortSharedMissionLists*                     SharedMissionLists;                                       // 0x05C8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x10];                                      // 0x05D0(0x0010) MISSED OFFSET
	class UClass*                                      TeamInfoClass;                                            // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<double>                                     FrameTimeOvershootHistogramBucketsMs;                     // 0x05E8(0x0010) (ZeroConstructor, Config)
	TArray<double>                                     SleepTimeOvershootHistogramBucketsMs;                     // 0x05F8(0x0010) (ZeroConstructor, Config)
	TArray<double>                                     FrameTimeWithoutSleepHistogramBucketsMs;                  // 0x0608(0x0010) (ZeroConstructor, Config)
	TArray<struct FCumulativeFrameTimeWithoutSleepLimits> CumulativeFrameTimeWithoutSleepLimits;                    // 0x0618(0x0010) (ZeroConstructor, Config)
	TArray<double>                                     GameNetDriverTickFlushTimeHistogramBucketsMs;             // 0x0628(0x0010) (ZeroConstructor, Config)
	TArray<double>                                     DemoNetDriverTickFlushTimeHistogramBucketsMs;             // 0x0638(0x0010) (ZeroConstructor, Config)
	TArray<double>                                     ActorsStarvedByClassTimeHistogramBuckets;                 // 0x0648(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             StarvedActorClassList;                                    // 0x0658(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData16[0x18];                                      // 0x0668(0x0018) MISSED OFFSET
	class AFortMissionGenerationManager*               MissionGenerationManager;                                 // 0x0680(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x30];                                      // 0x0688(0x0030) MISSED OFFSET
	bool                                               bOverrideQuickBars;                                       // 0x06B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x7];                                       // 0x06B9(0x0007) MISSED OFFSET
	struct FQuickBarData                               QuickBarDefinitions[0x2];                                 // 0x06C0(0x0010) (Edit)
	unsigned char                                      UnknownData19[0x8];                                       // 0x06E0(0x0008) MISSED OFFSET
	TArray<class AFortPlayerControllerGameplay*>       ConnectedPlayerControllers;                               // 0x06E8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameMode");
		return ptr;
	}


	void OnEndOfDay();
	void DumpReservations();
};


// Class FortniteGame.FortGameModeArtAutomation
// 0x0000 (0x0410 - 0x0410)
class AFortGameModeArtAutomation : public AFortGameModeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeArtAutomation");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeZone
// 0x00E8 (0x07E0 - 0x06F8)
class AFortGameModeZone : public AFortGameMode
{
public:
	unsigned char                                      bSpawnAllStuff : 1;                                       // 0x06F8(0x0001) (Transient)
	unsigned char                                      bDisableAI : 1;                                           // 0x06F8(0x0001) (Transient)
	unsigned char                                      bInitBeaconAtInitGame : 1;                                // 0x06F8(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x06F9(0x0003) MISSED OFFSET
	int                                                OverrideAIDirectorIndex;                                  // 0x06FC(0x0004) (ZeroConstructor, IsPlainOldData)
	class ABuildingSMActor*                            ActiveSpawnPad;                                           // 0x0700(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bDisableVoiceChat;                                        // 0x0708(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0709(0x0007) MISSED OFFSET
	class AFortAIDirector*                             AIDirector;                                               // 0x0710(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortAIGoalManager*                          AIGoalManager;                                            // 0x0718(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                EndOfZoneRemainTime;                                      // 0x0720(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class UFortTaggedActorsManager*                    TaggedActorsManager;                                      // 0x0728(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingConnectivityManager*                ConnectivityManager;                                      // 0x0730(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseAllSocketsInSpawnPad;                                 // 0x0738(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowSpectateAfterDeath;                                 // 0x0739(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x073A(0x0002) MISSED OFFSET
	float                                              SpectateAfterDeath_DelayFirst;                            // 0x073C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpectateAfterDeath_DelayRepeating;                        // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class UClass*                                      VisibilityManagerClass;                                   // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCriticalMissionEligible;                                 // 0x0750(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x27];                                      // 0x0751(0x0027) MISSED OFFSET
	class UFortPetManager*                             PetManager;                                               // 0x0778(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FItemAndCount>                       StartingItems;                                            // 0x0780(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bAllowEnemyAIWorldItemLootDrops : 1;                      // 0x0790(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowEnemyAIItemCacheLootDrops : 1;                      // 0x0790(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0791(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHandleZonePeriodicReport;                               // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHandleMatchHasStarted;                                  // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bTrustXboxPlatformId;                                     // 0x07B8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ESubGame                                           AssociatedSubGame;                                        // 0x07B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTryToSpawnWithinStormShield;                             // 0x07BA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x07BB(0x0005) MISSED OFFSET
	TArray<struct FVector>                             PlayerStartLocationOverrides;                             // 0x07C0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData08[0x10];                                      // 0x07D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeZone");
		return ptr;
	}


	void SetSpawnWithinStormShield(bool bSpawnInStormShield);
	void SetPlayerStartLocationOverrides(TArray<struct FVector> InPlayerStarts, class AFortMission* InMission);
	void ReplicateHealthAndShield();
	void OnMorningReached();
	void OnEveningReached();
	bool IsGameReadyToSelectLoot();
	void ClearPlayerStartLocationOverrides();
};


// Class FortniteGame.FortGamePvPBase
// 0x0068 (0x0848 - 0x07E0)
class AFortGamePvPBase : public AFortGameModeZone
{
public:
	unsigned char                                      NumTeams;                                                 // 0x07E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x07E1(0x0003) MISSED OFFSET
	int                                                RoundTimeLimit;                                           // 0x07E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RoundTimeRemainingCriticalThreshold;                      // 0x07E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StalemateTimeLimit;                                       // 0x07EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RestartTimeLimit;                                         // 0x07F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FOBFinalizationLimit;                                     // 0x07F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bUsingFOBs : 1;                                           // 0x07F8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFOBInitRequested : 1;                                    // 0x07F8(0x0001) (Transient)
	unsigned char                                      bAllFOBConfigActorsInitialized : 1;                       // 0x07F8(0x0001) (Transient)
	unsigned char                                      bFinishedSpawningFOBConfigActors : 1;                     // 0x07F8(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x07F9(0x0003) MISSED OFFSET
	int                                                NumFOBConfigActorsPerTeam;                                // 0x07FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FTeamFOBRequiredTags>                FOBRequiredTags;                                          // 0x0800(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      FOBConfigActorClass;                                      // 0x0810(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FCachedPlayerFOBInformation>         CachedFOBInfo;                                            // 0x0818(0x0010) (ZeroConstructor, Transient)
	TArray<class ABuildingFOBConfigActor*>             SpawnedFOBConfigActors;                                   // 0x0828(0x0010) (ZeroConstructor, Transient)
	TArray<class ABuildingFOBConfigActor*>             SpawnedFOBConfigActorsToFinalize;                         // 0x0838(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGamePvPBase");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeAthena
// 0x0728 (0x0F70 - 0x0848)
class AFortGameModeAthena : public AFortGamePvPBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0848(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSafeZoneUpdated;                                        // 0x0858(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bAlwaysDBNO;                                              // 0x0868(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0869(0x000F) MISSED OFFSET
	TArray<class ABuildingActor*>                      ActorsToClear;                                            // 0x0878(0x0010) (ZeroConstructor)
	TArray<class AActor*>                              ClearAreaIgnoreActors;                                    // 0x0888(0x0010) (ZeroConstructor)
	bool                                               bNeverSpawnPickupsOnPawnDeath;                            // 0x0898(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLoadTestCosmetics;                                       // 0x0899(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02 : 1;                                        // 0x089A(0x0001)
	unsigned char                                      bDisable3DVoiceChat : 1;                                  // 0x089A(0x0001) (Config)
	unsigned char                                      UnknownData03[0x5];                                       // 0x089B(0x0005) MISSED OFFSET
	TArray<struct FName>                               ExcludedDefaultSupplyDrops;                               // 0x08A0(0x0010) (ZeroConstructor, Config)
	TArray<struct FName>                               ExcludedLTMSupplyDrops;                                   // 0x08B0(0x0010) (ZeroConstructor, Config)
	TArray<struct FName>                               ExcludedLTMSpawnActors;                                   // 0x08C0(0x0010) (ZeroConstructor, Config)
	TArray<struct FTimeOfDayOverride>                  TimeOfDayOverrideList;                                    // 0x08D0(0x0010) (ZeroConstructor, Config)
	bool                                               bDisableGCOnServerDuringMatch;                            // 0x08E0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x08E1(0x0007) MISSED OFFSET
	TArray<struct FGCSettingsOverride>                 GCSettingsOverrideList;                                   // 0x08E8(0x0010) (ZeroConstructor, Config)
	bool                                               bPlaylistHotfixChangedGCDisabling;                        // 0x08F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x08F9(0x0003) MISSED OFFSET
	float                                              PlaylistHotfixOriginalGCFrequency;                        // 0x08FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              OverloadedInitialConnectTimeout;                          // 0x0900(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              FailedMatchAssignmentTimeout;                             // 0x0904(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0908(0x0008) MISSED OFFSET
	bool                                               bEnableRecentPlayersUpdates;                              // 0x0910(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0911(0x0003) MISSED OFFSET
	float                                              DefaultWarmupEarlyRequiredPlayerPercent;                  // 0x0914(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x50];                                      // 0x0918(0x0050) MISSED OFFSET
	EForceKickAfterDeathMode                           ForceKickAfterDeathMode;                                  // 0x0968(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0969(0x0003) MISSED OFFSET
	float                                              ForceKickAfterDeathTime;                                  // 0x096C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x40];                                      // 0x0970(0x0040) MISSED OFFSET
	int                                                MaxPlayerCount;                                           // 0x09B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x09B4(0x0004) MISSED OFFSET
	TArray<class AFortPlayerControllerAthena*>         AlivePlayers;                                             // 0x09B8(0x0010) (ZeroConstructor)
	int                                                TeamAlivePlayers[0x64];                                   // 0x09C8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0B58(0x0004) MISSED OFFSET
	int                                                WarmupRequiredPlayerCount;                                // 0x0B5C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WarmupCountdownDuration;                                  // 0x0B60(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0B64(0x0004) MISSED OFFSET
	float                                              WarmupEarlyCountdownDuration;                             // 0x0B68(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSafeZoneActive;                                          // 0x0B6C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSafeZonePaused;                                          // 0x0B6D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x2];                                       // 0x0B6E(0x0002) MISSED OFFSET
	float                                              TimeRemainingWhenPhasePaused;                             // 0x0B70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0B74(0x0004) MISSED OFFSET
	class UClass*                                      GE_OutsideSafeZone;                                       // 0x0B78(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SafeZoneIndicatorClass;                                   // 0x0B80(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MegaStormManagerClass;                                    // 0x0B88(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafeZonePhase;                                            // 0x0B90(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0B94(0x0004) MISSED OFFSET
	class AFortSafeZoneIndicator*                      SafeZoneIndicator;                                        // 0x0B98(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             SafeZoneLocations;                                        // 0x0BA0(0x0010) (ZeroConstructor)
	float                                              EndGameKickPlayersDelay;                                  // 0x0BB0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0BB4(0x0004) MISSED OFFSET
	class AMegaStormManager*                           MegaStormManager;                                         // 0x0BB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     VoiceChatChannelPositional;                               // 0x0BC0(0x0010) (ZeroConstructor)
	bool                                               bUseRandomTimeOfDay;                                      // 0x0BD0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData18[0x7];                                       // 0x0BD1(0x0007) MISSED OFFSET
	class UAthenaAISettings*                           AISettings;                                               // 0x0BD8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class AFortPlayerControllerSpectating*>     LiveSpectators;                                           // 0x0BE0(0x0010) (ZeroConstructor)
	class UClass*                                      LiveSpectatorPlayerControllerClass;                       // 0x0BF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class UClass*                                      LiveBroadcastPlayerControllerClass;                       // 0x0BF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	unsigned char                                      UnknownData19[0x10];                                      // 0x0C00(0x0010) MISSED OFFSET
	TArray<struct FName>                               PlatformOSSNamesToUploadStatsV1;                          // 0x0C10(0x0010) (ZeroConstructor, Config)
	TArray<struct FName>                               PlatformOSSNamesToUploadStatsV2;                          // 0x0C20(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData20[0x1C];                                      // 0x0C30(0x001C) MISSED OFFSET
	bool                                               bEnableMatchmakingRatingUpdate;                           // 0x0C4C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFlightPathInitialized;                                   // 0x0C4D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x6];                                       // 0x0C4E(0x0006) MISSED OFFSET
	float                                              ScorePerMinuteAlive;                                      // 0x0C54(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreMaxMinutesAliveCounted;                              // 0x0C58(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreForGettingAtLeastOneKill;                            // 0x0C5C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ScorePerScaledTeamKill;                                   // 0x0C60(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreForFirstRevive;                                      // 0x0C64(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreForSubsequentRevives;                                // 0x0C68(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxAdditionalRevivesToScore;                              // 0x0C6C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	struct FScorePlacementTable                        ScorePlacementTables;                                     // 0x0C70(0x00E0) (Edit, Config, DisableEditOnInstance)
	float                                              ScoreMultiplier;                                          // 0x0D50(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxActiveAIActors;                                        // 0x0D54(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAthenaWeaponAlterationEvent*>        ActiveWeaponAlterationRules;                              // 0x0D58(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData22[0xC];                                       // 0x0D68(0x000C) MISSED OFFSET
	bool                                               bAllCosmeticsLoaded;                                      // 0x0D74(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0D75(0x0003) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       SkyDiveContrailCosmetics;                                 // 0x0D78(0x0010) (ZeroConstructor, Transient)
	int                                                SkyDiveContrailLoadTestIndex;                             // 0x0D88(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0D8C(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       GliderCosmetics;                                          // 0x0D90(0x0010) (ZeroConstructor, Transient)
	int                                                GliderLoadTestIndex;                                      // 0x0DA0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x0DA4(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       PickaxeCosmetics;                                         // 0x0DA8(0x0010) (ZeroConstructor, Transient)
	int                                                PickaxeLoadTestIndex;                                     // 0x0DB8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x0DBC(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       CharacterCosmetics;                                       // 0x0DC0(0x0010) (ZeroConstructor, Transient)
	int                                                CharacterLoadTestIndex;                                   // 0x0DD0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x0DD4(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       HatCosmetics;                                             // 0x0DD8(0x0010) (ZeroConstructor, Transient)
	int                                                HatLoadTestIndex;                                         // 0x0DE8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0DEC(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       BackpackCosmetics;                                        // 0x0DF0(0x0010) (ZeroConstructor, Transient)
	int                                                BackpackLoadTestIndex;                                    // 0x0E00(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x4];                                       // 0x0E04(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       DanceCosmetics;                                           // 0x0E08(0x0010) (ZeroConstructor, Transient)
	int                                                DanceLoadTestIndex;                                       // 0x0E18(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData30[0x4];                                       // 0x0E1C(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       VictoryPoseCosmetics;                                     // 0x0E20(0x0010) (ZeroConstructor, Transient)
	int                                                VictoryPoseLoadTestIndex;                                 // 0x0E30(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData31[0x4];                                       // 0x0E34(0x0004) MISSED OFFSET
	TArray<class UAthenaCosmeticItemDefinition*>       MapMarkerCosmetics;                                       // 0x0E38(0x0010) (ZeroConstructor, Transient)
	int                                                MapMarkerLoadTestIndex;                                   // 0x0E48(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                PetLoadTestIndex;                                         // 0x0E4C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UAthenaCosmeticItemDefinition*>       ConsumableEmoteCosmetics;                                 // 0x0E50(0x0010) (ZeroConstructor, Transient)
	TArray<class UAthenaCosmeticItemDefinition*>       LoadingScreenCosmetics;                                   // 0x0E60(0x0010) (ZeroConstructor, Transient)
	TArray<class UAthenaCosmeticItemDefinition*>       BattleBusCosmetics;                                       // 0x0E70(0x0010) (ZeroConstructor, Transient)
	TArray<struct FSupplyDropSpawnData>                SupplyDropSpawnDataList;                                  // 0x0E80(0x0010) (ZeroConstructor, Transient)
	struct FExitCraftSpawnData                         ExitCraftSpawnData;                                       // 0x0E90(0x0008) (Transient)
	int                                                LastSpawnedSupplyDropType;                                // 0x0E98(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x0E9C(0x0004) MISSED OFFSET
	TArray<struct FFortSpawnActorData>                 SpawnActorDataList;                                       // 0x0EA0(0x0010) (ZeroConstructor, Transient)
	class UCurveTable*                                 AthenaGameDataTable;                                      // 0x0EB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData33[0xA8];                                      // 0x0EB8(0x00A8) MISSED OFFSET
	TArray<class AFortAthenaMutator*>                  GameplayMutators;                                         // 0x0F60(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeAthena");
		return ptr;
	}


	void SafeZoneInsideChecks();
	void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);
	void OnEndGameKickPlayers();
	void OnAircraftFlightEnded(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftExitedDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void OnAircraftEnteredDropZone(class AFortAthenaAircraft* FortAthenaAircraft);
	void FireServerPerformanceEvent();
	void EndGamePhaseStarted();
};


// Class FortniteGame.FortGameModeDeployableBase
// 0x0050 (0x0830 - 0x07E0)
class AFortGameModeDeployableBase : public AFortGameModeZone
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x07E0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeDeployableBase");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeEmptyDedicated
// 0x0008 (0x0700 - 0x06F8)
class AFortGameModeEmptyDedicated : public AFortGameMode
{
public:
	class AFortGameSessionDedicated*                   FortGameSessionDedicated;                                 // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeEmptyDedicated");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeFOB
// 0x0018 (0x07F8 - 0x07E0)
class AFortGameModeFOB : public AFortGameModeZone
{
public:
	class ABuildingFOBConfigActor*                     ConfigurationActor;                                       // 0x07E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPlayerLoginToFOB;                                       // 0x07E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeFOB");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeFrontEnd
// 0x0010 (0x0708 - 0x06F8)
class AFortGameModeFrontEnd : public AFortGameMode
{
public:
	class AFortTheaterMapViewer*                       TheaterMapViewer;                                         // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0700(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeFrontEnd");
		return ptr;
	}

};


// Class FortniteGame.FortGameModePvE
// 0x0000 (0x07E0 - 0x07E0)
class AFortGameModePvE : public AFortGameModeZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModePvE");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeKeep
// 0x0028 (0x0808 - 0x07E0)
class AFortGameModeKeep : public AFortGameModePvE
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x07E0(0x0020) MISSED OFFSET
	class UFortKeepItemManager*                        KeepItemManager;                                          // 0x0800(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeKeep");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeManor
// 0x0020 (0x0800 - 0x07E0)
class AFortGameModeManor : public AFortGameModePvE
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x07E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeManor");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeOutpost
// 0x0030 (0x0810 - 0x07E0)
class AFortGameModeOutpost : public AFortGameModePvE
{
public:
	TArray<struct FFortItemEntry>                      OwnerItemRefundCache;                                     // 0x07E0(0x0010) (ZeroConstructor)
	struct FFortOutpostCoreInfo                        CurrentCoreInfo;                                          // 0x07F0(0x0020)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeOutpost");
		return ptr;
	}

};


// Class FortniteGame.FortGameModeSurvival
// 0x0000 (0x07E0 - 0x07E0)
class AFortGameModeSurvival : public AFortGameModePvE
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameModeSurvival");
		return ptr;
	}


	void FireEvent_SurvivalVoteReport(TArray<class ABuildingActor*> ActorsBeingDefended);
	void FireEvent_SurvivalPeriodicReport(EFortReportDayPhase TimeOfReport, TArray<class ABuildingActor*> ActorsBeingDefended);
};


// Class FortniteGame.FortGamepadSettings
// 0x01B0 (0x01E0 - 0x0030)
class UFortGamepadSettings : public UDataAsset
{
public:
	class UCurveFloat*                                 GamepadLookCurve;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 GamepadLookSensitivityCurve;                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   GamepadLookScale;                                         // 0x0040(0x0008) (Edit, IsPlainOldData)
	float                                              GamepadLookScaleDownsights;                               // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookScaleScope;                                    // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookScaleDownsightsDecayTime;                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistStrength;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistStrengthDownsights;                              // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistStrengthDBNO;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookAccelTime;                                     // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookDecelTime;                                     // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookInnerAccelTime;                                // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookInnerDecelTime;                                // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookOuterAccelDeflection;                          // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookOuterAccelScale;                               // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookOuterAccelTime;                                // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookOuterDecelTime;                                // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistPullStrength;                                    // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistPullMaxRate;                                     // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistPullRampUpTime;                                  // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistPullDecayTime;                                   // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistInitialDownsightStrength;                        // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimAssistInitialDownsightTime;                            // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowMinDistance;                                          // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowMinStrength;                                          // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowMaxDistance;                                          // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowMaxStrength;                                          // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlowDecayTime;                                            // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullStrengthStationary;                           // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullStrengthMovingNewTile;                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullStrengthMovingWithinTile;                     // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullMinDistance;                                  // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullMaxDistance;                                  // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullScaleFlat;                                    // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModePullMaxRate;                                      // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModeSlowMinDistance;                                  // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModeSlowMinStrength;                                  // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModeSlowMaxDistance;                                  // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditModeSlowMaxStrength;                                  // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortAbilityTargetSelection                 AimAssistTargetSelection;                                 // 0x00D8(0x0108) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGamepadSettings");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility
// 0x04F8 (0x08F0 - 0x03F8)
class UFortGameplayAbility : public UGameplayAbility
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03F8(0x0010) MISSED OFFSET
	EFortGameplayAbilityActivation                     ActivationType;                                           // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	struct FFortGameplayEffectContainer                EffectContainers[0x5];                                    // 0x0410(0x0090) (Edit, DisableEditOnInstance)
	TArray<struct FFortGameplayEffectContainer>        GameplayEffectContainers;                                 // 0x06E0(0x0010) (ZeroConstructor)
	struct FGameplayTagContainer                       OwnerPreviewImageOverrideTags;                            // 0x06F0(0x0020) (Edit, BlueprintVisible)
	class UClass*                                      ProjectileClass;                                          // 0x0710(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         DamageStatHandle;                                         // 0x0718(0x0010) (Edit)
	TArray<struct FFortAbilityCost>                    AbilityCosts;                                             // 0x0728(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bShowWidgetForCosts : 1;                                  // 0x0738(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bStartWithCooldown : 1;                                   // 0x0738(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPersistOnDeath : 1;                                      // 0x0738(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bStopsAIBehaviorLogic : 1;                                // 0x0738(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bStopsAIMovement : 1;                                     // 0x0738(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bStopsRVOAvoidance : 1;                                   // 0x0738(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceNormalAILOD : 1;                                    // 0x0738(0x0001) (Deprecated)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0739(0x0003) MISSED OFFSET
	EFortAILODLevel                                    MinimumRequiredAILODLevel;                                // 0x073C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x073D(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData04 : 3;                                        // 0x0740(0x0001)
	unsigned char                                      bRelevantForAIDespawning : 1;                             // 0x0740(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseAIFireLocationAndRotation : 1;                        // 0x0740(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0741(0x0003) MISSED OFFSET
	EFortAIWeaponUsage                                 AIWeaponUsage;                                            // 0x0744(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0745(0x0003) MISSED OFFSET
	struct FGameplayTag                                WeaponTestApplicationTag;                                 // 0x0748(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      bVerifyFireOffsetIsNotObstructedByWorldGeometry : 1;      // 0x0750(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanHitBallisticTestsOnlyTestIndesructiblesWhileFalling : 1;// 0x0750(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	struct FVector                                     FireOffset;                                               // 0x0754(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              ActivationNoiseRange;                                     // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ImpactNoiseRange;                                         // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActivationNoiseLoudness;                                  // 0x0768(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              ImpactNoiseLoudness;                                      // 0x076C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FGameplayTagContainer                       ProhibitedTargetTags;                                     // 0x0770(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08[0x1];                                       // 0x0790(0x0001) MISSED OFFSET
	bool                                               bLeadPawnTargets;                                         // 0x0791(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0792(0x0002) MISSED OFFSET
	float                                              DesiredThrowAngle;                                        // 0x0794(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawAngleToFire;                                        // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bClampMaxYawAngleToFire;                                  // 0x079C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseTargetActorLocation;                                  // 0x079D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x079E(0x0002) MISSED OFFSET
	float                                              InitialAccuracyMax;                                       // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InitialAccuracyMin;                                       // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetAccuracyMax;                                        // 0x07A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetAccuracyMin;                                        // 0x07AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinAccuracyDistance;                                      // 0x07B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxAccuracyDistance;                                      // 0x07B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AccuracyDistanceMultiplier;                               // 0x07B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumUsesToReachTargetAccuracy;                             // 0x07BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UseCount;                                                 // 0x07C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x07C4(0x0004) MISSED OFFSET
	TArray<struct FFortGameplayAbilityBehaviorDistanceData> GameplayAbilityBehaviorDistanceData;                      // 0x07C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData12[0x20];                                      // 0x07D8(0x0020) MISSED OFFSET
	struct FFortGameplayAbilityMontageInfo             MontageInfo;                                              // 0x07F8(0x0060) (Edit, BlueprintVisible)
	class UFortWeaponItemDefinition*                   AbilityWeapon;                                            // 0x0858(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0860(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0878(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0890(0x0008) MISSED OFFSET
	class UTexture2D*                                  SmallPreviewImageOverride;                                // 0x0898(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x10];                                      // 0x08A0(0x0010) MISSED OFFSET
	class UClass*                                      Tooltip;                                                  // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFortTooltipDisplayStatsList*                StatList;                                                 // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x08C0(0x0008) MISSED OFFSET
	struct FAbilityTrackedActorSettings                ActorTrackingSettings;                                    // 0x08C8(0x0020) (Edit, DisableEditOnInstance)
	class UClass*                                      CurrentAbilityCameraModeClass;                            // 0x08E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility");
		return ptr;
	}


	void TrackGroupedActor(class AActor* ActorToTrack, const struct FGameplayTag& GroupTag);
	void TrackActor(class AActor* ActorToTrack);
	bool SetupPreviewImageOverride();
	void SetCameraMode(class UClass* CameraModeClass);
	void SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority);
	void QueryGameplayEffectContainerTargetExecutionModifiers(const struct FGameplayAbilityTargetDataHandle& TargetData, class UFortAbilitySystemComponent* SrcAbilitySystem, const struct FGameplayTag& ApplicationTag, int GameplayEffectLevel, class UObject* SourceObject, TArray<struct FGameplayEffectExecutionScopedModifierInfo> InScopedMods, TArray<struct FActiveGameplayEffectHandle> InIgnoreHandles, bool bTooltipRequest, TArray<struct FGameplayModifierEvaluatedData>* OutOutputModifiers);
	void OnGenericNotifyFromAnimation(const struct FGameplayTag& NotifyTag);
	void OnAbilityInputReleased();
	struct FFortGameplayEffectContainerSpec MakeGameplayEffectContainerSpec(const struct FGameplayTag& ApplicationTag, int GameplayEffectLevel);
	void K2_TriggerFromAnimation(const struct FGameplayTag& ApplicationTag);
	bool K2_ShouldUseDecoTool(const struct FGameplayAbilityActorInfo& ActorInfo);
	void K2_AbilityCompleted();
	bool IsTargetOutsideOfMaxYawRotation();
	TArray<class AActor*> GetTrackedGroupedActors(const struct FGameplayTag& GroupTag);
	TArray<class AActor*> GetTrackedActors();
	class UClass* GetTooltip();
	void GetProjectileInitialValues(bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire, bool bApplyLeading, float* outProjectileSpeed, struct FRotator* outSpawnDirection, float* outProjectileGravity, class AActor** HomingTarget);
	int GetMaxNumTrackedActors();
	struct FRotator GetFireRotation(bool bApplyLeading, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire);
	struct FVector GetFireLocation();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
	struct FTransform GetCustomAbilitySourceTransform();
	class AFortWeapon* GetCurrentSourceWeapon();
	class UFortWorldItemDefinition* GetCurrentSourceItemDefinition();
	void GetCurrentAbilitySourceLevel(float* OutSourceLevel);
	struct FVector GetAimLocationNearestPawn(class AFortPawn* Instigator);
	class AActor* GetAIAbilityTarget();
	class AFortPawn* GetActivatingPawn();
	class UFortAbilitySystemComponent* GetActivatingAbilityComponent();
	float GetAbilityTargetingLevel();
	void ForceCameraLookDown(class APlayerController* PC);
	void EquipAbilityWeapon(class UFortWeaponItemDefinition* WeaponDefinition, int ItemLevel);
	bool DoesTargetHaveTags(class AActor* Target, const struct FGameplayTagContainer& Tags);
	bool DoesTargetHaveProhibitedTagsForAI(class AActor* Target);
	void ClearTrackedGroupedActors(const struct FGameplayTag& GroupTag, bool bDestroyActors);
	void ClearTrackedActors(bool bDestroyActors);
	void ClearCameraMode();
	void ClearAIFocalPoint(bool bUseAttackingPriority);
	void STATIC_CalculateProjectileTrajectorySplineWithHit(class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int MaxBounces, struct FHitResult* OutHitResult, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents);
	void STATIC_CalculateProjectileTrajectorySpline(class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float MaxSpeed, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int MaxBounces, TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents);
	struct FFortGameplayEffectContainer BP_GetGameplayEffectContainer(const struct FGameplayTag& ApplicationTag);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectContainer(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int GameplayEffectLevel);
	struct FVector ApplyAccuracyToTargetLocation(const struct FVector& SourceLocation, const struct FVector& TargetLocation, float inDesiredThrowAngle);
};


// Class FortniteGame.FortGameplayAbility_Action
// 0x0018 (0x0908 - 0x08F0)
class UFortGameplayAbility_Action : public UFortGameplayAbility
{
public:
	struct FName                                       ActionName;                                               // 0x08F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               ExtraActionNames;                                         // 0x08F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Action");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_AIPortal
// 0x0050 (0x0958 - 0x0908)
class UFortGameplayAbility_AIPortal : public UFortGameplayAbility_Action
{
public:
	struct FVector                                     PortalDirection;                                          // 0x0908(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0914(0x0020) MISSED OFFSET
	float                                              PortalLifespan;                                           // 0x0934(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class ABuildingSMActor*>                    NoCollisionBuildings;                                     // 0x0938(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0948(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_AIPortal");
		return ptr;
	}


	void ModifyCollisions();
	bool HasPortalOutPoint();
	struct FVector GetPortalOutPoint();
	struct FVector GetPortalInPoint();
	class ABuildingSMActor* GetPortalBuilding();
};


// Class FortniteGame.FortGameplayAbility_AITurnTransition
// 0x0048 (0x0938 - 0x08F0)
class UFortGameplayAbility_AITurnTransition : public UFortGameplayAbility
{
public:
	struct FGameplayTagContainer                       RequiredWeaponTags;                                       // 0x08F0(0x0020) (Edit)
	float                                              MinTurnTransitionYawAngle;                                // 0x0910(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	TArray<struct FTurnTransitionData>                 TransitionPriorityList;                                   // 0x0918(0x0010) (Edit, ZeroConstructor)
	struct FName                                       PickedMontageSectionName;                                 // 0x0928(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PickedTurnYawRotationRate;                                // 0x0930(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0934(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_AITurnTransition");
		return ptr;
	}


	void GetTurnTransitionMontageSectionNameAndYawRotationRate(struct FName* MontageSectionName, float* TurnYawRotationRate);
};


// Class FortniteGame.FortGameplayAbility_CeilingFallingTrap
// 0x0048 (0x0938 - 0x08F0)
class UFortGameplayAbility_CeilingFallingTrap : public UFortGameplayAbility
{
public:
	class UClass*                                      TrapProjectileClass;                                      // 0x08F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TrapCostClass;                                            // 0x08F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                ActivateTrapTag;                                          // 0x0900(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTag                                DelayBeginTag;                                            // 0x0908(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTag                                ReloadBeginTag;                                           // 0x0910(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ProjectileSpawnDelay;                                     // 0x0918(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x091C(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_CeilingFallingTrap");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_Crouch
// 0x0000 (0x0908 - 0x0908)
class UFortGameplayAbility_Crouch : public UFortGameplayAbility_Action
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Crouch");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_EyeOfTheStorm
// 0x0000 (0x08F0 - 0x08F0)
class UFortGameplayAbility_EyeOfTheStorm : public UFortGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_EyeOfTheStorm");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_Jump
// 0x0000 (0x0908 - 0x0908)
class UFortGameplayAbility_Jump : public UFortGameplayAbility_Action
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Jump");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_JumpBoostPack
// 0x0020 (0x0910 - 0x08F0)
class UFortGameplayAbility_JumpBoostPack : public UFortGameplayAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08F0(0x0008) MISSED OFFSET
	EJumpBoostPackState                                ServerCurrentState;                                       // 0x08F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EJumpBoostPackState                                CurrentState;                                             // 0x08F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x08FA(0x000E) MISSED OFFSET
	float                                              DelayRegenStartTime;                                      // 0x0908(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAbilityMarkedForPendingKill;                             // 0x090C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x090D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_JumpBoostPack");
		return ptr;
	}


	void SetCurrentState(EJumpBoostPackState InState);
	void OnRep_ServerCurrentState(EJumpBoostPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(EJumpBoostPackState InPreviousState, EJumpBoostPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(EJumpBoostPackState InPreviousState);
};


// Class FortniteGame.FortGameplayAbility_Land
// 0x0000 (0x08F0 - 0x08F0)
class UFortGameplayAbility_Land : public UFortGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Land");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_MedicPack
// 0x0020 (0x0910 - 0x08F0)
class UFortGameplayAbility_MedicPack : public UFortGameplayAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08F0(0x0008) MISSED OFFSET
	EMedicPackState                                    ServerCurrentState;                                       // 0x08F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EMedicPackState                                    CurrentState;                                             // 0x08F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x08FA(0x000E) MISSED OFFSET
	float                                              DelayRegenStartTime;                                      // 0x0908(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAbilityMarkedForPendingKill;                             // 0x090C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x090D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_MedicPack");
		return ptr;
	}


	void SetCurrentState(EMedicPackState InState);
	void OnRep_ServerCurrentState(EMedicPackState PreviousState);
	void OnRep_bAbilityMarkedForPendingKill();
	void OnFuelIsFull();
	void OnFuelIsEmpty();
	void OnCurrentStateChanged(EMedicPackState InPreviousState, EMedicPackState InCurrentState);
	void OnAbilityCanceled();
	void HandleCurrentStateChanged(EMedicPackState InPreviousState);
};


// Class FortniteGame.FortGameplayAbility_MissileBattery
// 0x0000 (0x08F0 - 0x08F0)
class UFortGameplayAbility_MissileBattery : public UFortGameplayAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_MissileBattery");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_PlayConversation
// 0x0010 (0x0900 - 0x08F0)
class UFortGameplayAbility_PlayConversation : public UFortGameplayAbility
{
public:
	class UFortConversation*                           ConversationToPlay;                                       // 0x08F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x08F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_PlayConversation");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_RangedWeapon
// 0x0038 (0x0928 - 0x08F0)
class UFortGameplayAbility_RangedWeapon : public UFortGameplayAbility
{
public:
	float                                              FiringNoiseRange;                                         // 0x08F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x08F4(0x0004) MISSED OFFSET
	class AFortWeaponRanged*                           CurrentWeapon;                                            // 0x08F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       WeaponFireCue;                                            // 0x0900(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0920(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_RangedWeapon");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_Reload
// 0x0020 (0x0910 - 0x08F0)
class UFortGameplayAbility_Reload : public UFortGameplayAbility
{
public:
	int                                                NumTimesReloaded;                                         // 0x08F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x08F4(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Reload");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbility_Sprint
// 0x0000 (0x0908 - 0x0908)
class UFortGameplayAbility_Sprint : public UFortGameplayAbility_Action
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbility_Sprint");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayAbilityTooltip
// 0x00D8 (0x0168 - 0x0090)
class UFortGameplayAbilityTooltip : public UFortTooltip
{
public:
	struct FGameplayAbilitySpec                        CachedSpec;                                               // 0x0090(0x00C8) (Transient)
	class UGameplayAbility*                            CachedAbilityInstance;                                    // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortTooltipContext*                         CachedContext;                                            // 0x0160(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayAbilityTooltip");
		return ptr;
	}


	void InitializeAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	void InitializeAbilityInstance(class UGameplayAbility* AbilityInstance, class UFortTooltipContext* Context);
	bool GetTextForTokenFromAbilitySpecInternal(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool GetTextForTokenFromAbilitySpec(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool GetTextForTokenFromAbilityInstanceInternal(class UGameplayAbility* AbilityInstance, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool GetTextForTokenFromAbilityInstance(class UGameplayAbility* AbilityInstance, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool GetApplicationTag(class UGameplayAbility* AbilityInstance, struct FGameplayTag* OutTag);
};


// Class FortniteGame.FortGameplayCueManager
// 0x0010 (0x0310 - 0x0300)
class UFortGameplayCueManager : public UGameplayCueManager
{
public:
	TArray<struct FString>                             BROnlyGameplayCueNotifyPaths;                             // 0x0300(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueManager");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayCueNotify_Actor
// 0x0088 (0x0420 - 0x0398)
class AFortGameplayCueNotify_Actor : public AGameplayCueNotify_Actor
{
public:
	struct FFortGameplayCueSpawnCondition              DefaultCondition;                                         // 0x0398(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueAttachInfo                  DefaultAttachment;                                        // 0x03C8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagContainer                       HUDElementTag;                                            // 0x03F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class AActor*                                      ExecutionTarget;                                          // 0x0410(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0418(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Actor");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayCueNotify_Burst
// 0x0158 (0x01A8 - 0x0050)
class UFortGameplayCueNotify_Burst : public UGameplayCueNotify_Static
{
public:
	struct FFortGameplayCueSpawnCondition              DefaultCondition;                                         // 0x0050(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueAttachInfo                  DefaultAttachment;                                        // 0x0080(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortBurstEffectData                        BurstEffectData;                                          // 0x00A8(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Burst");
		return ptr;
	}


	void OnBurst(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};


// Class FortniteGame.FortGameplayCueNotify_BurstLatent
// 0x0138 (0x0558 - 0x0420)
class AFortGameplayCueNotify_BurstLatent : public AFortGameplayCueNotify_Actor
{
public:
	struct FFortBurstEffectData                        BurstEffectData;                                          // 0x0420(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueSpawnResult                 BurstResult;                                              // 0x0520(0x0038) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_BurstLatent");
		return ptr;
	}


	void OnBurst(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};


// Class FortniteGame.FortGameplayCueNotify_Loop
// 0x0478 (0x0898 - 0x0420)
class AFortGameplayCueNotify_Loop : public AFortGameplayCueNotify_Actor
{
public:
	struct FFortBurstEffectData                        ApplicationBurst;                                         // 0x0420(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueSpawnResult                 ApplicationResult;                                        // 0x0520(0x0038) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueAttachInfo                  DefaultLoopingAttachment;                                 // 0x0558(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FFortGameplayCueParticleInfo>        LoopingParticles;                                         // 0x0580(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FFortGameplayCueAudioInfo_Looping>   LoopingSounds;                                            // 0x0590(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FFortGameplayCueForceFeedbackInfo           LoopingForceFeedbackEffect;                               // 0x05A0(0x0030) (Edit, BlueprintVisible)
	struct FFortGameplayCueCameraLensEffectInfo        LoopingCameraLensEffect;                                  // 0x05D0(0x0018) (Edit, BlueprintVisible)
	struct FFortGameplayCueSpawnResult                 LoopingResult;                                            // 0x05E8(0x0038) (BlueprintVisible, BlueprintReadOnly)
	struct FFortBurstEffectData                        RecurringBurst;                                           // 0x0620(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueSpawnResult                 RecurringResult;                                          // 0x0720(0x0038) (BlueprintVisible, BlueprintReadOnly)
	struct FFortBurstEffectData                        RemovalBurst;                                             // 0x0758(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayCueSpawnResult                 RemovalResult;                                            // 0x0858(0x0038) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bTickEnabled;                                             // 0x0890(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0891(0x0003) MISSED OFFSET
	float                                              TickInterval;                                             // 0x0894(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Loop");
		return ptr;
	}


	void OnRemoval(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnRecurring(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStart(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents);
	void OnApplication(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*> ParticleComponents, TArray<class UAudioComponent*> AudioComponents, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
};


// Class FortniteGame.FortGameplayCueNotify_Looping
// 0x0088 (0x0420 - 0x0398)
class AFortGameplayCueNotify_Looping : public AGameplayCueNotify_Actor
{
public:
	class USoundBase*                                  StartSound;                                               // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  StopSound;                                                // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             StartParticleSystem;                                      // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FFortParticleSystemParamBucket              StartParticleSystemParameters;                            // 0x03B0(0x0010) (Edit)
	class UParticleSystem*                             StopParticleSystem;                                       // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FFortParticleSystemParamBucket              StopParticleSystemParameters;                             // 0x03C8(0x0010) (Edit)
	struct FName                                       AttachPoint;                                              // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bStayAttached;                                            // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSnapToAttachPointAndPreserveWorldRotation;               // 0x03E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseHitResult;                                            // 0x03E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWeapon;                                               // 0x03E3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreRotation;                                          // 0x03E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03E5(0x0003) MISSED OFFSET
	struct FGameplayTagContainer                       HUDElementTag;                                            // 0x03E8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	EPSCPoolMethod                                     PoolingMethod;                                            // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	class UAudioComponent*                             AudioComponent;                                           // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                  // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Looping");
		return ptr;
	}


	void OnWhileActiveParticleSystemDeactivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, const struct FGameplayCueParameters& Parameters);
	void OnWhileActiveParticleSystemActivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, const struct FGameplayCueParameters& Parameters);
	void OnStopParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters);
	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters);
	class USceneComponent* GetTargetComponent(class AActor* TargetActor, const struct FGameplayCueParameters& Parameters);
	bool GetSpawnTransform(class AActor* TargetActor, const struct FName& AttachPointName, const struct FGameplayCueParameters& Parameters, struct FTransform* OutTransform);
};


// Class FortniteGame.FortGameplayCueNotify_Simple
// 0x0030 (0x0080 - 0x0050)
class UFortGameplayCueNotify_Simple : public UGameplayCueNotify_Static
{
public:
	class USoundBase*                                  StartSound;                                               // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             StartParticleSystem;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FFortParticleSystemParamBucket              StartParticleSystemParameters;                            // 0x0060(0x0010) (Edit)
	struct FName                                       AttachPoint;                                              // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bStayAttached;                                            // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseHitResult;                                            // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWeapon;                                               // 0x007A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreRotation;                                          // 0x007B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseUnsmoothedNetworkPosition;                            // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EPSCPoolMethod                                     PoolingMethod;                                            // 0x007D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x007E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueNotify_Simple");
		return ptr;
	}


	void OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters);
};


// Class FortniteGame.FortGameplayCueFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortGameplayCueFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayCueFunctionLibrary");
		return ptr;
	}


	void STATIC_RemoveGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
	void STATIC_PlayBurstEffect(const struct FFortBurstEffectData& BurstEffect, class AActor* Target, const struct FGameplayCueParameters& CueParameters, struct FFortGameplayCueSpawnResult* OutResult);
	void STATIC_ExecuteGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
	bool STATIC_CheckSpawnConditionForSource(class AActor* Target, class AActor* SourceActor, const struct FFortGameplayCueSpawnCondition& Condition);
	bool STATIC_CheckSpawnConditionForHitResult(class AActor* Target, class AActor* SourceActor, const struct FHitResult& HitResult, const struct FFortGameplayCueSpawnCondition& Condition);
	bool STATIC_CheckSpawnConditionForCueParameters(class AActor* Target, const struct FGameplayCueParameters& CueParameters, const struct FFortGameplayCueSpawnCondition& Condition);
	void STATIC_BuildCueParametersFromSource(class AActor* SourceActor, struct FGameplayCueParameters* OutCueParameters);
	void STATIC_BuildCueParametersFromHitResult(class AActor* SourceActor, const struct FHitResult& HitResult, struct FGameplayCueParameters* OutCueParameters);
	void STATIC_AddGameplayCueLocal(class AActor* Target, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& CueParameters, bool bOnlyNotifies);
};


// Class FortniteGame.FortGameplayEffectUIData
// 0x0040 (0x0068 - 0x0028)
class UFortGameplayEffectUIData : public UGameplayEffectUIData
{
public:
	struct FText                                       DisplayName;                                              // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FString                                     TooltipName;                                              // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayEffectUIData");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayModifierItemDefinition
// 0x0040 (0x03D0 - 0x0390)
class UFortGameplayModifierItemDefinition : public UFortAccountItemDefinition
{
public:
	TArray<struct FFortGameplayEffectDeliveryInfo>     PersistentGameplayEffects;                                // 0x0390(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortAbilitySetDeliveryInfo>         PersistentAbilitySets;                                    // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03B0(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortGameplayModifierItemDefinition.Mutators
	bool                                               bHiddenInUI;                                              // 0x03C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x03C1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayModifierItemDefinition");
		return ptr;
	}


	bool IsHiddenInUI();
};


// Class FortniteGame.FortGameplayModMagnitudeCalculation
// 0x0000 (0x0040 - 0x0040)
class UFortGameplayModMagnitudeCalculation : public UGameplayModMagnitudeCalculation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayMutator_AIEncounterModifierTags
// 0x0038 (0x0370 - 0x0338)
class AFortGameplayMutator_AIEncounterModifierTags : public AFortGameplayMutator
{
public:
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x0338(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FFortEncounterMutatorReplacedTag>    TagsToReplace;                                            // 0x0358(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EFortMissionType>                      RequiredEncounterAssociatedMissionType;                   // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0369(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayMutator_AIEncounterModifierTags");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayMutator_AILevelVariance
// 0x0008 (0x0340 - 0x0338)
class AFortGameplayMutator_AILevelVariance : public AFortGameplayMutator
{
public:
	float                                              MinVariance;                                              // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxVariance;                                              // 0x033C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayMutator_AILevelVariance");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayTagBuildingActor
// 0x0040 (0x0670 - 0x0630)
class AFortGameplayTagBuildingActor : public ABuildingActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0630(0x0008) MISSED OFFSET
	struct FGameplayTagContainer                       TagsToApplyOnSave;                                        // 0x0638(0x0020) (Edit, BlueprintVisible)
	int                                                XGridCells;                                               // 0x0658(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                YGridCells;                                               // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ZGridCells;                                               // 0x0660(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0664(0x0004) MISSED OFFSET
	class UBoxComponent*                               BoxComponent;                                             // 0x0668(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagBuildingActor");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayTagData
// 0x0050 (0x0080 - 0x0030)
class UFortGameplayTagData : public UDataAsset
{
public:
	struct FGameplayTag                                EnergyDamageTag;                                          // 0x0030(0x0008) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           PreventDamageFromInterruptingInteractionsTagQuery;        // 0x0038(0x0048) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagData");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayTagVolume
// 0x0028 (0x0388 - 0x0360)
class AFortGameplayTagVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	struct FGameplayTagContainer                       TagsToApplyOnSave;                                        // 0x0368(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagVolume");
		return ptr;
	}

};


// Class FortniteGame.FortGameplayTagVolumeInterface
// 0x0000 (0x0028 - 0x0028)
class UFortGameplayTagVolumeInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameplayTagVolumeInterface");
		return ptr;
	}


	void ApplyTags();
};


// Class FortniteGame.FortGamePvPBaseDestruction
// 0x0000 (0x0848 - 0x0848)
class AFortGamePvPBaseDestruction : public AFortGamePvPBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGamePvPBaseDestruction");
		return ptr;
	}

};


// Class FortniteGame.FortGameSession
// 0x00A0 (0x03E0 - 0x0340)
class AFortGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0340(0x0020) MISSED OFFSET
	struct FFortHostSessionParams                      CurrentSessionParams;                                     // 0x0360(0x0010) (Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0370(0x0010) MISSED OFFSET
	class UClass*                                      ReservationBeaconHostClass;                               // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class AFortPartyBeaconHost*                        ReservationBeaconHost;                                    // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortLobbyBeaconHost*                        LobbyBeaconHost;                                          // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortDisconnectedPlayerReservation>  DisconnectedPlayerReservations;                           // 0x03A0(0x0010) (ZeroConstructor, Transient)
	float                                              DisconnectedReservationTimeout;                           // 0x03B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x03B4(0x0014) MISSED OFFSET
	float                                              BulkUnregisterTimerDelay;                                 // 0x03C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x14];                                      // 0x03CC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameSession");
		return ptr;
	}


	void DumpReservations();
};


// Class FortniteGame.FortGameSessionDedicated
// 0x0168 (0x0548 - 0x03E0)
class AFortGameSessionDedicated : public AFortGameSession
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x03E0(0x0030) MISSED OFFSET
	bool                                               bEnforceCrossplayRestrictions;                            // 0x0410(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowPS4InMixedConsole;                                  // 0x0411(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0412(0x0002) MISSED OFFSET
	float                                              HotfixCheckTimer;                                         // 0x0414(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HotfixCheckVariance;                                      // 0x0418(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6C];                                      // 0x041C(0x006C) MISSED OFFSET
	float                                              ConsoleSessionRetryWaitSeconds;                           // 0x0488(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x048C(0x0018) MISSED OFFSET
	float                                              IdleResetShortTimer;                                      // 0x04A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x88];                                      // 0x04A8(0x0088) MISSED OFFSET
	TArray<struct FClientIdRestrictions>               ClientIdRestrictions;                                     // 0x0530(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0540(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameSessionDedicated");
		return ptr;
	}

};


// Class FortniteGame.FortGameSessionDedicatedAthena
// 0x0178 (0x06C0 - 0x0548)
class AFortGameSessionDedicatedAthena : public AFortGameSessionDedicated
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0548(0x00A0) MISSED OFFSET
	float                                              ReconnectToMMSDelay;                                      // 0x05E8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxReconnectToMMSDelay;                                   // 0x05EC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05F0(0x0008) MISSED OFFSET
	struct FString                                     MMSVersionCompatability;                                  // 0x05F8(0x0010) (ZeroConstructor, Config)
	struct FString                                     MMSTicketURLServer;                                       // 0x0608(0x0010) (ZeroConstructor, Config)
	float                                              MMSPingInterval;                                          // 0x0618(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0xA4];                                      // 0x061C(0x00A4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameSessionDedicatedAthena");
		return ptr;
	}

};


// Class FortniteGame.FortGameStateBase
// 0x0020 (0x03A8 - 0x0388)
class AFortGameStateBase : public AGameState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0388(0x0010) MISSED OFFSET
	class AFortTimeOfDayManager*                       FortTimeOfDayManager;                                     // 0x0398(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMissionStormShield*                     StormShield;                                              // 0x03A0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateBase");
		return ptr;
	}


	void OnRep_TimeOfDayManager();
	void OnRep_StormShield();
	class AFortTimeOfDayManager* GetTimeOfDayManager();
	class AFortMissionStormShield* GetStormShield();
};


// Class FortniteGame.FortGameState
// 0x02C0 (0x0668 - 0x03A8)
class AFortGameState : public AFortGameStateBase
{
public:
	struct FString                                     CurrentWUID;                                              // 0x03A8(0x0010) (Net, ZeroConstructor)
	int                                                ParTime;                                                  // 0x03B8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                WorldLevel;                                               // 0x03BC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                CraftingBonus;                                            // 0x03C0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CurrentReadyToContinueTimer;                              // 0x03C4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                TeamCount;                                                // 0x03C8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                TeamSize;                                                 // 0x03CC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class AFortPoiManager*                             PoiManager;                                               // 0x03D0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x03D8(0x0018) MISSED OFFSET
	bool                                               bPlayersAlwaysVisible;                                    // 0x03F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipWorldSave;                                           // 0x03F1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2E];                                      // 0x03F2(0x002E) MISSED OFFSET
	TArray<struct FName>                               AdditionalPlaylistLevelsStreamed;                         // 0x0420(0x0010) (Net, ZeroConstructor)
	int                                                WorldDaysElapsed;                                         // 0x0430(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1C];                                      // 0x0434(0x001C) MISSED OFFSET
	class AFortFeedbackManager*                        FeedbackManager;                                          // 0x0450(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMissionManager*                         MissionManager;                                           // 0x0458(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortClientAnnouncementManager*              AnnouncementManager;                                      // 0x0460(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortScriptedActionManager*                  ScriptedActionManager;                                    // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortLobbyBeaconState*                       LobbyGameState;                                           // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortWorldManager*                           WorldManager;                                             // 0x0478(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortGameplayState>                    GameplayState;                                            // 0x0480(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0481(0x0007) MISSED OFFSET
	class UClass*                                      MusicManagerSubclass;                                     // 0x0488(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortMusicManagerBank*                       MusicManagerBank;                                         // 0x0490(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      FortAmbientAudioControllerClass;                          // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     GameSessionId;                                            // 0x04A0(0x0010) (Net, ZeroConstructor)
	TArray<class UFortMovementComp_Character*>         ManagedCharMovementComponents;                            // 0x04B0(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x04C0(0x0008) MISSED OFFSET
	TArray<class AFortAIPawn*>                         ManagedAnimPawns;                                         // 0x04C8(0x0010) (ZeroConstructor, Transient)
	class AFortPawn*                                   PawnForReplayRelevancy;                                   // 0x04D8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerState*                            RecorderPlayerState;                                      // 0x04E0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UFortMovementComp_Character*>         ManagedCharMovementComponentsCopy;                        // 0x04E8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<struct FOnTimeHitInfo>                      TimeOfDayCallbacks;                                       // 0x04F8(0x0010) (ZeroConstructor, Transient)
	class AFortVisibilityManager*                      VisibilityManager;                                        // 0x0508(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortFXManager*                              FXManager;                                                // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortWindManager*                            WindManager;                                              // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortTeamInfo*>                       Teams;                                                    // 0x0520(0x0010) (Net, ZeroConstructor)
	bool                                               bSkipTeamReplication;                                     // 0x0530(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0531(0x0007) MISSED OFFSET
	TArray<struct FTeamChangeRequest>                  PendingTeamChangeRequests;                                // 0x0538(0x0010) (Net, ZeroConstructor)
	bool                                               bAllowPendingTeamChangeRequests;                          // 0x0548(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4F];                                      // 0x0549(0x004F) MISSED OFFSET
	class AFortGlobalAbilityTargetingActor*            GlobalAbilityTargetingActor;                              // 0x0598(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0xA0];                                      // 0x05A0(0x00A0) MISSED OFFSET
	TArray<struct FAppliedHomebaseData>                AppliedHomebaseDataArray;                                 // 0x0640(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0650(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameState");
		return ptr;
	}


	void RunPerfMemCheatScript(bool bStartStatFiles);
	void OnRep_WorldManager();
	void OnRep_WorldDaysElapsed();
	void OnRep_Teams();
	void OnRep_MusicManagerSubclass();
	void OnRep_MusicManagerBank();
	void OnRep_MissionManager();
	void OnRep_GameSessionID();
	void OnRep_GameplayState();
	void OnRep_FeedbackManager();
	void OnRep_CurrentWUID();
	void OnRep_AnnouncementManager();
	void OnRep_AdditionalPlaylistLevelsStreamed();
	void OnFinishedStreamingAdditionalPlaylistLevel();
	int GetWorldDaysElapsed();
	TEnumAsByte<EFortGameplayState> GetGameplayState();
	void DemoEndOfDayRecap();
	void DbgSphereSendToAllInternal_DoNotCall(const struct FVector& Center, float Radius, int Segments, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void DbgLineSendToAllInternal_DoNotCall(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void DbgCapsuleSendToAllInternal_DoNotCall(const struct FVector& Center, float HalfHeight, float Radius, const struct FQuat& Rotation, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void DbgBoxSendToAllInternal_DoNotCall(const struct FVector& Center, const struct FVector& Extent, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void Client_RefreshEventCalendar();
	void Client_InitiateEndOfDayRecap(const struct FEndOfDayRecap& EndOfDayRecap);
};


// Class FortniteGame.FortGameStateZone
// 0x0738 (0x0DA0 - 0x0668)
class AFortGameStateZone : public AFortGameState
{
public:
	int                                                PawnIDCount;                                              // 0x0668(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                WaitingToLeaveZoneTimeLeft;                               // 0x066C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              HostilityMeterPercent;                                    // 0x0670(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              IntensityPercent;                                         // 0x0674(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                SpawnPointsCap;                                           // 0x0678(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                SpawnPointsAllocated;                                     // 0x067C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxTotalAI;                                               // 0x0680(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxEncounterAI;                                           // 0x0684(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxEncounterSP;                                           // 0x0688(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PlayerBuildingSkillLevel;                                 // 0x068C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<float>                                      PlayerSharedMaxTrapAttributes;                            // 0x0690(0x0010) (Net, ZeroConstructor, Transient)
	TArray<class UObject*>                             GameplayMutatorObservers;                                 // 0x06A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x128];                                     // 0x06B0(0x0128) MISSED OFFSET
	struct FGameplayTagContainer                       ExplicitGloballyBlockedAbilityTags;                       // 0x07D8(0x0020) (Net, Transient)
	unsigned char                                      UnknownData01[0xA0];                                      // 0x07F8(0x00A0) MISSED OFFSET
	bool                                               bInvitesRestricted;                                       // 0x0898(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6B];                                      // 0x0899(0x006B) MISSED OFFSET
	int                                                TotalPlayerStructures;                                    // 0x0904(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MaxPlayerStructures;                                      // 0x0908(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x090C(0x001C) MISSED OFFSET
	class AFortGlobalEnvironmentAbilityActor*          GlobalEnvironmentAbilityActor;                            // 0x0928(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UFortAbilitySystemComponent*>         GlobalGameplayEventListeners;                             // 0x0930(0x0010) (ExportObject, ZeroConstructor, Transient)
	struct FActiveGameplayModifierArray                ActiveGameplayModifiers;                                  // 0x0940(0x00D8) (Net, Transient)
	bool                                               bSupportRuntimeShutdownOfGameplayModifiers;               // 0x0A18(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0A19(0x0007) MISSED OFFSET
	class UBuildingStructuralSupportSystem*            StructuralSupportSystem;                                  // 0x0A20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FDataTableRowHandle                         ZoneDifficultyInfoRow;                                    // 0x0A28(0x0010) (Net, Transient)
	class UFortZoneTheme*                              ZoneTheme;                                                // 0x0A38(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x28];                                      // 0x0A40(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGameStateZone.MissionGeneratorClass
	TArray<struct FFortItemQuantityPair>               MissionRewards;                                           // 0x0A68(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FFortZoneDifficultyIncreaseRewardData> DifficultyIncreaseRewards;                                // 0x0A78(0x0010) (Net, ZeroConstructor, Transient)
	struct FFortZoneMissionAlertData                   MissionAlertData;                                         // 0x0A88(0x0030) (Net, Transient)
	unsigned char                                      UnknownData06[0x90];                                      // 0x0AB8(0x0090) MISSED OFFSET
	class AFortThreatVisualsManager*                   ThreatVisualsManager;                                     // 0x0B48(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortThreatParticleActor*                    ThreatParticleActor;                                      // 0x0B50(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDrawRunVariationDebug;                                   // 0x0B58(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0B59(0x0007) MISSED OFFSET
	TArray<class AFortAIPawn*>                         PawnVariationList;                                        // 0x0B60(0x0010) (ZeroConstructor, Transient)
	int                                                VariationIndex;                                           // 0x0B70(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              GameDifficulty;                                           // 0x0B74(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0B78(0x0004) MISSED OFFSET
	bool                                               bIsGroupContent;                                          // 0x0B7C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0B7D(0x0003) MISSED OFFSET
	int                                                DifficultyIncreaseRewardTier;                             // 0x0B80(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowedToUpdateBackendDifficulty : 1;                    // 0x0B84(0x0001)
	unsigned char                                      UnknownData10[0x13];                                      // 0x0B85(0x0013) MISSED OFFSET
	struct FPlayerBuildableClassContainer              PlayerBuildableClasses[0x4];                              // 0x0B98(0x0010) (Transient)
	class AFortInGameMapManager*                       UIMapManager;                                             // 0x0BD8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortCharacterCosmeticManager*               CharacterCosmeticManager;                                 // 0x0BE0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnScoreTotalsChanged;                                     // 0x0BE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FName                                       ScoringTableRowName;                                      // 0x0BF8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalCombatScore;                                         // 0x0C00(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalBuildingScore;                                       // 0x0C04(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalUtilityScore;                                        // 0x0C08(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0C0C(0x0004) MISSED OFFSET
	struct FString                                     TheaterUniqueId;                                          // 0x0C10(0x0010) (Net, ZeroConstructor)
	struct FString                                     MissionLogDebugString;                                    // 0x0C20(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData12[0x18];                                      // 0x0C30(0x0018) MISSED OFFSET
	unsigned char                                      bAllowBuildingCostMods : 1;                               // 0x0C48(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFreeBuildingRepairs : 1;                                 // 0x0C48(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0C49(0x0003) MISSED OFFSET
	bool                                               bAllowBuildingAtLayoutRequirements;                       // 0x0C4C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowBuildingWithoutLayoutRequirements;                  // 0x0C4D(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowLayoutRequirementsFeature;                          // 0x0C4E(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x1];                                       // 0x0C4F(0x0001) MISSED OFFSET
	bool                                               bAllowBuildingThroughBlockingObjects;                     // 0x0C50(0x0001) (ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x0C51(0x0007) MISSED OFFSET
	TArray<class AFortAIPawn*>                         DeployedDefenders;                                        // 0x0C58(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData16[0x50];                                      // 0x0C68(0x0050) MISSED OFFSET
	int                                                NumSurvivorsSpawned;                                      // 0x0CB8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumSurvivorsDead;                                         // 0x0CBC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumSurvivorsRescued;                                      // 0x0CC0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0CC4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNumSurvivorsRescuedChangedDelegate;                     // 0x0CC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData18[0x20];                                      // 0x0CD8(0x0020) MISSED OFFSET
	float                                              UnplayableHitchThresholdInMs;                             // 0x0CF8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxUnplayableHitchesToTolerate;                           // 0x0CFC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData19[0x20];                                      // 0x0D00(0x0020) MISSED OFFSET
	TArray<struct FVoteData>                           GameplayVotesArray;                                       // 0x0D20(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData20[0x58];                                      // 0x0D30(0x0058) MISSED OFFSET
	class UClass*                                      CreativePlotToSpawn;                                      // 0x0D88(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AFortCreativePlotManager*                    CreativePlotManager;                                      // 0x0D90(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayspaceManager*                       PlayspaceManager;                                         // 0x0D98(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateZone");
		return ptr;
	}


	void UnregisterGameplayModifier(const struct FActiveGameplayModifierHandle& InHandleToUnregister);
	void UnbindDelegateOnGameplayVoteUpdated(EFortVoteType VoteType, const struct FScriptDelegate& Delegate);
	bool ShouldDisablePlayerTeleportingDuringMissionResults();
	bool SetDifficultyIncreaseRewardTier(int InDifficultyIncreaseTier);
	void SetBuildingAllowed(bool bBuildingAtLayoutRequirementsAllowed, bool bBuildingWithoutLayoutRequirementsAllowed);
	void ServerSubmitGameplayVote(EFortVoteType VoteType, int VoteDecision, const struct FUniqueNetIdRepl& PlayerNetId);
	void ServerFireAIDirectorEventBatch(TArray<struct FFortAIDirectorEvent> Payload);
	void ServerFireAIDirectorEvent(EFortAIDirectorEvent Event, class UObject* EventSource, class UObject* EventTarget, float EventMultiplier);
	void ServerEndGameplayVote(EFortVoteType VoteType, const struct FUniqueNetIdRepl& PlayerNetId);
	void ServerBeginGameplayVote(EFortVoteType VoteType, const struct FUniqueNetIdRepl& PlayerNetId, const struct FFortVoteConfig& VoteConfig);
	void RemovePlayerAbilityRestriction();
	struct FActiveGameplayModifierHandle RegisterGameplayModifier(class UFortGameplayModifierItemDefinition* InModifierToRegister, int Expiration);
	void OnWaveStart(const struct FText& LevelText, int Level, const struct FText& WaveText, int WaveNum);
	void OnWaveEncounterStarted(const struct FTieredWaveSetData& WaveData, const struct FText& LevelText, int Level, const struct FText& WaveText, int WaveNum);
	void OnWaveBasedModifiersAppliedMulticast(TArray<class UFortGameplayModifierItemDefinition*> ModifiersApplied);
	void OnRep_ZoneDifficultyInfoRow();
	void OnRep_TheaterUniqueId();
	void OnRep_PlayerStructuresChanged();
	void OnRep_PlayerSharedTrapAttributes();
	void OnRep_PlayerBuildingSkillLevel();
	void OnRep_NumSurvivorsRescued();
	void OnRep_MissionRewards();
	void OnRep_MissionGenerator();
	void OnRep_MissionAlertData();
	void OnRep_GameplayVotes();
	void OnRep_GameDifficulty();
	void OnRep_DifficultyIncreaseRewardTier();
	void OnRep_DifficultyIncreaseRewards();
	void OnRep_ActiveGameplayModifiers();
	void OnDefenderRemoved(class AFortAIPawn* Defender);
	void OnDefenderDeployed(class AFortAIPawn* Defender);
	void NotifySurvivorSpawned();
	void NotifySurvivorRescued(class AFortPlayerController* Rescuer, const struct FString& SurvivorName);
	void NotifySurvivorDead();
	void NotifyEndFailedGameplayVoteLockout(EFortVoteType VoteType);
	bool IsGameplayVoteLocked(EFortVoteType VoteType);
	bool IsGameplayVoteInProgress(EFortVoteType VoteType);
	bool IsGameplayVoteActive(EFortVoteType VoteType);
	bool IsDefenderItemDeployed(class UFortItem* DefenderItem, class AFortPlayerStateZone* RequestingPlayer);
	bool IsBuildingWithoutLayoutRequirementsAllowed();
	bool IsBuildingAtLayoutRequirementsAllowed();
	bool IsAnyGameplayVoteActive();
	bool HasActiveGameplayModifiers();
	void GloballyUnblockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToUnblock);
	void GloballyBlockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToBlock);
	bool GetVoteStartTime(EFortVoteType VoteType, struct FDateTime* VoteStartTime);
	bool GetVoteInstigator(EFortVoteType VoteType, struct FUniqueNetIdRepl* InstigatorNetId);
	bool GetVoteEndTime(EFortVoteType VoteType, struct FDateTime* VoteEndTime);
	float GetVoteDuration(EFortVoteType VoteType);
	bool GetVoteArbitratorType(EFortVoteType VoteType, EFortVoteArbitratorType* ArbitratorType);
	class AFortInGameMapManager* GetUIMapManager();
	int GetTotalScore(EStatCategory ScoreCategory);
	float GetTimeRemainingToEndVote(EFortVoteType VoteType);
	float GetTimeRemainingToEndFailedVoteLockout(EFortVoteType VoteType);
	float GetTimeElapsedSinceEndVote(EFortVoteType VoteType);
	float GetTimeElapsedSinceBeginVote(EFortVoteType VoteType);
	int GetNumSurvivorsSpawned();
	int GetNumSurvivorsRescued();
	int GetNumSurvivorsDead();
	int GetNumAllowedDifficultyIncreases();
	TArray<struct FUniqueNetIdRepl> GetGameplayVotesForChoice(EFortVoteType VoteType, int VoteChoice);
	float GetGameDifficulty();
	float GetFailedVoteLockOutDuration(EFortVoteType VoteType);
	class AFortAIPawn* GetDefenderToRemove(class AFortPlayerStateZone* PlayerCausingRemoval, const struct FName& RemoveFromDefenderSquadId, int SimulatedAdditionalDefenders, bool bDefenderRemovalCausedByPlayerJoin, bool* bOutCanSpawnDefender);
	bool GetCurrentVoters(EFortVoteType VoteType, TArray<struct FVoter>* Voters);
	void GetActiveModifiers(TArray<class UFortGameplayModifierItemDefinition*>* OutActiveModifiers);
	bool CanSpawnDefender(class AFortPlayerStateZone* PlayerCausingRemoval, const struct FName& RemoveFromDefenderSquadId, class AFortAIPawn** OutDefenderToBeRemoved);
	void BindDelegateOnGameplayVoteUpdated(EFortVoteType VoteType, const struct FScriptDelegate& Delegate);
	void ApplyPlayerAbilityRestriction();
};


// Class FortniteGame.FortGameStatePvP
// 0x00F0 (0x0E90 - 0x0DA0)
class AFortGameStatePvP : public AFortGameStateZone
{
public:
	int                                                RoundTimeLimit;                                           // 0x0DA0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RoundTimeAccumulated;                                     // 0x0DA4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0DA8(0x0004) MISSED OFFSET
	int                                                RoundTimeCriticalThreshold;                               // 0x0DAC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RoundTimeRemaining;                                       // 0x0DB0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                StalemateTimeLimit;                                       // 0x0DB4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                StalemateTimeRemaining;                                   // 0x0DB8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                RestartTimeRemaining;                                     // 0x0DBC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                FOBFinalizationTimeRemaining;                             // 0x0DC0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0DC4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFinalizationFOBTimerExpired;                            // 0x0DC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0DD8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameStatePvP.RoundTimeExpiringSound
	unsigned char                                      UnknownData03[0x28];                                      // 0x0E00(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGameStatePvP.StalemateTimeExpiringSound
	TArray<class ABuildingCapturePointActor*>          CapturePoints;                                            // 0x0E28(0x0010) (Net, ZeroConstructor)
	class ABuildingItemCollectorActor*                 ItemCollector;                                            // 0x0E38(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                StartMatchDelayTimer;                                     // 0x0E40(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGateCraftingOnTeamLevel : 1;                             // 0x0E44(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData04[0x1B];                                      // 0x0E45(0x001B) MISSED OFFSET
	class UCurveFloat*                                 MatchLevelCurve;                                          // 0x0E60(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MatchLevel;                                               // 0x0E68(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0E6C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHandleMatchLevelChanged;                                // 0x0E70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                TotalHomebaseRating;                                      // 0x0E80(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                AverageHomebaseRating;                                    // 0x0E84(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bUseExperimentalCraftingFeature;                          // 0x0E88(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0E89(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStatePvP");
		return ptr;
	}


	void SetMatchLevel(int InMatchLevel);
	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
	void OnRep_StalemateTimeRemaining();
	void OnRep_RoundTimeRemaining();
	void OnRep_MatchLevel();
	void OnRep_ItemCollector();
	bool IsExperimentalCraftingFeatureActive();
	int GetTotalHomebaseRating();
	int GetStartMatchDelayTimer();
	int GetRoundTimeAccumulated();
	int GetMatchLevel();
	class ABuildingItemCollectorActor* GetItemCollector();
	int GetFOBFinalizationTimeRemaining();
	int GetAverageHomebaseRating();
};


// Class FortniteGame.FortGameStateAthena
// 0x0CC8 (0x1B58 - 0x0E90)
class AFortGameStateAthena : public AFortGameStatePvP
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0E90(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCurrentPlaylistLoaded;                                  // 0x0EB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bPlaylistDataIsLoaded;                                    // 0x0EC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlaylistDataIsActivelyLoading;                           // 0x0EC1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0EC2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    AllWinnersAnnounced;                                      // 0x0EC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CountdownTick;                                            // 0x0ED8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CountdownStarted;                                         // 0x0EE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CountdownFinished;                                        // 0x0EF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    FinalCountdownTick;                                       // 0x0F08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    FinalCountdownStarted;                                    // 0x0F18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    FinalCountdownFinished;                                   // 0x0F28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CurrentHighScoreUpdated;                                  // 0x0F38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    GameModeMessageRequest;                                   // 0x0F48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MutatorGenericIntegerUpdated;                             // 0x0F58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MutatorGameplayEvent;                                     // 0x0F68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0F78(0x0008) MISSED OFFSET
	int                                                PlaylistTimeRemaining;                                    // 0x0F80(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                PrevPlaylistTimeRemaining;                                // 0x0F84(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalFinalCountdownTime;                                  // 0x0F88(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bForceTeamScorePlacementOnDeath;                          // 0x0F8C(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bPlaylistStoppedSafeZonePhases;                           // 0x0F8D(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0F8E(0x0002) MISSED OFFSET
	int                                                ServerChangelistNumber;                                   // 0x0F90(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0F94(0x0004) MISSED OFFSET
	class AFortSpecialActorReplicationInfo*            SpecialActorData;                                         // 0x0F98(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              BuildingActorClasses;                                     // 0x0FA0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FScriptMulticastDelegate                    WinnerAnnounced;                                          // 0x0FB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    WinningTeamAnnounced;                                     // 0x0FC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    GamePhaseChanged;                                         // 0x0FD0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    WinningScoreDetermined;                                   // 0x0FE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    GamePhaseStepChanged;                                     // 0x0FF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StormProgressStopped;                                     // 0x1000(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayersLeftChanged;                                     // 0x1010(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamsLeftChanged;                                       // 0x1020(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bSkipWinnerAnnounced;                                     // 0x1030(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsInCountdown;                                           // 0x1031(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInFinalCountdown;                                      // 0x1032(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x1033(0x0001) MISSED OFFSET
	float                                              WarmupCountdownStartTime;                                 // 0x1034(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              WarmupCountdownEndTime;                                   // 0x1038(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              AircraftStartTime;                                        // 0x103C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SafeZonesStartTime;                                       // 0x1040(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              EndGameStartTime;                                         // 0x1044(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              EndGameKickPlayerTime;                                    // 0x1048(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                TotalPlayers;                                             // 0x104C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                PlayersLeft;                                              // 0x1050(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x1054(0x0004) MISSED OFFSET
	TArray<int>                                        TeamXPlayersLeft;                                         // 0x1058(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<struct FFortWinnerPlayerData>               WinningPlayerList;                                        // 0x1068(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	int                                                TeamsLeft;                                                // 0x1078(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x107C(0x0004) MISSED OFFSET
	TArray<class UObject*>                             ServerToClientPreloadList;                                // 0x1080(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	class UAthenaBattleBusItemDefinition*              DefaultBattleBus;                                         // 0x1090(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowUserPickedCosmeticBattleBus;                        // 0x1098(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x1099(0x0007) MISSED OFFSET
	TArray<struct FAircraftFlightInfo>                 TeamFlightPaths;                                          // 0x10A0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	struct FAircraftFlightInfo                         FlightPathMidLine;                                        // 0x10B0(0x0028) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FVector                                     FloatingIslandPosition;                                   // 0x10D8(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bFloatingIslandActivated;                                 // 0x10E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x10E5(0x0003) MISSED OFFSET
	struct FVector2D                                   DropZoneCenter;                                           // 0x10E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector2D                                   FlightPathSelectionCenter;                                // 0x10F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FDateTime                                   UtcTimeStartedMatch;                                      // 0x10F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net)
	bool                                               bIsLargeTeamGame;                                         // 0x1100(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x1101(0x0007) MISSED OFFSET
	class APlayerState*                                WinningPlayerState;                                       // 0x1108(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x10];                                      // 0x1110(0x0010) MISSED OFFSET
	int                                                WinningTeam;                                              // 0x1120(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                WinningScore;                                             // 0x1124(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                CurrentHighScore;                                         // 0x1128(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                CurrentHighScoreTeam;                                     // 0x112C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   SupplyDropWaveStartedSoundCue;                            // 0x1130(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FText>                               KillFeedEntry;                                            // 0x1138(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData12[0x10];                                      // 0x1148(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    KillFeedUpdated;                                          // 0x1158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortPlayerState*>                    SpectatorArray;                                           // 0x1168(0x0010) (ZeroConstructor, Transient)
	EAirCraftBehavior                                  AirCraftBehavior;                                         // 0x1178(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x1179(0x0001) MISSED OFFSET
	bool                                               bStormReachedFinalPosition;                               // 0x117A(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EFriendlyFireType                                  FriendlyFireType;                                         // 0x117B(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	int                                                CurrentPlaylistId;                                        // 0x117C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AFortSafeZoneIndicator*                      SafeZoneIndicator;                                        // 0x1180(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 MinimapBackgroundBrush;                                   // 0x1188(0x0088) (Transient)
	class UTexture2D*                                  MinimapBackgroundImage;                                   // 0x1210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MinimapBackgroundMID;                                     // 0x1218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MinimapCircleMID;                                         // 0x1220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MinimapNextCircleMID;                                     // 0x1228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    FullmapCircleMID;                                         // 0x1230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    FullmapNextCircleMID;                                     // 0x1238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 MinimapSafeZoneBrush;                                     // 0x1240(0x0088) (Transient)
	struct FSlateBrush                                 MinimapCircleBrush;                                       // 0x12C8(0x0088) (Transient)
	struct FSlateBrush                                 MinimapNextCircleBrush;                                   // 0x1350(0x0088) (Transient)
	struct FSlateBrush                                 FullMapCircleBrush;                                       // 0x13D8(0x0088) (Transient)
	struct FSlateBrush                                 FullMapNextCircleBrush;                                   // 0x1460(0x0088) (Transient)
	struct FSlateBrush                                 MinimapSafeZoneFinalPosBrush;                             // 0x14E8(0x0088) (Transient)
	struct FSlateBrush                                 AircraftPathBrush;                                        // 0x1570(0x0088) (Transient)
	struct FSlateBrush                                 AircraftMidlinePathBrush;                                 // 0x15F8(0x0088) (Transient)
	struct FSlateBrush                                 AircraftPathTeamIndicatorBrush;                           // 0x1680(0x0088) (Transient)
	class UMaterialInterface*                          MiniMapBackgroundDrawingMaterial;                         // 0x1708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          MiniMapCircleDrawingMaterial;                             // 0x1710(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          MiniMapNextCircleDrawingMaterial;                         // 0x1718(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlateBrush                                 FloatingIslandBrush;                                      // 0x1720(0x0088) (Transient)
	struct FSlateBrush                                 FloatingIslandBrushActivated;                             // 0x17A8(0x0088) (Transient)
	class AFortAthenaMapInfo*                          MapInfo;                                                  // 0x1830(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EAthenaGamePhase                                   GamePhase;                                                // 0x1838(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x1839(0x0007) MISSED OFFSET
	struct FPlaylistPropertyArray                      CurrentPlaylistInfo;                                      // 0x1840(0x0190) (Net)
	bool                                               bGameModeWillSkipAircraft;                                // 0x19D0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SafeZonePhase;                                            // 0x19D1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EAthenaGamePhaseStep                               GamePhaseStep;                                            // 0x19D2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x1];                                       // 0x19D3(0x0001) MISSED OFFSET
	float                                              GamePhaseStepTimeRemaining;                               // 0x19D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundMix*                                   LobbySoundMix;                                            // 0x19D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AFortAthenaAircraft*>                 Aircrafts;                                                // 0x19E0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      bAircraftIsLocked : 1;                                    // 0x19F0(0x0001) (Net)
	unsigned char                                      UnknownData16[0x3];                                       // 0x19F1(0x0003) MISSED OFFSET
	ESafeZoneStartUp                                   CachedSafeZoneStartUp;                                    // 0x19F4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x3];                                       // 0x19F5(0x0003) MISSED OFFSET
	int                                                LobbyAction;                                              // 0x19F8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1C];                                      // 0x19FC(0x001C) MISSED OFFSET
	TArray<class AFortAthenaSupplyDrop*>               SupplyDropsNotOpened;                                     // 0x1A18(0x0010) (ZeroConstructor)
	struct FGameplayMutatorEventData                   MutatorEventData;                                         // 0x1A28(0x0010) (Net)
	struct FGameplayMutatorObjectDataArray             MutatorObjectDataArray;                                   // 0x1A38(0x00C0) (Net)
	int                                                MutatorGenericInt_0_1;                                    // 0x1AF8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MutatorGenericInt_1_2;                                    // 0x1AFC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MutatorGenericInt_2_3;                                    // 0x1B00(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x1B04(0x0004) MISSED OFFSET
	class AFortAthenaMutator_AI*                       GameplayMutator_AI;                                       // 0x1B08(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AFortAthenaMutator*>                  GameplayMutators;                                         // 0x1B10(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bAllowRespawning : 1;                                     // 0x1B20(0x0001) (BlueprintVisible, Net)
	unsigned char                                      UnknownData20[0x3];                                       // 0x1B21(0x0003) MISSED OFFSET
	float                                              HopRockDuration;                                          // 0x1B24(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FItemAndCount>                       CachedLoadout;                                            // 0x1B28(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FItemAndCount>                       CurrentLoadout;                                           // 0x1B38(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance)
	float                                              DefaultGliderRedeployCanRedeploy;                         // 0x1B48(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              DefaultRedeployGliderLateralVelocityMult;                 // 0x1B4C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              DefaultRedeployGliderHeightLimit;                         // 0x1B50(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x1B54(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateAthena");
		return ptr;
	}


	void SetFloatingIslandInformation(const struct FVector& WorldPosition, bool bActivated);
	void RunPerfMemCheatScript_Client_Replicated(bool bStartStatFiles);
	void OnWinnerAnnounced();
	void OnRep_WinningTeam();
	void OnRep_WinningScore();
	void OnRep_WinningPlayerState();
	void OnRep_WinningPlayerList();
	void OnRep_UtcTimeStartedMatch(const struct FDateTime& OldUtcTimeStartedMatch);
	void OnRep_TeamsLeft();
	void OnRep_SupplyDropWaveStartedSoundCue();
	void OnRep_ServerChangelistNumber();
	void OnRep_SafeZonePhase();
	void OnRep_PlaylistTimeRemaining();
	void OnRep_PlayersLeft();
	void OnRep_MutatorGenericInt_2_3();
	void OnRep_MutatorGenericInt_1_2();
	void OnRep_MutatorGenericInt_0_1();
	void OnRep_MutatorEventData();
	void OnRep_GamePhase(EAthenaGamePhase OldGamePhase);
	void OnRep_CurrentPlaylistInfo();
	void OnRep_CurrentPlaylistId();
	void OnRep_CurrentHighScore();
	void OnRep_bPlaylistStoppedSafeZonePhases();
	void OnRep_Aircraft();
	void OnCurrentPlaylistLoaded__DelegateSignature(const struct FName& PlaylistName, const struct FGameplayTagContainer& PlaylistContextTags);
	bool IsTeamSwitchAllowed();
	class AFortSafeZoneIndicator* GetSafeZoneIndicator();
	bool GetPlaylistTeams(TArray<TEnumAsByte<EFortTeam>>* OutTeams);
	struct FName GetCurrentPlaylistName();
	class UAthenaBattleBusItemDefinition* GetBattleBusForPlayer(class AFortPlayerControllerAthena* PC);
	struct FGameplayTagContainer GetAthenaPlaylistContextTags();
	class AFortAthenaAircraft* GetAircraft(int AircraftIndex);
	EAthenaAerialPhase GetAerialPhase(class AFortPlayerControllerAthena* PlayerController);
	bool CanUseSlowMotionOnVictory();
};


// Class FortniteGame.FortGameStateDeployableBase
// 0x0040 (0x0DE0 - 0x0DA0)
class AFortGameStateDeployableBase : public AFortGameStateZone
{
public:
	class AFortDeployableBaseManager*                  DeployableBaseManager;                                    // 0x0DA0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDeployableBaseManagerCreated;                           // 0x0DA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bFireEndOfDayDelegate;                                    // 0x0DB8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0DB9(0x0007) MISSED OFFSET
	TArray<struct FHordeDifficultyTierInfo>            TierDifficultyConfig;                                     // 0x0DC0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FHordeDifficultyTierInfo>            PrestigeTierDifficultyConfig;                             // 0x0DD0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateDeployableBase");
		return ptr;
	}


	bool ShouldUseStormShield();
	bool ShouldRespawnAtLastPawnLocation();
	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
	void OnRep_DeployableBaseManager();
	float GetStormShieldStartingRadiusOverride();
	float GetStormShieldEndingRadiusOverride();
	float GetStormShieldBreatherRadiusOverride();
	EDeployableBaseUseType GetDeployableBaseUseType();
};


// Class FortniteGame.FortGameStateFOB
// 0x0018 (0x0DB8 - 0x0DA0)
class AFortGameStateFOB : public AFortGameStateZone
{
public:
	struct FScriptMulticastDelegate                    OnBuildingDestroyedDel;                                   // 0x0DA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0DB0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateFOB");
		return ptr;
	}


	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
	void SetGameDifficultyExplicitly(float InGameDifficulty);
};


// Class FortniteGame.FortGameStateFrontEnd
// 0x0000 (0x0668 - 0x0668)
class AFortGameStateFrontEnd : public AFortGameState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateFrontEnd");
		return ptr;
	}

};


// Class FortniteGame.FortGameStateKeep
// 0x0050 (0x0DF0 - 0x0DA0)
class AFortGameStateKeep : public AFortGameStateZone
{
public:
	struct FPermaniteBoundariesInfo                    PermaniteBoundariesData;                                  // 0x0DA0(0x0014) (Net, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0DB4(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateKeep");
		return ptr;
	}


	void OnRep_PermaniteBoundariesInfo();
};


// Class FortniteGame.FortGameStateManor
// 0x0060 (0x0E00 - 0x0DA0)
class AFortGameStateManor : public AFortGameStateZone
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0DA0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateManor");
		return ptr;
	}

};


// Class FortniteGame.FortGameStateOutpost
// 0x0008 (0x0DA8 - 0x0DA0)
class AFortGameStateOutpost : public AFortGameStateZone
{
public:
	bool                                               bOutpostDefenseActive;                                    // 0x0DA0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0DA1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateOutpost");
		return ptr;
	}


	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
};


// Class FortniteGame.FortGameStatePvPBaseDestruction
// 0x00F0 (0x0F80 - 0x0E90)
class AFortGameStatePvPBaseDestruction : public AFortGameStatePvP
{
public:
	struct FName                                       SessionXPRowName;                                         // 0x0E90(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRichCurve                                  TeamLevelToSessionXPCurve;                                // 0x0E98(0x0070) (Transient)
	struct FRichCurve                                  SessionXPToTeamLevelCurve;                                // 0x0F08(0x0070) (Transient)
	int                                                MaxTeamLevel;                                             // 0x0F78(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxTeamExperience;                                        // 0x0F7C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStatePvPBaseDestruction");
		return ptr;
	}


	int GetTeamLevelForExperienceAmount(int Experience);
	int GetMaxTeamLevel();
	int GetMaxTeamExperience();
	int GetExperienceRequiredForTeamLevel(int TeamLevel);
};


// Class FortniteGame.FortGameStateSurvival
// 0x0008 (0x0DA8 - 0x0DA0)
class AFortGameStateSurvival : public AFortGameStateZone
{
public:
	bool                                               bFireEndOfDayDelegate;                                    // 0x0DA0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0DA1(0x0003) MISSED OFFSET
	float                                              TimeToDelayEndOfDayZoneScoreWidgetDisplay;                // 0x0DA4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameStateSurvival");
		return ptr;
	}


	void SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo);
};


// Class FortniteGame.FortGameUIExtenderAthena
// 0x0008 (0x0030 - 0x0028)
class UFortGameUIExtenderAthena : public UObject
{
public:
	class APlayerController*                           Owner;                                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameUIExtenderAthena");
		return ptr;
	}


	void GoToBossCommand();
	bool CanShowGoToBossCommand();
};


// Class FortniteGame.FortGameUserSettings
// 0x0460 (0x0578 - 0x0118)
class UFortGameUserSettings : public UGameUserSettings
{
public:
	float                                              MouseSensitivity;                                         // 0x0118(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                FortVersion;                                              // 0x011C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0120(0x0018) MISSED OFFSET
	bool                                               UnlockConsoleFPS;                                         // 0x0138(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               LastAppliedUnlockConsoleFPS;                              // 0x0139(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x013A(0x0002) MISSED OFFSET
	int                                                CurrentConsoleFPSMode;                                    // 0x013C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SubGameSelectCount_Athena;                                // 0x0140(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	struct FDateTime                                   SubGameLastSelectedTime_Athena;                           // 0x0148(0x0008) (Config)
	int                                                SubGameSelectCount_Campaign;                              // 0x0150(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	struct FDateTime                                   SubGameLastSelectedTime_Campaign;                         // 0x0158(0x0008) (Config)
	struct FString                                     CustomVoiceChatInputDevice;                               // 0x0160(0x0010) (ZeroConstructor, Config)
	struct FString                                     CustomVoiceChatOutputDevice;                              // 0x0170(0x0010) (ZeroConstructor, Config)
	bool                                               bMotionBlur;                                              // 0x0180(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowGrass;                                               // 0x0181(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowFPS;                                                 // 0x0182(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
	TMap<struct FName, struct FDateTime>               NamedTimes;                                               // 0x0188(0x0050) (ZeroConstructor, Config)
	TMap<struct FName, int>                            NamedCounts;                                              // 0x01D8(0x0050) (ZeroConstructor, Config)
	struct FDateTime                                   LastSeenAthenaStoreRefreshTime;                           // 0x0228(0x0008) (Config)
	struct FDateTime                                   LastSeenAthenaStoreWeeklyEndTime;                         // 0x0230(0x0008) (Config)
	struct FName                                       LastSelectedPlaylist;                                     // 0x0238(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               LastSelectedFillOption;                                   // 0x0240(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	TMap<struct FName, struct FSavedCustomMatchOptions> CustomMatchOptions;                                       // 0x0248(0x0050) (ZeroConstructor, Config)
	struct FString                                     LastNewsVersionViewedBR;                                  // 0x0298(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastNewsVersionViewedSTW;                                 // 0x02A8(0x0010) (ZeroConstructor, Config)
	struct FString                                     LastPlaylistInfoVersionViewedBR;                          // 0x02B8(0x0010) (ZeroConstructor, Config)
	bool                                               bEulaAccepted;                                            // 0x02C8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x02C9(0x0007) MISSED OFFSET
	struct FString                                     EulaAcceptedUserId;                                       // 0x02D0(0x0010) (ZeroConstructor, Config)
	struct FDateTime                                   LastEulaCheckTime;                                        // 0x02E0(0x0008) (Config)
	struct FHUDLayoutData                              HUDLayoutData[0x3];                                       // 0x02E8(0x0010) (Config)
	struct FHUDLayoutUsageData                         HUDLayoutUsageData;                                       // 0x0318(0x0010) (Config)
	int                                                bTimesSeenBacchusLoadTutorial;                            // 0x0328(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasSeenTapToShoot;                                       // 0x032C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x032D(0x0003) MISSED OFFSET
	int                                                NumTimesSeeingPanningTip;                                 // 0x0330(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FFireModeData                               FireModeData;                                             // 0x0334(0x0005) (Config)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0339(0x0003) MISSED OFFSET
	struct FFortSimpleGameStats                        SimpleMobileStats;                                        // 0x033C(0x0018) (Config)
	int                                                InitialBenchmarkState;                                    // 0x0354(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableMouseAcceleration;                                // 0x0358(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ESavedAccountType                                  ChosenLoginType;                                          // 0x0359(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x035A(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnViewDistanceQualityChanged;                             // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShadowQualityChanged;                                   // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAntiAliasingQualityChanged;                             // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTextureQualityChanged;                                  // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEffectsQualityChanged;                                  // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPostProcessQualityChanged;                              // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData10[0x50];                                      // 0x03C0(0x0050) MISSED OFFSET
	TArray<struct FSavedCredentials>                   Credentials;                                              // 0x0410(0x0010) (ZeroConstructor, Config)
	int                                                SocialImportOptedOutVersion;                              // 0x0420(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                VKImportOptedOutVersion;                                  // 0x0424(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasSeenErebusSocialImport;                               // 0x0428(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	struct FDateTime                                   LastSocialImportPromptTime;                               // 0x0430(0x0008) (Config)
	int                                                SocialImportPromptCountCurrentVersion;                    // 0x0438(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                SocialImportPromptCountAllVersions;                       // 0x043C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                VKImportPromptCountCurrentVersion;                        // 0x0440(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                VKImportPromptCountAllVersions;                           // 0x0444(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSocialImportDisplayed;                                   // 0x0448(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMultiFactorAuthModalOpOut;                               // 0x0449(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x6];                                       // 0x044A(0x0006) MISSED OFFSET
	struct FDateTime                                   LastEnableMFAModalPromptTime;                             // 0x0450(0x0008) (Config)
	struct FDateTime                                   LastVKImportPromptTime;                                   // 0x0458(0x0008) (Config)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0460(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAllowVideoPlaybackChanged;                              // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bAllowLowPowerMode;                                       // 0x0478(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowVideoPlayback;                                      // 0x0479(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFortMobileFPSMode                                 MobileFPSMode;                                            // 0x047A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData14[0xFD];                                      // 0x047B(0x00FD) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameUserSettings");
		return ptr;
	}


	void ToggleScalabilityMode(EFortScalabilityMode Mode, bool bEnabled, bool bForceApply);
	void SetMobileFPSMode(EFortMobileFPSMode Mode);
	void SetHasSeenTapToShoot(bool bHasSeenIt);
	void SetHasSeenPanningTip(bool bHasSeenIt);
	void ResetToDefaultDeviceScalability();
	void ResetScalabilityModes();
	bool IsVideoPlaybackAllowed();
	bool GetHasSeenTapToShoot();
	bool GetHasSeenPanningTip();
	struct FFireModeData GetFireModeData();
};


// Class FortniteGame.FortGameViewportClient
// 0x0058 (0x0340 - 0x02E8)
class UFortGameViewportClient : public UGameViewportClient
{
public:
	struct FText                                       NetworkFailureMessage;                                    // 0x02E8(0x0018) (Transient)
	struct FString                                     NetworkFailureMessageAdditionalAnalyticsString;           // 0x0300(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0310(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGameViewportClient");
		return ptr;
	}

};


// Class FortniteGame.FortGiftBoxItem
// 0x0048 (0x0128 - 0x00E0)
class UFortGiftBoxItem : public UFortAccountItem
{
public:
	struct FGiftBoxInfo                                GiftBoxInfo;                                              // 0x00E0(0x0048) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGiftBoxItem");
		return ptr;
	}


	bool TryGetParamString(const struct FString& ParamName, struct FString* OutValue);
	bool TryGetParamInt(const struct FString& ParamName, int* OutValue);
	class UFortItemDefinition* RetrieveItemDefintionFromParam(const struct FString& ParamName);
	bool IsVisibleIn(ESubGame SubGame);
	bool HasParam(const struct FString& ParamName);
	bool HasAccountID();
	class UFortGiftBoxItemDefinition* GetGiftBoxDefinition();
	struct FText FormatTextUsingParams(const struct FText& FormatString);
	void FilterUserMessageForProfanity(int ControllerId, const struct FScriptDelegate& OnTextFiltered);
};


// Class FortniteGame.FortGiftBoxItemDefinition
// 0x00A0 (0x0430 - 0x0390)
class UFortGiftBoxItemDefinition : public UFortAccountItemDefinition
{
public:
	class UClass*                                      GiftBoxPreMessageWidget;                                  // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GiftBoxHeaderSubWidget;                                   // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       DefaultHeaderText;                                        // 0x03A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       DefaultBodyText;                                          // 0x03B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FString                                     HeaderAssetString;                                        // 0x03D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     BodyAssetString;                                          // 0x03E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	EFortGiftWrapType                                  GiftWrapType;                                             // 0x03F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	int                                                SortPriority;                                             // 0x03F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x03F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortGiftBoxItemDefinition.ItemDisplayAsset
	bool                                               bReuseExistingBoxIfPossible;                              // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ESubGame                                           RestrictToSubgame;                                        // 0x0421(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x0422(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGiftBoxItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortGliderAnimInstance
// 0x0060 (0x03D0 - 0x0370)
class UFortGliderAnimInstance : public UAnimInstance
{
public:
	class AFortPlayerParachute*                        OwnerGlider;                                              // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPawn*                             OwnerFortPawn;                                            // 0x0378(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAnimInput_Skydiving                    SkydivingState;                                           // 0x0380(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGliderAnimInstance");
		return ptr;
	}


	void SetGliderFullyDeployed(bool bIsFullyDeployed);
};


// Class FortniteGame.FortGlobalAbilityTargetingActor
// 0x0000 (0x0328 - 0x0328)
class AFortGlobalAbilityTargetingActor : public AInfo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGlobalAbilityTargetingActor");
		return ptr;
	}

};


// Class FortniteGame.FortGlobalEnvironmentAbilityActor
// 0x0018 (0x0340 - 0x0328)
class AFortGlobalEnvironmentAbilityActor : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortDamageSet*                              DamageSet;                                                // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGlobalEnvironmentAbilityActor");
		return ptr;
	}

};


// Class FortniteGame.FortGlobalEnvironmentAbilityActorAthena
// 0x0000 (0x0340 - 0x0340)
class AFortGlobalEnvironmentAbilityActorAthena : public AFortGlobalEnvironmentAbilityActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGlobalEnvironmentAbilityActorAthena");
		return ptr;
	}

};


// Class FortniteGame.FortGlobals
// 0x0198 (0x01C0 - 0x0028)
class UFortGlobals : public UObject
{
public:
	struct FString                                     LobbyMap;                                                 // 0x0028(0x0010) (ZeroConstructor, Config)
	int                                                MinTheaterListRefreshDelay;                               // 0x0038(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxTheaterListRefreshDelay;                               // 0x003C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MinCullObjectSize;                                        // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MinCullDistance;                                          // 0x0044(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxCullObjectSize;                                        // 0x0048(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxCullDistance;                                          // 0x004C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableNewCustomizationPanel;                             // 0x0050(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableInfluenceMap;                                      // 0x0051(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAIDespawning;                                      // 0x0052(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAutoSlotting;                                      // 0x0053(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableDBNO;                                              // 0x0054(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                MaxAssetsToPreload;                                       // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bOnlyPreloadCity;                                         // 0x005C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableInWorldScoreNumbers;                               // 0x005D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bMustUseToggleJetpackExecute;                             // 0x005E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableNewRewardFlow;                                     // 0x005F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableWIFE;                                              // 0x0060(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFrontendCrafting;                                  // 0x0061(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFrontendStorage;                                   // 0x0062(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableLazyASC;                                           // 0x0063(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFriendCodes;                                       // 0x0064(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	struct FLoginFailureLogSubmitOptions               LoginFailureOptions;                                      // 0x0068(0x0020) (Config)
	struct FPurchaseFailureLogSubmitOptions            RealMoneyPurchaseFailureOptions;                          // 0x0088(0x0020) (Config)
	bool                                               bSubmitReturnToMenuErrorLogs;                             // 0x00A8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                ReturnToMenuErrorLogTailKb;                               // 0x00AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ReturnToMenuErrorLogSubmitChance;                         // 0x00B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FPartyFailureLogSubmit                      PartyJoinFailureLogSubmit;                                // 0x00B8(0x0020) (Config)
	bool                                               bShowSkillTreeMovies;                                     // 0x00D8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowMissionResultsMovies;                                // 0x00D9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisablePlayerTeleportDuringMissionResults;               // 0x00DA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableParticleEffectsDuringMissionResults;              // 0x00DB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFlushGPUWhenPlayerIsTeleportedAtEndOfZone;               // 0x00DC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone;   // 0x00DD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTwitchEnabled;                                           // 0x00DE(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAccountLinkingEnabled;                                   // 0x00DF(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFortAccountLinkingUIConfig                        AccountLinkingUIConfig;                                   // 0x00E0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	struct FString                                     AccountLinkingUIURL;                                      // 0x00E8(0x0010) (ZeroConstructor, Config)
	bool                                               bEnableAccountLinkingUIURLButton;                         // 0x00F8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTwitchHeartbeatEnabled;                                  // 0x00F9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTwitchAllowDisplayViewernames;                           // 0x00FA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x00FB(0x0001) MISSED OFFSET
	int                                                MaxTwitchViewerNamesToCache;                              // 0x00FC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                TwitchViewerNameExpirationMinutes;                        // 0x0100(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MinTwitchHeartbeatInterval;                               // 0x0104(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TwitchAccountInformationRefreshInterval;                  // 0x0108(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowLogout;                                             // 0x010C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowQuit;                                               // 0x010D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasWorldMap;                                             // 0x010E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x010F(0x0001) MISSED OFFSET
	float                                              PlayerUnregistrationFailsafeTimer;                        // 0x0110(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PollForDedicatedServerReadyToShutdownInterval;            // 0x0114(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUploadAthenaStats;                                       // 0x0118(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUploadAthenaStatsV2;                                     // 0x0119(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableTimePlayedStat;                                   // 0x011A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaStatsFrontendEnabled;                              // 0x011B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaLeaderboardFrontEndEnabled;                        // 0x011C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaSquadQuickChatEnabled;                             // 0x011D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x011E(0x0002) MISSED OFFSET
	float                                              AthenaQuickChatRangeForNonSquadTeamMembers;               // 0x0120(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bGlobalLeaderboardsFrontEndEnabled;                       // 0x0124(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	int                                                TimeBetweenLeaderboardRequestsMinutes;                    // 0x0128(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFirstShotAccuracyDisabled;                               // 0x012C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaUsesSimCollision;                                  // 0x012D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaSimVehicles;                                       // 0x012E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaSubstepping;                                       // 0x012F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCampaignSubstepping;                                     // 0x0130(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCampaignUsesSimCollision;                                // 0x0131(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCampaignSimVehicles;                                     // 0x0132(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0133(0x0001) MISSED OFFSET
	float                                              MaximumCharacterVelocity;                                 // 0x0134(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x8];                                       // 0x0138(0x0008) MISSED OFFSET
	TArray<class UObject*>                             AthenaReferencedObjects;                                  // 0x0140(0x0010) (ZeroConstructor, Transient)
	int                                                NumOutstandingAthenaAsyncRequests;                        // 0x0150(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalAthenaAsyncRequests;                                 // 0x0154(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x28];                                      // 0x0158(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortGlobals.AthenaAlwaysLoadedContentHack
	bool                                               bAllowXboxStwToken;                                       // 0x0180(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUsePlatformProfanityFilterForChat;                       // 0x0181(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1E];                                      // 0x0182(0x001E) MISSED OFFSET
	TArray<struct FSubGameAccess>                      SubGameAccess;                                            // 0x01A0(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData13[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGlobals");
		return ptr;
	}


	bool STATIC_UninstallAllOnDemandChunks();
	bool STATIC_ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone();
	bool STATIC_ShouldShowSkillTreeMovies();
	bool STATIC_ShouldShowMissionResultsMovies();
	bool STATIC_ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone();
	bool STATIC_ShouldDisablePlayerTeleportDuringMissionResults();
	bool STATIC_ShouldDisableParticleEffectsDuringMissionResults();
	bool STATIC_IsWIFEEnabled();
	bool STATIC_IsTwitchEnabled();
	bool STATIC_IsTouchInputPlatform();
	bool STATIC_IsTencentBuild();
	bool STATIC_IsNewRewardFlowEnabled();
	bool STATIC_IsMobileGame(class UObject* WorldContextObject);
	bool STATIC_IsInSubGame(ESubGame SubGame);
	bool STATIC_IsInAthena();
	bool STATIC_IsFrontendStorageEnabled();
	bool STATIC_IsFrontendCraftingEnabled();
	bool STATIC_IsFirstShotAccuracyDisabled();
	bool STATIC_IsErebusWithVoice();
	bool STATIC_IsErebus();
	bool STATIC_IsDisplayingTwitchViewerNamesAllowed();
	bool STATIC_IsBROnly();
	bool STATIC_IsAllContentInstalled();
	bool STATIC_IsAccountLinkingUIURLButtonEnabled();
	bool STATIC_IsAccountLinkingEnabled();
	bool STATIC_InstallAllOnDemandChunks();
	EChunkInstallState STATIC_GetOnDemandChunksInstallState();
	int STATIC_GetMinTheaterListRefreshDelay();
	int STATIC_GetMaxTheaterListRefreshDelay();
	ESubGame STATIC_GetCurrentSubGame();
	struct FString STATIC_GetAccountLinkingUIURL();
	EFortAccountLinkingUIConfig STATIC_GetAccountLinkingUIConfig();
	bool STATIC_AreFriendCodesEnabled();
};


// Class FortniteGame.FortGoatVehicleAnimInstance
// 0x0010 (0x04C0 - 0x04B0)
class UFortGoatVehicleAnimInstance : public UFortVehicleAnimInstance
{
public:
	float                                              GolfCartSpeed;                                            // 0x04B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsNearlyZero;                                // 0x04B4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForwardSpeedIsGreaterThanOne;                            // 0x04B5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReverseSpeedIsGreaterThanOne;                            // 0x04B6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSpeedIsGreaterThanFiveAndPlayerHitSpace;                 // 0x04B7(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBraking;                                               // 0x04B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsEBraking;                                              // 0x04B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBoosting;                                              // 0x04BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPowerSliding;                                          // 0x04BB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayerHitSpaceBar;                                       // 0x04BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04BD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGoatVehicleAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortGoatVehicleConfigs
// 0x0118 (0x03F0 - 0x02D8)
class UFortGoatVehicleConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                              BounceCrouchTime;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceCrouchTimeDeadzone;                                 // 0x02DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceRecoilTime;                                         // 0x02E0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceForcePerMass;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMagnitude;                                   // 0x02E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMinMagnitude;                                // 0x02EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanLeftRightInterpolationPerSecond;             // 0x02F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanUpInterpolationPerSecond;                    // 0x02F4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDownInterpolationPerSecond;                  // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanResetInterpolationPerSecond;                 // 0x02FC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDeadzone;                                    // 0x0300(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HandBrakeForce;                                           // 0x0304(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinAngle;                                       // 0x0308(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinLateralSpeedForPowerSlideBoost;                        // 0x030C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxAccumulatedPowerSlideBoost;                            // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET
	TArray<struct FGoatVehicleBoostLevel>              PowerSlideBoostAccumulationSteps;                         // 0x0318(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	float                                              PowerSlideAccumulationMultiplier;                         // 0x0328(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideTopSpeedMultiplier;                             // 0x032C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideTopSpeedInAirMultiplier;                        // 0x0330(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideStrength;                                       // 0x0334(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinAngularSpeed;                                // 0x0338(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMaxAngularSpeed;                                // 0x033C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplier;                                  // 0x0340(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCooldown;                                            // 0x0344(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplierRampTime;                          // 0x0348(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSlowExtraStrength;                                   // 0x034C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinForwardSpeedBoostExtraStrength;                        // 0x0350(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedForceMultiplier;                             // 0x0354(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehiclePowerSlideFrontMultiplier;                         // 0x0358(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehiclePowerSlideRearMultiplier;                          // 0x035C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinPushForce;                                   // 0x0360(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMin;                                  // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMax;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SpringFudgeFactor;                                        // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeNormalizedSpeed;                               // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeSpeedCurvePow;                                 // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideShakeMultiplierMin;                             // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideShakeMultiplierMax;                             // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostingCameraShakeAmount;                                // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraShakeFrequency;                                // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMin;                             // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMax;                             // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PowerSlideMinSpringCompression;                           // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMin;                                  // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMax;                                  // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraShakeMultiplier;                           // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeYawFrequencyMultiplier;                        // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                WheelSlideBoostColorWhenNotPowerSliding;                  // 0x03A4(0x0010) (Edit, BlueprintVisible, Config, IsPlainOldData)
	float                                              TreadWidth;                                               // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              RumbleMultiplier;                                         // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SparksRumbleMultiplier;                                   // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraOffset;                                        // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSCameraDistance;                                        // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraOffset;                                    // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSInterpSpeed;                                           // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionTraceAheadAmount;                              // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionImpulseAmount;                                 // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     DestructionTraceHalfSize;                                 // 0x03D8(0x000C) (Edit, BlueprintVisible, Config, IsPlainOldData)
	bool                                               bCanDestroyProps;                                         // 0x03E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03E5(0x0003) MISSED OFFSET
	float                                              HitRequiredMinSpeed;                                      // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyProp;                                   // 0x03EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGoatVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortGuidedMissilePackSet
// 0x00A0 (0x00D0 - 0x0030)
class UFortGuidedMissilePackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  MaxMissiles;                                              // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Missiles;                                                 // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveMaxMissiles;                                       // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveMissiles;                                          // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReloadDelay;                                              // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortGuidedMissilePackSet");
		return ptr;
	}

};


// Class FortniteGame.FortHealing
// 0x0000 (0x0040 - 0x0040)
class UFortHealing : public UFortGameplayEffectExecutionCalculation
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHealing");
		return ptr;
	}

};


// Class FortniteGame.FortHealthBarComponent
// 0x0050 (0x0290 - 0x0240)
class UFortHealthBarComponent : public USceneComponent
{
public:
	struct FText                                       DisplayText;                                              // 0x0240(0x0018) (Edit, Net, DisableEditOnInstance)
	bool                                               bIsHealthBarVisible;                                      // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x025C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ScaleOverDistanceCurve;                                   // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClampToScreen;                                           // 0x0268(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowClampToScreenArrow;                                  // 0x0269(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x026A(0x0006) MISSED OFFSET
	class UCurveLinearColor*                           HealthBarColorCurve;                                      // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0278(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHealthBarComponent");
		return ptr;
	}


	void SetHealthBarWidgetVisibility(bool bIsVisible);
	void SetHealthBarVisibility(bool bNewVisibleState);
	void SetHealthBarDisplayText(const struct FText& NewDisplayText);
	void OnRep_IsVisible();
	void OnRep_DisplayText();
	struct FText GetHealthBarDisplayText();
};


// Class FortniteGame.FortSlateHUDIndicator
// 0x0038 (0x0088 - 0x0050)
class UFortSlateHUDIndicator : public UFortIndicator
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	bool                                               bClampToScreen;                                           // 0x0058(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowClampToScreenArrow;                                  // 0x0059(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2E];                                      // 0x005A(0x002E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSlateHUDIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortHealthBarIndicator
// 0x0038 (0x00C0 - 0x0088)
class UFortHealthBarIndicator : public UFortSlateHUDIndicator
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0088(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHealthBarIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortHelpItem
// 0x00E0 (0x0110 - 0x0030)
class UFortHelpItem : public UDataAsset
{
public:
	EFortHelpItemType                                  ItemType;                                                 // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FName                                       ItemId;                                                   // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       HeaderName;                                               // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       BodyText;                                                 // 0x0058(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortHelpAdditionalContent                  AdditionalContent;                                        // 0x0070(0x00A0) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHelpItem");
		return ptr;
	}


	TArray<class UFortHelpItem*> GetSubItems();
	class UFortHelpItem* GetItemWithID(const struct FName& _ItemID);
};


// Class FortniteGame.FortHelpItemCategory
// 0x0020 (0x0130 - 0x0110)
class UFortHelpItemCategory : public UFortHelpItem
{
public:
	TArray<class UFortHelpItem*>                       AssetSubItems;                                            // 0x0110(0x0010) (Edit, ZeroConstructor)
	TArray<class UFortHelpItem*>                       InlineSubItems;                                           // 0x0120(0x0010) (Edit, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHelpItemCategory");
		return ptr;
	}

};


// Class FortniteGame.FortHelpItemEntry
// 0x0000 (0x0110 - 0x0110)
class UFortHelpItemEntry : public UFortHelpItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHelpItemEntry");
		return ptr;
	}

};


// Class FortniteGame.FortWorker
// 0x00B0 (0x01A8 - 0x00F8)
class UFortWorker : public UFortCharacter
{
public:
	struct FString                                     slotted_building_id;                                      // 0x00F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                building_slot_used;                                       // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Gender;                                                   // 0x010C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     personality;                                              // 0x0110(0x0010) (ZeroConstructor)
	struct FString                                     set_bonus;                                                // 0x0120(0x0010) (ZeroConstructor)
	struct FString                                     Portrait;                                                 // 0x0130(0x0010) (ZeroConstructor)
	struct FGameplayTagContainer                       PersonalityTag;                                           // 0x0140(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagContainer                       SetBonusTag;                                              // 0x0160(0x0020) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0180(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorker.IconDefinition

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorker");
		return ptr;
	}


	class UFortWorkerType* GetWorkerTypeBP();
};


// Class FortniteGame.FortHero
// 0x0070 (0x0218 - 0x01A8)
class UFortHero : public UFortWorker
{
public:
	struct FString                                     hero_name;                                                // 0x01A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             equipped_cosmetics;                                       // 0x01B8(0x0010) (ZeroConstructor)
	TArray<struct FFortSavedModeLoadout>               mode_loadouts;                                            // 0x01C8(0x0010) (ZeroConstructor)
	TArray<class UFortHeroSpecialization*>             Specializations;                                          // 0x01D8(0x0010) (ZeroConstructor)
	TArray<class UFortAbilityKit*>                     SpecializationAbilityKits;                                // 0x01E8(0x0010) (ZeroConstructor)
	class UFortCharacterCosmeticItem*                  CosmeticItem;                                             // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UCustomCharacterPart*>                CharacterParts;                                           // 0x0200(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHero");
		return ptr;
	}


	bool IsLevelClamped();
	int GetUnclampedLevel();
	class UFortHeroType* GetHeroTypeBP();
};


// Class FortniteGame.FortHeroClassGameplayDefinition
// 0x0068 (0x0098 - 0x0030)
class UFortHeroClassGameplayDefinition : public UPrimaryDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortHeroClassGameplayDefinition.OverridePawnClass
	struct FGameplayTagContainer                       HeroClassTags;                                            // 0x0058(0x0020) (Edit, DisableEditOnInstance)
	struct FDataTableRowHandle                         LegacyStatHandle;                                         // 0x0078(0x0010) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortHeroClassGameplayDefinition.ClassAbilityKits

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroClassGameplayDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortHeroCosmeticDefinition
// 0x0000 (0x0030 - 0x0030)
class UFortHeroCosmeticDefinition : public UPrimaryDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroCosmeticDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortHeroData
// 0x0070 (0x00A0 - 0x0030)
class UFortHeroData : public UPrimaryDataAsset
{
public:
	struct FText                                       DefaultHeroName;                                          // 0x0030(0x0018) (Edit)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroData.DefaultHero
	struct FHeroPerkDefaultRequirements                CommanderPerkDefaultRequirements;                         // 0x0070(0x000C) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<struct FGameplayEffectApplicationInfo>      CombinedStatGEs;                                          // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FHeroSubclassAttributeData>          HeroAttributeDataForSubclasses;                           // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroData");
		return ptr;
	}

};


// Class FortniteGame.FortHeroExhibitActor
// 0x0010 (0x0380 - 0x0370)
class AFortHeroExhibitActor : public AFortExhibitActor
{
public:
	class AFortPlayerPawn*                             HeroExhibitPawn;                                          // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0378(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroExhibitActor");
		return ptr;
	}

};


// Class FortniteGame.FortHeroGameplayDefinition
// 0x01C0 (0x01F0 - 0x0030)
class UFortHeroGameplayDefinition : public UPrimaryDataAsset
{
public:
	bool                                               bEnabled;                                                 // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0031(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroGameplayDefinition.HeroClassGameplayDefinition
	struct FGameplayTagContainer                       HeroBaseStatlineTags;                                     // 0x0060(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       HeroTags;                                                 // 0x0080(0x0020) (Edit, DisableEditOnInstance)
	TArray<struct FFortHeroTierAbilityKit>             TierAbilityKits;                                          // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FFortHeroGameplayPiece                      HeroPerk;                                                 // 0x00B0(0x0080) (Edit, DisableEditOnInstance)
	struct FFortHeroGameplayPiece                      CommanderPerk;                                            // 0x0130(0x0080) (Edit, DisableEditOnInstance)
	struct FFortHeroLeaderPerk                         LeaderPerk;                                               // 0x01B0(0x0040) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroGameplayDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortHeroSpecialization
// 0x0238 (0x0268 - 0x0030)
class UFortHeroSpecialization : public UPrimaryDataAsset
{
public:
	TArray<struct FFortSpecializationSlot>             SpecializationSlots;                                      // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortSpecializationSlot>             TacticalAbilitySlots;                                     // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortSpecializationSlot>             SupportAbilitySlots;                                      // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroSpecialization.CosmeticItem
	unsigned char                                      UnknownData01[0x10];                                      // 0x0088(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortHeroSpecialization.CharacterParts
	TEnumAsByte<EFortAlteration>                       AlterationType;                                           // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<struct FHeroSpecializationAttributeRequirement> AttributeRequirements;                                    // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                       RequiredTags;                                             // 0x00B0(0x0020) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 CardIconBrush[0x3];                                       // 0x00D0(0x0088) (Edit, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroSpecialization");
		return ptr;
	}

};


// Class FortniteGame.FortHeroTooltip
// 0x0000 (0x00B0 - 0x00B0)
class UFortHeroTooltip : public UFortCharacterTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWorkerType
// 0x00A0 (0x0430 - 0x0390)
class UFortWorkerType : public UFortCharacterType
{
public:
	TEnumAsByte<EFortCustomGender>                     Gender;                                                   // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0391(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWorkerType.FixedPortrait
	bool                                               bIsManager;                                               // 0x03C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03C1(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       ManagerSynergyTag;                                        // 0x03C8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                       FixedPersonalityTag;                                      // 0x03E8(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       FixedSetBonusTag;                                         // 0x0408(0x0020) (Edit, DisableEditOnInstance)
	int                                                MatchingPersonalityBonus;                                 // 0x0428(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MismatchingPersonalityPenalty;                            // 0x042C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorkerType");
		return ptr;
	}

};


// Class FortniteGame.FortHeroType
// 0x01E0 (0x0610 - 0x0430)
class UFortHeroType : public UFortWorkerType
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0430(0x0028) MISSED OFFSET
	unsigned char                                      UnknownData01[0x10];                                      // 0x0430(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortHeroType.Specializations
	unsigned char                                      UnknownData02[0x28];                                      // 0x0468(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroType.DefaultMontageLookupTable
	unsigned char                                      UnknownData03[0x28];                                      // 0x0490(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroType.OverrideMontageLookupTable
	TArray<struct FHeroAbilityKit>                     AbilityKits;                                              // 0x04B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FGameplayEffectApplicationInfo>      CombinedStatGEs;                                          // 0x04C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FHeroItem>                           HeroItems;                                                // 0x04D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FGameplayTagContainer                       RequiredGPTags;                                           // 0x04E8(0x0020) (Edit)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0508(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroType.MaleOverrideFeedback
	unsigned char                                      UnknownData05[0x28];                                      // 0x0530(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroType.FemaleOverrideFeedback
	unsigned char                                      UnknownData06[0x28];                                      // 0x0558(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortHeroType.OverridePawnClass
	unsigned char                                      UnknownData07[0x28];                                      // 0x0580(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortHeroType.HeroGameplayDefinition
	unsigned char                                      UnknownData08[0x28];                                      // 0x05A8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortHeroType.FrontEndAnimClass
	struct FText                                       SubType;                                                  // 0x05D0(0x0018) (Edit)
	struct FFortAttributeInitializationKey             AttributeInitKey;                                         // 0x05E8(0x0010) (Edit, DisableEditOnInstance)
	struct FDataTableRowHandle                         LegacyStatHandle;                                         // 0x05F8(0x0010) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x8];                                       // 0x0608(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHeroType");
		return ptr;
	}


	struct FText GetSubType();
	class UFortFeedbackBank* GetMaleOverrideFeedback();
	class UClass* GetFrontendAnimClass();
	class UFortFeedbackBank* GetFemaleOverrideFeedback();
};


// Class FortniteGame.FortHexMapMarkerBase
// 0x0020 (0x0348 - 0x0328)
class AFortHexMapMarkerBase : public AActor
{
public:
	TArray<class UMaterialInstanceDynamic*>            CurrentMIDs;                                              // 0x0328(0x0010) (ZeroConstructor, Transient)
	class UAnimationAsset*                             IdleAnimation;                                            // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                        // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHexMapMarkerBase");
		return ptr;
	}

};


// Class FortniteGame.FortStaticMeshActor
// 0x0018 (0x0350 - 0x0338)
class AFortStaticMeshActor : public AStaticMeshActor
{
public:
	TArray<class UNavRelevantComponent*>               LinkComps;                                                // 0x0338(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               bUseAutoNavmeshFlags;                                     // 0x0348(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0349(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshActor");
		return ptr;
	}

};


// Class FortniteGame.FortHLODSMActor
// 0x0018 (0x0368 - 0x0350)
class AFortHLODSMActor : public AFortStaticMeshActor
{
public:
	struct FName                                       ActorFName;                                               // 0x0350(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     UniqueWorldLocation;                                      // 0x0358(0x000C) (Edit, EditConst, IsPlainOldData)
	bool                                               bIsDynamic;                                               // 0x0364(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0365(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHLODSMActor");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseBannerColorItem
// 0x0008 (0x00E8 - 0x00E0)
class UFortHomebaseBannerColorItem : public UFortAccountItem
{
public:
	struct FName                                       ColorRowName;                                             // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBannerColorItem");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseBannerColorItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortHomebaseBannerColorItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBannerColorItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseBannerColorMap
// 0x0050 (0x0080 - 0x0030)
class UFortHomebaseBannerColorMap : public UDataAsset
{
public:
	TMap<struct FName, struct FHomebaseBannerColor>    ColorMap;                                                 // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBannerColorMap");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseBannerIconItem
// 0x0008 (0x00E8 - 0x00E0)
class UFortHomebaseBannerIconItem : public UFortAccountItem
{
public:
	struct FName                                       BannerRowName;                                            // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBannerIconItem");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseBannerIconItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortHomebaseBannerIconItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseBannerIconItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortAsyncAction_HomebaseContextPurchaseNode
// 0x0030 (0x0060 - 0x0030)
class UFortAsyncAction_HomebaseContextPurchaseNode : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnMCPPurchaseSucceeded;                                   // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMCPPurchaseFailed;                                      // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UHomeBaseContext>             HomeBaseContext;                                          // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       IdOfNodeToPurchase;                                       // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_HomebaseContextPurchaseNode");
		return ptr;
	}


	class UFortAsyncAction_HomebaseContextPurchaseNode* STATIC_PurchaseNode(class UHomeBaseContext* HomeBaseContext, const struct FName& IdOfNodeToPurchase);
	void OnMCPRequestComplete__DelegateSignature();
};


// Class FortniteGame.HomeBaseContext
// 0x0098 (0x00C0 - 0x0028)
class UHomeBaseContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnWorkerPreviewStateChanged;                              // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHomebaseInventoryUpdated;                               // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMaximumItemLevelChanged;                                // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUpgradePointsChanged;                               // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    SquadSlotMarkedAsSeen;                                    // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0078(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerInfoChangedDelegate;                              // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemSlottingPreviewInfoChangedEvent;                    // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.HomeBaseContext");
		return ptr;
	}


	bool TryGetHomebaseSquadData(const struct FName& SquadId, struct FHomebaseSquad* OutHomebaseSquad);
	bool TryGetHomebaseNodePageData(const struct FName& NodePageId, struct FHomebaseNodePage* OutHomebaseNodePage);
	bool TryGetHomebaseNodeData(const struct FName& NodeID, struct FHomebaseNode* OutHomebaseNode);
	struct FName GetUnlockingHomebaseNodeIdForSquadSlot(const struct FName& SquadId, int SquadSlotIndex);
	int GetTotalSkillPointsEarned();
	bool GetTotalHomebaseRating(const struct FUniqueNetIdRepl& UniqueId, int* Rating, float* ProgressFraction);
	bool GetTeamHomebaseRating(const struct FUniqueNetIdRepl& PlayerID, int* Rating, float* ProgressFraction);
	void STATIC_GetStaticSetBonusData(const struct FGameplayTag& InSetBonusTag, struct FWorkerSetBonusData* OutSetBonusData, struct FFortMultiSizeBrush* OutBrush);
	void GetResourceCollectorRewardsEstimates(TArray<class UFortCollectedResourceItem*> CollectorTypes, TArray<struct FFortItemQuantityPair>* OutEstimates);
	void GetResourceCollectorRewardsEstimate(class UFortCollectedResourceItem* CollectorType, struct FFortItemQuantityPair* OutEstimate);
	void GetResourceCollectorRateInfo(class UFortCollectedResourceItem* CollectorType, float* RatePerSecond, int* MaxCapacity);
	int GetNumAccountLimitedItems();
	struct FName GetNodePageIdForHomebaseNode(const struct FName& NodeID);
	bool GetLocalTeamHomebaseRating(int* Rating, float* ProgressFraction);
	bool GetLocalPlayerHomebaseRating(int* Rating, float* ProgressFraction);
	void GetAllResourceCollectorRewardEstimates(TArray<struct FFortItemQuantityPair>* OutEstimates);
	struct FName GetActiveDefenderSquadId();
	struct FName GetActiveCombatSquadId();
	void BroadcastSquadSlotMarkedAsSeen();
};


// Class FortniteGame.FortHomebaseManager
// 0x02A8 (0x02D8 - 0x0030)
class UFortHomebaseManager : public UDataAsset
{
public:
	struct FName                                       EarlyGameStartingNodePageId;                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EarlyGameStartingNodeId;                                  // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RequiredNumberOfNodesToLeaveEarlyGame;                    // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FName                                       StartingNodePageId;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartingNodeId;                                           // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  HomebaseNodePageDataTable;                                // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  HomebaseNodeDataTable;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  HomebaseNodeDataTableV2;                                  // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortHomebaseNodeGameplayEffectDataTable*    HomebaseNodeGameplayEffectDataTable;                      // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveTable*                                 ResearchSystemUpgradesTable;                              // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlateColor                                 QuestNodeTintColour;                                      // 0x0080(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UDataTable*                                  HomebaseSquadDataTable;                                   // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  ExpeditionSlotsDataTable;                                 // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveTable*                                 ManagerSquadSynergyBonusTable;                            // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SquadGE;                                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FWorkerPersonalityData>              WorkerPersonalities;                                      // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FWorkerSetBonusData>                 WorkerSetBonuses;                                         // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FManagerSynergyData>                 ManagerSynergies;                                         // 0x00E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x1E0];                                     // 0x00F8(0x01E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseManager");
		return ptr;
	}


	bool IsSquadSlotUnlocked(const struct FName& SquadId, int SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	bool IsNodeOwned(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
	class UFortWorker* GetWorkerInSquadSlot(const struct FName& SquadId, int SlotIdx, class UFortMcpProfileCampaign* McpProfile);
	void GetSquadPopulation(const struct FName& SquadId, class UFortMcpProfileCampaign* McpProfile, TArray<class UFortWorker*>* OutSquadMembers);
	bool GetSquadCopyById(const struct FName& SquadId, struct FHomebaseSquad* OutSquad);
	struct FText GetPrereqNodeTypeName(EPrereqNodeType NodeType);
	TArray<struct FName> GetOwnedNodes(class UFortMcpProfileCampaign* McpProfile);
	int GetNumWorldInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	int GetNumOwnedNodesInPage(const struct FName& NodePageId, class UFortMcpProfileCampaign* McpProfile, EPrereqNodeType NodeType);
	int GetNumAccountLimitedItems(class UFortMcpProfileCampaign* McpProfile);
	int GetNumAccountInventoryBonusTokens(class UFortMcpProfileCampaign* McpProfile);
	struct FString GetNodeInstanceIdByNodeId(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
	struct FString STATIC_GetHomebaseName(class UFortMcpProfileCommonPublic* McpProfile);
	bool AreNodeQuestReqsMet(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
	bool AreNodePrereqsMet(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
	bool AreNodeCostsMetV2(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
	bool AreNodeCostsMet(const struct FName& NodeID, class UFortMcpProfileCampaign* McpProfile);
};


// Class FortniteGame.FortHomebaseNodeGameplayEffectDataTable
// 0x0010 (0x00B0 - 0x00A0)
class UFortHomebaseNodeGameplayEffectDataTable : public UDataTable
{
public:
	TArray<class UClass*>                              TemplateAttributeGEs;                                     // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseNodeGameplayEffectDataTable");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseNodeItem
// 0x0028 (0x0108 - 0x00E0)
class UFortHomebaseNodeItem : public UFortAccountItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00E0(0x0008) MISSED OFFSET
	struct FDataTableRowHandle                         NodeReference;                                            // 0x00E8(0x0010)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseNodeItem");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseNodeItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortHomebaseNodeItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseNodeItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseNodeItemTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortHomebaseNodeItemTooltip : public UFortItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseNodeItemTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortHomebaseSet
// 0x0468 (0x0498 - 0x0030)
class UFortHomebaseSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  Keep_Level;                                               // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_AmmoStash_Level;                                     // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_Armory_Level;                                        // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_Medical_Level;                                       // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_Storage_Level;                                       // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_Workshop_Level;                                      // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_StructureCap;                                        // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Keep_PermaniteCap;                                        // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Manor_Level;                                              // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Manor_StructureCap;                                       // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  InventorySizeBonus;                                       // 0x0170(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WorldInventorySizeBonus;                                  // 0x0190(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StorageInventorySizeBonus;                                // 0x01B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ResearchPointMaxBonus;                                    // 0x01D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Global;                                     // 0x01F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Schematics;                                 // 0x0210(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Schematics_Ranged;                          // 0x0230(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Schematics_Melee;                           // 0x0250(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Schematics_Traps;                           // 0x0270(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Personnel;                                  // 0x0290(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxLevelBonus_Alterations;                                // 0x02B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  rate_per_second_collector_Token_collectionresource_nodegatetoken01;// 0x02D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  max_capacity_collector_Token_collectionresource_nodegatetoken01;// 0x02F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SupplyDrop_Magnitude;                                     // 0x0310(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SupplyDrop_Level;                                         // 0x0330(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ExpeditionSquadOne_Power;                                 // 0x0350(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ExpeditionSquadTwo_Power;                                 // 0x0370(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ExpeditionSquadThree_Power;                               // 0x0390(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ExpeditionSquadFour_Power;                                // 0x03B0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ExpeditionSquadFive_Power;                                // 0x03D0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ExpeditionSquadSix_Power;                                 // 0x03F0(0x0020) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x88];                                      // 0x0410(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomebaseSet");
		return ptr;
	}


	void OnRep_WorldInventorySizeBonus();
	void OnRep_SupplyDrop_Magnitude();
	void OnRep_SupplyDrop_Level();
	void OnRep_StorageInventorySizeBonus();
	void OnRep_ResearchPointMaxBonus();
	void OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_MaxLevelBonus_Schematics_Traps();
	void OnRep_MaxLevelBonus_Schematics_Ranged();
	void OnRep_MaxLevelBonus_Schematics_Melee();
	void OnRep_MaxLevelBonus_Schematics();
	void OnRep_MaxLevelBonus_Personnel();
	void OnRep_MaxLevelBonus_Global();
	void OnRep_MaxLevelBonus_Alterations();
	void OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01();
	void OnRep_Manor_StructureCap();
	void OnRep_Manor_Level();
	void OnRep_Keep_Workshop_Level();
	void OnRep_Keep_StructureCap();
	void OnRep_Keep_Storage_Level();
	void OnRep_Keep_PermaniteCap();
	void OnRep_Keep_Medical_Level();
	void OnRep_Keep_Level();
	void OnRep_Keep_Armory_Level();
	void OnRep_Keep_AmmoStash_Level();
	void OnRep_InventorySizeBonus();
};


// Class FortniteGame.FortHomeTeleporterInterface
// 0x0000 (0x0028 - 0x0028)
class UFortHomeTeleporterInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHomeTeleporterInterface");
		return ptr;
	}


	void OnHomeTeleporterUnboundServer(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterUnbound(class AFortPlayerPawn* PlayerPawn, class AActor* NewHomeActor);
	void OnHomeTeleporterBoundServer(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
	void OnHomeTeleporterBound(class AFortPlayerPawn* PlayerPawn, class AActor* OldHomeActor);
};


// Class FortniteGame.FortHotfixManager
// 0x0008 (0x0238 - 0x0230)
class UFortHotfixManager : public UOnlineHotfixManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0230(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHotfixManager");
		return ptr;
	}

};


// Class FortniteGame.FortHoverboardCameraMode
// 0x0000 (0x0C20 - 0x0C20)
class UFortHoverboardCameraMode : public UFortCameraMode_ThirdPerson
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHoverboardCameraMode");
		return ptr;
	}

};


// Class FortniteGame.FortSpectatorCameraComponent
// 0x00C0 (0x0930 - 0x0870)
class UFortSpectatorCameraComponent : public UCineCameraComponent
{
public:
	class AFortPlayerControllerSpectating*             SpectatorController;                                      // 0x0870(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      IntendedViewTarget;                                       // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x74];                                      // 0x0880(0x0074) MISSED OFFSET
	unsigned char                                      UnknownData01 : 2;                                        // 0x08F4(0x0001)
	unsigned char                                      bManualExposureControl : 1;                               // 0x08F4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bManualFocusControl : 1;                                  // 0x08F4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x08F5(0x0003) MISSED OFFSET
	float                                              ManualExposureBias;                                       // 0x08F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ManualFocusDistance;                                      // 0x08FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveVector*                                ScreenFringeFOVCurve;                                     // 0x0900(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ZoomRate;                                                 // 0x0908(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocalLengthInterpSpeed;                                   // 0x090C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0910(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpectatorCameraComponent");
		return ptr;
	}


	void ShowFocusPlane(bool bShow);
	void SetManualFocusDistance(float NewFocusDist);
	void SetManualExposure(float NewExposureBias);
	void SetFocalLength(float NewFocalLength, bool bImmediate);
	void SetAutoFocus();
	void SetAutoExposure();
	float GetAutoCameraCutDistanceThreshold();
};


// Class FortniteGame.FortHoverDroneCameraComponent
// 0x0050 (0x0980 - 0x0930)
class UFortHoverDroneCameraComponent : public UFortSpectatorCameraComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0930(0x0010) MISSED OFFSET
	float                                              DroneTiltInterpSpeed_Accel;                               // 0x0940(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DroneTiltInterpSpeed_Decel;                               // 0x0944(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0948(0x000C) MISSED OFFSET
	struct FVector                                     TiltUpVector;                                             // 0x0954(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0960(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHoverDroneCameraComponent");
		return ptr;
	}

};


// Class FortniteGame.FortHUDTargetUnderReticleInterface
// 0x0000 (0x0028 - 0x0028)
class UFortHUDTargetUnderReticleInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHUDTargetUnderReticleInterface");
		return ptr;
	}


	struct FText GetHUDTargetUpgradeDisplayName();
	float GetHUDTargetHealthPercentage();
	struct FText GetHUDTargetDisplayName();
	TArray<struct FText> GetHUDTargetDisplayModifiers();
	float GetHUDTargetDifficultyRating();
};


// Class FortniteGame.FortHuskAnimInstance
// 0x0050 (0x0490 - 0x0440)
class UFortHuskAnimInstance : public UFortAIAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0440(0x0004) MISSED OFFSET
	float                                              FallAsleepAnimDuration;                                   // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AltFallAsleepAnimDuration;                                // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WakeUpAnimDuration;                                       // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FallAsleepToSleepingCrossfade;                            // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WakeUpToIdleCrossfade;                                    // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultToDwarfScaleRatio;                                 // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LookAtAlpha;                                              // 0x045C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LookAtInterpSpeed;                                        // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AdjustedLowerBodyWeight;                                  // 0x0464(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AdjustedLowerBodyInterpSpeed;                             // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RunPlayRate;                                              // 0x046C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ZapperOverrideWeight;                                     // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RunStartPosition;                                         // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredJogSpeed;                                         // 0x0478(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MovementStyleIsWalking;                                   // 0x047C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bForceFullBodyMontage : 1;                                // 0x0480(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bIsDwarf : 1;                                             // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsZapper : 1;                                            // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_IdleToMove : 1;                           // 0x0480(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_IdleToFallAsleep : 1;                     // 0x0480(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_IdleToStunned : 1;                        // 0x0480(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_IdleToKnockedbackDown : 1;                // 0x0480(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_IdleToKnockedbackUp : 1;                  // 0x0480(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_MoveToIdle : 1;                           // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_FallAsleepToSleeping : 1;                 // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_SleepingToWakeUp : 1;                     // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_WakeUpToIdle : 1;                         // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_StunnedToIdle : 1;                        // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_KnockedbackDownToIdle : 1;                // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      StateTransition_KnockedbackUpToKnockedbackDown : 1;       // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0xE];                                       // 0x0482(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHuskAnimInstance");
		return ptr;
	}


	void SetHuskAnimType(EFortHuskAnimType NewHuskAnimType);
	EFortHuskAnimType GetHuskAnimType();
	void AnimNotify_SleepingFullyBlended(class UAnimNotify* Notify);
};


// Class FortniteGame.FortIndicatorManager
// 0x0020 (0x0048 - 0x0028)
class UFortIndicatorManager : public UObject
{
public:
	TArray<class UFortIndicator*>                      AllIndicators;                                            // 0x0028(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortMiniMapIndicator*>               MiniMapIndicators;                                        // 0x0038(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIndicatorManager");
		return ptr;
	}

};


// Class FortniteGame.FortInescapableZoneTracker
// 0x0040 (0x0068 - 0x0028)
class UFortInescapableZoneTracker : public UObject
{
public:
	class AFortNavigationGraph*                        NavGraph;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0030(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInescapableZoneTracker");
		return ptr;
	}

};


// Class FortniteGame.FortInfluenceMap
// 0x00D0 (0x00F8 - 0x0028)
class UFortInfluenceMap : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0028(0x00B8) MISSED OFFSET
	class AFortNavigationGraph*                        GraphData;                                                // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00E8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInfluenceMap");
		return ptr;
	}


	void STATIC_K2_GetInfluenceSourcePositions(class UObject* WorldContext, TArray<struct FVector>* InfluenceSourcePositions);
	void STATIC_K2_AddInfluenceSource(class UObject* WorldContext, const struct FVector& Position, const struct FString& SourceName, float Strength);
};


// Class FortniteGame.FortInGameMapManager
// 0x0150 (0x0478 - 0x0328)
class AFortInGameMapManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET
	TArray<struct FTeamMapInfo>                        MapData;                                                  // 0x0340(0x0010) (Net, ZeroConstructor)
	float                                              DelayBetweenDispersions;                                  // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExploredRadius;                                           // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExploredFalloffRadius;                                    // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SeenRadius;                                               // 0x035C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SeenFalloffRadius;                                        // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VisibilityMaxGradient;                                    // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                UnexploredOpacity;                                        // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetZ;                                                  // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MapLayerSize;                                             // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullscreenMapZoom;                                        // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     MapMargin;                                                // 0x0378(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                IconVisibilityFogThreshold;                               // 0x0388(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	class UClass*                                      SceneCaptureClass;                                        // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SceneCaptureBlurryClass;                                  // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          MapMaterial;                                              // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCurveTableRowHandle                        CloudBrightnessCurve;                                     // 0x03A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCurveTableRowHandle                        DesaturationFactorCurve;                                  // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              MapOpacityWhenWalking;                                    // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxPercentageMapExplored;                                 // 0x03CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MapExplorationThresholdPercentage;                        // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LastMapExplorationThresholdPercentageReached;             // 0x03D4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnMapFullyExplored;                                       // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMapExplorationThresholdReached;                         // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ASceneCapture2D*                             SceneCapture;                                             // 0x03F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ASceneCapture2D*                             SceneCaptureBlurry;                                       // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0408(0x0020) MISSED OFFSET
	class UTexture2D*                                  FogMask;                                                  // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x44];                                      // 0x0430(0x0044) MISSED OFFSET
	float                                              MapWorldScale;                                            // 0x0474(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInGameMapManager");
		return ptr;
	}


	void PaintOnFog(const struct FVector& WorldCoords, TEnumAsByte<EFortTeam> Team);
	void OnRep_MapData();
	class AFortInGameMapManager* STATIC_GetCurrent(class UObject* WorldContextObject);
	void BroadcastExplorationEvents(TArray<struct FTeamMapExplorationEvent> Events);
};


// Class FortniteGame.FortInGameMapManagerAthena
// 0x0018 (0x0490 - 0x0478)
class AFortInGameMapManagerAthena : public AFortInGameMapManager
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0478(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInGameMapManagerAthena");
		return ptr;
	}

};


// Class FortniteGame.FortIngredientItemDefinition
// 0x0000 (0x08D0 - 0x08D0)
class UFortIngredientItemDefinition : public UFortWorldItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIngredientItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortInitializationInterface
// 0x0000 (0x0028 - 0x0028)
class UFortInitializationInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInitializationInterface");
		return ptr;
	}


	void WorldReady();
	bool NeedsWorldReady();
	void MatchStarted();
};


// Class FortniteGame.FortInitializeFromObjectInterface
// 0x0000 (0x0028 - 0x0028)
class UFortInitializeFromObjectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInitializeFromObjectInterface");
		return ptr;
	}


	void InitFromObject(class UObject* InitObject);
};


// Class FortniteGame.FortInputData
// 0x0900 (0x0930 - 0x0030)
class UFortInputData : public UPrimaryDataAsset
{
public:
	struct FName                                       ConfigDName;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigEName;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigFName;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigGName;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigDAthenaName;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigEAthenaName;                                        // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigFAthenaName;                                        // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigGAthenaName;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConfigCustomAthenaName;                                   // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility1Name;                                      // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility2Name;                                      // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility1AName;                                     // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility1BName;                                     // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility2AName;                                     // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility2BName;                                     // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility3AName;                                     // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadAbility3BName;                                     // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadPreviousBuildingName;                              // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadNextBuildingName;                                  // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadBuildingSlot1Name;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadBuildingSlot2Name;                                 // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadBuildingSlot3Name;                                 // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadBuildingSlot4Name;                                 // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleHarvestWeaponName;                           // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadSelectPreviousWeaponName;                          // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadSelectNextWeaponName;                              // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadNextWeaponOrHarvestHoldName;                       // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadTapSelectPreviousWeaponForChordAbilities;          // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadTapSelectNextWeaponForChordAbilities;              // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadTrapPickerName;                                    // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadUseOrTrapPickerName;                               // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadUseOrTrapPickerAndPlaceName;                       // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadChangeMaterialOrHarvestHoldName;                   // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadSwitchModeOrEditBuildingName;                      // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadImproveOrRotateBuildingPieceName;                  // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadRepairHoldOrRotateBuildingPieceName;               // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadPerformBuildingEditInteractionOrCancelPersonalVehicleName;// 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey1Name;                                           // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey2Name;                                           // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey3Name;                                           // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey4Name;                                           // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey5Name;                                           // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey6Name;                                           // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey7Name;                                           // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey8Name;                                           // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKey9Name;                                           // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF1Name;                                          // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF2Name;                                          // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF3Name;                                          // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF4Name;                                          // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF5Name;                                          // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF6Name;                                          // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF7Name;                                          // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF8Name;                                          // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF9Name;                                          // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF10Name;                                         // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF11Name;                                         // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HotbarKeyF12Name;                                         // 0x01F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TrapPickerName;                                           // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ChangeMaterialName;                                       // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BuildConfirmName;                                         // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PerformBuildingEditInteractionName;                       // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PerformBuildingImprovementInteractionName;                // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PickerConfirmName;                                        // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PickerCancelName;                                         // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EmotePickerName;                                          // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SquadQuickChatPickerName;                                 // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SwitchQuickBarName;                                       // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       UseName;                                                  // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       UseOrReloadName;                                          // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReloadName;                                               // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       InventoryOrChatHoldName;                                  // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FireName;                                                 // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RotatePrimitiveClockwiseName;                             // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ToggleFullScreenMapName;                                  // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleFullScreenMapName;                           // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleFullScreenMapWhileBuildingName;              // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleFullScreenMapWhileEditingName;               // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ToggleInventoryName;                                      // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleInventoryName;                               // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleInventoryWhileBuildingName;                  // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadToggleInventoryWhileEditingName;                   // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       JumpName;                                                 // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadJumpName;                                          // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchName;                                               // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchWhileBuildingName;                                  // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchWhileEditingName;                                   // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchOrRepairName;                                       // 0x02E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchOrRepairWhileBuildingName;                          // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CrouchOrRepairWhileEditingName;                           // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadVehicleExitName;                                   // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadVehicleJumpName;                                   // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       VehicleExitName;                                          // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ShoppingCartCoastName;                                    // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       VehicleJumpName;                                          // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GolfCartEBrakeName;                                       // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadGolfCartEBrakeLeftName;                            // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadGolfCartEBrakeRightName;                           // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       VehicleChangeSeatName;                                    // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadGolfCartForwardName;                               // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadGolfCartReverseName;                               // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GolfCartHonkName;                                         // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       QuadCrasherBoostName;                                     // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadQuadCrasherBoostLeftName;                          // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadQuadCrasherBoostRightName;                         // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TogglePickAxeName;                                        // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadEmotePickerOrReplayLastEmoteHoldName;              // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadEmotePickerOrReplayLastEmoteHoldWhileBuildingName; // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadEmotePickerOrReplayLastEmoteHoldWhileEditingName;  // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GamepadSwitchModeName;                                    // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<struct FGameplayTag, struct FScreenLabelText> ScreenLabels;                                             // 0x03A0(0x0050) (Edit, ZeroConstructor)
	struct FText                                       MoveLabel;                                                // 0x03F0(0x0018) (Edit)
	struct FText                                       LookLabel;                                                // 0x0408(0x0018) (Edit)
	struct FText                                       SwitchQuickbarLabel;                                      // 0x0420(0x0018) (Edit)
	struct FText                                       JumpLabel;                                                // 0x0438(0x0018) (Edit)
	struct FText                                       SprintLabel;                                              // 0x0450(0x0018) (Edit)
	struct FText                                       AutoSprintLabel;                                          // 0x0468(0x0018) (Edit)
	struct FText                                       NextWeaponLabel;                                          // 0x0480(0x0018) (Edit)
	struct FText                                       PreviousWeaponLabel;                                      // 0x0498(0x0018) (Edit)
	struct FText                                       NextWeaponTapLabel;                                       // 0x04B0(0x0018) (Edit)
	struct FText                                       PreviousWeaponTapLabel;                                   // 0x04C8(0x0018) (Edit)
	struct FText                                       NextBuildingPieceLabel;                                   // 0x04E0(0x0018) (Edit)
	struct FText                                       PreviousBuildingPieceLabel;                               // 0x04F8(0x0018) (Edit)
	struct FText                                       GamepadStairSelectAndPlaceLabel;                          // 0x0510(0x0018) (Edit)
	struct FText                                       GamepadRoofSelectAndPlaceLabel;                           // 0x0528(0x0018) (Edit)
	struct FText                                       GamepadWallSelectAndPlaceLabel;                           // 0x0540(0x0018) (Edit)
	struct FText                                       GamepadFloorSelectAndPlaceLabel;                          // 0x0558(0x0018) (Edit)
	struct FText                                       GamepadTrapSelectAndPlaceLabel;                           // 0x0570(0x0018) (Edit)
	struct FText                                       GamepadTrapPickerHoldLabel;                               // 0x0588(0x0018) (Edit)
	struct FText                                       GamepadChangeMaterialOrTrapPickerLabel;                   // 0x05A0(0x0018) (Edit)
	struct FText                                       HarvestWeaponHoldLabel;                                   // 0x05B8(0x0018) (Edit)
	struct FText                                       HarvestWeaponLabel;                                       // 0x05D0(0x0018) (Edit)
	struct FText                                       AimDownSightsLabel;                                       // 0x05E8(0x0018) (Edit)
	struct FText                                       AimDownSightsHeavyMeleeLabel;                             // 0x0600(0x0018) (Edit)
	struct FText                                       Ability1Label;                                            // 0x0618(0x0018) (Edit)
	struct FText                                       Ability2Label;                                            // 0x0630(0x0018) (Edit)
	struct FText                                       Ability3Label;                                            // 0x0648(0x0018) (Edit)
	struct FText                                       Gadget1Label;                                             // 0x0660(0x0018) (Edit)
	struct FText                                       Gadget2Label;                                             // 0x0678(0x0018) (Edit)
	struct FText                                       RotateBuildingLabel;                                      // 0x0690(0x0018) (Edit)
	struct FText                                       RotateBuildingTapRepairHoldLabel;                         // 0x06A8(0x0018) (Edit)
	struct FText                                       BuildingEditResetLabel;                                   // 0x06C0(0x0018) (Edit)
	struct FText                                       ReloadLabel;                                              // 0x06D8(0x0018) (Edit)
	struct FText                                       ReloadTapLabel;                                           // 0x06F0(0x0018) (Edit)
	struct FText                                       CraftAmmoHoldLabel;                                       // 0x0708(0x0018) (Edit)
	struct FText                                       InteractTapHoldLabel;                                     // 0x0720(0x0018) (Edit)
	struct FText                                       UseOrReloadLabel;                                         // 0x0738(0x0018) (Edit)
	struct FText                                       CrouchLabel;                                              // 0x0750(0x0018) (Edit)
	struct FText                                       ToggleFullScreenMapLabel;                                 // 0x0768(0x0018) (Edit)
	struct FText                                       ToggleInventoryLabel;                                     // 0x0780(0x0018) (Edit)
	struct FText                                       GameMenuLabel;                                            // 0x0798(0x0018) (Edit)
	struct FText                                       PlaceBuildingOrTrapConfirmLabel;                          // 0x07B0(0x0018) (Edit)
	struct FText                                       AttackConfirmLabel;                                       // 0x07C8(0x0018) (Edit)
	struct FText                                       ChangeMaterialLabel;                                      // 0x07E0(0x0018) (Edit)
	struct FText                                       EmoteLabel;                                               // 0x07F8(0x0018) (Edit)
	struct FText                                       EmoteOrQuickChatLabel;                                    // 0x0810(0x0018) (Edit)
	struct FText                                       ChatHoldLabel;                                            // 0x0828(0x0018) (Edit)
	struct FText                                       PickTrapTapLabel;                                         // 0x0840(0x0018) (Edit)
	struct FText                                       TrapInventoryHoldLabel;                                   // 0x0858(0x0018) (Edit)
	struct FText                                       PickTrapTapHoldLabel;                                     // 0x0870(0x0018) (Edit)
	struct FText                                       PickTrapLabel;                                            // 0x0888(0x0018) (Edit)
	struct FText                                       EditBuildingPieceHoldLabel;                               // 0x08A0(0x0018) (Edit)
	struct FText                                       SwitchQuickBarTapLabel;                                   // 0x08B8(0x0018) (Edit)
	struct FText                                       DeployHoverboardLabel;                                    // 0x08D0(0x0018) (Edit)
	struct FText                                       RepairImproveSpotEnemyLabel;                              // 0x08E8(0x0018) (Edit)
	struct FText                                       RepairLabel;                                              // 0x0900(0x0018) (Edit)
	struct FText                                       RepairHoldLabel;                                          // 0x0918(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInputData");
		return ptr;
	}


	struct FText GetUseOrReloadLabel();
	struct FText GetTrapInventoryHoldLabel();
	struct FText GetToggleInventoryLabel();
	struct FText GetToggleFullScreenMapLabel();
	struct FText GetSwitchQuickBarTapLabel();
	struct FText GetSwitchQuickbarLabel();
	struct FText GetSprintLabel();
	struct FText GetScreenLabel(const struct FName& PresetName, EFortInputActionGroup InputActionGroup, const struct FName& ActionName, bool bRichText);
	struct FText GetRotateBuildingTapRepairHoldLabel();
	struct FText GetRotateBuildingLabel();
	struct FText GetRepairLabel();
	struct FText GetRepairImproveSpotEnemyLabel();
	struct FText GetRepairHoldLabel();
	struct FText GetReloadTapLabel();
	struct FText GetReloadLabel();
	struct FText GetPreviousWeaponTapLabel();
	struct FText GetPreviousWeaponLabel();
	struct FText GetPreviousBuildingPieceLabel();
	struct FText GetPlaceBuildingOrTrapConfirmLabel();
	struct FText GetPickTrapTapLabel();
	struct FText GetPickTrapTapHoldLabel();
	struct FText GetPickTrapLabel();
	struct FText GetNextWeaponTapLabel();
	struct FText GetNextWeaponLabel();
	struct FText GetNextBuildingPieceLabel();
	struct FText GetMoveLabel();
	struct FText GetLookLabel();
	struct FText GetJumpLabel();
	struct FText GetInteractTapHoldLabel();
	struct FText GetHarvestWeaponLabel();
	struct FText GetHarvestWeaponHoldLabel();
	struct FText GetGamepadWallSelectAndPlaceLabel();
	struct FText GetGamepadTrapSelectAndPlaceLabel();
	struct FText GetGamepadTrapPickerHoldLabel();
	struct FText GetGamepadStairSelectAndPlaceLabel();
	struct FText GetGamepadRoofSelectAndPlaceLabel();
	struct FText GetGamepadFloorSelectAndPlaceLabel();
	struct FText GetGamepadChangeMaterialOrTrapPickerLabel();
	struct FText GetGameMenuLabel();
	struct FText GetGadget2Label();
	struct FText GetGadget1Label();
	class UFortInputData* STATIC_GetFortInputDataForBlueprint();
	struct FText GetEmoteOrQuickChatLabel();
	struct FText GetEmoteLabel();
	struct FText GetEditBuildingPieceHoldLabel();
	struct FText GetDeployHoverboardLabel();
	struct FText GetCrouchLabel();
	struct FText GetCraftAmmoHoldLabel();
	struct FText GetChatHoldLabel();
	struct FText GetChangeMaterialLabel();
	struct FText GetBuildingEditResetLabel();
	struct FText GetAutoSprintLabel();
	struct FText GetAttackConfirmLabel();
	struct FText GetAimDownSightsLabel();
	struct FText GetAimDownSightsHeavyMeleeLabel();
	struct FText GetAbility3Label();
	struct FText GetAbility2Label();
	struct FText GetAbility1Label();
};


// Class FortniteGame.FortInstancedStaticMeshActor
// 0x0000 (0x0350 - 0x0350)
class AFortInstancedStaticMeshActor : public AFortStaticMeshActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInstancedStaticMeshActor");
		return ptr;
	}

};


// Class FortniteGame.FortIntelPackSet
// 0x00C0 (0x00F0 - 0x0030)
class UFortIntelPackSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  MaxCharges;                                               // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CurrentCharges;                                           // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StormTrackerCost;                                         // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RevealedTargetsRange;                                     // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RevealedTargetsDuration;                                  // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RevealedTargetsCost;                                      // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIntelPackSet");
		return ptr;
	}

};


// Class FortniteGame.FortIntensityCurveSequence
// 0x0018 (0x0048 - 0x0030)
class UFortIntensityCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>                 IntensityCurves;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TEnumAsByte<EFortIntensityCurveSequenceType>       SequenceType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIntensityCurveSequence");
		return ptr;
	}

};


// Class FortniteGame.FortIntensityCurveSequenceProgression
// 0x0010 (0x0040 - 0x0030)
class UFortIntensityCurveSequenceProgression : public UDataAsset
{
public:
	TArray<struct FFortInstensityCurveSequenceProgression> IntensityCurveSequences;                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortIntensityCurveSequenceProgression");
		return ptr;
	}

};


// Class FortniteGame.FortInteractabilityTracker
// 0x0030 (0x0058 - 0x0028)
class UFortInteractabilityTracker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInteractabilityTracker");
		return ptr;
	}

};


// Class FortniteGame.FortInteractContextInfo
// 0x0050 (0x0078 - 0x0028)
class UFortInteractContextInfo : public UObject
{
public:
	struct FText                                       ContextText;                                              // 0x0028(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class AActor*                                      ReceivingActor;                                           // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         InteractComponent;                                        // 0x0048(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UObject*                                     OptionalObjectData;                                       // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  LongInteractSound;                                        // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     InteractPoint;                                            // 0x0060(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              RequiredDuration;                                         // 0x006C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowCountDown;                                           // 0x0070(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayTextOnly;                                         // 0x0071(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInteractContextInfo");
		return ptr;
	}

};


// Class FortniteGame.FortInteractInterface
// 0x0000 (0x0028 - 0x0028)
class UFortInteractInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInteractInterface");
		return ptr;
	}


	bool ServerOnAttemptInteract(const struct FInteractionType& InteractType);
	void GetIconPlacement(class AActor* SelfActor, struct FVector* OutLocation, struct FVector* OutExtents);
	struct FVector GetFocusedSocketLocation();
	void GetBoundsComponents(class AActor* SelfActor, TArray<class USceneComponent*>* OutComponents);
};


// Class FortniteGame.FortInventory
// 0x01D8 (0x0500 - 0x0328)
class AFortInventory : public AActor
{
public:
	unsigned char                                      UnknownData00[0x9];                                       // 0x0328(0x0009) MISSED OFFSET
	TEnumAsByte<EFortInventoryType>                    InventoryType;                                            // 0x0331(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0332(0x0006) MISSED OFFSET
	struct FFortItemList                               Inventory;                                                // 0x0338(0x0170) (Net, SaveGame)
	bool                                               bRequiresLocalUpdate;                                     // 0x04A8(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresSaving;                                          // 0x04A9(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsShuttingDown;                                          // 0x04AA(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x15];                                      // 0x04AB(0x0015) MISSED OFFSET
	TArray<class UFortWorldItem*>                      PendingInstances;                                         // 0x04C0(0x0010) (ZeroConstructor)
	TArray<class UFortItem*>                           RecentlyAdded;                                            // 0x04D0(0x0010) (ZeroConstructor)
	TArray<class UFortItem*>                           RecentlyRemoved;                                          // 0x04E0(0x0010) (ZeroConstructor)
	TArray<class UFortItem*>                           RecentlyChanged;                                          // 0x04F0(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInventory");
		return ptr;
	}


	void HandleInventoryLocalUpdate();
};


// Class FortniteGame.FortInventoryInterface
// 0x0000 (0x0028 - 0x0028)
class UFortInventoryInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInventoryInterface");
		return ptr;
	}

};


// Class FortniteGame.FortInventoryOutpost
// 0x0018 (0x0518 - 0x0500)
class AFortInventoryOutpost : public AFortInventory
{
public:
	TArray<class UFortWorldItem*>                      UnavailableItemInstances;                                 // 0x0500(0x0010) (ZeroConstructor)
	bool                                               bHasUnavailableItems;                                     // 0x0510(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0511(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInventoryOutpost");
		return ptr;
	}

};


// Class FortniteGame.FortInventoryOwnerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortInventoryOwnerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInventoryOwnerInterface");
		return ptr;
	}

};


// Class FortniteGame.FortItemIconDefinition
// 0x0050 (0x0080 - 0x0030)
class UFortItemIconDefinition : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemIconDefinition.SmallImage
	unsigned char                                      UnknownData01[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemIconDefinition.LargeImage

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemIconDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortItemCacheItemDefinition
// 0x0030 (0x0900 - 0x08D0)
class UFortItemCacheItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x08D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortItemCacheItemDefinition.CardPackReward
	unsigned char                                      UnknownData01[0x8];                                       // 0x08F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemCacheItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortItemCategory
// 0x0030 (0x0060 - 0x0030)
class UFortItemCategory : public UDataAsset
{
public:
	TArray<struct FItemCategoryMappingData>            PrimaryCategories;                                        // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FItemCategory>                       SecondaryCategories;                                      // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FItemCategory>                       TertiaryCategories;                                       // 0x0050(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemCategory");
		return ptr;
	}

};


// Class FortniteGame.FortItemExhibitActor
// 0x0010 (0x0380 - 0x0370)
class AFortItemExhibitActor : public AFortExhibitActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0370(0x0008) MISSED OFFSET
	class AFortPickup*                                 ExhibitItem;                                              // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemExhibitActor");
		return ptr;
	}

};


// Class FortniteGame.FortJumpBoostSet
// 0x01A8 (0x01D8 - 0x0030)
class UFortJumpBoostSet : public UFortAttributeSet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  BoostActive;                                              // 0x0038(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxFuel;                                                  // 0x0058(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Fuel;                                                     // 0x0078(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveMaxFuel;                                           // 0x0098(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveFuel;                                              // 0x00B8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelBurnRate;                                             // 0x00D8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelRegenRate;                                            // 0x00F8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelRegenDelay;                                           // 0x0118(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BoostFuelCost;                                            // 0x0138(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  UpwardThrust;                                             // 0x0158(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  LateralThrust;                                            // 0x0178(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  UpwardAcceleration;                                       // 0x0198(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  LateralAcceleration;                                      // 0x01B8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortJumpBoostSet");
		return ptr;
	}

};


// Class FortniteGame.FortJumpDownLink
// 0x0000 (0x0378 - 0x0378)
class AFortJumpDownLink : public ANavLinkProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortJumpDownLink");
		return ptr;
	}

};


// Class FortniteGame.FortKeepEventInfo
// 0x0028 (0x0058 - 0x0030)
class UFortKeepEventInfo : public UDataAsset
{
public:
	struct FText                                       EventDescription;                                         // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FKeepEventWaveData>                  Waves;                                                    // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortKeepEventInfo");
		return ptr;
	}


	int NumberOfWaves();
	struct FKeepEventWaveData GetWave(int Index);
};


// Class FortniteGame.FortKeepEventList
// 0x0010 (0x0040 - 0x0030)
class UFortKeepEventList : public UDataAsset
{
public:
	TArray<struct FKeepEventInfo>                      Events;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortKeepEventList");
		return ptr;
	}


	struct FText GetEventDescription(int idx);
	struct FKeepEventInfo GetEvent(int idx);
};


// Class FortniteGame.FortKeepDefenseManager
// 0x00D0 (0x03F8 - 0x0328)
class AFortKeepDefenseManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnEventStarted;                                           // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWarmupEnded;                                            // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterTimeout;                                       // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventEnded;                                             // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventStopped;                                           // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllEnemiesKilled;                                       // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterStarted;                                       // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEncounterEnded;                                         // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDefenseStateChanged;                                    // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03B8(0x0010) MISSED OFFSET
	class UFortAIEncounterInfo*                        ActiveAIEncounter;                                        // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortAISpawnGroupProgressionInfo*            ActiveAISpawnGroup;                                       // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x03D8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortKeepDefenseManager");
		return ptr;
	}


	void StopEvent();
	void StartEventFromList(class UFortKeepEventList* EventList, int EventNumber);
	void StartEvent(class UFortKeepEventInfo* EventTemplate, int DifficultyLevelOffset);
	class UFortAIEncounterInfo* StartAIEncounter(class UClass* EncounterTemplate, class AActor* TargetActor, class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo, int ActivationDelay, int EncounterDifficultyLevel, float AliveMultiplier);
	void SkipWarmup();
	void GoToNextWave();
	struct FText GetWaveDescription();
	int GetNumberAliveEnemies();
};


// Class FortniteGame.FortKeepItemManager
// 0x0320 (0x0348 - 0x0028)
class UFortKeepItemManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x320];                                     // 0x0028(0x0320) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortKeepItemManager");
		return ptr;
	}

};


// Class FortniteGame.FortKismetLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortKismetLibrary");
		return ptr;
	}


	float STATIC_VectorToNormalizedAngleInDegrees(const struct FVector& V);
	void STATIC_UnhideTutorialWidget(class UObject* WorldContextObject, const struct FName& WidgetName);
	void STATIC_UnhideAllTutorialWidgets(class UObject* WorldContextObject);
	void STATIC_UnequipFortAbilitySet(struct FFortAbilitySetHandle* AbilitySetHandle);
	void STATIC_TriggerFeedbackEvent(class UObject* WorldContextObject, const struct FFortFeedbackHandle& EventHandle, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay, bool bOverriddenQueuing, bool bAllowReplication);
	bool STATIC_SwitchHeroType(class AFortPlayerController* FortPC, const struct FString& NewHeroName);
	class AFortTracerBase* STATIC_SpawnTracerFromPool(class UObject* WorldContextObject, class UClass* TracerClass, const struct FVector& Origin, const struct FVector& Destination, class AFortPawn* Instigator);
	class AFortProjectileBase* STATIC_SpawnProjectile(class UClass* ProjectileClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FRotator& SpawnDirection, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, bool bUseDefaultPhysics, class AActor* HomingTarget, float InitialSpeed, float GravityScale, float ChargePercent);
	class ABuildingGameplayActor* STATIC_SpawnBuildingGameplayActor(class UClass* BGAClass, const struct FTransform& Transform, class AActor* Instigator);
	class AFortAreaOfEffectCloud* STATIC_SpawnAreaOfEffectCloud(class UClass* AreaOfEffectClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode);
	void STATIC_ShowSoundIndicatorLocalForTeam(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, EFortSoundIndicatorTypes IndicatorType, TEnumAsByte<EFortTeam> Team, TArray<TEnumAsByte<EFortTeamAffiliation>> Affiliations, class AActor* Instigator);
	void STATIC_ShowSoundIndicatorLocal(class UObject* WorldContextObject, class AFortPawn* TrackedPawn, const struct FVector& Location, float MaxAudibleDistance, EFortSoundIndicatorTypes IndicatorType, TArray<class AFortPlayerController*> IgnoreOnControllers, class AActor* Instigator);
	bool STATIC_ShouldHideTutorialWidget(const struct FName& WidgetName);
	void STATIC_SetTimeOfDaySpeed(class UObject* WorldContextObject, float TimeOfDaySpeedFactor);
	void STATIC_SetTimeOfDay(class UObject* WorldContextObject, float TimeOfDay);
	void STATIC_SetEndGameTimeDilation(class UObject* WorldContextObject, float TimeDilation);
	void STATIC_SetCanBeDamaged(class AActor* Actor, bool bCanBeDamaged);
	class UMaterialInstance* STATIC_SelectMaterialInstance(class UMaterialInstance* A, class UMaterialInstance* B, bool bSelectA);
	void STATIC_RemoveActorsOfClassFromBuildingSMActorArray(TArray<class ABuildingSMActor*> ArrayToRemoveClassFrom, class UClass* ClassToRemove, TArray<class ABuildingSMActor*>* ArrayWithClassRemoved);
	void STATIC_RegisterDayTimeHitCallback(class UObject* Object, const struct FString& FunctionName, float TimeInHours, bool bRecurring, bool bBlockTriggeringThisCycle);
	void STATIC_RegisterDayPhaseHitCallback(class UObject* Object, const struct FString& FunctionName, TEnumAsByte<EFortDayPhase> Phase, bool bRecurring, bool bBlockTriggeringThisCycle);
	bool STATIC_RandomGroundLocationInCircle(class UObject* WorldContextObject, const struct FVector& CircleCenter, float CircleRadius, class AActor* TraceIgnoreActor, float TraceStartZ, float TraceEndZ, float TraceRadius, const struct FCollisionProfileName& TraceProfile, struct FVector* OutLocation);
	struct FTransform STATIC_PushOffTransformByHitLocation(class AActor* RequestedBy, const struct FTransform& InTransform, const struct FHitResult& Hit, float Distance);
	struct FVector STATIC_PushOffHitLocation(class AActor* RequestedBy, const struct FHitResult& Hit, float Distance);
	void STATIC_PlayLocalForceFeedbackAtLocationMulti(class UObject* WorldContextObject, class UForceFeedbackEffect* NearForceFeedbackEffect, class UForceFeedbackEffect* FarForceFeedbackEffect, const struct FVector& Location, float InnerRadius, float OuterRadius, const struct FName& Tag);
	void STATIC_PlayLocalForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, float Radius, const struct FName& Tag);
	bool STATIC_PickLootDrops(class UObject* WorldContextObject, const struct FName& TierGroupName, int WorldLevel, int ForcedLootTier, TArray<struct FFortItemEntry>* OutLootToDrop);
	void STATIC_OpenTalkingHead(class UObject* WorldContextObject, class UTexture2D* Image, const struct FText& Title, const struct FText& SpeechText, EFortAnnouncementDisplayPreference DisplayPreference);
	bool STATIC_OnSameTeam(class AActor* ActorA, class AActor* ActorB);
	void STATIC_NotifyProjectileThrown(class UClass* ProjClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, float Speed);
	bool STATIC_NotEqual_UniqueNetIdReplUniqueNetIdRepl(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B);
	bool STATIC_NotEqual_FFortDialogWaitingForLatentActionHandle(const struct FFortDialogExternalLatentActionHandle& A, const struct FFortDialogExternalLatentActionHandle& B);
	struct FVector STATIC_NormalizedAngleInDegreesToVector(float A);
	TEnumAsByte<EFortWeaponCoreAnimation> STATIC_MakeWeaponCoreAnimation(TEnumAsByte<EFortWeaponCoreAnimation> Value);
	TEnumAsByte<EFortResourceType> STATIC_MakeResourceType(TEnumAsByte<EFortResourceType> Value);
	TEnumAsByte<EFortMovementStyle> STATIC_MakeMovementStyle(TEnumAsByte<EFortMovementStyle> Value);
	struct FFortGameplayEffectContainerSpec STATIC_MakeGameplayEffectContainerSpecFromAbilityComponent(const struct FFortGameplayEffectContainer& EffectContainer, class UAbilitySystemComponent* AbilityComp, int GameplayEffectLevel);
	struct FFortGameplayEffectContainerSpec STATIC_MakeGameplayEffectContainerSpecFromAbility(const struct FFortGameplayEffectContainer& EffectContainer, class UGameplayAbility* Ability, int GameplayEffectLevel);
	TEnumAsByte<EFortDayPhase> STATIC_MakeDayNightPhase(TEnumAsByte<EFortDayPhase> Value);
	TEnumAsByte<EFortBuildingState> STATIC_MakeBuildingState(TEnumAsByte<EFortBuildingState> Value);
	void STATIC_MakeAllPlayersTalkToSelf(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float Delay, bool bInterruptCurrentLine, bool bCanBeInterrupted, bool bCanCue, TEnumAsByte<EFortFeedbackBroadcastFilter> BroadcastFilter, bool bLatent);
	class AFortPickup* STATIC_K2_SpawnPickupInWorldWithClass(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, class UClass* PickupClass, int NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int OverrideMaxStackCount, bool bToss, bool bRandomRotation, bool bBlockedFromAutoPickup);
	class AFortPickup* STATIC_K2_SpawnPickupInWorld(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int OverrideMaxStackCount, bool bToss, bool bRandomRotation, bool bBlockedFromAutoPickup);
	void K2_SetCurrentResourceType(class AFortPlayerController* Controller, TEnumAsByte<EFortResourceType> NewMaterial);
	int STATIC_K2_RemoveItemFromPlayerByGuid(class AFortPlayerController* PlayerController, const struct FGuid& ItemGuid, int AmountToRemove, bool bForceRemoval);
	int STATIC_K2_RemoveItemFromPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int AmountToRemove, bool bForceRemoval);
	void STATIC_K2_RemoveItemFromAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int AmountToRemove);
	int STATIC_K2_PayBuildingResourceCost(class AFortPlayerController* Controller, TEnumAsByte<EFortResourceType> ResourceType, int ResourceAmount);
	bool STATIC_K2_HasBuildingResourcesAvailable(class AFortPlayerController* Controller, TEnumAsByte<EFortResourceType> ResourceType, int ResourceAmount);
	void STATIC_K2_GiveItemToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive, bool bNotifyPlayer);
	void STATIC_K2_GiveItemToAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive, bool bNotifyPlayer);
	void STATIC_K2_GiveBuildingResource(class AFortPlayerController* Controller, TEnumAsByte<EFortResourceType> ResourceType, int ResourceAmount);
	class UFortResourceItemDefinition* STATIC_K2_GetResourceItemDefinition(TEnumAsByte<EFortResourceType> ResourceType);
	int STATIC_K2_GetNumAvailableBuildingResources(class AFortPlayerController* Controller, TEnumAsByte<EFortResourceType> ResourceType);
	int STATIC_K2_GetItemQuantityOnPlayer(class AFortPlayerController* PlayerController, class UFortItemDefinition* ItemDefinition);
	TEnumAsByte<EFortResourceType> STATIC_K2_GetCurrentResourceType(class AFortPlayerController* Controller);
	struct FVector STATIC_K2_GetClosestAxisXY(const struct FVector& InVector);
	void K2_CycleBuildingMaterial(class AFortPlayerController* Controller, bool bBroadcast, bool bDoUIFeedback, bool bHonorAutoSwitch);
	TArray<class UObject*> STATIC_JonLHack_GetAllObjectsOfClassFromPath(const struct FString& Path, class UClass* Class);
	bool STATIC_IsValid_UniqueNetIdRepl(const struct FUniqueNetIdRepl& InUniqueNetIdRepl);
	bool STATIC_IsValid(const struct FAttributeInfo& AttributeInfo);
	bool STATIC_IsUsingBattlEye();
	bool STATIC_IsTabletGame();
	bool STATIC_IsRunningNoMCP();
	bool STATIC_IsPhoneGame();
	bool STATIC_IsMobilePlatform();
	bool STATIC_IsMobileGame(class UObject* WorldContextObject);
	bool STATIC_IsLinkingStreamedAccountsEnabled();
	bool STATIC_IsLatentActionHandleValid(const struct FFortDialogExternalLatentActionHandle& Handle);
	bool STATIC_IsItemDefRandomCustomizationSelector(class UFortItemDefinition* InItemDef);
	bool STATIC_IsFullBodyHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsFatalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsDiceCritical(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsCriticalHit(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_IsConsolePlatform();
	bool STATIC_IsAssetNull();
	void STATIC_InvalidateLatentActionHandle(struct FFortDialogExternalLatentActionHandle* Handle);
	void STATIC_HideTutorialWidget(class UObject* WorldContextObject, const struct FName& WidgetName);
	bool STATIC_HasSelectableRewards(const struct FFortRewardInfo& RewardInfo);
	bool STATIC_HasRewards(const struct FFortRewardInfo& RewardInfo);
	bool STATIC_HasOpenBroadcasterGrantWindow(class UObject* WorldContextObject);
	bool STATIC_HasMultipleVisibleRewards(const struct FFortRewardInfo& RewardInfo);
	void STATIC_GiveItemToInventoryOwner(const TScriptInterface<class UFortInventoryOwnerInterface>& InventoryOwner, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive, bool bNotifyPlayer);
	bool STATIC_GetWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortBaseWeaponStats* OutRow);
	bool STATIC_GetWeaponDurabilityByRarityStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortWeaponDurabilityByRarityStats* OutRow);
	bool STATIC_GetTrapStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortTrapStats* OutRow);
	bool STATIC_GetTooltipTextFromTokenFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool STATIC_GetTooltipTextFromToken(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FText* OutText);
	bool STATIC_GetTooltipNumericValueFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool STATIC_GetTooltipNumericValue(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value);
	bool STATIC_GetTooltipDescriptionFromTooltipClass(class UObject* WorldContextObject, class UObject* ObjectToDescribe, class UClass* TooltipClass, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<struct FText>* Description);
	bool STATIC_GetTooltipDescription(class UObject* WorldContextObject, class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, class UFortTooltipContext* Context, TArray<struct FText>* Description);
	float STATIC_GetTimeUntilInRealTimeSeconds(class UObject* WorldContextObject, float GameTime);
	void STATIC_GetTimeUntilCalendarEventEnd(class UObject* WorldContextObject, const struct FString& EventName, bool* bFoundEvent, struct FTimespan* OutTime);
	float STATIC_GetTimeOfDaySpeed(class UObject* WorldContextObject);
	float STATIC_GetTimeOfDayAccumulator(class UObject* WorldContextObject);
	float STATIC_GetTimeOfDay(class UObject* WorldContextObject);
	float STATIC_GetTimeDayPhaseBegins(class UObject* WorldContextObject, TEnumAsByte<EFortDayPhase> DayPhase);
	class AFortThreatVisualsManager* STATIC_GetThreatVisualsManager(class UObject* WorldContextObject);
	class AFortTeamInfo* STATIC_GetTeamInfo(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> Team);
	TEnumAsByte<EFortTeamAffiliation> STATIC_GetTeamAffiliationToLocalPlayer(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> Team);
	TEnumAsByte<EFortTeamAffiliation> STATIC_GetTeamAffiliationBetweenTeams(TEnumAsByte<EFortTeam> TeamA, TEnumAsByte<EFortTeam> TeamB);
	TEnumAsByte<EFortTeamAffiliation> STATIC_GetTeamAffiliation(class AActor* ActorA, class AActor* ActorB);
	ESubGame STATIC_GetSubGame();
	float STATIC_GetStunTime(const struct FGameplayEffectContextHandle& EffectContext);
	bool STATIC_GetShowHeroHeadAccessoriesForLocalPlayer(class UObject* WorldContextObject);
	bool STATIC_GetShowHeroBackpackForLocalPlayer(class UObject* WorldContextObject);
	bool STATIC_GetSafeZoneLocation(class UObject* WorldContextObject, int SafeZoneIndex, struct FVector* OutLocation);
	class UFortAbilityKit* STATIC_GetRemovedAbilityKit(const struct FFortSpecializationSlot& Slot);
	bool STATIC_GetRangedWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortRangedWeaponStats* OutRow);
	struct FText STATIC_GetRandomSurvivorName(class UObject* WorldContextObject, TEnumAsByte<EFortDisplayGender> Gender, bool bRemoveFromList);
	struct FText STATIC_GetRandomLiveStreamingViewerName(class UObject* WorldContextObject, bool bRemoveFromList);
	bool STATIC_GetPurchaseCostsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortCollectionBookDirectPurchaseData* OutRow);
	class UGameplayAbility* STATIC_GetPrimaryInstance(const struct FGameplayAbilitySpec& Spec);
	TEnumAsByte<EFortDayPhase> STATIC_GetPreviousDayPhase(class UObject* WorldContextObject);
	bool STATIC_GetPlaylistAllowsTeamSwitching(class UObject* WorldContextObject);
	class UFortRegisteredPlayerInfo* STATIC_GetPlayerInfoFromUniqueID(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId);
	bool STATIC_GetPawnStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortPawnStats* OutRow);
	bool STATIC_GetNumericCVar(const struct FString& CVar, float* OutValue);
	class AFortMusicManager* STATIC_GetMusicManager(class UObject* WorldContextObject);
	class UMaterialInstanceDynamic* STATIC_GetMIDForSkeletalMeshComponent(class USkeletalMeshComponent* SkeletalMeshComponent, int ElementIndex);
	bool STATIC_GetMeleeWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortMeleeWeaponStats* OutRow);
	void STATIC_GetMatchmakingDifficultyRangeFromDifficultyInfo(const struct FGameDifficultyInfo& DifficultyInfo, float* OutMinDifficulty, float* OutMaxDifficulty);
	int STATIC_GetLootLevel(class UObject* WorldContextObject);
	bool STATIC_GetLocalPlayerHasHeroHeadAccessories(class UObject* WorldContextObject);
	bool STATIC_GetLocalPlayerHasHeroBackpack(class UObject* WorldContextObject);
	TArray<class AFortPlayerController*> STATIC_GetLocalFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	int STATIC_GetItemQuantityOnPlayerByGUID(class AFortPlayerController* PlayerController, const struct FGuid& ItemGuid);
	class UFortItemDefinition* STATIC_GetItemDefinitionFromItemQuantityPair(const struct FFortItemQuantityPair& ItemQuantityPair);
	bool STATIC_GetIsPlayingReplay(class UObject* WorldContextObject);
	bool STATIC_GetIsBroadcastClient(class UObject* WorldContextObject);
	void STATIC_GetImpulseData(const struct FGameplayEffectContextHandle& EffectContext, struct FVector* ImpulseDirection, float* KnockbackMagnitude, float* KnockbackZAngle);
	struct FString STATIC_GetHumanReadableName(class AActor* Actor);
	int STATIC_GetHoursUntilDayPhase(class UObject* WorldContextObject, TEnumAsByte<EFortDayPhase> DayPhase);
	float STATIC_GetHostilityPercentage(class UObject* WorldContextObject);
	class UFortAbilityKit* STATIC_GetGrantedAbilityKit(const struct FFortSpecializationSlot& Slot);
	float STATIC_GetGameDifficulty();
	bool STATIC_GetGameContextGameplayTags(class UObject* WorldContextObject, struct FGameplayTagContainer* OutGameContextGameplayTags);
	TArray<class AFortPlayerPawn*> STATIC_GetFortPlayerPawns(class UObject* WorldContextObject);
	class AFortPlayerController* STATIC_GetFortPlayerControllerFromActor(class AActor* Actor);
	TEnumAsByte<EPhysicalSurface> STATIC_GetFortPhysicalSurface(const struct FHitResult& Hit);
	class UFortGameUserSettings* STATIC_GetFortGameUserSettings();
	float STATIC_GetFloatHoursUntilDayPhase(class UObject* WorldContextObject, TEnumAsByte<EFortDayPhase> DayPhase);
	struct FRotator STATIC_GetDirectionActorToActor(class AActor* SourceActor, class AActor* TargetActor);
	float STATIC_GetDefaultAbsoluteTimeOfDaySpeed(class UObject* WorldContextObject);
	struct FString STATIC_GetDebugStringForUniqueId(const struct FUniqueNetIdRepl& UniqueId);
	struct FVector STATIC_GetDayNightDirectionalLightVector(class UObject* WorldContextObject);
	struct FLinearColor STATIC_GetDayNightDirectionalLightColor(class UObject* WorldContextObject);
	TEnumAsByte<EFortDayPhase> STATIC_GetCurrentDayPhase(class UObject* WorldContextObject);
	EAthenaWinCondition STATIC_GetCurrentAthenaWinCondition(class UObject* WorldContextObject);
	class AFortPlayerPawn* STATIC_GetClosestFortPlayerPawn(class UObject* WorldContextObject, const struct FVector& Position);
	class ABuildingSMActor* STATIC_GetClosestBuildingActorFromArray(class AActor* Actor, TArray<class ABuildingSMActor*> ArrayOfBuildings);
	class AActor* STATIC_GetClosestActorFromArray(class AActor* Actor, TArray<class AActor*> ArrayOfActors);
	float STATIC_GetCalculatedGameDifficulty(class UObject* WorldContextObject);
	void STATIC_GetBuildingStructuralSupportSystem(class UObject* WorldContextObject, class UBuildingStructuralSupportSystem** BuildingStructuralSupportSystem);
	float STATIC_GetBuildingHealthPercentage(class ABuildingActor* BuildingActor);
	float STATIC_GetBroadcasterGrantWindowSecondsRemaining(class UObject* WorldContextObject);
	void STATIC_GetAllFortPlayerPawns(class UObject* WorldContextObject, TArray<class AFortPlayerPawn*>* OutFortPlayerPawns);
	TArray<class AFortPlayerController*> STATIC_GetAllFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators);
	class AFortAIGoalManager* STATIC_GetAIGoalManager(class UObject* WorldContextObject);
	class AFortAIDirector* STATIC_GetAIDirector(class UObject* WorldContextObject);
	class AFortTeamInfo* STATIC_GetActorTeamInfo(class AActor* Actor);
	TEnumAsByte<EFortTeam> STATIC_GetActorTeam(class AActor* Actor);
	void STATIC_FortShippingLog(class UObject* WorldContextObject, const struct FString& inString, bool bLogAsWarning);
	struct FVector STATIC_FindStaticGroundLocationAt(class UWorld* World, const struct FVector& InLocation, class AActor* IgnoreActor, float TraceStartZ, float TraceEndZ);
	struct FVector STATIC_FindGroundLocationAt(class UWorld* World, class AActor* IgnoreActor, const struct FVector& InLocation, float TraceStartZ, float TraceEndZ, const struct FName& TraceName);
	TArray<struct FHitResult> STATIC_FilterTargetHitResultList(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<struct FHitResult> HitResultsToFilter, bool* bAtLeastOneActorLeft);
	TArray<class AActor*> STATIC_FilterTargetActorList(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, class AActor* RequestingActor, TArray<class AActor*> ActorsToFilter, bool* bAtLeastOneActorLeft);
	bool STATIC_FilterSingleTargetHitResult(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, class AActor* RequestingActor, const struct FHitResult& HitResult);
	bool STATIC_FilterSingleTargetActor(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, class AActor* RequestingActor, class AActor* TargetActor);
	void STATIC_ExecuteClientEvent(class UObject* WorldContextObject, const struct FFortClientEventName& EventType, class UObject* EventSource, class UObject* EventFocus);
	bool STATIC_EvaluateCurveTableRow(const struct FCurveTableRowHandle& CurveTableRowHandle, float InXY, const struct FString& ContextString, float* OutXY);
	bool STATIC_EquipItemToQuickBarSlot(class UObject* WorldContextObject, class UFortItemDefinition* ItemDefinition, EFortQuickBars QuickBarType, int SlotIndex);
	struct FFortAbilitySetHandle STATIC_EquipFortAbilitySet(const TScriptInterface<class UAbilitySystemInterface>& AbilitySystemInterfaceActor, class UFortAbilitySet* AbilitySet, class UObject* OverrideSourceObject);
	bool STATIC_EqualEqual_UniqueNetIdReplUniqueNetIdRepl(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B);
	bool STATIC_EqualEqual_FFortDialogWaitingForLatentActionHandle(const struct FFortDialogExternalLatentActionHandle& A, const struct FFortDialogExternalLatentActionHandle& B);
	void STATIC_EndWaitForConfirmationDialog(class UObject* WorldContextObject, struct FFortDialogExternalLatentActionHandle* Handle);
	void STATIC_EnableTutorialHighlight(class UObject* WorldContextObject, const struct FName& WidgetName);
	bool STATIC_EmptyQuickBarSlot(class UObject* WorldContextObject, EFortQuickBars QuickBarType, int SlotIndex);
	void STATIC_EffectContextAddSourceObject(const struct FGameplayEffectContextHandle& EffectContext, class UObject* Src);
	void STATIC_DisableTutorialHighlight(class UObject* WorldContextObject, const struct FName& WidgetName);
	bool STATIC_DeviceSupportsForceFeedback();
	void STATIC_DebugSphereSendToAll(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int Segments, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void STATIC_DebugLineSendToAll(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void STATIC_DebugCapsuleSendToAll(class UObject* WorldContextObject, const struct FVector& Center, float HalfHeight, float Radius, const struct FQuat& Rotation, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void STATIC_DebugBoxSendToAll(class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& Extent, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	class UFortSpline* STATIC_CreateNewSplineObject(class UObject* Outer);
	void STATIC_CopyJerseyElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	void STATIC_CopyHideElements(class UMaterialInstanceDynamic* SourceMID, class UMaterialInstanceDynamic* TargetMID);
	float STATIC_ConvertToRealTime(class UObject* WorldContextObject, float InGameTime);
	float STATIC_ConvertToGameTime(class UObject* WorldContextObject, float InRealTime);
	void STATIC_CloseTalkingHead(class UObject* WorldContextObject);
	void STATIC_ClearTutorialHighlights(class UObject* WorldContextObject);
	void STATIC_BroadcastSoundAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);
	void STATIC_BroadcastSound(class UObject* WorldContextObject, class USoundBase* InSound, float VolumeMultiplier, float PitchMultiplier);
	bool STATIC_BroadcastPlayerImpactAtLocation(class UObject* WorldContextObject, class APlayerController* Player, const struct FVector& Position, bool bRelativePosition, float* Loudness, float* Duration);
	void STATIC_BroadcastMessage(class UObject* WorldContextObject, const struct FText& MESSAGE);
	void STATIC_BroadcastAbilitySpinThrustAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, class UObject* Instigator, const struct FVector& Position, float Radius, const struct FName& Tag);
	void STATIC_BroadcastAbilityImpactAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, class UObject* Instigator, const struct FVector& Position, float Radius, const struct FName& Tag);
	TArray<class AFortPlayerPawn*> STATIC_AuthorityGetFortPossessedPlayerPawns(class UObject* WorldContextObject);
	bool STATIC_AreCampaignVehiclesEnabled();
	bool STATIC_AreAthenaVehiclesEnabled();
	struct FActiveGameplayEffectHandle STATIC_ApplyGlobalEnvironmentGameplayEffectToActor(class AActor* EffectTargetActor, class UClass* GameplayEffect, int GameplayEffectLevel, const struct FGameplayTagContainer& AdditionalContextTags);
	void STATIC_ApplyGlobalEnvironmentDamageToActor(class AActor* DamageTargetActor, float EnvironmentDamage, const struct FGameplayTagContainer& AdditionalContextTags, class UClass* EnvironmentDamageGE);
	struct FFortEncounterSettings STATIC_ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings(const struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings* EncounterSettings);
	void STATIC_AddScoringEvent(class AFortPlayerController* Controller, const struct FGameplayTagContainer& TargetTags);
	void STATIC_AddRegenItemToInventoryOwner(const TScriptInterface<class UFortInventoryOwnerInterface>& InventoryOwner, class UFortWorldItemDefinition* RegenItemDefinition, int NumberToGive, bool bNotifyPlayer);
};


// Class FortniteGame.FortLauncherAthena
// 0x0060 (0x0DA8 - 0x0D48)
class AFortLauncherAthena : public ABuildingTrapFloor
{
public:
	struct FScalableFloat                              LaunchStrength;                                           // 0x0D48(0x0020) (Edit)
	struct FScalableFloat                              LaunchStrengthVehicle;                                    // 0x0D68(0x0020) (Edit)
	class USoundBase*                                  OnLaunchSound3P;                                          // 0x0D88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OnLaunchSound1P;                                          // 0x0D90(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FServerLaunchInfo                           ServerLaunchInfo;                                         // 0x0D98(0x0010) (Net, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLauncherAthena");
		return ptr;
	}


	void TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn);
	void ReTriggerForPawn(class AFortPlayerPawnAthena* AthenaPawn);
	void OnTriggerEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnRepLaunchServerInfo();
};


// Class FortniteGame.FortLeaderboardRowProxyInstance
// 0x0048 (0x0070 - 0x0028)
class UFortLeaderboardRowProxyInstance : public UObject
{
public:
	struct FLeaderboardRowData                         RowData;                                                  // 0x0028(0x0048) (BlueprintVisible, BlueprintReadOnly, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLeaderboardRowProxyInstance");
		return ptr;
	}

};


// Class FortniteGame.FortLevelScriptActor
// 0x0010 (0x0340 - 0x0330)
class AFortLevelScriptActor : public ALevelScriptActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	unsigned char                                      bWorldReadyCalled : 1;                                    // 0x0338(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0339(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLevelScriptActor");
		return ptr;
	}


	void OnWorldReady();
	void OnMatchStarted();
};


// Class FortniteGame.FortLevelSpawnActor
// 0x00B0 (0x03D8 - 0x0328)
class AFortLevelSpawnActor : public AActor
{
public:
	struct FName                                       SpecialActorUniqueID;                                     // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                SpecialActorCategoryTag;                                  // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0338(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   MiniMapIconScale;                                         // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                CachedSpecialActorIdx;                                    // 0x03C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	struct FName                                       SpecialActorID;                                           // 0x03D0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLevelSpawnActor");
		return ptr;
	}

};


// Class FortniteGame.FortLightningActor
// 0x0050 (0x0380 - 0x0330)
class AFortLightningActor : public AFortClientOnlyActor
{
public:
	int                                                MaxBoltMeshes;                                            // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxBoltWidth;                                             // 0x0334(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BoltMaterialParamTopPct;                                  // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BoltMaterialParamBottomPct;                               // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AActor*                                      ActorToNotify;                                            // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FVector>                             BoltLocations;                                            // 0x0350(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                BoltMeshes;                                               // 0x0360(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient)
	TArray<class UMaterialInstanceDynamic*>            BoltMIDs;                                                 // 0x0370(0x0010) (BlueprintVisible, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLightningActor");
		return ptr;
	}


	void OnLightingInitialized();
	void OnLightingCleanup();
	void InitializeLightning(class AActor* InActorToNotify);
	void GenerateBoltLocations(const struct FVector& StartLocation, const struct FVector& EndLocation, float MinLength, float MaxLength, float RandomVectorContribution, float MinSizeDecayRate, float MaxSizeDecayRate, float FalloffMultiplier);
	void CleanupLightning();
};


// Class FortniteGame.FortLinkedAccount
// 0x0008 (0x0030 - 0x0028)
class UFortLinkedAccount : public UObject
{
public:
	class UFortLinkedAccountManager*                   Manager;                                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLinkedAccount");
		return ptr;
	}

};


// Class FortniteGame.FortLinkedAccountManager
// 0x0018 (0x0040 - 0x0028)
class UFortLinkedAccountManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UFortLinkedAccount*>                  LinkedAccounts;                                           // 0x0030(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLinkedAccountManager");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerControllerGameplay
// 0x01F0 (0x1BF0 - 0x1A00)
class AFortPlayerControllerGameplay : public AFortPlayerController
{
public:
	int16_t                                            PoiTagContainerTableID;                                   // 0x1A00(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1E];                                      // 0x1A02(0x001E) MISSED OFFSET
	struct FVehicleTrickInfo                           VehicleTrickInfo;                                         // 0x1A20(0x0148) (Edit)
	struct FGhostModeRepData                           GhostModeRepData;                                         // 0x1B68(0x0018) (Net, Transient)
	struct FScriptMulticastDelegate                    OnGhostModeChanged;                                       // 0x1B80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	uint16_t                                           ServerNumNPCs;                                            // 0x1B90(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint16_t                                           ServerMaxNumNPCs;                                         // 0x1B92(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisplayNPCNumbers;                                       // 0x1B94(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x43];                                      // 0x1B95(0x0043) MISSED OFFSET
	struct FTimerHandle                                AmbientControllerInitializeTimer;                         // 0x1BD8(0x0008) (Transient)
	bool                                               bHasSetInitialPoiTags;                                    // 0x1BE0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x1BE1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerGameplay");
		return ptr;
	}


	void StartGhostMode(class UFortWorldItemDefinition* ItemProvidingGhostMode);
	void SetHUDElementVisibility(const struct FGameplayTagContainer& HUDElementTags, bool bHideElements);
	void ServerRPCSetDisplayNPCNumbers(bool bEnable);
	void ServerAwardVehicleTrickPoints(int InPoints);
	void ResetHUDElementVisibilityToSettings(const struct FGameplayTagContainer& HUDElementTags);
	void RefreshHUDElementVisibilitiesToSettings();
	void OnRep_PoiTagContainerTableID(int16_t PreviousPoiTagContainerTableID);
	void OnRep_GhostModeRepData();
	void InitializeAmbientAudioController();
	void HandlePoiTagContainerTableFinishedReplicating(class AFortPoiManager* PoiManager);
	struct FVehicleTrickInfo GetVehicleTrickInfo();
	void EndGhostMode(class UFortWorldItemDefinition* ItemProvidingGhostMode);
	void DisplayNPCNumbers(bool bDisplay);
	void DisableTrickCredit();
	void CheckGhostModeItemReplicated();
	void CheckGhostModeItemRemoved(class UFortWorldItemDefinition* GhostModeItemDef);
	bool AreHUDElementsVisible(const struct FGameplayTagContainer& HUDElementTags);
};


// Class FortniteGame.FortPlayerControllerSpectating
// 0x0500 (0x20F0 - 0x1BF0)
class AFortPlayerControllerSpectating : public AFortPlayerControllerGameplay
{
public:
	TArray<ESpectatorCameraType>                       CameraModeCycle;                                          // 0x1BF0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x30];                                      // 0x1C00(0x0030) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x1C00(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortPlayerControllerSpectating.PlayerSelectionWidgetClass
	class UUserWidget*                                 PlayerSelectionWidget;                                    // 0x1C58(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FLinearColor                                MinimapPlayerIconColorBase;                               // 0x1C60(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapPlayerIconColorHovered;                            // 0x1C70(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomThresholdForPlayerNames;                              // 0x1C80(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x1C84(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFollowedPlayerChanged;                                  // 0x1C88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCameraTypeChanged;                                      // 0x1C98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerBecameRelevant;                                   // 0x1CA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerBecameIrrelevant;                                 // 0x1CB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerStateAdded;                                       // 0x1CC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerStateChanged;                                     // 0x1CD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerDied;                                             // 0x1CE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTimelineScrubbed;                                       // 0x1CF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDistanceToPlayerChanged;                                // 0x1D08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCameraSettingsChanged;                                  // 0x1D18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShowNotification;                                       // 0x1D28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNameplatesEnabledChanged;                               // 0x1D38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNameplatesViewDistanceChanged;                          // 0x1D48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x8];                                       // 0x1D58(0x0008) MISSED OFFSET
	class UMaterialInterface*                          SpectatorPostProcessMaterial;                             // 0x1D60(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x1D68(0x0010) MISSED OFFSET
	class UFortSpectatorCameraComponent*               CurrentSpectatorCamComp;                                  // 0x1D78(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x1D80(0x0008) MISSED OFFSET
	class UPostProcessComponent*                       OutsideSafeZonePPComponent;                               // 0x1D88(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UClass*                                      SpectatorPawnBaseClass;                                   // 0x1D90(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ArenaCamPawnClass;                                        // 0x1D98(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HoverDronePawnClass;                                      // 0x1DA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HoverDroneAutoFramePawnClass;                             // 0x1DA8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MinimapIndicatorClass;                                    // 0x1DB0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FSpectatorOwnedCameraComponentRecord> OwnedCameraComponents;                                    // 0x1DB8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FSavedPlayerSpectatorCameraData>     SavedCameraStates;                                        // 0x1DC8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x108];                                     // 0x1DD8(0x0108) MISSED OFFSET
	TMap<class APlayerState*, bool>                    PlayerRelevancyTrackingMap;                               // 0x1EE0(0x0050) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, class AFortPlayerStateAthena*> AddedPlayersMap;                                          // 0x1F30(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData07[0x8];                                       // 0x1F80(0x0008) MISSED OFFSET
	struct FVector                                     ChaseCamOffset;                                           // 0x1F88(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x1F94(0x0004) MISSED OFFSET
	class AFortPlayerState*                            FollowedPlayerPrivate;                                    // 0x1F98(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerState*                            HoveredPlayerPrivate;                                     // 0x1FA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInputComponent*                             FullScreenMapInputComponent;                              // 0x1FA8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x20];                                      // 0x1FB0(0x0020) MISSED OFFSET
	struct FSavedSpectatorCameras                      HotkeyCameras;                                            // 0x1FD0(0x0010)
	unsigned char                                      UnknownData10[0x28];                                      // 0x1FE0(0x0028) MISSED OFFSET
	TArray<class AFortProjectileBase*>                 RecentlySpawnedProjectiles;                               // 0x2008(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData11[0x8];                                       // 0x2018(0x0008) MISSED OFFSET
	class AActor*                                      LastKnownViewTarget;                                      // 0x2020(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x20];                                      // 0x2028(0x0020) MISSED OFFSET
	class AArenaCamPawn*                               ArenaCamPawn;                                             // 0x2048(0x0008) (ZeroConstructor, IsPlainOldData)
	class AHoverDronePawn*                             DroneCamPawn;                                             // 0x2050(0x0008) (ZeroConstructor, IsPlainOldData)
	class AAutoFrameDronePawn*                         AutoFrameCamPawn;                                         // 0x2058(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortReplaySpectatorPawnBase*                SpectatorCamPawn;                                         // 0x2060(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x70];                                      // 0x2068(0x0070) MISSED OFFSET
	class UClass*                                      RelevancyZoneIndicatorClass;                              // 0x20D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AFortRelevancyZoneIndicator*                 RelevancyZoneIndicator;                                   // 0x20E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortReplayContext*                          ReplayContext;                                            // 0x20E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerSpectating");
		return ptr;
	}


	void ZoomIn(float Val);
	void ToggleSpectatorHUD();
	void SpectatorClearSavedCameraShots();
	void ShowHoveredPlayersConsoleProfile();
	void SetThirdPersonAutoFollow(int FollowMode);
	void SetStormEffectsEnabled(bool bEnable);
	void SetShareLensSettingsEnabled(bool bEnabled);
	void SetRelevancyZoneVisible(bool bVisible);
	void SetOutsideSafeZoneOpacity(float NewOpacity);
	void SetOutlinesEnabled(bool bEnable);
	void SetNewCameraType(ESpectatorCameraType NewCameraType, bool bReset);
	void SetNameplatesViewDistance(float NewDistance);
	void SetNameplatesEnabled(bool bEnable);
	void SetMapWeaponTracersEnabled(bool bEnable);
	void SetFollowedPlayer(class AFortPlayerState* NewPlayerToFollow, bool bHideMap);
	void SetDamageFXEnabled(bool bEnable);
	void SetCameraCollision(bool Collide);
	void SetBlendType(EFortSpectatorBlendType NewBlendType);
	void ResetCamera();
	void OnNextCameraMode();
	void OnGamePhaseChanged(EAthenaGamePhase GamePhase);
	bool IsPlayerInRelevancy(class AFortPlayerState* FPS);
	bool IsFollowedPlayerInBus();
	bool IsAllowedChangeCamera();
	void HandleTimelineScrubbed();
	bool GetStormEffectsEnabled();
	bool GetShareLensSettingsEnabled();
	bool GetRelevancyZoneVisible();
	float GetOutsideSafeZoneOpacity();
	bool GetOutlinesEnabled();
	float GetNameplatesViewDistance();
	bool GetNameplateShowDebug();
	bool GetNameplatesEnabled();
	float GetNameplateMinScaleDistance();
	float GetNameplateMinScale();
	float GetNameplateMaxScaleDistance();
	float GetNameplateMaxScale();
	float GetNameplateHideDistance();
	bool GetMapWeaponTracersEnabled();
	class AFortPlayerState* GetFollowedPlayer();
	bool GetDamageFXEnabled();
	class UFortSpectatorCameraComponent* GetCurrentSpectatorCameraComponent();
	EFortSpectatorBlendType GetBlendType();
	TMap<struct FUniqueNetIdRepl, class AFortPlayerStateAthena*> GetAddedPlayersMap();
	void FullscreenMapZoom(float Value);
	void FullScreenMapCursorStopDrag();
	void FullScreenMapCursorStartDrag();
	void FullScreenMapCursorMoved(const struct FVector2D& CursorWidgetLocation, const struct FVector2D& CursorDelta);
	void FollowPrevPlayer();
	void FollowPlayerByName(const struct FString& PlayerName);
	void FollowNextPlayer();
	void FollowHoveredPlayer();
	void AdjustNormalizedDistanceToPlayer(float Val);
};


// Class FortniteGame.FortLiveSpectatorController
// 0x0000 (0x20F0 - 0x20F0)
class AFortLiveSpectatorController : public AFortPlayerControllerSpectating
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLiveSpectatorController");
		return ptr;
	}

};


// Class FortniteGame.FortLiveBroadcastController
// 0x0100 (0x21F0 - 0x20F0)
class AFortLiveBroadcastController : public AFortLiveSpectatorController
{
public:
	struct FScriptMulticastDelegate                    OnToggleOffAirWidgetVisibilty;                            // 0x20F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleEventMatchActivePlayerGridVisibility;             // 0x2100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleEventMatchEliminatedPlayerGridVisibility;         // 0x2110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleEventMatchStatusVisibility;                       // 0x2120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleEventMatchScoreboardVisibility;                   // 0x2130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleTeamNumbersOnEventMatchScoreboard;                // 0x2140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleScoreOnEventMatchScoreboard;                      // 0x2150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleEventMatchScoreboardGroupByTeam;                  // 0x2160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSortEventMatchInfoByEliminations;                       // 0x2170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSortEventMatchInfoByPlace;                              // 0x2180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSortEventMatchInfoByScore;                              // 0x2190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x21A0(0x0018) MISSED OFFSET
	struct FQuickBarData                               QuickBarDefinitions[0x2];                                 // 0x21B8(0x0010) (Edit)
	class UAthenaGadgetItemDefinition*                 SpookyMistItemDefinition;                                 // 0x21D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FollowedPawnLocationIndex;                                // 0x21E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x21E4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLiveBroadcastController");
		return ptr;
	}


	void TryBeginBusPhase();
	void ServerSetFollowedPlayer(class AFortPlayerState* NewPlayerToFollow, const struct FVector& SpectatorLocation, bool bValidPos);
	void ServerOnSpectatorCameraTypeChanged(ESpectatorCameraType NewCameraMode, const struct FVector& SpectatorLocation, bool bValidPos);
	void ServerBeginBusPhase();
	void OnRep_FollowedPawnLocation();
	void NoParamDelegate__DelegateSignature();
	bool CanStartBattleBus();
};


// Class FortniteGame.FortLoadingScreenPreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortLoadingScreenPreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLoadingScreenPreviewActor");
		return ptr;
	}


	void PreviewLoadingScreen(class UAthenaLoadingScreenItemDefinition* LoadingScreen);
};


// Class FortniteGame.FortLobbyBeaconClient
// 0x0000 (0x0428 - 0x0428)
class AFortLobbyBeaconClient : public ALobbyBeaconClient
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClient");
		return ptr;
	}


	void ServerTeamChatRoomReady(const struct FString& ChatRoomId);
	void ServerSetMatchmakingLevel(const struct FUniqueNetIdRepl& InUniqueId, int MatchmakingLevel);
	void ServerSetHeroType(const struct FUniqueNetIdRepl& InUniqueId, class UFortHeroType* InHeroType);
	void ServerSetHeroSquadId(const struct FUniqueNetIdRepl& InUniqueId, const struct FName& InHeroSquadId);
	void ServerSetHeroId(const struct FUniqueNetIdRepl& InUniqueId, const struct FString& InHeroId);
	void ServerSetGadget(const struct FUniqueNetIdRepl& InUniqueId, int Index, const struct FString& GadgetPersistentName);
	void ServerSetCurrentCharacterXp(const struct FUniqueNetIdRepl& InUniqueId, int CurrentCharacterXp);
	void ServerSetConsoleUniqueNetId(const struct FUniqueNetIdRepl& InUniqueId, const struct FUniqueNetIdRepl& NewConsoleNetId);
	void ServerSetCharacterGender(const struct FUniqueNetIdRepl& InUniqueId, TEnumAsByte<EFortCustomGender> GenderType);
	void ServerIncrementHomeBaseVersion(const struct FUniqueNetIdRepl& InUniqueId);
	void ClientCreateOrJoinChatRoom(const struct FString& ChatRoomId);
};


// Class FortniteGame.FortLobbyBeaconClientPvE
// 0x0000 (0x0428 - 0x0428)
class AFortLobbyBeaconClientPvE : public AFortLobbyBeaconClient
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClientPvE");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconClientPvP
// 0x0018 (0x0440 - 0x0428)
class AFortLobbyBeaconClientPvP : public AFortLobbyBeaconClient
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0428(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClientPvP");
		return ptr;
	}


	void ServerReadyUp();
};


// Class FortniteGame.FortLobbyBeaconClientRM
// 0x0028 (0x0450 - 0x0428)
class AFortLobbyBeaconClientRM : public AFortLobbyBeaconClient
{
public:
	struct FScriptMulticastDelegate                    LocalReadiedUpStatusChanged;                              // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUpdateLobbyPlayerPadTop;                                // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0448(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconClientRM");
		return ptr;
	}


	void UpdateNewlyJoinedPlayer();
	void SetLocalReadyStatus(bool bIsReady);
	void ServerUpdateReadyStatus(bool bIsReady);
	void ServerUpdateNewlyJoinedPlayerInternal();
	void ClientBroadcastLobbyPlayerPadTop(const struct FUniqueNetIdRepl& ReadiedPlayer, bool bIsReadiedUp);
};


// Class FortniteGame.FortLobbyBeaconHost
// 0x0018 (0x03A0 - 0x0388)
class AFortLobbyBeaconHost : public ALobbyBeaconHost
{
public:
	unsigned char                                      bAllowReservationsToProceedToLobby : 1;                   // 0x0388(0x0001) (Transient)
	unsigned char                                      bWorldRecordLoaded : 1;                                   // 0x0388(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	int                                                LastReservationCountForPermissionTimeoutChange;           // 0x038C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LobbyPermissionTimeout;                                   // 0x0390(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0394(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHost");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconHostPvE
// 0x0000 (0x03A0 - 0x03A0)
class AFortLobbyBeaconHostPvE : public AFortLobbyBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostPvE");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconHostOutpost
// 0x0000 (0x03A0 - 0x03A0)
class AFortLobbyBeaconHostOutpost : public AFortLobbyBeaconHostPvE
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostOutpost");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconHostPvP
// 0x0000 (0x03A0 - 0x03A0)
class AFortLobbyBeaconHostPvP : public AFortLobbyBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostPvP");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconHostRM
// 0x0000 (0x03A0 - 0x03A0)
class AFortLobbyBeaconHostRM : public AFortLobbyBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconHostRM");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconPlayerState
// 0x00E0 (0x04B0 - 0x03D0)
class AFortLobbyBeaconPlayerState : public ALobbyBeaconPlayerState
{
public:
	struct FUniqueNetIdRepl                            ConsoleUniqueNetId;                                       // 0x03D0(0x0028) (Net)
	struct FString                                     Platform;                                                 // 0x03F8(0x0010) (Net, ZeroConstructor)
	TEnumAsByte<EFortTeam>                             TeamAffiliation;                                          // 0x0408(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	int                                                CurrentCharXP;                                            // 0x040C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MatchmakingLevel;                                         // 0x0410(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	struct FString                                     HeroId;                                                   // 0x0418(0x0010) (Net, ZeroConstructor)
	class UFortHeroType*                               HeroType;                                                 // 0x0428(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       HeroSquadId;                                              // 0x0430(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0438(0x0008) MISSED OFFSET
	int                                                LobbyTimeRemaining;                                       // 0x0440(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	int64_t                                            HomeBaseVersion;                                          // 0x0448(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             SelectedGadgets;                                          // 0x0450(0x0010) (Net, ZeroConstructor)
	ETrustedPlatformType                               TrustedPlatformType;                                      // 0x0460(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCustomGender>                     CharacterGender;                                          // 0x0461(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4E];                                      // 0x0462(0x004E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerState");
		return ptr;
	}


	void OnRep_LobbyTimeRemaining();
	void OnRep_HomeBaseVersion();
	void OnRep_HeroType();
	void OnRep_HeroSquadId();
	void OnRep_HeroId();
	void OnRep_Gadgets();
	void OnRep_ConsoleUniqueNetId();
	void OnRep_CharXP();
	void OnRep_CharacterGender();
};


// Class FortniteGame.FortLobbyBeaconPlayerStatePvE
// 0x0000 (0x04B0 - 0x04B0)
class AFortLobbyBeaconPlayerStatePvE : public AFortLobbyBeaconPlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerStatePvE");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconPlayerStatePvP
// 0x0008 (0x04B8 - 0x04B0)
class AFortLobbyBeaconPlayerStatePvP : public AFortLobbyBeaconPlayerState
{
public:
	unsigned char                                      bReadiedUp : 1;                                           // 0x04B0(0x0001) (Net, Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerStatePvP");
		return ptr;
	}


	void OnRep_bReadiedUp();
};


// Class FortniteGame.FortLobbyBeaconPlayerStateRM
// 0x0008 (0x04B8 - 0x04B0)
class AFortLobbyBeaconPlayerStateRM : public AFortLobbyBeaconPlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconPlayerStateRM");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconState
// 0x0040 (0x04B8 - 0x0478)
class AFortLobbyBeaconState : public ALobbyBeaconState
{
public:
	int                                                MatchmakingLevel;                                         // 0x0478(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	struct FString                                     MissionGeneratorClassPath;                                // 0x0480(0x0010) (Net, ZeroConstructor)
	class UFortMissionGenerator*                       CachedMissionGeneratorCDO;                                // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	ELobbyMissionGeneratorDetailsRequirement           MissionGeneratorDetailsRequirement;                       // 0x0498(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bWorldRecordLoaded;                                       // 0x0499(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1E];                                      // 0x049A(0x001E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconState");
		return ptr;
	}


	void OnRep_MissionGeneratorDetailsRequirement();
	void OnRep_MissionGeneratorClassPath();
};


// Class FortniteGame.FortLobbyBeaconStatePvE
// 0x0000 (0x04B8 - 0x04B8)
class AFortLobbyBeaconStatePvE : public AFortLobbyBeaconState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStatePvE");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconStateOutpost
// 0x0000 (0x04B8 - 0x04B8)
class AFortLobbyBeaconStateOutpost : public AFortLobbyBeaconStatePvE
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStateOutpost");
		return ptr;
	}

};


// Class FortniteGame.FortLobbyBeaconStatePvP
// 0x0008 (0x04C0 - 0x04B8)
class AFortLobbyBeaconStatePvP : public AFortLobbyBeaconState
{
public:
	int                                                PvPLobbyTimeLimit;                                        // 0x04B8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PvPLobbyTimeRemaining;                                    // 0x04BC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStatePvP");
		return ptr;
	}


	void OnRep_PvPLobbyTimeRemaining();
};


// Class FortniteGame.FortLobbyBeaconStateRM
// 0x0008 (0x04C0 - 0x04B8)
class AFortLobbyBeaconStateRM : public AFortLobbyBeaconState
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B8(0x0004) MISSED OFFSET
	int                                                LobbyTimeRemaining;                                       // 0x04BC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLobbyBeaconStateRM");
		return ptr;
	}


	void OnRep_LobbyTimeRemaining();
};


// Class FortniteGame.FortLockOnTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UFortLockOnTargetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLockOnTargetInterface");
		return ptr;
	}

};


// Class FortniteGame.FortLOSComponent
// 0x0048 (0x0138 - 0x00F0)
class UFortLOSComponent : public UActorComponent
{
public:
	float                                              LOSMaxDistance;                                           // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FOVInDegrees;                                             // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenChecks;                                        // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStopAfterHasBeenFound;                                   // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDistanceCheckOnly;                                       // 0x00FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FE(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHasBeenFound;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bHasBeenFound;                                            // 0x0110(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x27];                                      // 0x0111(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortLOSComponent");
		return ptr;
	}

};


// Class FortniteGame.FortMapMarkerTopperActor
// 0x0010 (0x0338 - 0x0328)
class AFortMapMarkerTopperActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMapMarkerTopperActor");
		return ptr;
	}


	void SetLiveMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void PreviewMapMarker(class UAthenaMapMarkerItemDefinition* Marker);
	void OnMarkerMoved();
};


// Class FortniteGame.FortMarkActor
// 0x00D8 (0x0400 - 0x0328)
class AFortMarkActor : public AActor
{
public:
	TWeakObjectPtr<class AFortPlayerStateZone>         OwningPlayer;                                             // 0x0328(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FString                                     MarkString;                                               // 0x0330(0x0010) (Net, ZeroConstructor)
	struct FText                                       PreapprovedMarkString;                                    // 0x0340(0x0018) (Net)
	bool                                               bFinishedEditing;                                         // 0x0358(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	class AActor*                                      AttachedToActor;                                          // 0x0360(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AttachmentOffset;                                         // 0x0368(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0378(0x0088)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMarkActor");
		return ptr;
	}


	void OnRep_AttachedToActor();
};


// Class FortniteGame.FortMatchAnalytics
// 0x00D8 (0x0100 - 0x0028)
class UFortMatchAnalytics : public UObject
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0028(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchAnalytics");
		return ptr;
	}


	void OnGamePhaseChanged(EAthenaGamePhase Phase);
};


// Class FortniteGame.FortMatchClientAnalytics
// 0x0158 (0x0258 - 0x0100)
class UFortMatchClientAnalytics : public UFortMatchAnalytics
{
public:
	unsigned char                                      UnknownData00[0x158];                                     // 0x0100(0x0158) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchClientAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmaking
// 0x0358 (0x0380 - 0x0028)
class UFortMatchmaking : public UObject
{
public:
	unsigned char                                      UnknownData00[0x120];                                     // 0x0028(0x0120) MISSED OFFSET
	class UClass*                                      ReservationBeaconClientClass;                             // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortPartyBeaconClient*                      ReservationBeaconClient;                                  // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortLobbyBeaconClient*                      LobbyBeaconClient;                                        // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x68];                                      // 0x0160(0x0068) MISSED OFFSET
	int                                                ControllerId;                                             // 0x01C8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET
	struct FString                                     TempZoneInstanceId;                                       // 0x01D0(0x0010) (ZeroConstructor)
	struct FFortCachedMatchmakingSearchParams          CachedMatchmakingSearchParams;                            // 0x01E0(0x00C8)
	unsigned char                                      UnknownData03[0xB8];                                      // 0x02A8(0x00B8) MISSED OFFSET
	class UFortMatchmakingPolicy*                      Matchmaking;                                              // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     LastCriticalMissionSessionId;                             // 0x0368(0x0010) (ZeroConstructor)
	EFortMatchmakingPrivacyConfiguration               LastMatchmakingPrivacyConfiguration;                      // 0x0378(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0379(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmaking");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingPolicy
// 0x0108 (0x0130 - 0x0028)
class UFortMatchmakingPolicy : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	bool                                               bMatchmakingInProgress;                                   // 0x0048(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       SessionName;                                              // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FMatchmakingParams                          CurrentParams;                                            // 0x0058(0x00B8) (Transient)
	class UFortSearchPass*                             MMPass;                                                   // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ChanceToHostAttempt;                                      // 0x0118(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x011C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingPolicy");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingCommon
// 0x0018 (0x0148 - 0x0130)
class UFortMatchmakingCommon : public UFortMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0130(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingCommon");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingContext
// 0x0198 (0x01C0 - 0x0028)
class UFortMatchmakingContext : public UFortBlueprintContext
{
public:
	struct FScriptMulticastDelegate                    OnMatchmakingStarted;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchmakingComplete;                                    // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchmakingStateChange;                                 // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchmakingFlowChanged;                                 // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyConnectionAttemptStarted;                          // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyConnectionAttemptFailed;                           // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyConnectionAttemptProceedToLobby;                   // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyWaitingForPlayers;                                 // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyWaitingForPlayersTimeUpdate;                       // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyStarted;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyDisconnected;                                      // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyConnectingToGame;                                  // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyTimeUpdated;                                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLobbyTimeExpired;                                       // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalReadyUpStatusChange;                               // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWorldRecordLoadedChanged;                               // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRejoinCheckCompleted;                                   // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0138(0x0004) MISSED OFFSET
	struct FFortMatchmakingConfig                      NormalConfig;                                             // 0x013C(0x0010) (Config)
	struct FFortMatchmakingConfig                      CriticalConfig;                                           // 0x014C(0x0010) (Config)
	struct FFortMatchmakingConfig                      QuickPlayConfig;                                          // 0x015C(0x0010) (Config)
	struct FFortMatchmakingConfig                      OnboardingConfig;                                         // 0x016C(0x0010) (Config)
	struct FFortMatchmakingConfig                      OutpostConfig;                                            // 0x017C(0x0010) (Config)
	struct FFortMatchmakingConfig                      PvPConfig;                                                // 0x018C(0x0010) (Config)
	int                                                MatchmakingRecommendedRatingOffset;                       // 0x019C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bMatchmakingFlowActive;                                   // 0x01A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOutpostDiscoveryFailure;                                // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingContext");
		return ptr;
	}


	void StartQuickPlay(float MinMissionDifficulty, float MaxMissionDifficulty);
	bool StartOnboardingMission();
	void StartMatchmaking();
	void StartCriticalMission(float MinMissionDifficulty, float MaxMissionDifficulty);
	void SetMatchmakingFlowActive(bool InFlow);
	void SetCustomMatchmakingKey(const struct FString& Key);
	void ReadyUp();
	bool NeedToCheckRejoinStatus();
	bool JoinFromLobby();
	bool IsWorldRecordLoaded();
	bool IsWaitingOnUpdateManager();
	bool IsOutpostPermitted();
	bool IsMatchmakingLocal();
	bool IsMatchmakingFlowActive();
	bool IsJoinableGameAvailable();
	bool IsInputBasedMatchmakingEnabled();
	bool IsInLobby();
	bool IsCustomMatchmakingKeyEnabled();
	bool IsConnectedToGame();
	struct FText GetMatchmakingFillText(bool bDesiredFill);
	float GetLobbyWaitForPlayersTimeRemaining();
	class AFortLobbyBeaconClient* GetLobbyBeaconClient();
	ECommonInputType GetInputBasedMatchmakingPool(bool* bIsDefaultPool, bool* bEntirePartyUsingTargetPoolInput);
	struct FText GetDeprecatedNonInputBasedPlayAgainstText();
	struct FString GetCustomMatchmakingKey();
	void EnterPvPFOB();
	void EnterOutpost();
	void DisplayAntiTaxiError();
	void DisconnectFromLobby();
	void CheckRejoinStatus();
	void CancelMatchmaking();
};


// Class FortniteGame.FortMatchmakingMissionCommon
// 0x0010 (0x0140 - 0x0130)
class UFortMatchmakingMissionCommon : public UFortMatchmakingPolicy
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingMissionCommon");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingCriticalMission
// 0x0000 (0x0140 - 0x0140)
class UFortMatchmakingCriticalMission : public UFortMatchmakingMissionCommon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingCriticalMission");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingGather
// 0x0020 (0x0150 - 0x0130)
class UFortMatchmakingGather : public UFortMatchmakingPolicy
{
public:
	float                                              ChanceToJoinInProgress;                                   // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0134(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingGather");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingPvE
// 0x0000 (0x0148 - 0x0148)
class UFortMatchmakingPvE : public UFortMatchmakingCommon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingPvE");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingQuickPlay
// 0x0000 (0x0140 - 0x0140)
class UFortMatchmakingQuickPlay : public UFortMatchmakingMissionCommon
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingQuickPlay");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingSingleSession
// 0x0040 (0x0170 - 0x0130)
class UFortMatchmakingSingleSession : public UFortMatchmakingPolicy
{
public:
	struct FFortInviteSessionParams                    CurrentSessionParams;                                     // 0x0130(0x0038) (Transient)
	class UFortSessionHelper*                          SessionHelper;                                            // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingSingleSession");
		return ptr;
	}

};


// Class FortniteGame.FortMatchmakingV2
// 0x0388 (0x03B0 - 0x0028)
class UFortMatchmakingV2 : public UObject
{
public:
	struct FString                                     MMSVersionCompatability;                                  // 0x0028(0x0010) (ZeroConstructor, Config)
	struct FString                                     MMSTicketURLClient;                                       // 0x0038(0x0010) (ZeroConstructor, Config)
	float                                              MMSPingInterval;                                          // 0x0048(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCustomKeyEnabled;                                        // 0x004C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              UpdateCheckInterval;                                      // 0x0050(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnablePrivateMatchUpdateCheck;                           // 0x0054(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              MatchmakingRetryInterval;                                 // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           MaxMatchmakingRetries;                                    // 0x005C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FMMSAltDomainRecord>                 AltDomainRecords;                                         // 0x0060(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0070(0x0010) MISSED OFFSET
	float                                              LogSubmitChance;                                          // 0x0080(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                LogTailKb;                                                // 0x0084(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2A0];                                     // 0x0088(0x02A0) MISSED OFFSET
	struct FFortTimeToMatchTracker                     TimeToMatchTracker;                                       // 0x0328(0x0080)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchmakingV2");
		return ptr;
	}

};


// Class FortniteGame.FortMatchServerAnalytics
// 0x0018 (0x0118 - 0x0100)
class UFortMatchServerAnalytics : public UFortMatchAnalytics
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0100(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMatchServerAnalytics");
		return ptr;
	}

};


// Class FortniteGame.FortAsyncAction_CalendarEventWatcherBase
// 0x0058 (0x0088 - 0x0030)
class UFortAsyncAction_CalendarEventWatcherBase : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnEventActive;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventUpdated;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEventEnded;                                             // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortGameInstance*                           MyGameInstance;                                           // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0068(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_CalendarEventWatcherBase");
		return ptr;
	}

};


// Class FortniteGame.FortAsyncAction_CalendarMultiEventWatcher
// 0x0000 (0x0088 - 0x0088)
class UFortAsyncAction_CalendarMultiEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_CalendarMultiEventWatcher");
		return ptr;
	}


	class UFortAsyncAction_CalendarMultiEventWatcher* STATIC_WatchCalendarEvents(class UObject* WorldContextObject, TArray<struct FString> EventsToWatch);
};


// Class FortniteGame.FortAsyncAction_CalendarEventWatcher
// 0x0000 (0x0088 - 0x0088)
class UFortAsyncAction_CalendarEventWatcher : public UFortAsyncAction_CalendarEventWatcherBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_CalendarEventWatcher");
		return ptr;
	}


	class UFortAsyncAction_CalendarEventWatcher* STATIC_WatchCalendarEvent(class UObject* WorldContextObject, const struct FString& EventToWatch);
};


// Class FortniteGame.FortAsyncAction_MCPContextUpgradeItem
// 0x0020 (0x0050 - 0x0030)
class UFortAsyncAction_MCPContextUpgradeItem : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnMCPRequestComplete;                                     // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UFortMcpContext>              MCPContext;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UFortItem>                    ItemToUpgrade;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_MCPContextUpgradeItem");
		return ptr;
	}


	class UFortAsyncAction_MCPContextUpgradeItem* STATIC_UpgradeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToUpgrade);
	void OnMCPRequestComplete__DelegateSignature();
};


// Class FortniteGame.FortAsyncAction_MCPContextRecycleItems
// 0x0028 (0x0058 - 0x0030)
class UFortAsyncAction_MCPContextRecycleItems : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnMCPRequestComplete;                                     // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UFortMcpContext>              MCPContext;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class UFortItem>>            ItemsToRecycle;                                           // 0x0048(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_MCPContextRecycleItems");
		return ptr;
	}


	class UFortAsyncAction_MCPContextRecycleItems* STATIC_RecycleItems(class UFortMcpContext* MCPContext, TArray<class UFortItem*> ItemsToRecycle);
	void OnMCPRequestComplete__DelegateSignature();
};


// Class FortniteGame.FortAsyncAction_MCPContextConsumeItem
// 0x0048 (0x0078 - 0x0030)
class UFortAsyncAction_MCPContextConsumeItem : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnMCPRequestComplete;                                     // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UFortMcpContext>              MCPContext;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UFortItem>                    ItemToConsume;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FUniqueNetIdRepl                            TargetAccountId;                                          // 0x0050(0x0028)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_MCPContextConsumeItem");
		return ptr;
	}


	void OnMCPRequestComplete__DelegateSignature();
	class UFortAsyncAction_MCPContextConsumeItem* STATIC_ConsumeItem(class UFortMcpContext* MCPContext, class UFortItem* ItemToConsume, const struct FUniqueNetIdRepl& TargetAccountId);
};


// Class FortniteGame.FortMcpContext
// 0x03C8 (0x03F0 - 0x0028)
class UFortMcpContext : public UBlueprintContextBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHeroesChanged;                                          // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGiftBoxRemovedDelegate;                                 // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnXpBoostChanged;                                         // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFounderGranted;                                         // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDailyRewardTokenGranted;                                // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalAccountInfoChanged;                                // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCurrentlyViewedAccountInfoChanged;                      // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FMcpPrivacySettings                         PrivacySettings;                                          // 0x00A0(0x0002) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMissionRewardsOpened;                                   // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionRewardsOpenFailed;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionAlertRewardsOpened;                              // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDifficultyIncreaseRewardsClaimed;                       // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDifficultyIncreaseRewardsClaimFailed;                   // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemCacheRewardsClaimed;                                // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemCacheRewardsClaimFailed;                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceCollectorClaimed;                               // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConversionComplete;                                     // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRarityUpgraded;                                         // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransmogComplete;                                       // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransmogFailed;                                         // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLiveStreamingQuestWindowStarts;                         // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLiveStreamingQuestWindowEnds;                           // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLiveStreamingQuestWindowSelectedViewers;                // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOfferPurchaseComplete;                                  // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRealMoneyPurchaseComplete;                              // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x60];                                      // 0x01B8(0x0060) MISSED OFFSET
	TArray<struct FFriendCode>                         CachedFriendCodes;                                        // 0x0218(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FScriptDelegate>                     PendingFriendCodeOnCompleteDelegates;                     // 0x0228(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0238(0x0010) MISSED OFFSET
	double                                             MinTimeBetweenFriendCodeRequestsSeconds;                  // 0x0248(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	struct FText                                       FriendCodeMessageTitle;                                   // 0x0250(0x0018) (Edit, Config)
	TArray<struct FFriendCodeLocString>                FriendCodeMessageTitleLocTexts;                           // 0x0268(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	struct FText                                       FriendCodeMessageBody;                                    // 0x0278(0x0018) (Edit, Config)
	struct FText                                       FriendCodeMessageDetails;                                 // 0x0290(0x0018) (Edit, Config)
	TArray<struct FFriendCodeLocString>                FriendCodeMessageDetailsLocTexts;                         // 0x02A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	unsigned char                                      UnknownData04[0xD0];                                      // 0x02B8(0x00D0) MISSED OFFSET
	struct FScriptDelegate                             DisplayPurchaseWidget;                                    // 0x0388(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             DismissPurchaseWidget;                                    // 0x0398(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             DisplayLoginWidget;                                       // 0x03A8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             DismissLoginWidget;                                       // 0x03B8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             DisplayAccountCreationWidget;                             // 0x03C8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptDelegate                             DismissAccountCreationWidget;                             // 0x03D8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData05[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpContext");
		return ptr;
	}


	void UpgradeItemRarity(class UFortItem* ItemToUpgrade);
	void UpdatePrivacySettings(const struct FMcpPrivacySettings& NewSettings, const struct FScriptDelegate& OnComplete);
	void TransmogItem(class UFortConversionControlItemDefinition* ControlKeyItem, TArray<class UFortItem*> ItemsToSacrifice);
	bool StartExpedition(class UFortExpeditionItem* Expedition, float SuccessChance, const struct FName& SquadId, float SquadRating, TArray<class UFortItem*> SlottedSquadItems, TArray<int> SlotIndices, TArray<float> ItemRatingMods, float GlobalMod);
	void SetItemFavoriteStatus(class UFortAccountItem* Item, bool bFavorite, bool ShouldDeferMarking);
	void SetBansViewed(const struct FScriptDelegate& OnBanAcknowledged);
	void SetAffiliateName(const struct FString& Name, const struct FScriptDelegate& OnAffilateNameSetAcknowledged);
	void SendFriendCodePlatformMessage(const struct FFriendCode& FriendCode, const struct FScriptDelegate& OnCompleteDelegate);
	void RemoveGiftBox(class UFortGiftBoxItem* GiftBoxToRemove);
	void RegisterForEpicPurchasingDisplay(const struct FScriptDelegate& DisplayCallback, const struct FScriptDelegate& DismissCallback);
	void RecycleItemBatch(TArray<class UFortItem*> ItemsToRecycle);
	void RecycleItem(class UFortItem* ItemToRecycle);
	void ReadPrivacySettings(const struct FScriptDelegate& OnComplete);
	void QueryUnredeemedFriendCodes(const struct FScriptDelegate& OnCompleteDelegate);
	void PurchaseRealMoneyCatalogEntry(const struct FString& OfferId, const struct FScriptDelegate& Callback);
	EOfferPurchaseError PurchaseOfferAsGift(const struct FString& OfferId, int Quantity, int PriceIndex, TArray<struct FString> ReceiverAccountIds, const struct FString& GiftWrapTemplateId, const struct FString& UserMessageToRecipients, const struct FScriptDelegate& OnComplete);
	EOfferPurchaseError PurchaseOffer(const struct FString& OfferId, int PriceIndex, const struct FScriptDelegate& Callback, int Quantity);
	void OpenMissionRewards();
	void OnSendFriendCodePlatformMessageComplete__DelegateSignature(bool bMessageSent);
	void OnQueryUnredeemedFriendCodesComplete__DelegateSignature(bool bSuccess, TArray<struct FFriendCode> FriendCodes);
	void OnIssueFriendCodeComplete__DelegateSignature(bool bSuccess, const struct FFriendCode& FriendCode);
	void OnDownloadEULAComplete__DelegateSignature(bool bSuccessful, const struct FText& EULAText);
	void MarkItemSeen(class UFortAccountItem* ItemToMarkSeen);
	void ListMtxPackages(const struct FScriptDelegate& Callback, TArray<struct FString> StorefrontNames);
	bool IsValid(const struct FString& OfferId);
	bool IsUserCurrentlyBanned(const struct FMcpBanInfo& BanInfo);
	void IssueFriendCode(const struct FScriptDelegate& OnCompleteDelegate);
	bool IsRealMoneyPurchasePending();
	bool IsOwned(const struct FString& OfferId);
	bool IsLocalPlayersUniqueID(const struct FUniqueNetIdRepl& PlayerID);
	bool IsDailyRewardAvailable(int* OutMinutesUntilNextReward);
	bool IsAllowedConversionIndex(class UFortItem* ItemToConvert, int RecipeIndex);
	bool HasPendingMissionAlertRewards();
	bool HasPendingDifficultyIncreaseRewards();
	bool HasMfaBeenEnabledAtSomePoint();
	bool HasEULADownloaded();
	void GrantPendingMissionAlertRewards();
	void GrantPendingDifficultyIncreaseRewards();
	int GetXpBoostBalance();
	int GetUpgradeXPBalance(EFortItemType ItemTypeToBeUpgraded);
	struct FString GetTencentIdString();
	int GetSchematicXpBalance();
	int GetRestXpBonusPercent();
	int GetRestXpBalance();
	int GetPlayersXPPercentContributionToLocalPlayer(const struct FUniqueNetIdRepl& PlayerID);
	int GetPersonnelXpBalance();
	int GetPersonalXpBonusPercent();
	void GetPendingItemCacheRewards(TArray<class UFortItem*>* OutItemCacheRewards);
	int GetNumFriendCodesToIssue(const struct FString& CodeType);
	class UFortGiftBoxItem* GetNextMessage();
	class UFortGiftBoxItem* GetNextGiftBox();
	class UFortMcpProfileCampaign* GetMcpProfile();
	void GetLocalAccountInfo(struct FFortPrivateAccountInfo* Result);
	struct FFortAthenaLoadout GetLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	void GetHomeBaseInfoForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId, struct FFortHomeBaseInfo* Result);
	void GetHomeBaseInfo(struct FFortHomeBaseInfo* Result);
	int GetHeroXpBalance();
	int GetGroupXpBonusPercent();
	struct FText GetFriendCodeDisplayName(const struct FFriendCode& FriendCode);
	struct FText GetFriendCodeDescription(const struct FFriendCode& FriendCode);
	struct FText GetEULAText();
	class UFortHero* GetDefaultHero();
	void GetCurrentlyViewedAccountInfo(struct FFortPublicAccountInfo* Result);
	class UFortMcpProfileCommonPublic* GetCommonPublicMcpProfile();
	class UFortMcpProfileCommonCore* GetCommonCoreMcpProfile();
	struct FFortCampaignLoadout GetCampaignLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId);
	struct FMcpBanInfo GetBanInfo();
	struct FTimespan GetBanDuration(const struct FMcpBanInfo& BanInfo);
	class UFortMcpProfileAthena* GetAthenaProfile();
	struct FString GetAppName();
	void GetAllResourceCollectors(TArray<class UFortCollectedResourceItem*>* ResourceCollectorsOwned);
	void GetAllHeroes(TArray<class UFortHero*>* Result);
	void GetAllAlterations(TEnumAsByte<EFortAlteration> InAlterationType, TArray<class UFortAlterationItem*>* OutAlterations);
	struct FString GetAffiliateName();
	class UFortAccountItem* GetAccountItemWithDefinition(class UFortAccountItemDefinition* AccountItemDefinition);
	void DownloadEULA(const struct FScriptDelegate& OnCompleteDelegate);
	bool DoesPlatformSupportFriendCodes();
	void DisplayEmptyStoreDialog();
	void ConvertItem(class UFortItem* ItemToConvert, int RecipeIndex);
	void CollectExpedition(class UFortExpeditionItem* Expedition);
	void ClaimResourceCollectors(TArray<class UFortCollectedResourceItem*> CollectorTypes);
	void ClaimItemCacheReward(class UFortItem* ItemCache);
	void ClaimAllResourceCollectors();
	EOfferPurchaseError CanPurchaseOffer(const struct FString& OfferId, int PriceIndex, int Quantity);
	EOfferPurchaseError CanGiftOffer(const struct FString& OfferId, TArray<struct FString> ReceiverAccountIds, const struct FString& GiftWrapTemplateId, const struct FString& UserMessageToRecipients, int PriceIndex);
	void CancelEpicPurchasingDisplay();
	bool AreMissionRewardsAvailable();
	void ApplyAlteration(class UFortAlterableItem* Item, class UFortAlterationItem* AlterationToApply);
	void AbandonExpedition(class UFortExpeditionItem* Expedition);
};


// Class FortniteGame.FortMcpProfile
// 0x0040 (0x0218 - 0x01D8)
class UFortMcpProfile : public UMcpProfile
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x01D8(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfile");
		return ptr;
	}


	void MarkItemSeen(TArray<struct FString> ItemIds, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileSubgame
// 0x0028 (0x0240 - 0x0218)
class UFortMcpProfileSubgame : public UFortMcpProfile
{
public:
	struct FFortSubgameClientSettings                  CachedClientSettings;                                     // 0x0218(0x0010)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0228(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileSubgame");
		return ptr;
	}


	void UpdateQuests(TArray<struct FFortQuestObjectiveCompletion> Advance, struct FDedicatedServerUrlContext* Context);
	void UpdateQuestClientObjectives(TArray<struct FFortQuestObjectiveCompletion> Advance, struct FClientUrlContext* Context);
	void SetPinnedQuests(TArray<struct FString> PinnedQuestIds, struct FClientUrlContext* Context);
	void SetItemFavoriteStatusBatch(TArray<struct FString> ItemIds, TArray<bool> itemFavStatus, struct FClientUrlContext* Context);
	void SetItemFavoriteStatus(const struct FString& TargetItemId, bool bFavorite, struct FClientUrlContext* Context);
	void ServerQuestLogin(const struct FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void MarkNewQuestNotificationSent(TArray<struct FString> ItemIds, struct FClientUrlContext* Context);
	void FortRerollDailyQuest(const struct FString& QuestId, struct FClientUrlContext* Context);
	void ClientQuestLogin(struct FClientUrlContext* Context);
	void ClaimQuestReward(const struct FString& QuestId, int SelectedRewardIndex, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileAthena
// 0x01B8 (0x03F8 - 0x0240)
class UFortMcpProfileAthena : public UFortMcpProfileSubgame
{
public:
	unsigned char                                      UnknownData00[0x1B8];                                     // 0x0240(0x01B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileAthena");
		return ptr;
	}


	void SetBattleRoyaleBanner(const struct FString& HomebaseBannerIconId, const struct FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
	void ReportConsumableUsed(int UsedQuantity, const struct FString& ItemType, struct FDedicatedServerUrlContext* Context);
	bool HasPurchasedSeasonBook();
	int GetSeasonMatchXpBoost();
	bool GetSeasonLevelUpReward(int SeasonLevel, struct FFortItemInstanceQuantityPair* Reward, int* RewardLevel);
	struct FAthenaSeasonRewardLevelInfo GetSeasonLevelInfo(int SeasonLevel);
	int GetSeasonFriendMatchXpBoost();
	class UAthenaSeasonItemDefinition* GetActiveSeasonDefinition();
	void EquipBattleRoyaleCustomization(EAthenaCustomizationCategory SlotName, const struct FString& ItemToSlot, int IndexWithinSlot, TArray<struct FMcpVariantReader> VariantUpdates, struct FClientUrlContext* Context);
	void EndBattleRoyaleGame(TArray<struct FFortQuestObjectiveCompletion> Advance, const struct FString& PlaylistId, const struct FAthenaMatchStats& MatchStats, int FriendshipXpBoost, int CosmeticXpBoost, float AntiAddictionPlayTimeMultiplier, bool ShouldAccumulateToProfileStats, bool ShouldSaveToRecentGameLists, TArray<struct FString> Medals, struct FDedicatedServerUrlContext* Context);
	bool CanPurchaseSeasonBook();
	void BulkEquipBattleRoyaleCustomization(TArray<struct FFortAthenaLoadoutData> LoadoutData, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileAthenaStats
// 0x0058 (0x0270 - 0x0218)
class UFortMcpProfileAthenaStats : public UFortMcpProfile
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0218(0x0010) MISSED OFFSET
	class UAthenaSeasonStats*                          LifeTimeStats;                                            // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0230(0x0018) MISSED OFFSET
	TArray<class UAthenaSeasonStats*>                  LifeTimeAndSeasonStatsList;                               // 0x0248(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0258(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileAthenaStats");
		return ptr;
	}


	class UAthenaSeasonStats* GetLifetimeStats();
	TArray<class UAthenaSeasonStats*> GetLifeTimeAndSeasonList();
};


// Class FortniteGame.FortMcpProfileCampaign
// 0x0088 (0x02C8 - 0x0240)
class UFortMcpProfileCampaign : public UFortMcpProfileSubgame
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0240(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileCampaign");
		return ptr;
	}


	void UpgradeItemRarity(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeItem(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void UpgradeAlteration(const struct FString& TargetItemId, int AlterationSlot, struct FClientUrlContext* Context);
	void UpdateBuildingLevelAndRating(const struct FString& BuildingId, int LastBuildingLevel, int LastBuildingRating, struct FClientUrlContext* Context);
	void UnslotItemFromCollectionBook(const struct FString& ItemId, const struct FString& Specific, const struct FString& TemplateId, struct FClientUrlContext* Context);
	void UnslotAllWorkers(TArray<struct FString> BuildingIds, struct FClientUrlContext* Context);
	void UnloadWarehouse(TArray<struct FString> ResourceTypes, struct FClientUrlContext* Context);
	void UnassignAllSquads(TArray<struct FString> SquadIds, struct FClientUrlContext* Context);
	void TransmogItem(const struct FString& TransmogKeyTemplateId, TArray<struct FString> SacrificeItemIds, struct FClientUrlContext* Context);
	void StartPrimaryMission(TArray<struct FFortQuestObjectiveCompletion> Advance, const struct FString& MatchmakingSessionId, const struct FString& MissionName, struct FDedicatedServerUrlContext* Context);
	void StartExpedition(const struct FString& ExpeditionId, const struct FString& SquadId, TArray<struct FString> ItemIds, TArray<int> SlotIndices, struct FClientUrlContext* Context);
	void SlotItemInCollectionBook(const struct FString& ItemId, struct FClientUrlContext* Context);
	void SkipTutorial(struct FClientUrlContext* Context);
	void SetModeLoadout(const struct FFortSavedModeLoadout& ModeLoadout, const struct FString& HeroId, const struct FFortSavedModeLoadout& HeroModeLoadout, struct FClientUrlContext* Context);
	void SetHeroModeLoadout(const struct FString& HeroId, const struct FFortSavedModeLoadout& ModeLoadout, struct FClientUrlContext* Context);
	void SetGameplayStats(TArray<struct FFortPersistentGameplayStatValue> GameplayStats, struct FClientUrlContext* Context);
	void RespecAlteration(const struct FString& TargetItemId, int AlterationSlot, const struct FString& AlterationId, struct FClientUrlContext* Context);
	void ResearchItemFromCollectionBook(const struct FString& TemplateId, struct FClientUrlContext* Context);
	void RefreshExpeditions(struct FClientUrlContext* Context);
	void RecycleItemBatch(TArray<struct FString> TargetItemIds, struct FClientUrlContext* Context);
	void RecycleItem(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void PurchaseHomebaseNode(const struct FString& NodeID, struct FClientUrlContext* Context);
	void OpenCardPackBatch(TArray<struct FString> CardPackItemIds, struct FClientUrlContext* Context);
	void OpenCardPack(const struct FString& CardPackItemId, int SelectionIdx, struct FClientUrlContext* Context);
	void ModifyMission(const struct FString& MatchmakingSessionId, const struct FString& Difficulty, struct FDedicatedServerUrlContext* Context);
	void FailsafeSaveMissionResults(const struct FEndZoneScoreAndAwards& PlayerScoreData, const struct FString& MatchmakingSessionId, const struct FString& MissionName, const struct FString& MissionStatus, int DifficultyIncreaseTier, struct FDedicatedServerUrlContext* Context);
	void EquipCharCosmetic(const struct FString& CharacterId, const struct FString& CosmeticId, int TypeId, struct FClientUrlContext* Context);
	void EquipCampaignCustomization(ECampaignCustomizationCategory SlotName, const struct FString& ItemToSlot, int IndexWithinSlot, struct FClientUrlContext* Context);
	void EndPrimaryMission(TArray<struct FFortQuestObjectiveCompletion> Advance, const struct FString& MatchmakingSessionId, const struct FString& MissionName, const struct FString& MissionStatus, TArray<struct FFortQuestEarnedBadgeData> EarnedBadgeData, TArray<struct FString> EarnedItemCaches, int DifficultyIncreaseTier, int NumMissionPoints, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context);
	void EndMatch(TArray<struct FAccountIdAndMatchEndData> PlayersAndMatchEndData, const struct FString& MatchmakingSessionId, const struct FString& MissionName, const struct FString& MissionStatus, int DifficultyIncreaseTier, struct FDedicatedServerUrlContext* Context);
	void EarnScore(TArray<struct FAccountIdAndScore> PlayersAndScores, const struct FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context);
	void ConvertLegacyAlterations(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertItem(const struct FString& TargetItemId, int ConversionIndex, struct FClientUrlContext* Context);
	void ConsumeItems(TArray<struct FString> ItemsToConsumeIds, TArray<int> ItemCountsToConsume, const struct FString& ConsumeReason, struct FDedicatedServerUrlContext* Context);
	void CollectExpedition(const struct FString& ExpeditionTemplate, const struct FString& ExpeditionId, struct FClientUrlContext* Context);
	void ClaimMissionAlertRewards(struct FClientUrlContext* Context);
	void ClaimLoginReward(struct FClientUrlContext* Context);
	void ClaimDifficultyIncreaseRewards(struct FClientUrlContext* Context);
	void ClaimCollectionBookRewards(int RequiredXp, int SelectedRewardIndex, struct FClientUrlContext* Context);
	void ClaimCollectedResources(TArray<struct FString> CollectorsToClaim, struct FClientUrlContext* Context);
	void AssignWorkerToSquadBatch(TArray<struct FString> CharacterIds, TArray<struct FString> SquadIds, TArray<int> SlotIndices, struct FClientUrlContext* Context);
	void AssignWorkerToSquad(const struct FString& CharacterId, const struct FString& SquadId, int SlotIndex, struct FClientUrlContext* Context);
	void ApplyAlteration(const struct FString& TargetItemId, const struct FString& AlterationItemId, struct FClientUrlContext* Context);
	void ActivateConsumable(const struct FString& TargetItemId, const struct FString& TargetAccountId, struct FClientUrlContext* Context);
	void AbandonExpedition(const struct FString& ExpeditionId, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileCollectionBook
// 0x0000 (0x0218 - 0x0218)
class UFortMcpProfileCollectionBook : public UFortMcpProfile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileCollectionBook");
		return ptr;
	}


	void UpgradeSlottedItem(const struct FString& TargetItemId, struct FClientUrlContext* Context);
	void ConvertSlottedItem(const struct FString& TargetItemId, int ConversionIndex, struct FClientUrlContext* Context);
	void ClaimCollectionBookPageRewards(const struct FString& PageTemplateId, const struct FString& SectionId, int SelectedRewardIndex, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileCommonCore
// 0x00F0 (0x0308 - 0x0218)
class UFortMcpProfileCommonCore : public UFortMcpProfile
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0218(0x0098) MISSED OFFSET
	struct FString                                     ListCatalogEntriesUrl;                                    // 0x02B0(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x44];                                      // 0x02C0(0x0044) MISSED OFFSET
	int                                                AffiliateExpirationSeconds;                               // 0x0304(0x0004) (ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileCommonCore");
		return ptr;
	}


	void TwitchUpdateBroadcasterRegistration(const struct FString& AccessToken, const struct FString& ChannelId, struct FClientUrlContext* Context);
	void SetReceiveGiftsEnabled(bool bReceiveGifts, struct FClientUrlContext* Context);
	void SetMtxPlatform(const struct FString& NewPlatform, struct FClientUrlContext* Context);
	void SetBansViewed(struct FClientUrlContext* Context);
	void SetAffiliateName(const struct FString& AffiliateName, struct FClientUrlContext* Context);
	void RemoveGiftBox(const struct FString& GiftBoxItemId, struct FClientUrlContext* Context);
	void RefundMtxPurchase(const struct FString& PurchaseId, struct FClientUrlContext* Context);
	void IssueFriendCode(const struct FString& CodeTokenType, struct FClientUrlContext* Context);
	void ClaimMfaEnabled(bool bClaimForStw, struct FClientUrlContext* Context);
	void ClaimImportFriendsReward(ESocialImportPanelPlatform Network, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileCommonPublic
// 0x0058 (0x0270 - 0x0218)
class UFortMcpProfileCommonPublic : public UFortMcpProfile
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0218(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileCommonPublic");
		return ptr;
	}


	void SetHomebaseName(const struct FString& HomebaseName, struct FClientUrlContext* Context);
	void SetHomebaseBanner(const struct FString& HomebaseBannerIconId, const struct FString& HomebaseBannerColorId, struct FClientUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileMetadata
// 0x0000 (0x0218 - 0x0218)
class UFortMcpProfileMetadata : public UFortMcpProfile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileMetadata");
		return ptr;
	}


	void UpdateOutpostCore(const struct FString& CoreId, const struct FFortOutpostCoreInfo& CoreInfo, struct FDedicatedServerUrlContext* Context);
	void UpdateDeployableBaseTierProgression(const struct FString& DeployableBaseItemId, const struct FString& ProgressionLayoutGuid, int TierDefeated, struct FDedicatedServerUrlContext* Context);
	void CreateOrUpgradeOutpostItem(const struct FString& TemplateId, struct FClientUrlContext* Context);
	void CreateDeployableBaseItem(const struct FString& TemplateId, struct FDedicatedServerUrlContext* Context);
};


// Class FortniteGame.FortMcpProfileWorld
// 0x01A8 (0x03C0 - 0x0218)
class UFortMcpProfileWorld : public UFortMcpProfile
{
public:
	TArray<struct FFortWorldProfileUpdateRequest>      UpdateRequests;                                           // 0x0218(0x0010) (ZeroConstructor)
	struct FFortWorldPlayerLoadout                     CachedPlayerLoadout;                                      // 0x0228(0x0140)
	class AFortInventory*                              FortInventory;                                            // 0x0368(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UFortWorldItem*>                      WorldItemsCachedForRejoin;                                // 0x0370(0x0010) (ZeroConstructor)
	bool                                               bIsInventoryInitialized;                                  // 0x0380(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3F];                                      // 0x0381(0x003F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpProfileWorld");
		return ptr;
	}


	void UnlockProfiles(const struct FString& Code, struct FDedicatedServerUrlContext* Context);
	void StorageTransfer(TArray<struct FItemTransferOperation> TransferOperations, struct FClientUrlContext* Context);
	void ModifyQuickbar(TArray<struct FString> PrimaryQuickbarChoices, const struct FString& SecondaryQuickbarChoice, struct FClientUrlContext* Context);
	void LockProfiles(const struct FString& Code, int Timeout, struct FDedicatedServerUrlContext* Context);
	void InitializeTheater(const struct FString& TheaterGuid, struct FDedicatedServerUrlContext* Context);
	void FabricateItem(const struct FString& TemplateId, struct FDedicatedServerUrlContext* Context);
	void DisintegrateItems(TArray<struct FString> itemsToDisintegrateIds, TArray<int> itemCountsToDisintegrate, struct FDedicatedServerUrlContext* Context);
	void DisassembleWorldItems(TArray<struct FItemIdAndQuantityPair> TargetItemIdAndQuantityPairs, struct FClientUrlContext* Context);
	void DestroyWorldItems(TArray<struct FString> ItemIds, struct FClientUrlContext* Context);
	void DepositPostResources(TArray<struct FString> itemsToDepositIds, TArray<int> itemCountsToDeposit, struct FDedicatedServerUrlContext* Context);
	void CraftWorldItem(const struct FString& TargetSchematicItemId, int NumTimesToCraft, struct FClientUrlContext* Context);
	void BatchUpdatePlayers_Outpost(TArray<struct FFortBatchUpdatePlayer_Update> Updates, const struct FString& OutpostId, const struct FFortOutpostCoreInfo& OutpostInfo, const struct FFortCloudSaveInfo& CloudSaveInfo, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers_DeployableBase(TArray<struct FFortBatchUpdatePlayer_Update> Updates, TArray<struct FFortBatchUpdatePlayer_DeployableBaseUpdate> DeployableBaseUpdates, struct FDedicatedServerUrlContext* Context);
	void BatchUpdatePlayers(TArray<struct FFortBatchUpdatePlayer_Update> Updates, struct FDedicatedServerUrlContext* Context);
	void AbortDisintegration(struct FDedicatedServerUrlContext* Context);
};


// Class FortniteGame.FortMcpResource
// 0x0018 (0x0040 - 0x0028)
class UFortMcpResource : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpResource");
		return ptr;
	}

};


// Class FortniteGame.FortMcpTwitch
// 0x0000 (0x0040 - 0x0040)
class UFortMcpTwitch : public UFortMcpResource
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpTwitch");
		return ptr;
	}

};


// Class FortniteGame.FortMcpUtils
// 0x01B0 (0x01D8 - 0x0028)
class UFortMcpUtils : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	struct FString                                     CreateXboxDedicatedServerSessionUrl;                      // 0x0048(0x0010) (ZeroConstructor, Config)
	struct FString                                     UnredeemedCodesUrl;                                       // 0x0058(0x0010) (ZeroConstructor, Config)
	struct FString                                     QueryUserXuidUrl;                                         // 0x0068(0x0010) (ZeroConstructor, Config)
	struct FString                                     RecordUserStatsUrl;                                       // 0x0078(0x0010) (ZeroConstructor, Config)
	struct FString                                     QueryUserStatsUrl;                                        // 0x0088(0x0010) (ZeroConstructor, Config)
	struct FString                                     QueryLeaderboardUrl;                                      // 0x0098(0x0010) (ZeroConstructor, Config)
	struct FString                                     QueryCohortUrl;                                           // 0x00A8(0x0010) (ZeroConstructor, Config)
	struct FString                                     InMatchTimePlayedUrl;                                     // 0x00B8(0x0010) (ZeroConstructor, Config)
	bool                                               bShouldSendTimeTracking;                                  // 0x00C8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FString                                     VoiceLoginUrl;                                            // 0x00D0(0x0010) (ZeroConstructor, Config)
	struct FString                                     VoiceJoinUrl;                                             // 0x00E0(0x0010) (ZeroConstructor, Config)
	struct FString                                     UpdateMatchmakingRatingUrl;                               // 0x00F0(0x0010) (ZeroConstructor, Config)
	struct FString                                     GetEventTournamentAndHistoryUrl;                          // 0x0100(0x0010) (ZeroConstructor, Config)
	struct FString                                     GetEventWindowHistoryUrl;                                 // 0x0110(0x0010) (ZeroConstructor, Config)
	struct FString                                     ReportTournamentStatsUrl;                                 // 0x0120(0x0010) (ZeroConstructor, Config)
	struct FString                                     PrivacySettingsUrl;                                       // 0x0130(0x0010) (ZeroConstructor, Config)
	struct FString                                     AllowHomebaseCharactersUrl;                               // 0x0140(0x0010) (ZeroConstructor, Config)
	struct FString                                     QuerySwitchEntitlementsUrl;                               // 0x0150(0x0010) (ZeroConstructor, Config)
	struct FString                                     ReportPlayerToxicityUrl;                                  // 0x0160(0x0010) (ZeroConstructor, Config)
	struct FString                                     EventCalendardTestUrl;                                    // 0x0170(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0180(0x0050) MISSED OFFSET
	int                                                DefaultLogTailLengthKb;                                   // 0x01D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpUtils");
		return ptr;
	}

};


// Class FortniteGame.FortMcpWorlds
// 0x0080 (0x00C0 - 0x0040)
class UFortMcpWorlds : public UFortMcpResource
{
public:
	struct FFortActiveTheaterInfo                      TheaterInfo;                                              // 0x0040(0x0030)
	int                                                TheaterQueryRetry;                                        // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FDateTime                                   LastTheaterRefresh;                                       // 0x0078(0x0008)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortMcpWorlds.LastWorld
	unsigned char                                      UnknownData02[0x18];                                      // 0x00A8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMcpWorlds");
		return ptr;
	}

};


// Class FortniteGame.FortMedicPackSet
// 0x01C8 (0x01F8 - 0x0030)
class UFortMedicPackSet : public UFortAttributeSet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  MaxFuel;                                                  // 0x0038(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Fuel;                                                     // 0x0058(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveMaxFuel;                                           // 0x0078(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ReserveFuel;                                              // 0x0098(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelBurnRate;                                             // 0x00B8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelRegenRate;                                            // 0x00D8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  FuelRegenDelay;                                           // 0x00F8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SelfReviveActive;                                         // 0x0118(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SelfReviveTime;                                           // 0x0138(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SelfReviveCost;                                           // 0x0158(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DamageBreaksSelfRevive;                                   // 0x0178(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Heal;                                                     // 0x0198(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  HealRadius;                                               // 0x01B8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  HealPeriod;                                               // 0x01D8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMedicPackSet");
		return ptr;
	}

};


// Class FortniteGame.MegaStormManager
// 0x0038 (0x0360 - 0x0328)
class AMegaStormManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              MaxSecondsInMegaStormUpdate;                              // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	int                                                NumBuildingActorMegaStormShouldDamagePerFrame;            // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SleepTimeAfterDamagingBuildingActors;                     // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinDelayTimeBeforeDestruction;                            // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFloorRadiusToGridConversion;                             // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0341(0x0003) MISSED OFFSET
	int                                                GridRadiusCellOffset;                                     // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MegaStormStartTime;                                       // 0x0348(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SleepTimeRemaining;                                       // 0x034C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FMegaStormCircle>                    MegaStormCircles;                                         // 0x0350(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.MegaStormManager");
		return ptr;
	}

};


// Class FortniteGame.FortMetaNavArea
// 0x0010 (0x0058 - 0x0048)
class UFortMetaNavArea : public UNavAreaMeta
{
public:
	TArray<struct FNavAgentData>                       AgentData;                                                // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea");
		return ptr;
	}

};


// Class FortniteGame.FortMetaNavArea_Obstacles
// 0x0008 (0x0050 - 0x0048)
class UFortMetaNavArea_Obstacles : public UNavAreaMeta
{
public:
	int                                                HealthThreshold;                                          // 0x0048(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea_Obstacles");
		return ptr;
	}

};


// Class FortniteGame.FortMetaNavArea_Wall
// 0x0000 (0x0058 - 0x0058)
class UFortMetaNavArea_Wall : public UFortMetaNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMetaNavArea_Wall");
		return ptr;
	}

};


// Class FortniteGame.FortMinigameLogicComponent
// 0x0080 (0x0170 - 0x00F0)
class UFortMinigameLogicComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    MinigameStartedDelegate;                                  // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MinigameEndedDelegate;                                    // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    InPlayChangedDelegate;                                    // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ResetComponentDelegate;                                   // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGameplayTagContainer                       MinigameTags;                                             // 0x0130(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	class AFortMinigameMode*                           AuthorityMinigameMode;                                    // 0x0150(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMinigameState*                          MinigameState;                                            // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMinigameState*                          CachedMinigameState;                                      // 0x0160(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsInPlay : 1;                                            // 0x0168(0x0001) (Net, Transient)
	bool                                               bRequired;                                                // 0x0169(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x016A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigameLogicComponent");
		return ptr;
	}


	void SetInPlay(bool bValue);
	void OnResetMinigameActor();
	void OnRep_IsInPlay();
	bool IsInPlay();
	void HandleMinigameStarted();
	void HandleMinigameSet();
	void HandleMinigameEnded();
};


// Class FortniteGame.FortMinigameMode
// 0x00D8 (0x0400 - 0x0328)
class AFortMinigameMode : public AInfo
{
public:
	float                                              MinigameStartTime;                                        // 0x0328(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MinigameEndTime;                                          // 0x032C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      MinigameStateClass;                                       // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	TMap<struct FString, struct FMinigameObjectiveTemplate> ObjectiveTemplates;                                       // 0x0338(0x0050) (Edit, ZeroConstructor)
	TMap<TEnumAsByte<EFortTeam>, struct FGameplayTagQuery> TeamStartQueries;                                         // 0x0388(0x0050) (Edit, ZeroConstructor)
	struct FScriptMulticastDelegate                    MinigameResetDelegate;                                    // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AFortMinigameState*                          MinigameState;                                            // 0x03E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ActiveSpawnChannel;                                       // 0x03F0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	class UFortGameplayModifierItemDefinition*         MinigameModifier;                                         // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigameMode");
		return ptr;
	}


	void StartMinigame();
	void SetMinigameState(const struct FName& NewState);
	void ResetMinigame();
	void RemoveMinigameModifier();
	void RemoveMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	void RemoveMinigameActor(class AActor* Actor);
	bool OverridePlayerSpawnLocation(class APawn* PlayerPawn, class AFortPlayerStateAthena* PlayerState, struct FVector* OutLocation);
	void K2_ResetMinigame();
	void K2_PreGameTransitionEvent();
	void InitializeMinigameModifier();
	void HandleMinigameStateSetup();
	void HandleMinigameObjectiveIncomplete(class UFortMinigameObjectiveComponent* Objective, class APlayerState* PlayerState);
	void HandleMinigameObjectiveComplete(class UFortMinigameObjectiveComponent* Objective, class APlayerState* PlayerState);
	void HandleMinigameComponentRemoved(class UFortMinigameLogicComponent* MinigameComponent);
	void HandleMinigameComponentInPlayChanged(class UFortMinigameLogicComponent* MinigameComponent);
	void HandleMinigameComponentAdded(class UFortMinigameLogicComponent* MinigameComponent);
	void HandleMinigameAborted();
	float GetMinigameRunTime();
	void EnterPreGame();
	void EndMinigame();
	class AActor* ChoosePlayerStart(class AController* Player);
	void AddMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	void AddMinigameActor(class AActor* Actor);
	void AbortMinigame();
};


// Class FortniteGame.FortMinigameObjectiveComponent
// 0x0320 (0x0490 - 0x0170)
class UFortMinigameObjectiveComponent : public UFortMinigameLogicComponent
{
public:
	struct FScriptMulticastDelegate                    ObjectiveCompleteDelegate;                                // 0x0170(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    ObjectiveIncompleteDelegate;                              // 0x0180(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    ProgressComponentAdded;                                   // 0x0190(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    ProgressComponentRemoved;                                 // 0x01A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    GroupProgressAdded;                                       // 0x01B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    GroupProgressRemoved;                                     // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    TeamProgressAdded;                                        // 0x01D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    TeamProgressRemoved;                                      // 0x01E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    PlayerProgressAdded;                                      // 0x01F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FScriptMulticastDelegate                    PlayerProgressRemoved;                                    // 0x0200(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, InstancedReference)
	struct FGameplayTagQuery                           MinigameTagQuery;                                         // 0x0210(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bOptional : 1;                                            // 0x0258(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	EObjectiveType                                     ObjectiveType;                                            // 0x0259(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCanEvaluate : 1;                                         // 0x025A(0x0001) (Edit, Net, EditConst)
	unsigned char                                      UnknownData00[0x5];                                       // 0x025B(0x0005) MISSED OFFSET
	struct FPlayerProgressArray                        GroupProgress;                                            // 0x0260(0x00C8) (Net, Transient)
	TMap<TEnumAsByte<EFortTeam>, struct FPlayerProgressArray> TeamProgress;                                             // 0x0328(0x0050) (Net, ZeroConstructor, Transient)
	TMap<struct FUniqueNetIdRepl, struct FPlayerProgressArray> PlayerProgress;                                           // 0x0378(0x0050) (Net, ZeroConstructor, Transient)
	struct FProgressArray                              ProgressComponents;                                       // 0x03C8(0x00C8) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigameObjectiveComponent");
		return ptr;
	}


	void SetCanEvaluate(bool bValue);
	void RemovePlayerProgress(class APlayerState* PlayerState, class UFortMinigameProgressComponent* ProgressComponent);
	void OnRep_TeamProgress();
	void OnRep_PlayerProgress();
	void OnRep_GroupProgress();
	void HandleProgressComponentRemoved(class UFortMinigameProgressComponent* ProgressComponent);
	void HandleProgressComponentAdded(class UFortMinigameProgressComponent* ProgressComponent);
	void HandlePlayerProgressRemoved(class APlayerState* PlayerState, class UFortMinigameProgressComponent* ProgressComponent);
	void HandlePlayerProgressAdded(class APlayerState* PlayerState, class UFortMinigameProgressComponent* ProgressComponent);
	bool GetProgressComponents(bool bOnlyInPlay, TArray<class UFortMinigameProgressComponent*>* OutProgressComponents);
	int GetPlayerProgressRemainingCount(class APlayerState* PlayerState);
	int GetPlayerProgressCount(class APlayerState* PlayerState);
	bool CanEvaluate();
	void AddPlayerProgress(class APlayerState* PlayerState, class UFortMinigameProgressComponent* ProgressComponent);
};


// Class FortniteGame.FortMinigamePlayerStartComponent
// 0x0008 (0x0178 - 0x0170)
class UFortMinigamePlayerStartComponent : public UFortMinigameLogicComponent
{
public:
	class AFortPlayerStartCreative*                    PlayerStart;                                              // 0x0170(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigamePlayerStartComponent");
		return ptr;
	}

};


// Class FortniteGame.FortMinigameProgressComponent
// 0x0098 (0x0208 - 0x0170)
class UFortMinigameProgressComponent : public UFortMinigameLogicComponent
{
public:
	struct FScriptMulticastDelegate                    ProgressStartedDelegate;                                  // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ProgressFinishedDelegate;                                 // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ProgressAbortedDelegate;                                  // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ProgressRevertedDelegate;                                 // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              ActivationTime;                                           // 0x01B0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x54];                                      // 0x01B4(0x0054) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigameProgressComponent");
		return ptr;
	}


	void StartProgress(class APlayerState* PlayerState);
	void RevertProgress(class APlayerState* PlayerState);
	bool HasActivationTime();
	void FinishProgress(class APlayerState* PlayerState);
	void AbortProgress(class APlayerState* PlayerState);
};


// Class FortniteGame.FortMinigameState
// 0x00B0 (0x03D8 - 0x0328)
class AFortMinigameState : public AInfo
{
public:
	struct FScriptMulticastDelegate                    CurrentStateChangedDelegate;                              // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRequiredObjectiveStateChanged;                          // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MinigameStartedDelegate;                                  // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    MinigameEndedDelegate;                                    // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FName                                       PreviousMinigameState;                                    // 0x0368(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMinigameMode*                           AuthorityMinigameMode;                                    // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UFortMinigameObjectiveComponent*>     Objectives;                                               // 0x0378(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	TArray<class UFortMinigameLogicComponent*>         MinigameComponents;                                       // 0x0388(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	TArray<class UFortMinigamePlayerStartComponent*>   PlayerStartComponents;                                    // 0x0398(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	class AFortPlayspace*                              PlaySpace;                                                // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	TArray<struct FPlaylistUIExtension>                UIExtensions;                                             // 0x03B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bWasIsInProgress : 1;                                     // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03C1(0x0007) MISSED OFFSET
	struct FName                                       CurrentMinigameState;                                     // 0x03C8(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	float                                              MinigameRunTime;                                          // 0x03D0(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMinigameState");
		return ptr;
	}


	void SetMinigameState(const struct FName& NewState);
	void SetMinigameRunTime(float RunTime);
	bool ReadyToStartMinigame();
	bool IsMinigameInProgress();
	bool IsMinigameComponent(class UFortMinigameLogicComponent* MinigameComponent);
	bool IsMinigameActor(class AActor* Actor);
	bool IsLogicComponentRequired(class UFortMinigameLogicComponent* LogicComp);
	bool HasMinigameStarted();
	void HandleMinigameStateChanged();
	void GetPlayerStartComponentsByTagQuery(const struct FGameplayTagQuery& TagQuery, TArray<class UFortMinigamePlayerStartComponent*>* OutPlayerStartComponents);
	int GetNumObjectives();
	struct FName GetMinigameState();
	float GetMinigameRunTime();
	void GetMinigameComponentsByTagQuery(const struct FGameplayTagQuery& TagQuery, TArray<class UFortMinigameLogicComponent*>* OutComponents);
};


// Class FortniteGame.FortVisibilityComponent
// 0x0020 (0x0110 - 0x00F0)
class UFortVisibilityComponent : public UActorComponent
{
public:
	unsigned char                                      bRegisterWithVisibilityManager : 1;                       // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bObserver : 1;                                            // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bDistanceCheck2D : 1;                                     // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCheckFacing : 1;                                         // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCheckLOS : 1;                                            // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bRevealWithMap : 1;                                       // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	EFortVisibilityBehavior                            VisibilityBehavior;                                       // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVisibilityChangedEvent;                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              Radius;                                                   // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVisibilityComponent");
		return ptr;
	}

};


// Class FortniteGame.FortMiniMapComponent
// 0x00B8 (0x01C8 - 0x0110)
class UFortMiniMapComponent : public UFortVisibilityComponent
{
public:
	struct FFortMiniMapData                            MiniMapData;                                              // 0x0110(0x0080) (Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	class UTexture2D*                                  LocalMinimapIconOverride;                                 // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UFortMiniMapIndicator>        MiniMapIndicator;                                         // 0x0198(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x01A0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMiniMapComponent");
		return ptr;
	}


	void SetupMiniMapComponent(class UTexture2D* MiniMapIcon, const struct FLinearColor& IconColor, const struct FLinearColor& PulseColor, float ColorPulsesPerSecond, float SizePulsesPerSecond);
	void SetMinimapViewableDistance(float ViewDistance);
	void SetMiniMapLocationOffset(const struct FVector& LocationOffset);
	void SetMiniMapIndicatorIsVisibleOnMiniMap(bool bVisibleOnMiniMap);
	void SetMiniMapIndicatorIsVisible(bool bVisible);
	void SetMiniMapIconSizePulsesPerSecond(float SizePulsesPerSecond);
	void SetMiniMapIconScale(const struct FVector2D& IconScale);
	void SetMiniMapIconPulseColor(const struct FLinearColor& PulseColor);
	void SetMiniMapIconColorPulsesPerSecond(float ColorPulsesPerSecond);
	void SetMiniMapIconColor(const struct FLinearColor& InColor);
	void SetMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OverrideLocalMiniMapIndicatorIsVisible(bool bVisible);
	void OverrideLocalMiniMapIcon(class UTexture2D* MiniMapIcon);
	void OnRep_MiniMapData();
};


// Class FortniteGame.FortMiniMapTeamIndicators
// 0x0238 (0x0340 - 0x0108)
class UFortMiniMapTeamIndicators : public UFortMiniMapIndicator
{
public:
	class AFortPlayerController*                       PlayerController;                                         // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSpectating;                                              // 0x0110(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class AFortPlayerControllerSpectating*             SpectatorPC;                                              // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PlatformScale;                                            // 0x0120(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0128(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 MiniMapIconBrushDBNO;                                     // 0x01B0(0x0088) (Edit, DisableEditOnInstance)
	struct FLinearColor                                MinimapIconColorSelf;                                     // 0x0238(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapIconColorTeammate;                                 // 0x0248(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapIconColorEnemy;                                    // 0x0258(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FSlateBrush                                 PlayerNameBackgroundBrush;                                // 0x0268(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateFontInfo                              PlayerNameFontInfo;                                       // 0x02F0(0x0050) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMiniMapTeamIndicators");
		return ptr;
	}

};


// Class FortniteGame.FortMissionState
// 0x0038 (0x0360 - 0x0328)
class AFortMissionState : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnUpdateUI;                                               // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionUIEvent;                                         // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bAlreadySetTimerOnce;                                     // 0x0350(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAlreadyCalledOnAllPlayersLoadedIn;                       // 0x0351(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0352(0x0002) MISSED OFFSET
	float                                              TimerForOnAllPlayersLoadedIn;                             // 0x0354(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0358(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionState");
		return ptr;
	}


	void UpdateUI();
	void SetTimerForOnAllPlayersLoadedIn(float Timer);
	void SendMissionUIEvent(const struct FGameplayTagContainer& EventTags);
	void OnWorldReady();
	void OnMatchStarted();
	void OnAllPlayersLoadedInWrapper();
	void OnAllPlayersLoadedIn();
};


// Class FortniteGame.FortMission
// 0x0340 (0x06A0 - 0x0360)
class AFortMission : public AFortMissionState
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0360(0x0010) MISSED OFFSET
	class UFortMissionInfo*                            MissionInfo;                                              // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              MissionEnemyClasses;                                      // 0x0378(0x0010) (Net, ZeroConstructor)
	class UClass*                                      BotLogicClass;                                            // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortBotMissionLogic*                        BotLogic;                                                 // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortMissionGenerator*                       MissionGenerator;                                         // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMissionGenerationCategory>            MissionCategory;                                          // 0x03A0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03A1(0x0003) MISSED OFFSET
	int                                                UIIndex;                                                  // 0x03A4(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	struct FUniqueNetIdRepl                            QuestOwnerAccount;                                        // 0x03A8(0x0028) (Net, SaveGame)
	TArray<struct FFortMissionEventName>               MissionEventNames;                                        // 0x03D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FScriptMulticastDelegate                    OnObjectivesUpdated;                                      // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMissionInfoSet;                                         // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FFortMissionPlacementActorPreferredTagInfo> PlacementActorPreferredTagData;                           // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bLoadedFromRecord;                                        // 0x0410(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFiredParTimeEvent;                                       // 0x0411(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0412(0x0002) MISSED OFFSET
	float                                              MissionActivationTime;                                    // 0x0414(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortMissionFocusDisplayData                CurrentFocusData;                                         // 0x0418(0x0020) (Net, Transient)
	bool                                               bSilentDestroyNextFrame;                                  // 0x0438(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0439(0x0007) MISSED OFFSET
	TArray<class AFortObjectiveBase*>                  ActiveObjectives;                                         // 0x0440(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FUniqueNetIdRepl>                    ParticipatingAccounts;                                    // 0x0450(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FUniqueNetIdRepl>                    ParticipatingButDisconnectedAccounts;                     // 0x0460(0x0010) (Net, ZeroConstructor, Transient)
	EFortMissionStatus                                 MissionStatus;                                            // 0x0470(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0471(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       MissionCompletionTags;                                    // 0x0478(0x0020) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bIsMissionVisible;                                        // 0x0498(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	EFortMissionAudibility                             MissionAudibility;                                        // 0x0499(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x049A(0x0002) MISSED OFFSET
	int                                                CurrentObjectiveBlockIndex;                               // 0x049C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bIsMissionVisibleOverride;                                // 0x04A0(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x04A1(0x0003) MISSED OFFSET
	struct FGuid                                       MissionGuid;                                              // 0x04A4(0x0010) (Net, SaveGame, IsPlainOldData)
	int                                                StartingDay;                                              // 0x04B4(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	class UFortMissionTimerComponent*                  TimerComponent;                                           // 0x04B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bObjectiveTimerExpireShouldFailObjectives;                // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMissionTimerExpireShouldFailMission;                     // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x04C2(0x0001) MISSED OFFSET
	bool                                               bNeedsEnemyKilledEventForAllPawns;                        // 0x04C3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChosenRewardIdx;                                          // 0x04C4(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	struct FFortBadgeCountArray                        PotentialBadgesArray;                                     // 0x04C8(0x00C0) (Net, Transient)
	unsigned char                                      UnknownData08[0xB8];                                      // 0x0588(0x00B8) MISSED OFFSET
	struct FFortGeneratedDifficultyOptions             GeneratedMissionOptions;                                  // 0x0640(0x0040)
	struct FFortMissionInstancedConfigData             ConfigData;                                               // 0x0680(0x0010) (Transient)
	unsigned char                                      UnknownData09[0x10];                                      // 0x0690(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMission");
		return ptr;
	}


	void StopMissionAIEncounter(class UFortAIEncounterInfo* EncounterToStop);
	void StopEncounterSequence(class UFortAIEncounterSequence* SequenceToStop);
	class UFortAIEncounterInfo* StartMissionAIEncounterFromGeneratedProfile(int GeneratedEncounterProfileIndex, TArray<class AActor*> TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay, bool bUseAssignments);
	class UFortAIEncounterInfo* StartMissionAIEncounter(class UClass* EncounterTemplate, TArray<class AActor*> TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay);
	TArray<class AActor*> STATIC_SpawnAtPlacementActorsAsArray(class AFortMission* Mission, bool* bSucceeded);
	void SetUiVisibility(bool bInIsMissionVisible);
	void SetToSilentDestroy();
	void SendBotLogicMessage(const struct FString& EventName);
	bool RemoveParticipantAccount(struct FUniqueNetIdRepl* AbandoningPlayerId);
	void RemoveGoalsFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FFortAIGoalInfo> GoalInfos);
	void RemoveGoalFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, const struct FFortAIGoalInfo& GoalInfo);
	void RecordResourceActorSpawn(class AActor* SpawnedActor);
	void ProvideAllPotentialBadges(TArray<struct FGameplayTag> BadgeTags);
	void OnWaveCompleted(int Tier, int Wave, EFortCompletionResult Result);
	void OnRep_UIIndex();
	void OnRep_QuestOwnerAccount();
	void OnRep_PotentialBadgesArray();
	void OnRep_MissionStatus();
	void OnRep_MissionInfo();
	void OnRep_CurrentFocusDisplayData();
	void OnRep_bIsMissionVisible();
	void OnRep_ActiveObjectives();
	bool IsPlayerParticipating(class AFortPlayerController* PlayerController);
	bool InitializeActorsForMissionMatchingItemIdentifyingQuery(class AFortMission* Mission, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* OutActorsInitialized);
	bool InitializeActorsForMission(class AFortMission* Mission, TArray<class AActor*>* OutActorsInitialized);
	bool HasMissionPar();
	void HandleEnemyKilled(class AFortPlayerController* KilledBy, class AFortPawn* KilledPawn);
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, TEnumAsByte<EFortRewardType> RewardType);
	bool GetSpawnLocationsMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<struct FVector>* SpawnLocations);
	bool GetSpawnLocationActorsMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	int GetPawnDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortPlayerController*> GetParticipatingMissionControllers();
	EFortObjectiveStatus GetObjectiveStatusByHandle(const struct FGameplayTagContainer& ObjectiveHandle);
	TArray<struct FGameplayTagContainer> GetObjectiveHandlesWithTag(const struct FGameplayTag& ObjectiveTag, int MaxNumberOfObjectives);
	class AFortObjectiveBase* GetObjectiveByHandle(const struct FGameplayTagContainer& ObjectiveHandle);
	struct FText GetMissionName();
	struct FGuid GetMissionGuid();
	float GetExpectedCompletionTime();
	int GetDaysRemainingBeforeOverPar();
	float GetCurrentFocusPercentage();
	struct FText GetCurrentFocusDisplayText();
	int GetCurrentBluGloRewards();
	class UFortMissionConfigData* GetConfigData(const struct FGameplayTag& InBucketTag);
	int GetBuildingDamageLootTier(class AFortPlayerController* PlayerController);
	TArray<class AFortObjectiveBase*> GetAllObjectives();
	bool GetAdditionalMissionSuccessBadges(TArray<class UFortWorldItemDefinition*>* SuccessItems);
	int GetAdditionalMissionCompletionMissionPoints(EFortMissionStatus CompletionStatus);
	bool GetActorsSpawnedMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnedActors);
	void FocusThisMission(const struct FText& FocusDisplayText, float FocusPercentage);
	void FindGoalLocationsForEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FVector>* OutGoalLocations);
	class UFortAIEncounterSequence* CreateEncounterSequenceByIndex(int EncounterSequenceIndex);
	class UFortAIEncounterSequence* CreateEncounterSequence(const struct FGameplayTagContainer& SequenceTags);
	EAssignmentCreationResult CreateEncounterAssignment(const struct FGameplayTagContainer& AssignmentTags, class UFortAIEncounterInfo* Encounter, class UFortAIAssignmentSettings* AssignmentSettings, class UClass* GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier);
	struct FFortMissionWeightedReward ChooseRandomReward();
	void BlueprintPostMissionLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnMissionEnd(EFortMissionStatus Status);
	void BlueprintOnActivated();
	void BlueprintCustomHandleMissionEvent(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	bool BlueprintCanPlayerParticipate(class AFortPlayerController* PlayerController);
	void AttemptMissionSave(const struct FString& OptionalSaveName);
	bool AddParticipantAccount(class AFortPlayerController* PlayerController);
	void AddGoalToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, const struct FFortAIGoalInfo& GoalInfo);
	void AddGoalToAssignment(class UFortAIAssignment* Assignment, const struct FFortAIGoalInfo& GoalInfo);
	void AddGoalsToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, class UFortAIEncounterInfo* Encounter, TArray<struct FFortAIGoalInfo> GoalInfos);
	void AddGoalsToAssignment(class UFortAIAssignment* Assignment, TArray<struct FFortAIGoalInfo> GoalInfos);
	void AddCompletionTags(const struct FGameplayTagContainer& NewCompletionTagContainer);
	void AddCompletionTag(const struct FGameplayTag& NewCompletionTag);
};


// Class FortniteGame.FortMission_ActiveThreat
// 0x0080 (0x0720 - 0x06A0)
class AFortMission_ActiveThreat : public AFortMission
{
public:
	bool                                               bStartBasedOnAthenaGamePhases;                            // 0x06A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaGamePhase                                   StartingGamePhase;                                        // 0x06A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x06A2(0x0002) MISSED OFFSET
	float                                              StartingDelay;                                            // 0x06A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StartingActiveThreatEncounterIndex;                       // 0x06A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06AC(0x0004) MISSED OFFSET
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x06B0(0x0058) (Edit, DisableEditOnInstance)
	TArray<struct FFortActiveThreatPlayerData>         PlayerData;                                               // 0x0708(0x0010) (ZeroConstructor, Transient)
	float                                              SyncedEncounterStartingTime;                              // 0x0718(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentActiveThreatEncounterIndex;                        // 0x071C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMission_ActiveThreat");
		return ptr;
	}


	void HandleAthenaGamePhaseChanged(EAthenaGamePhase GamePhase);
	void HandleAISpawned(class UFortAIEncounterInfo* Encounter, class AFortAIPawn* SpawnedEnemy);
};


// Class FortniteGame.FortMission_RiftSpawners
// 0x0120 (0x07C0 - 0x06A0)
class AFortMission_RiftSpawners : public AFortMission
{
public:
	bool                                               bStartBasedOnAthenaGamePhases;                            // 0x06A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaGamePhase                                   StartingGamePhase;                                        // 0x06A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x06A2(0x0002) MISSED OFFSET
	float                                              StartingDelay;                                            // 0x06A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAthenaSafeZonePhases;                                 // 0x06A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSynchronizeEncounterStartTimes;                          // 0x06A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x06AA(0x0002) MISSED OFFSET
	int                                                MinEncounterIndex;                                        // 0x06AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxEncounterIndex;                                        // 0x06B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x06B4(0x0004) MISSED OFFSET
	struct FFortEncounterSettings                      EncounterSettings;                                        // 0x06B8(0x0058) (Edit, DisableEditOnInstance)
	bool                                               bAllowRiftIntensification;                                // 0x0710(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0711(0x0007) MISSED OFFSET
	struct FScalableFloat                              MinDamageTriggerPercentage;                               // 0x0718(0x0020) (Edit, DisableEditOnInstance)
	struct FScalableFloat                              MaxDamageTriggerPercentage;                               // 0x0738(0x0020) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           RequiredRiftTagsQuery;                                    // 0x0758(0x0048) (Edit, DisableEditOnInstance)
	TArray<struct FFortRiftSpawnerData>                ActiveRiftSpawnerData;                                    // 0x07A0(0x0010) (ZeroConstructor, Transient)
	int                                                CurrentEncounterIndex;                                    // 0x07B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRiftSpawningInProgress;                                  // 0x07B4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x07B5(0x0003) MISSED OFFSET
	float                                              SyncedEncounterStartTime;                                 // 0x07B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMission_RiftSpawners");
		return ptr;
	}


	void HandleRiftDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void HandleRampStarted(class UFortAIEncounterInfo* Encounter);
	void HandleEncounteAllBurstEnemiesSpawned(class UFortAIEncounterInfo* Encounter);
	void HandleAthenaSafeZonePhaseChanged();
	void HandleAthenaGamePhaseChanged(EAthenaGamePhase GamePhase);
	void HandleAISpawned(class UFortAIEncounterInfo* Encounter, class AFortAIPawn* SpawnedEnemy);
};


// Class FortniteGame.FortMissionConfigData
// 0x0000 (0x0028 - 0x0028)
class UFortMissionConfigData : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionConfigData");
		return ptr;
	}

};


// Class FortniteGame.FortMissionCSVEventMap
// 0x0050 (0x0080 - 0x0030)
class UFortMissionCSVEventMap : public UPrimaryDataAsset
{
public:
	TMap<struct FName, struct FString>                 MissionMappings;                                          // 0x0030(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionCSVEventMap");
		return ptr;
	}

};


// Class FortniteGame.FortMissionGenerationData
// 0x00D8 (0x0108 - 0x0030)
class UFortMissionGenerationData : public UDataAsset
{
public:
	TArray<class UFortMissionGenerator*>               PrimaryMissionGenerators;                                 // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              PrimaryMissionMinPowerPointsUsagePercentage;              // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FCurveTableRowHandle                        SecondaryMissionPowerPointsBudgetMultiplier;              // 0x0048(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MinSecondaryMissionPowerPointsMultiplier;                 // 0x0058(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MaxSecondaryMissionPowerPointsMultiplier;                 // 0x0068(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MinSecondaryMissions;                                     // 0x0078(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MaxSecondaryMissions;                                     // 0x0088(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        TertiaryMissionPowerPointsBudgetMultiplier;               // 0x0098(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MinTertiaryMissionPowerPointsMultiplier;                  // 0x00A8(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        MaxTertiaryMissionPowerPointsMultiplier;                  // 0x00B8(0x0010) (Edit, DisableEditOnInstance)
	struct FCurveTableRowHandle                        PowerPointsCurve;                                         // 0x00C8(0x0010) (Edit, DisableEditOnInstance)
	TArray<struct FFortDifficultyOptionBudget>         EncounterDifficultyOptionBudgets;                         // 0x00D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              EncounterMinDifficultyOptionPointsUsagePercentage;        // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	TArray<struct FFortDifficultyOptionBudget>         MissionDifficultyOptionBudgets;                           // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              MissionMinDifficultyOptionPointsUsagePercentage;          // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerationData");
		return ptr;
	}

};


// Class FortniteGame.FortMissionGenerationList
// 0x0058 (0x0088 - 0x0030)
class UFortMissionGenerationList : public UPrimaryDataAsset
{
public:
	struct FGameplayTagQuery                           GameplayContextRequirements;                              // 0x0030(0x0048) (Edit, DisableEditOnInstance)
	TArray<struct FPerDifficultyMissionGenerationInfo> PerDifficultyMissionGenerationInfos;                      // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerationList");
		return ptr;
	}

};


// Class FortniteGame.FortMissionGenerationManager
// 0x0008 (0x0330 - 0x0328)
class AFortMissionGenerationManager : public AActor
{
public:
	EFortCheatMissionGenType                           CheatMissionGenType;                                      // 0x0328(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerationManager");
		return ptr;
	}

};


// Class FortniteGame.FortMissionGenerator
// 0x0690 (0x06C0 - 0x0030)
class UFortMissionGenerator : public UPrimaryDataAsset
{
public:
	struct FText                                       MissionName;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       MissionDescription;                                       // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FSlateBrush                                 MissionIcon;                                              // 0x0060(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortMultiSizeBrush                         MissionIcons;                                             // 0x00E8(0x0330) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FZoneLoadingScreenConfig                    LoadingScreenConfig;                                      // 0x0418(0x0110) (Edit, DisableEditOnInstance)
	struct FFortAthenaLTMConfig                        AthenaLTMConfig;                                          // 0x0528(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0580(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortMissionGenerator.PrimaryMissionInfo
	bool                                               bUseNewMissionGeneration;                                 // 0x05A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05A9(0x0007) MISSED OFFSET
	struct FGameplayTagQuery                           OptionalRequirementsForAllOtherMissions;                  // 0x05B0(0x0048) (Edit)
	unsigned char                                      UnknownData02[0x28];                                      // 0x05F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortMissionGenerator.MissionGenerationList
	float                                              MissionGenerationChance[0x4];                             // 0x0620(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FFortPossibleMission>                SecondaryMissionList;                                     // 0x0630(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortPossibleMission>                TertiaryMissionList;                                      // 0x0640(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortPossibleMission>                SurvivorMissionList;                                      // 0x0650(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bUseOverridePlayerSpawnPadPlacementData;                  // 0x0660(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0661(0x0007) MISSED OFFSET
	struct FFortPlayerSpawnPadPlacementData            OverridePlayerSpawnPadPlacementData;                      // 0x0668(0x0058) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionGenerator");
		return ptr;
	}

};


// Class FortniteGame.FortMissionInfo
// 0x0748 (0x0778 - 0x0030)
class UFortMissionInfo : public UPrimaryDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortMissionInfo.MissionRef
	TEnumAsByte<EFortMissionType>                      MissionType;                                              // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       MissionTags;                                              // 0x0060(0x0020) (Edit, DisableEditOnInstance)
	float                                              TimeOfDaySpeed;                                           // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoneEndDelay;                                             // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoneEndDelayOverrideForFailure;                           // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	class UFortBadgeItemDefinition*                    MissionRewardBadge;                                       // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MissionRewardItemsLootTierGroup;                          // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxRewardLootTierPoints;                                  // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParTime;                                                  // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortBadgeItemDefinition*                    UnderParBadge;                                            // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxMissionPoints;                                         // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVictoryTileRequired;                                     // 0x00B4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	struct FText                                       MissionDescription;                                       // 0x00B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FFortMultiSizeBrush                         MissionIcons;                                             // 0x00D0(0x0330) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UMediaSource*                                EndOfMissionMediaSource;                                  // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipEndOfMissionVideo;                                   // 0x0408(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	int                                                DaysToLive;                                               // 0x040C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortObjectiveBlock>                 ObjectiveBlocks;                                          // 0x0410(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bShowMinimapIconsOnlyIfFocused;                           // 0x0420(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              ExpectedCompletionTime;                                   // 0x0424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MissionEncounterTime;                                     // 0x0428(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	struct FFortMissionPlacementItems                  MissionPlacementInfo;                                     // 0x0430(0x0040) (Edit, DisableEditOnInstance)
	float                                              MinDistanceToOtherMissions;                               // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinDistanceToAllowSpawnPad;                               // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FFortPlacementActorFinderInfo               PlacementActorInfo;                                       // 0x0478(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                               bStartPlayingOnLoad;                                      // 0x0490(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequiresActivation;                                      // 0x0491(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0492(0x0002) MISSED OFFSET
	int                                                BluGloActivationRequirement;                              // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowDifficultyIncrease;                                 // 0x0498(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0499(0x0007) MISSED OFFSET
	struct FText                                       RewardsTitleText;                                         // 0x04A0(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       RewardsDescriptionText;                                   // 0x04B8(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       NonParticipationRewardsDescriptionText;                   // 0x04D0(0x0018) (Edit, DisableEditOnInstance)
	struct FFortMissionPopupWidgetData                 PopupWidgetData;                                          // 0x04E8(0x01D0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UFortMissionWeightedRewards*                 WeightedRewards;                                          // 0x06B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsGroupContent;                                          // 0x06C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x06C1(0x0007) MISSED OFFSET
	struct FText                                       MissionName;                                              // 0x06C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FFortEncounterProfile>               EncounterProfiles;                                        // 0x06E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortEncounterSequenceSettings>      EncounterSequences;                                       // 0x06F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData10[0x28];                                      // 0x0700(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortMissionInfo.MissionOptions
	struct FGameplayTagContainer                       MissionDifficultyOptionTags;                              // 0x0728(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FFortMissionTaggedRewards>           TaggedRewards;                                            // 0x0748(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FMissionPerDifficultyProperties>     PerDifficultyProperties;                                  // 0x0758(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FFortMissionConfigDataParams                ConfigParams;                                             // 0x0768(0x0010) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionInfo");
		return ptr;
	}

};


// Class FortniteGame.FortMissionInfoIndicator
// 0x0028 (0x00B0 - 0x0088)
class UFortMissionInfoIndicator : public UFortSlateHUDIndicator
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0088(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionInfoIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortMissionInterface
// 0x0000 (0x0028 - 0x0028)
class UFortMissionInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionInterface");
		return ptr;
	}

};


// Class FortniteGame.FortMissionItemDefinition
// 0x0000 (0x08D0 - 0x08D0)
class UFortMissionItemDefinition : public UFortWorldItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortMissionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortMissionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionLibrary");
		return ptr;
	}


	bool STATIC_UnregisterForMissionEvents(class AActor* ActorToUnregister, const struct FGuid& MissionGuid);
	void STATIC_TeleportPlayerPawn(class AFortPlayerPawn* PlayerPawn, const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIgnoreCollision);
	void STATIC_TeleportPawnNearLocation(class AFortPawn* Pawn, const struct FVector& DestLocation);
	void STATIC_StopAIEncounterAgainstActor(class UObject* WorldContextObject, class AActor* TargetActor);
	void STATIC_StopAIEncounter(class UObject* WorldContextObject, class UFortAIEncounterInfo* ActiveEncounter, EFortObjectiveStatus ObjectiveStatus);
	void STATIC_StartPlayingMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid);
	class UFortAIEncounterInfo* STATIC_StartAIEncounterWithEnvironmentQuery(class UObject* WorldContextObject, class UClass* EncounterTemplate, class AActor* TargetActor, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay, struct FString* AssociatedMissionName);
	class UFortAIEncounterInfo* STATIC_StartAIEncounter(class UObject* WorldContextObject, class UClass* EncounterTemplate, class AActor* TargetActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int ActivationDelay, struct FString* AssociatedMissionName);
	bool STATIC_SpawnPlacementMissionActor(class UObject* WorldContextObject, class UClass* ActorToSpawn, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, class AActor* PlacementLocationActor, class AActor** OutSpawnedActor);
	class AFortPickup* STATIC_SpawnMissionItemPickupInWorld(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortWorldItemDefinition* ItemDefinition, int NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int OverrideMaxStackCount);
	class AFortPickup* STATIC_SpawnMissionItemPickup(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionItemDefinition* MissionItemDefinition, const struct FVector& StartPosition, class AFortPawn* TargetPawn);
	class ABuildingActor* STATIC_SpawnBuildingActorAtTransform(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UClass* BuildingClass, const struct FTransform& Transform);
	TArray<class AActor*> STATIC_SpawnAtPlacementActorsHelper(class UObject* WorldContextObject, class UClass* Entries, bool* bSucceeded);
	void STATIC_SpawnAndCollectPlayerPickups(class UObject* WorldContextObject, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, const struct FName& LootTierGroup, int LootTier);
	bool STATIC_ShouldUseAlternateAIDirectorBalance();
	void STATIC_SetWorldSavingEnabled(class UObject* WorldContextObject, bool bEnabled);
	void STATIC_SetOnlinePresenceDoNotDisturb(class UObject* WorldContextObject, bool bDoNotDisturb, class AFortPlayerController* SpecificPlayer);
	bool STATIC_RegisterMissionInfoUIActor(class AActor* AttachmentActor, const struct FGuid& MissionGuid, const struct FVector& AttachementOffset, float MaxVisibleDistance);
	bool STATIC_RegisterForMissionEvents(class AActor* ActorToRegister, const struct FGuid& MissionGuid);
	int STATIC_PollActorsInVolume(class UObject* WorldContextObject, class UBoxComponent* VolumeBoxComponent, TEnumAsByte<EPollActorsInVolumeTypes> PollBuildingTypes, class UClass* ActorClassToPoll);
	void STATIC_PingMinimap(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FLinearColor& PingColor, TEnumAsByte<EFortTeam> RequiredTeam);
	int STATIC_NumBluGloFromPlayerState(class AFortPlayerStateZone* PlayerState);
	int STATIC_NumBluGloFromPlayerPawn(class AFortPlayerPawn* PlayerPawn);
	void STATIC_LoadMission(class UObject* WorldContextObject, class UFortMissionInfo* MissionInfo);
	bool STATIC_IsUsingNewMissionGeneration(class UObject* WorldContextObject);
	bool STATIC_HasTags(const struct FGameplayTagContainer& ContainerToCheck, const struct FGameplayTagContainer& TagsToCheck, bool bRequireAll, bool bCountEmptyAsMatch);
	bool STATIC_GiveMissionSchematicItemDirectlyToPlayer(class UObject* WorldContextObject, class AFortPlayerController* TargetPlayer, const struct FGuid& MissionGuid, class UFortSchematicItemDefinition* SchematicDefinition);
	void STATIC_GiveMissionRewardsToPlayerAsPickups(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, float Radius, const struct FName& LootTierGroup, int LootTier);
	void STATIC_GiveMissionRewardsToPlayer(class UObject* WorldContextObject, const struct FGuid& EventGuid, class AFortPlayerController* PlayerController, const struct FText& TitleText, const struct FText& DescriptionText, const struct FName& LootTierGroup, int LootTier, float RewardDisplayTime);
	void STATIC_GetTieredWaveSet(const struct FName& TieredWaveCollectionName, int Tier, struct FTieredWaveSetCollectionData* WaveCollectionInfo, TArray<struct FTieredWaveSetData>* OutWaveData);
	void STATIC_GetTieredWaveBaseWaveLength(class UObject* WorldContextObject, const struct FName& BaseWaveLengthRowName, float OverrideDifficulty, float* OutBaseWaveLength);
	void STATIC_GetTieredWaveBaseNumKills(class UObject* WorldContextObject, const struct FName& BaseNumOfKillsRowName, float OverrideDifficulty, float* OutBaseNumKills);
	void STATIC_GetTieredWaveBaseNumKillPoints(class UObject* WorldContextObject, const struct FName& BaseNumOfKillPointsRowName, float OverrideDifficulty, float* OutBaseNumKillPoints);
	float STATIC_GetMissionHUDTextLineHeightEstimate(const struct FText& Text);
	class AFortMission* STATIC_GetMissionFromGuid(class UObject* WorldContextObject, const struct FGuid& MissionGuid);
	TArray<class AActor*> STATIC_GetMissionActorsInVectorDirection(class UObject* WorldContextObject, class UClass* ActorSubclass, const struct FVector& StartLocation, const struct FVector& DirectionToLookForActors, float Angle, float MaxDistance);
	TArray<class AActor*> STATIC_GetMissionActorsInEncounterDirection(class UObject* WorldContextObject, class UClass* ActorSubclass, const struct FVector& StartLocation, TEnumAsByte<EFortEncounterDirection> DirectionToLookForActors, float Angle, float MaxDistance);
	class AFortBluGloManager* STATIC_GetBluGloManager(class UObject* WorldContextObject);
	TArray<class AFortMission*> STATIC_GetAllLoadedMissions(class UObject* WorldContextObject);
	class AFortPlacementActor* STATIC_FindOriginatingPlacementActor(class ABuildingActor* BuildingActor);
	TArray<class ABuildingActor*> STATIC_FindActorsWithTags(class UObject* WorldContextObject, const struct FGameplayTagContainer& Tags);
	void STATIC_ExecuteMissionEventEx(class UObject* WorldContextObject, const struct FFortMissionEventName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	void STATIC_ExecuteMissionEvent(class UObject* WorldContextObject, const struct FName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	struct FFortMissionEvent STATIC_CreateMissionEvent(class UObject* WorldContextObject, const struct FName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int GenericInt, float GenericFloat, const struct FText& GenericText, const struct FGameplayTagContainer& GameplayTags);
	void STATIC_CreateDynamicBuildingDeconstructor(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& BoxExtent, bool bIgnoreMissionActors, bool bShrinkAndDestroy);
	void STATIC_AdjustWaveBasedGameDifficulty(class UObject* WorldContextObject, float fDifficultyAddMod);
	void STATIC_AddCompletionTagToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTag& NewCompletionTag);
	void STATIC_AddCompletionTagsToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& NewCompletionTagContainer);
};


// Class FortniteGame.FortMissionManager
// 0x0200 (0x0528 - 0x0328)
class AFortMissionManager : public AActor
{
public:
	TArray<struct FFortMissionEventName>               MissionEventNames;                                        // 0x0328(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0338(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortMissionManager.PrimaryMissionGE
	unsigned char                                      UnknownData01[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	class AFortBluGloManager*                          BluGloManager;                                            // 0x0368(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<class AFortMission*>                        Missions;                                                 // 0x0370(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0380(0x0050) MISSED OFFSET
	TArray<struct FFortMissionUIActorHandle>           MissionUIActors;                                          // 0x03D0(0x0010) (Net, ZeroConstructor)
	class AFortMission*                                CurrentUIFocusedMission;                                  // 0x03E0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortMission*                                MissionClosestToPar;                                      // 0x03E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnMissionsUpdated;                                        // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0400(0x0018) MISSED OFFSET
	struct FEarnedBadgeEntryArray                      EarnedBadgesArray;                                        // 0x0418(0x00C0) (Net, Transient)
	unsigned char                                      UnknownData04[0x38];                                      // 0x04D8(0x0038) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShouldShowSecondaryMissionHeadersChanged;               // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDisplaySecondaryMissionHeaders;                          // 0x0520(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0521(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionManager");
		return ptr;
	}


	bool ShouldShowSecondaryMissionHeaders();
	void OnRep_MissionUIActors();
	void OnRep_Missions();
	void OnRep_EarnedBadgesArray();
	void OnRep_CurrentUIFocusedMission();
	bool STATIC_GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery(class UObject* WorldContextObject, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
	bool STATIC_GetSpawnLocationActorsMatchingEntryItemQuery(class UObject* WorldContextObject, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors);
};


// Class FortniteGame.FortMissionOutpostConfigData
// 0x0010 (0x0038 - 0x0028)
class UFortMissionOutpostConfigData : public UFortMissionConfigData
{
public:
	struct FDataTableRowHandle                         DifficultyData;                                           // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionOutpostConfigData");
		return ptr;
	}

};


// Class FortniteGame.FortMissionOutpostQuestConfigData
// 0x0008 (0x0030 - 0x0028)
class UFortMissionOutpostQuestConfigData : public UFortMissionConfigData
{
public:
	struct FGameplayTag                                LegTag;                                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionOutpostQuestConfigData");
		return ptr;
	}

};


// Class FortniteGame.FortMissionPowerPointsInterface
// 0x0000 (0x0028 - 0x0028)
class UFortMissionPowerPointsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionPowerPointsInterface");
		return ptr;
	}


	float GetPowerPointsCost(float LerpValue);
	float GetMaxRangeLerpValue(float PointsAvailable, float PreviousLerpValue);
	float GetInitialRangeLerpValue(float PointsAvailable);
	float GetAvailabilityWeight(float DifficultyLevel);
};


// Class FortniteGame.FortMissionStormSafeZone
// 0x0018 (0x0340 - 0x0328)
class AFortMissionStormSafeZone : public AActor
{
public:
	class UStaticMeshComponent*                        SafeZoneMesh;                                             // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bScaleUniformly;                                          // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	float                                              SafeZoneRadius;                                           // 0x0334(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionStormSafeZone");
		return ptr;
	}


	void SetSafeZoneRadius(float InRadius);
	void OnRep_ZoneRadius();
	float GetSafeZoneRadius();
};


// Class FortniteGame.FortMissionStormShield
// 0x0238 (0x0560 - 0x0328)
class AFortMissionStormShield : public AActor
{
public:
	class USceneComponent*                             Root;                                                     // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ShieldRing;                                               // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              SafeFromStormPlayerEffects;                               // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              InStormPlayerEffects;                                     // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              SafeFromStormEnemyEffects;                                // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              InStormEnemyEffects;                                      // 0x0368(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              MapWorldScale;                                            // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x037C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              GrowthRate;                                               // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              MoveRate;                                                 // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              TargetRadius;                                             // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              StartingRadius;                                           // 0x038C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              InitialRadius;                                            // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x0394(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	struct FVector                                     StartingLocation;                                         // 0x03A0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	float                                              SafeAreaStartRadiusChangeTime;                            // 0x03AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SafeAreaFinishRadiusChangeTime;                           // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SafeAreaStartLocationChangeTime;                          // 0x03B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SafeAreaFinishLocationChangeTime;                         // 0x03B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              RadiusToWorldScaleConversion;                             // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStormShieldReachedRadius;                               // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStormShieldReachedLocation;                             // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      SafeAreaTemplate;                                         // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UEnvQuery*                                   StormShieldQuery;                                         // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	EMissionStormShieldState                           State;                                                    // 0x03F8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03F9(0x0007) MISSED OFFSET
	class UMaterialInterface*                          StormMiniMapMaterial;                                     // 0x0400(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StormMiniMapMaterialMID;                                  // 0x0408(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 StormMiniMapMaterialBrush;                                // 0x0410(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UMaterialInterface*                          StormMainMapMaterial;                                     // 0x0498(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StormMainMapMaterialMID;                                  // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 StormMainMapMaterialBrush;                                // 0x04A8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0530(0x0008) MISSED OFFSET
	TArray<class AFortMissionStormSafeZone*>           SafeAreas;                                                // 0x0538(0x0010) (Net, ZeroConstructor)
	TArray<class UFortStormShieldComponent*>           StormShieldComponents;                                    // 0x0548(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0558(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionStormShield");
		return ptr;
	}


	class AFortMissionStormSafeZone* SpawnSafeAreaAtLocation(const struct FVector& InLocation, float InRadius);
	void SetTargetRadiusSizeChangeOverGrowthRate(float InTargetRadius, float InGrowthRate);
	void SetTargetLocationToMoveTo(const struct FVector& InTargetLocation, float InMoveRate);
	void SetAbsoluteShieldRadius(float InRadius);
	bool RemoveAndDestroySafeArea(class AFortMissionStormSafeZone* AreaToRemove);
	void OnRep_Radius();
	void OnRep_InitialRadius();
	void InitializeRadiusValue(float InRadius);
	void GetSafeZones(TArray<class AFortMissionStormSafeZone*>* OutSafeZones);
};


// Class FortniteGame.FortMissionTimerComponent
// 0x0078 (0x0168 - 0x00F0)
class UFortMissionTimerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMissionTimerComponentUpdated;                           // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FMissionTimeDisplayData>             DisplayData;                                              // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FMissionTimerData                           TimerData;                                                // 0x0110(0x0028) (Net)
	struct FText                                       TimerLabelText;                                           // 0x0138(0x0018) (Edit, Net, DisableEditOnInstance)
	bool                                               bDisplayInTimeFormat;                                     // 0x0150(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETimerOverrideSetting>                 TimerVisibilityOverrideSetting;                           // 0x0151(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x0152(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionTimerComponent");
		return ptr;
	}


	void UnpauseMissionTimer();
	void SetTimerVisibilityOverrideSetting(TEnumAsByte<ETimerOverrideSetting> NewVisibilitySetting);
	void SetTimerLabelText(const struct FText& NewLabelText);
	void SetTimerDisplayFormat(bool bNewDisplayInTimeFormat);
	void SetMissionTimer(const struct FString& FunctionName, float TimerLength, class AActor* CallbackActor);
	void ResetMissionTimer();
	void PauseMissionTimer();
	void OnRep_TimerVisibilityOverride();
	void OnRep_TimerData();
	bool IsTimerVisible();
	bool IsMissionTimerSet();
	bool IsMissionTimerPaused();
	struct FText GetTimeText();
	float GetNormalizedTime();
	float GetMissionTimerTimeRemaining();
	struct FMissionTimeDisplayData GetCorrectTimeDisplayData();
	void DummyTimer();
	void ClearMissionTimer();
};


// Class FortniteGame.FortMissionTimerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortMissionTimerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionTimerInterface");
		return ptr;
	}

};


// Class FortniteGame.FortUINotification
// 0x0078 (0x00A0 - 0x0028)
class UFortUINotification : public UObject
{
public:
	struct FText                                       Title;                                                    // 0x0028(0x0018) (BlueprintVisible, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0040(0x0018) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bHasAction;                                               // 0x0058(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortNotificationType                              NotificationType;                                         // 0x0059(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x005A(0x0006) MISSED OFFSET
	struct FUniqueNetIdRepl                            IdToRepresent;                                            // 0x0060(0x0028) (BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    OnNotificationCleared;                                    // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0098(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUINotification");
		return ptr;
	}


	void TakeAction();
	bool ShouldShowNotification();
	void SetPriority(EFortNotificationPriority InPriority);
	void NotificationShown();
	EFortNotificationPriority GetPriority();
	class UTexture2D* GetImageOverride();
	class UUserWidget* CreateWidget(class APlayerController* OwningPlayer);
	void ClearNotification();
};


// Class FortniteGame.FortMissionVoteUINotification
// 0x0008 (0x00A8 - 0x00A0)
class UFortMissionVoteUINotification : public UFortUINotification
{
public:
	EFortVoteType                                      VoteType;                                                 // 0x00A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasVoteEnded;                                            // 0x00A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	int                                                VoteResult;                                               // 0x00A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionVoteUINotification");
		return ptr;
	}

};


// Class FortniteGame.FortMissionWeightedRewards
// 0x0010 (0x0040 - 0x0030)
class UFortMissionWeightedRewards : public UDataAsset
{
public:
	TArray<struct FFortMissionWeightedReward>          Rewards;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionWeightedRewards");
		return ptr;
	}

};


// Class FortniteGame.FortMobileInteractionComponent
// 0x0010 (0x0610 - 0x0600)
class UFortMobileInteractionComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0600(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMobileInteractionComponent");
		return ptr;
	}


	void StopRadialTimer();
	void StartRadialTimer(float Duration);
	void SetVisibleStartTime();
	void SetRarityColor(const struct FLinearColor& InColor);
	void SetRadialStartTime(float StartTime);
	void SetRadialOpacity(float Opacity);
	void SetRadialDuration(float Duration);
	void SetIcon(EMobileInteractionIconTypes IconType);
	void SetExtents(const struct FVector& Extents);
	void SetCameraPush(float Offset);
	bool IsAvailable();
};


// Class FortniteGame.FortMobileKismetLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortMobileKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMobileKismetLibrary");
		return ptr;
	}


	bool STATIC_GetTapToFireEnabled(class UObject* WorldContextObject);
	bool STATIC_GetDedicatedButtonEnabled(class UObject* WorldContextObject);
	bool STATIC_GetAutoFireEnabled(class UObject* WorldContextObject);
	bool STATIC_Get3DTouchEnabled(class UObject* WorldContextObject);
};


// Class FortniteGame.FortMobileLocalPlayer
// 0x0000 (0x0460 - 0x0460)
class UFortMobileLocalPlayer : public UFortLocalPlayer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMobileLocalPlayer");
		return ptr;
	}

};


// Class FortniteGame.FortMontageLookupTable
// 0x0010 (0x0040 - 0x0030)
class UFortMontageLookupTable : public UPrimaryDataAsset
{
public:
	TArray<struct FMontageLookupData>                  MontageLookupDataArray;                                   // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMontageLookupTable");
		return ptr;
	}

};


// Class FortniteGame.FortMountedTurret
// 0x00C0 (0x0C40 - 0x0B80)
class AFortMountedTurret : public AFortAthenaSKMotorVehicle
{
public:
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0B80(0x001C) MISSED OFFSET
	struct FRotator                                    TargetAimOrientation;                                     // 0x0B9C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    CurrentAimOrientation;                                    // 0x0BA8(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    TargetAimOrientationRepped;                               // 0x0BB4(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient, IsPlainOldData)
	float                                              UnmannedDesiredPitch;                                     // 0x0BC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AimInterpSpeed;                                           // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinYawPerSecondThreshold;                                 // 0x0BC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawPerSecondThreshold;                                 // 0x0BCC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinPitchPerSecondThreshold;                               // 0x0BD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchPerSecondThreshold;                               // 0x0BD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftMuzzleSocketName;                                     // 0x0BD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightMuzzleSocketName;                                    // 0x0BE0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MovementParam;                                            // 0x0BE8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BatteryParam;                                             // 0x0BEC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RumbleIntensity;                                          // 0x0BF0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLocalPlayerADS;                                          // 0x0BF4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0BF5(0x0003) MISSED OFFSET
	class UCameraShake*                                DriverCameraShake;                                        // 0x0BF8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraShake*                                PassengerCameraShake;                                     // 0x0C00(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPawn*                             LocalPlayerPawn;                                          // 0x0C08(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	EFortAbilityTargetingSource                        AimSourceType;                                            // 0x0C10(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x17];                                      // 0x0C11(0x0017) MISSED OFFSET
	class UClass*                                      FortMountedTurretConfigsClass;                            // 0x0C28(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortMountedTurretConfigs*                   FortMountedTurretConfigs;                                 // 0x0C30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0C38(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMountedTurret");
		return ptr;
	}


	void OnRep_TargetAimOrientationRepped();
	bool IsLocalPlayerRiding();
};


// Class FortniteGame.FortMountedTurretAnimInstance
// 0x0010 (0x04C0 - 0x04B0)
class UFortMountedTurretAnimInstance : public UFortVehicleAnimInstance
{
public:
	bool                                               bIsUsingMountedTurret;                                    // 0x04B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04B1(0x0003) MISSED OFFSET
	float                                              AimingYaw;                                                // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimingPitch;                                              // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMountedTurretAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortMountedTurretConfigs
// 0x00E8 (0x03C0 - 0x02D8)
class UFortMountedTurretConfigs : public UFortSKMotorVehicleConfigs
{
public:
	float                                              BounceCrouchTime;                                         // 0x02D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceCrouchTimeDeadzone;                                 // 0x02DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceRecoilTime;                                         // 0x02E0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceForcePerMass;                                       // 0x02E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMagnitude;                                   // 0x02E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanMinMagnitude;                                // 0x02EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanLeftRightInterpolationPerSecond;             // 0x02F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanUpInterpolationPerSecond;                    // 0x02F4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDownInterpolationPerSecond;                  // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanResetInterpolationPerSecond;                 // 0x02FC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerLeanDeadzone;                                    // 0x0300(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HandBrakeForce;                                           // 0x0304(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NaturalSlideMinAngle;                                     // 0x0308(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostAccumulationRate;                                    // 0x030C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostExpenseRate;                                         // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedMultiplier;                                  // 0x0314(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedInAirMultiplier;                             // 0x0318(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplier;                                  // 0x031C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCooldown;                                            // 0x0320(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSteeringMultiplierRampTime;                          // 0x0324(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostSlowExtraStrength;                                   // 0x0328(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinForwardSpeedBoostExtraStrength;                        // 0x032C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostTopSpeedForceMultiplier;                             // 0x0330(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleBoostFrontFrictionMultiplier;                      // 0x0334(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleBoostRearFrictionMultiplier;                       // 0x0338(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostMinPushForce;                                        // 0x033C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMin;                                  // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeAmplitudeMax;                                  // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SpringFudgeFactor;                                        // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeNormalizedSpeed;                               // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              CameraShakeSpeedCurvePow;                                 // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostingCameraShakeAmount;                                // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraShakeFrequency;                                // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMin;                             // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SmoothedSpringCompressionMax;                             // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMin;                                  // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeFrequencyMax;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraShakeMultiplier;                           // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ScreenShakeYawFrequencyMultiplier;                        // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FLinearColor                                WheelSlideBoostColorWhenNotPowerSliding;                  // 0x0374(0x0010) (Edit, BlueprintVisible, Config, IsPlainOldData)
	float                                              TreadWidth;                                               // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              RumbleMultiplier;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              SparksRumbleMultiplier;                                   // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              BoostCameraOffset;                                        // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSCameraDistance;                                        // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              PassengerCameraOffset;                                    // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              ADSInterpSpeed;                                           // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionTraceAheadAmount;                              // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              DestructionImpulseAmount;                                 // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     DestructionTraceHalfSize;                                 // 0x03A8(0x000C) (Edit, BlueprintVisible, Config, IsPlainOldData)
	bool                                               bCanDestroyProps;                                         // 0x03B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03B5(0x0003) MISSED OFFSET
	float                                              HitRequiredMinSpeed;                                      // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxHealthToDestroyProp;                                   // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMountedTurretConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortMovementComp_Character
// 0x09D0 (0x1100 - 0x0730)
class UFortMovementComp_Character : public UCharacterMovementComponent
{
public:
	float                                              LandHardSoundFallSpeedThreshold;                          // 0x0730(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LandSoundFallSpeedThreshold;                              // 0x0734(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PushBumpedPawnClass;                                      // 0x0738(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0740(0x0010) MISSED OFFSET
	float                                              NetworkSmoothingVisibilityThreshold;                      // 0x0750(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlayerLodRequiredForFloorCheckWhenRendered;               // 0x0754(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EFortAILODLevel                                    AILodRequiredForFloorCheckWhenRendered;                   // 0x0758(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0759(0x0007) MISSED OFFSET
	class UCurveFloat*                                 VelocityBasedStrafeCurve;                                 // 0x0760(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 VelocityBasedTurnCurve;                                   // 0x0768(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 VelocityBasedBackupCurve;                                 // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWasUsingVelocityBasedTurnCurve;                          // 0x0778(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0779(0x0003) MISSED OFFSET
	float                                              RotationYawRateToRestore;                                 // 0x077C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FallingSlopeSafeSlideAngle;                               // 0x0780(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FallingSlopeSafeSlideMaxSpeed;                            // 0x0784(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FallingSlopeDamageScalarMin;                              // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FallingSlopeSafeSlideNormalZ;                             // 0x078C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FAirControlParams                           SkydivingControlParamsPassive;                            // 0x0790(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           SkydivingControlParamsActive;                             // 0x0890(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           ParachuteControlParamsSkydive;                            // 0x0990(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           ParachuteControlParamsJump;                               // 0x0A90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           BalloonControlParams;                                     // 0x0B90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           VortexSkydivingControlParamsPassive;                      // 0x0C90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           VortexSkydivingControlParamsActive;                       // 0x0D90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           VortexSkydivingControlParamsActiveUpward;                 // 0x0E90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAirControlParams                           VortexParachuteControlParams;                             // 0x0F90(0x0100) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              SkydivingMaxSmoothUpdateDistanceScale;                    // 0x1090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideTimeUntilReset;                                      // 0x1094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideIfVelocityLessThanZ;                                 // 0x1098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideIfAngleLessThan;                                     // 0x109C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideIfAngleGreaterThan;                                  // 0x10A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x10A4(0x0008) MISSED OFFSET
	int                                                GravityCeilingRelation;                                   // 0x10AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x10B0(0x0004) MISSED OFFSET
	float                                              FallingStartedZ;                                          // 0x10B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x28];                                      // 0x10B8(0x0028) MISSED OFFSET
	struct FVector                                     ReplicatedAcceleration;                                   // 0x10E0(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      bTriggeredFallingFeedbackSinceLanded : 1;                 // 0x10EC(0x0001) (Transient)
	unsigned char                                      UnknownData06 : 4;                                        // 0x10EC(0x0001)
	unsigned char                                      bUpdatesFloorWhenNotInFullSimulation : 1;                 // 0x10EC(0x0001) (Edit)
	unsigned char                                      bUpdatesFloorWhenNotInFullSimulationOnlyOnNetUpdate : 1;  // 0x10EC(0x0001) (Edit)
	unsigned char                                      UnknownData07[0x13];                                      // 0x10ED(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMovementComp_Character");
		return ptr;
	}


	bool IsPassivelySkydiving();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydivingUpInVortex();
	bool IsActivelySkydiving();
};


// Class FortniteGame.FortMovementComp_AIChar
// 0x0010 (0x1110 - 0x1100)
class UFortMovementComp_AIChar : public UFortMovementComp_Character
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x1100(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMovementComp_AIChar");
		return ptr;
	}

};


// Class FortniteGame.FortMovementComp_CharacterAthena
// 0x0080 (0x1180 - 0x1100)
class UFortMovementComp_CharacterAthena : public UFortMovementComp_Character
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1100(0x0008) MISSED OFFSET
	float                                              JumpPenaltyResetTime;                                     // 0x1108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x110C(0x000C) MISSED OFFSET
	int                                                NetworkSmoothingThrottleProxyUpdateForPawnLOD;            // 0x1118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NetworkSkipSkyDivingCollisionForPawnLOD;                  // 0x111C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NetworkSmoothingViewAngleThreshold;                       // 0x1120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x1124(0x0004) MISSED OFFSET
	float                                              NetworkSmoothingViewAngleThresholdSmall;                  // 0x1128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x112C(0x0004) MISSED OFFSET
	float                                              NetworkSmoothingNoThrottleWithinDistanceInMeters;         // 0x1130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4C];                                      // 0x1134(0x004C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMovementComp_CharacterAthena");
		return ptr;
	}

};


// Class FortniteGame.FortMovementSet
// 0x0140 (0x0170 - 0x0030)
class UFortMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  WalkSpeed;                                                // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  RunSpeed;                                                 // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SprintSpeed;                                              // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CrouchedRunSpeed;                                         // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CrouchedSprintSpeed;                                      // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  BackwardSpeedMultiplier;                                  // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  JumpHeight;                                               // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  GravityZScale;                                            // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  VehicleGravityZScale;                                     // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SpeedMultiplier;                                          // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMovementSet");
		return ptr;
	}


	void OnRep_SpeedMultiplier();
};


// Class FortniteGame.FortMtxWallets
// 0x0050 (0x0078 - 0x0028)
class UFortMtxWallets : public UObject
{
public:
	TMap<EFortMtxPlatform, struct FFortMtxPlatformList> SharedWallets;                                            // 0x0028(0x0050) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMtxWallets");
		return ptr;
	}


	void STATIC_SetSelectedAppStore(TEnumAsByte<EAppStore> InAppStore);
	bool STATIC_GetSelectedAppStore(TEnumAsByte<EAppStore>* OutAppStore);
	TArray<TEnumAsByte<EAppStore>> STATIC_GetAvailableAppStores();
};


// Class FortniteGame.FortMusicAsset
// 0x0050 (0x0080 - 0x0030)
class UFortMusicAsset : public UPrimaryDataAsset
{
public:
	struct FFortMusicSection                           Sections[0x3];                                            // 0x0030(0x0018) (Edit, DisableEditOnInstance)
	float                                              Priority;                                                 // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortMusicSectionStopBehavior                      StopBehavior;                                             // 0x007C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsStinger;                                               // 0x007D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x007E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicAsset");
		return ptr;
	}

};


// Class FortniteGame.FortMusicCombatBank
// 0x0020 (0x0050 - 0x0030)
class UFortMusicCombatBank : public UDataAsset
{
public:
	class UFortMusicAsset*                             Assets[0x4];                                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicCombatBank");
		return ptr;
	}


	class UFortMusicAsset* GetAssetFromCombatIntensity(TEnumAsByte<EFortMusicCombatIntensity> Intensity);
};


// Class FortniteGame.FortMusicContext
// 0x0028 (0x0050 - 0x0028)
class UFortMusicContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnMusicPackChanged;                                       // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UAthenaMusicPackItemDefinition*              DesiredActiveMusicPack;                                   // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FPrimaryAssetId>                     LoadedPacks;                                              // 0x0040(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicContext");
		return ptr;
	}


	void SetActiveMusicPack(class UAthenaMusicPackItemDefinition* NewMusicPack);
	class UAthenaMusicPackItemDefinition* GetEquippedMusicPack();
};


// Class FortniteGame.FortMusicVoice
// 0x0068 (0x0090 - 0x0028)
class UFortMusicVoice : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnVoiceStarted;                                           // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVoiceFinished;                                          // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0048(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicVoice");
		return ptr;
	}

};


// Class FortniteGame.FortMusicManager
// 0x0060 (0x0388 - 0x0328)
class AFortMusicManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class AFortPlayerController*                       ControllerOwner;                                          // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortMusicVoice*                             Voices[0x2];                                              // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UFortMusicVoice*>                     VoicesToCleanUp;                                          // 0x0348(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0358(0x0004) MISSED OFFSET
	unsigned char                                      bWorldReadyCalled : 1;                                    // 0x035C(0x0001) (Transient)
	unsigned char                                      UnknownData02[0x1B];                                      // 0x035D(0x001B) MISSED OFFSET
	class UFortMusicManagerBank*                       MusicBank;                                                // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0380(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicManager");
		return ptr;
	}


	void StopPrimaryMusic(bool bPlayOutro);
	void StopMusicVoice(class UFortMusicVoice* Voice);
	void SetPrimaryMusicVolume(float InVolumeMultiplier);
	void SetMusicBank(class UFortMusicManagerBank* Bank);
	void PlayStinger(class UFortMusicAsset* NewMusicAsset);
	class UFortMusicVoice* PlayMusicVoice(class UFortMusicAsset* Asset);
	void OnVoiceFinished(class UFortMusicVoice* Voice);
	void OnThresholdChange(TEnumAsByte<EFortCombatThresholds> OldThreshold, TEnumAsByte<EFortCombatThresholds> NewThreshold);
	void OnPlayerSpawned();
	void OnPlayerDowned();
	void OnMusicBankChanged(class UFortMusicManagerBank* NewBank);
	void OnDayPhaseChanged(TEnumAsByte<EFortDayPhase> CurrentDayPhase, TEnumAsByte<EFortDayPhase> PreviousDayPhase, bool bAtCreation);
	float GetPrimaryMusicVolume();
	class UFortMusicManagerBank* GetMusicBank();
	float GetEventHeatPercentTotal(TEnumAsByte<EFortCombatEvents> CombatEvent);
	float GetEventHeatPercent(TEnumAsByte<EFortCombatEvents> CombatEvent);
	class UFortMusicVoice* ChangePrimaryMusic(class UFortMusicAsset* NewMusicAsset, bool bPlayStinger);
};


// Class FortniteGame.FortMusicManagerBank
// 0x0010 (0x0040 - 0x0030)
class UFortMusicManagerBank : public UDataAsset
{
public:
	class UFortMusicTimeOfDayBank*                     TimeOfDayBank;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortMusicCombatBank*                        CombatBank;                                               // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicManagerBank");
		return ptr;
	}

};


// Class FortniteGame.FortMusicPackPreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortMusicPackPreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicPackPreviewActor");
		return ptr;
	}


	void PreviewMusicPack(class UAthenaMusicPackItemDefinition* MusicPack);
};


// Class FortniteGame.FortMusicTimeOfDayBank
// 0x0020 (0x0050 - 0x0030)
class UFortMusicTimeOfDayBank : public UDataAsset
{
public:
	class UFortMusicAsset*                             Assets[0x4];                                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMusicTimeOfDayBank");
		return ptr;
	}


	class UFortMusicAsset* GetAssetFromDayPhase(TEnumAsByte<EFortDayPhase> DayPhase);
};


// Class FortniteGame.FortNameplateIndicator
// 0x0020 (0x00A8 - 0x0088)
class UFortNameplateIndicator : public UFortSlateHUDIndicator
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0088(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNameplateIndicator");
		return ptr;
	}


	void OnPawnWeaponChanged(class AFortWeapon* NewWeapon, class AFortWeapon* OldWeapon);
	void OnPawnDBNOChanged(bool IsDBNO);
};


// Class FortniteGame.FortNavAgentCostData
// 0x0018 (0x0048 - 0x0030)
class UFortNavAgentCostData : public UPrimaryDataAsset
{
public:
	struct FName                                       NavAgentName;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              NavAreaStrengthBuckets;                                   // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavAgentCostData");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea
// 0x0008 (0x0050 - 0x0048)
class UFortNavArea : public UNavArea
{
public:
	unsigned char                                      bObstacle : 1;                                            // 0x0048(0x0001) (Edit)
	unsigned char                                      bSmashable : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_CheapObstacle
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_CheapObstacle : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_CheapObstacle");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_ClosedDoors
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_ClosedDoors : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_ClosedDoors");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_DefaultSmashable
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_DefaultSmashable : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_DefaultSmashable");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_DefenderNull
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_DefenderNull : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_DefenderNull");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_HuskNull
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_HuskNull : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_HuskNull");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_LowJump
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_LowJump : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_LowJump");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_LowSmashable
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_LowSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_LowSmashable");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_Obstacle
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_Obstacle : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_Obstacle");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_PortalOrSmash
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_PortalOrSmash : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_PortalOrSmash");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_SmashableJump
// 0x0008 (0x0058 - 0x0050)
class UFortNavArea_SmashableJump : public UFortNavArea
{
public:
	int                                                Strength;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_SmashableJump");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_StoneWall
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_StoneWall : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_StoneWall");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_TakerOnly
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_TakerOnly : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_TakerOnly");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_TraceSmashable
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_TraceSmashable : public UFortNavArea_DefaultSmashable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_TraceSmashable");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_Unwalkable
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_Unwalkable : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_Unwalkable");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_WalkOverWall
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_WalkOverWall : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_WalkOverWall");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_WallCorner
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_WallCorner : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_WallCorner");
		return ptr;
	}

};


// Class FortniteGame.FortNavArea_WoodenWall
// 0x0000 (0x0050 - 0x0050)
class UFortNavArea_WoodenWall : public UFortNavArea
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavArea_WoodenWall");
		return ptr;
	}

};


// Class FortniteGame.FortNavAreaAutomatic
// 0x0018 (0x0068 - 0x0050)
class UFortNavAreaAutomatic : public UFortNavArea
{
public:
	struct FCurveTableRowHandle                        NavCostCurveHandle;                                       // 0x0050(0x0010) (Edit, DisableEditOnInstance)
	int                                                NavAreaStrength;                                          // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutomaticNavCost;                                         // 0x0064(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavAreaAutomatic");
		return ptr;
	}

};


// Class FortniteGame.FortNavGraphGoal
// 0x0010 (0x0338 - 0x0328)
class AFortNavGraphGoal : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              GraphRadius;                                              // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0334(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavGraphGoal");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationMetaFilter
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationMetaFilter : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationMetaFilter");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationFilter_Hunting
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationFilter_Hunting : public UFortNavigationMetaFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_Hunting");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationFilter_IgnoreSmashingCost
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationFilter_IgnoreSmashingCost : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_IgnoreSmashingCost");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationFilter_NoSmashing
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationFilter_NoSmashing : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_NoSmashing");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationFilter_NoSmashingIncludeLow
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationFilter_NoSmashingIncludeLow : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_NoSmashingIncludeLow");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationFilter_TetherZone
// 0x0000 (0x0048 - 0x0048)
class UFortNavigationFilter_TetherZone : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationFilter_TetherZone");
		return ptr;
	}

};


// Class FortniteGame.FortNavigationGraph
// 0x0118 (0x0600 - 0x04E8)
class AFortNavigationGraph : public ANavigationData
{
public:
	unsigned char                                      UnknownData00[0x118];                                     // 0x04E8(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavigationGraph");
		return ptr;
	}

};


// Class FortniteGame.FortNavLinkBlockerComponent
// 0x0000 (0x0590 - 0x0590)
class UFortNavLinkBlockerComponent : public UBoxComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavLinkBlockerComponent");
		return ptr;
	}

};


// Class FortniteGame.FortNavLinkContainer
// 0x0000 (0x0328 - 0x0328)
class AFortNavLinkContainer : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavLinkContainer");
		return ptr;
	}

};


// Class FortniteGame.FortNavLinkDefinition
// 0x0030 (0x0080 - 0x0050)
class UFortNavLinkDefinition : public UNavLinkDefinition
{
public:
	struct FFortNavLinkPattern                         Pattern;                                                  // 0x0050(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortNavLinkPattern>                 AdditionalPatterns;                                       // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<TEnumAsByte<EBuildingStairsRailing>>        StairsRailing;                                            // 0x0068(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	EBuildingFloorRailing                              FloorRailing;                                             // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortNavLinkPattern>                   PatternType;                                              // 0x0079(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x007A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavLinkDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortNavObstacleComponent
// 0x0008 (0x0128 - 0x0120)
class UFortNavObstacleComponent : public UNavRelevantComponent
{
public:
	class UClass*                                      ObstacleAreaClass;                                        // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNavObstacleComponent");
		return ptr;
	}

};


// Class FortniteGame.FortNeverPersistItemDefinition
// 0x0010 (0x08E0 - 0x08D0)
class UFortNeverPersistItemDefinition : public UFortWorldItemDefinition
{
public:
	unsigned char                                      bAccumulateOnPlayerState : 1;                             // 0x08D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0xF];                                       // 0x08D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNeverPersistItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortniteAutomationBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortniteAutomationBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortniteAutomationBlueprintLibrary");
		return ptr;
	}


	bool STATIC_ResetFPSChartsData();
	bool STATIC_ResetForcedAthenaCosmetics();
	struct FMcpVariantChannelInfo STATIC_MakeVariantChannelInfo(class UAthenaCosmeticItemDefinition* ItemDefinition, const struct FGameplayTag& Channel, const struct FGameplayTag& ActiveVariant);
	TArray<struct FGameplayTag> STATIC_GetVariantNames(class UAthenaCosmeticItemDefinition* ItemDefinition, const struct FGameplayTag& VariantChannel);
	TArray<struct FGameplayTag> STATIC_GetVariantChannels(class UAthenaCosmeticItemDefinition* ItemDefinition);
	TArray<class UFortVariantTokenType*> STATIC_GetAllFortVariantTokens();
	TArray<class UAthenaCosmeticItemDefinition*> STATIC_GetAllAthenaCosmetics_MultipleType(TArray<EFortItemType> Types);
	TArray<class UAthenaCosmeticItemDefinition*> STATIC_GetAllAthenaCosmetics(EFortItemType Type);
	bool STATIC_ForceAthenaCosmetic(class UAthenaCosmeticItemDefinition* ItemDefinition);
	bool STATIC_DumpFPSChartsData(const struct FString& EntryName);
};


// Class FortniteGame.FortNotificationMessage
// 0x0000 (0x0028 - 0x0028)
class UFortNotificationMessage : public ULocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNotificationMessage");
		return ptr;
	}

};


// Class FortniteGame.FortObjectiveBase
// 0x0098 (0x03F8 - 0x0360)
class AFortObjectiveBase : public AFortMissionState
{
public:
	class UFortBadgeItemDefinition*                    ObjectiveRewardBadge;                                     // 0x0360(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	TArray<class UFortWorldItemDefinition*>            ItemsToGiveOnObjectiveStart;                              // 0x0368(0x0010) (Edit, ZeroConstructor)
	bool                                               bStartPlayingOnMissionStart;                              // 0x0378(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAcceptsMissionEventsWhenFinished;                        // 0x0379(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x037A(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       ObjectiveHandle;                                          // 0x0380(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	struct FString                                     ObjectiveAnalyticsName;                                   // 0x03A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TEnumAsByte<EFortObjectiveRequirement>             MissionRequirement;                                       // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData)
	bool                                               bIsObjectiveVisible;                                      // 0x03B1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	EFortMissionVisibilityOverride                     VisibilityOverride;                                       // 0x03B2(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bIsProgressBarHidden;                                     // 0x03B3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	EFortMissionAudibility                             ObjectiveAudiblity;                                       // 0x03B4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bRelevantToSpecificTeam;                                  // 0x03B5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             RelevantTeam;                                             // 0x03B6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortObjectiveStatus                               ObjectiveStatus;                                          // 0x03B7(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET
	class UFortMissionTimerComponent*                  TimerComponent;                                           // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnObjectiveStatusChanged;                                 // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectiveVisibilityChanged;                             // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnObjectiveVisibilityOverrideChanged;                     // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortObjectiveBase");
		return ptr;
	}


	void UnpauseObjectiveTimer();
	void StopObjective(EFortObjectiveStatus Status, const struct FString& Description, class UFortBadgeItemDefinition* ExtraBadgeToGrant);
	bool StartPlayingObjective();
	void SetUIVisibilityOverride(EFortMissionVisibilityOverride InVisibilityOverride);
	void SetUiVisibility(bool bInIsObjectiveVisible);
	void SetObjectiveTimer(const struct FString& FunctionName, float TimerLength, bool bStartPaused);
	void PauseObjectiveTimer();
	void OnRep_ObjectiveVisibilityOverride();
	void OnRep_ObjectiveStatus();
	void OnRep_bIsObjectiveVisible();
	void OnGenericObjectiveEvent();
	bool IsRelevantToTeam(TEnumAsByte<EFortTeam> Team);
	bool IsRelevantToASpecificTeam();
	bool IsObjectiveTimerPaused();
	void GrantRewardsByTag(const struct FGameplayTag& RewardTag, TEnumAsByte<EFortRewardType> RewardType);
	class UFortMissionTimerComponent* GetTimerComponent();
	void GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems);
	float GetObjectiveTimerTimeRemaining();
	struct FText GetObjectiveDisplayString();
	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
	void EnableTick(bool bEnabled);
	void ClearObjectiveTimer();
	void BlueprintPostObjectiveLoad();
	void BlueprintOnStartPlaying();
	void BlueprintOnObjectiveEnd(EFortObjectiveStatus Status);
	void BlueprintOnActivated();
	struct FText BlueprintGetProgressBarText(int ProgressBarIdx);
	float BlueprintGetProgressBarPercentage(int ProgressBarIdx);
	struct FLinearColor BlueprintGetProgressBarColor(int ProgressBarIdx);
	struct FText BlueprintGetObjectiveDisplayText();
	int BlueprintGetNumProgressBars();
	void AttemptMissionSave(const struct FString& OptionalSaveName);
};


// Class FortniteGame.FortOnlineAccount
// 0x0150 (0x07A0 - 0x0650)
class UFortOnlineAccount : public UOnlineAccountCommon
{
public:
	unsigned char                                      UnknownData00[0x54];                                      // 0x0650(0x0054) MISSED OFFSET
	int                                                RecommendChatFailureDelay;                                // 0x06A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RecommendChatRandomWindow;                                // 0x06A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RecommendChatBackoffMultiplier;                           // 0x06AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                RecommendChatFailureCountCap;                             // 0x06B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x06B4(0x0006) MISSED OFFSET
	bool                                               bShouldRequestGeneralChatRooms;                           // 0x06BA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsAthenaGlobalChatEnabled;                               // 0x06BB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldJoinGlobalChat;                                    // 0x06BC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldJoinFounderChat;                                   // 0x06BD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldCheckIfPlatformAllowed;                            // 0x06BE(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldAthenaQueryRecentPlayers;                          // 0x06BF(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHadLoginPurchaseCheckFailure;                            // 0x06C0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x06C1(0x0007) MISSED OFFSET
	TArray<struct FString>                             IgnoreProducts;                                           // 0x06C8(0x0010) (ZeroConstructor, Config)
	TMap<struct FString, struct FRestrictedCountry>    RestrictedCountries;                                      // 0x06D8(0x0050) (Edit, ZeroConstructor, Config, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x78];                                      // 0x0728(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOnlineAccount");
		return ptr;
	}

};


// Class FortniteGame.FortOnlineBeaconHost
// 0x0000 (0x0408 - 0x0408)
class AFortOnlineBeaconHost : public AOnlineBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOnlineBeaconHost");
		return ptr;
	}

};


// Class FortniteGame.FortOnlineSessionClient
// 0x0110 (0x02A0 - 0x0190)
class UFortOnlineSessionClient : public UOnlineSessionClient
{
public:
	unsigned char                                      UnknownData00[0x110];                                     // 0x0190(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOnlineSessionClient");
		return ptr;
	}

};


// Class FortniteGame.FortOutpostBuilding
// 0x0000 (0x0C38 - 0x0C38)
class AFortOutpostBuilding : public ABuildingProp
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostBuilding");
		return ptr;
	}

};


// Class FortniteGame.FortOutpostContext
// 0x0040 (0x0068 - 0x0028)
class UFortOutpostContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnBuildingLevelChanged;                                   // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemsNeedRefresh;                                       // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGooContentNeedRefresh;                                  // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCraftingTableActivationBonusChanged;                    // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostContext");
		return ptr;
	}


	void UpgradePOST();
	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void UpgradeBuilding(EOutpostBuildings OutpostBuilding);
	void LeaveOutpostAsParty();
	float GetPOSTBuildingHealthMod(int POSTLevel);
	int GetOutpostCoreLevel();
	TArray<class UOutpostPOSTRequirementData*> GetNextPOSTLevelRequirements();
	class UFortWorldItemDefinition* GetHarvestingToolForLevel(int InHarvestingOptimizerLevel);
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int GetBuildingMaxLevel(EOutpostBuildings OutpostBuilding);
	int GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int GetBuildingLevel(EOutpostBuildings OutpostBuilding);
	void DepositPOSTResource(class UFortItemDefinition* ResourceItem, int Count);
	bool CanUpgradePOST();
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(EOutpostBuildings OutpostBuilding, bool bLog);
};


// Class FortniteGame.OutpostPOSTRequirementData
// 0x0020 (0x0048 - 0x0028)
class UOutpostPOSTRequirementData : public UObject
{
public:
	class UFortItemDefinition*                         RequirementItemDefinition;                                // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TotalRequired;                                            // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AlreadyDeposited;                                         // 0x0034(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AmountOwned;                                              // 0x0038(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasEnough;                                               // 0x003C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                AmountToDeposit;                                          // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.OutpostPOSTRequirementData");
		return ptr;
	}

};


// Class FortniteGame.FortOutpostData
// 0x01C8 (0x01F8 - 0x0030)
class UFortOutpostData : public UDataAsset
{
public:
	int                                                StructureLimitNotificationThreshold;                      // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FOutpostBuildingData                        StormShieldData;                                          // 0x0038(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FCraftingTableBuildingData                  CraftingTableData;                                        // 0x0060(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFabricatorBuildingData                     FabricatorData;                                           // 0x0098(0x0070) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FHarvestingOptimizerBuildingData            HarvestingOptimizerData;                                  // 0x0108(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FStorageVaultBuildingData                   StorageVaultData;                                         // 0x0130(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FOutpostUpgradeAndPrestigeBuildingData      OutpostUpgradeAndPrestigeData;                            // 0x0168(0x0090) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostData");
		return ptr;
	}

};


// Class FortniteGame.FortOutpostFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortOutpostFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostFunctionLibrary");
		return ptr;
	}


	void STATIC_TransferItemToStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int Count);
	void STATIC_TransferItemFromStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int Count);
	void STATIC_SetOutpostGameDifficultyRow(class UObject* WorldContextObject, const struct FDataTableRowHandle& GameDifficultyInfo);
	void STATIC_SetOutpostDefenseActive(class UObject* WorldContextObject, bool bActive);
	void STATIC_SetCriticalMissionJoinability(class UObject* WorldContextObject, bool bJoinable);
	struct FGameplayTag STATIC_GetPlacementTagFromOutpostBuildingTag(class UObject* WorldContextObject, const struct FGameplayTag& BuildingTag);
	class UFortMissionConfigData* STATIC_GetOutpostQuestMissionConfigData(class UObject* WorldContextObject, const struct FGameplayTag& ConfigTag);
	class AFortPlayerControllerOutpost* STATIC_GetOutpostOwner(class UObject* WorldContextObject);
	struct FGameplayTag STATIC_GetOutpostBuildingTagFromPlacementTag(class UObject* WorldContextObject, const struct FGameplayTag& PlacementTag);
	class UFortOutpostItemDefinition* STATIC_GetOutpostBuildingItemDefinition(class UObject* WorldContextObject, EOutpostBuildings Building);
	void STATIC_FlushTransferRequests(class AFortPlayerController* Player);
	bool STATIC_DeployOutpostBuildingTagOnPlacementTag(class UObject* WorldContextObject, const struct FGameplayTag& BuildingTag, const struct FGameplayTag& PlacementTag);
	void STATIC_DeactivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
	void STATIC_ActivateCraftingTable(class AFortPlayerControllerOutpost* FortPC);
};


// Class FortniteGame.FortOutpostItem
// 0x0020 (0x00E8 - 0x00C8)
class UFortOutpostItem : public UFortCloudSaveItem
{
public:
	struct FFortOutpostCoreInfo                        outpost_core_info;                                        // 0x00C8(0x0020)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostItem");
		return ptr;
	}

};


// Class FortniteGame.FortOutpostItemDefinition
// 0x0030 (0x0360 - 0x0330)
class UFortOutpostItemDefinition : public UFortCloudSaveItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	int                                                TheaterIndex;                                             // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	struct FText                                       LongDescription;                                          // 0x0340(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0358(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortOutpostItemDefinition");
		return ptr;
	}


	struct FText GetLongDescription();
};


// Class FortniteGame.FortPackPersonality
// 0x00E0 (0x0110 - 0x0030)
class UFortPackPersonality : public UDataAsset
{
public:
	class USoundCue*                                   TickleVOSound;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   TickleSFXSound;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   HoverVOSound;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   BuySFXSound;                                              // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenGenericVO_Sound;                                      // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenGenericSFX_Sound;                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UpgradeSilverVO_Sound;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UpgradeSilverSFX_Sound;                                   // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenSilverVO_Sound;                                       // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenSilverSFX_Sound;                                      // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UpgradeGoldVO_Sound;                                      // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   UpgradeGoldSFX_Sound;                                     // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenGoldVO_Sound;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenGoldSFX_Sound;                                        // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetGenericVO_Sound;                                     // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetAxeVO_Sound;                                         // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetBaseballBatVO_Sound;                                 // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetGardenHoeVO_Sound;                                   // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetGardenRakeVO_Sound;                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetHockeyStickVO_Sound;                                 // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetPickAxeVO_Sound;                                     // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetPitchforkVO_Sound;                                   // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetScytheVO_Sound;                                      // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetSledgehammerVO_Sound;                                // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   GreetSwordVO_Sound;                                       // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   PreHitVO_Sound;                                           // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   DropMusic_Sound;                                          // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundCue*                                   OpenMusic_Sound;                                          // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPackPersonality");
		return ptr;
	}

};


// Class FortniteGame.FortParty
// 0x0270 (0x04A0 - 0x0230)
class UFortParty : public UParty
{
public:
	bool                                               bTutorialCompleted;                                       // 0x0230(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bRestorePersistentPartyRequested;                         // 0x0231(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsLeavingConsoleSession;                                 // 0x0232(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bWasKickedFromLastParty;                                  // 0x0233(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMissingConsoleSession;                                   // 0x0234(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bMissingXmppConnection;                                   // 0x0235(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24A];                                     // 0x0236(0x024A) MISSED OFFSET
	bool                                               bAllowCreateSessionToFail;                                // 0x0480(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0481(0x0003) MISSED OFFSET
	float                                              CreateSessionRetryDelaySeconds;                           // 0x0484(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              JoinSessionRetryDelaySeconds;                             // 0x0488(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x048C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortParty");
		return ptr;
	}

};


// Class FortniteGame.FortPartyBeaconClient
// 0x0088 (0x04D8 - 0x0450)
class AFortPartyBeaconClient : public APartyBeaconClient
{
public:
	struct FEmptyServerReservation                     PendingEmptyReservation;                                  // 0x0450(0x0058)
	unsigned char                                      UnknownData00[0x20];                                      // 0x04A8(0x0020) MISSED OFFSET
	float                                              ReconnectionInitialTimeout;                               // 0x04C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ReconnectionTimeout;                                      // 0x04CC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasReconnected;                                          // 0x04D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconClient");
		return ptr;
	}


	void ServerReconnectExistingReservation(const struct FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ServerEmptyServerReservationRequest(const struct FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation);
	void ServerAbandonExistingReservation(const struct FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer);
	void ClientReconnectResponse(TEnumAsByte<EPartyReservationResult> ReservationResponse);
	void ClientAllowedToProceedFromReservationTimeout();
	void ClientAllowedToProceedFromReservation();
	void ClientAbandonResponse(TEnumAsByte<EPartyReservationResult> ReservationResponse);
};


// Class FortniteGame.FortPartyBeaconHost
// 0x0038 (0x03F0 - 0x03B8)
class AFortPartyBeaconHost : public APartyBeaconHost
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x03B8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconHost");
		return ptr;
	}

};


// Class FortniteGame.FortPartyBeaconState
// 0x00A0 (0x0118 - 0x0078)
class UFortPartyBeaconState : public UPartyBeaconState
{
public:
	struct FUniqueNetIdRepl                            GameSessionOwner;                                         // 0x0078(0x0028)
	struct FEmptyServerReservation                     ReservationData;                                          // 0x00A0(0x0058)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00F8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyBeaconState");
		return ptr;
	}

};


// Class FortniteGame.FortPartyContext
// 0x08A0 (0x08C8 - 0x0028)
class UFortPartyContext : public UFortBlueprintContext
{
public:
	struct FScriptMulticastDelegate                    OnPartyTransitionStarted;                                 // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyTransitionCompleted;                               // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyJoined;                                            // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyLeft;                                              // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientPartyStateChanged;                                // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientPlaylistChanged;                                  // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientSquadFillChanged;                                 // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMemberLocationChanged;                                  // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyFunctionalityDegradedChanged;                      // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyTypeChanged;                                       // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLeaderFriendsOnlyChanged;                               // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCrossplayPreferenceChanged;                             // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLeaderInvitesOnlyChanged;                               // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalPlayerStateChanged;                                // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerStateChanged;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyDataChanged;                                       // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAthenaNumAliveChanged;                                  // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAthenaTimeSpentInMatch;                                 // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAthenaReadyTypeChanged;                                 // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSlatePartyJoinRequested;                                // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActiveFriendsCountUpdated;                              // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActiveFriendsUpdated;                                   // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyInvitesCountChanged;                               // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartyInvitesUpdated;                                    // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    RejectInviteComplete;                                     // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSocialListChanged;                                      // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSentPartyInvite;                                        // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFriendPresenceUpdated;                                  // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLFGChanged;                                             // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartySuggestionAdded;                                   // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartySuggestionChanged;                                 // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartySuggestionUpdated;                                 // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartySuggestionRemoved;                                 // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0238(0x00F0) MISSED OFFSET
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> ActiveMcpFriendsMap;                                      // 0x0328(0x0050) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> ActiveConsoleFriendsMap;                                  // 0x0378(0x0050) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> AllFriendsMap;                                            // 0x03C8(0x0050) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> PartyInvitesMap;                                          // 0x0418(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xA0];                                      // 0x0468(0x00A0) MISSED OFFSET
	TMap<struct FUniqueNetIdRepl, class UFortSocialItem*> FriendsNeedingPartyUpdate;                                // 0x0508(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0558(0x0018) MISSED OFFSET
	TMap<EFortSocialItemHeaderType, class UFortSocialItem*> SocialItemCategories;                                     // 0x0570(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x05C0(0x0008) MISSED OFFSET
	TMap<TEnumAsByte<EFortTeam>, class UFortUITeamInfo*> TeamsMap;                                                 // 0x05C8(0x0050) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, class AFortPlayerState*> UnassignedPlayerStatesByID;                               // 0x0618(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0668(0x0020) MISSED OFFSET
	class UFortUITeamInfo*                             LocalPlayerTeam;                                          // 0x0688(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x160];                                     // 0x0690(0x0160) MISSED OFFSET
	unsigned char                                      UnknownData06[0x50];                                      // 0x0690(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortPartyContext.PendingChangedMemberInfos
	unsigned char                                      UnknownData07[0x80];                                      // 0x0840(0x0080) MISSED OFFSET
	bool                                               bShouldTryToJoinEpicPartyOnConsoleFailure;                // 0x08C0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x08C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyContext");
		return ptr;
	}


	void UnmutePartyMember(const struct FUniqueNetIdRepl& PartyMemberId);
	void ShowLocalPlayerExternalProfile();
	void ShowExternalProfile(const struct FUniqueNetIdRepl& ProfileToShow);
	void ShowExternalFriendsUI();
	void ShowCrossplaySelectionDialog();
	bool ShouldShowMainMenuFriendsListButton();
	bool ShouldShowHeroPortraits();
	bool ShouldShowExternalFriendsUI();
	bool ShouldShowCrossplayWarningDialog();
	bool ShouldMcpPartyInvitesBeEnabled();
	void SetPartyProgression(EFortPartyState NewState);
	void SetPartyPrivacySetting(EPartyType PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly);
	void SetMcpPartyInvitesEnabled(bool bEnabled);
	void SetMcpFriendInvitesEnabled(bool bEnabled);
	void SetLocalPlayerLFG(bool bInLFG);
	void SetLocalPartyMemberLocation(EFortPartyMemberLocation Location);
	void SetLocalPartyMemberEmoting(class UFortMontageItemDefinitionBase* EmoteAsset);
	void SetChatWhisperTarget(const struct FUniqueNetIdRepl& FriendId);
	void SendTeamMemberFriendRequest(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void SendPartyInviteNetID(const struct FUniqueNetIdRepl& PlayerID);
	void SendPartyInvite(class UFortSocialItem* SocialItem);
	void SendMcpFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
	void SendConsoleFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
	void RejectPartyInvite(class UFortSocialItem* PartyInvite);
	void PromotePartyMemberToLeader(const struct FUniqueNetIdRepl& PartyMemberId);
	void ProcessPendingChangedMemberInfos();
	void OnTimeSpentInMatchChanged__DelegateSignature(const struct FUniqueNetIdRepl& UniqueId, const struct FText& Mins, const struct FText& Seconds);
	void OnSocialListChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*> SocialItems);
	void OnSlatePartyJoinRequested__DelegateSignature();
	void OnSendInviteCompleteDelegate__DelegateSignature();
	void OnRejectInviteComplete__DelegateSignature();
	void OnPlayerStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& PlayerInfo);
	void OnPartyTypeChanged__DelegateSignature(EPartyType PartyType);
	void OnPartyTransitionStartedDelegate__DelegateSignature(EFortPartyTransition PartyTransition);
	void OnPartyTransitionCompleteDelegate__DelegateSignature(EFortPartyTransition PartyTransition);
	void OnPartySuggestionRemoved__DelegateSignature(int Index);
	void OnPartySuggestionChanged__DelegateSignature(int Index, const struct FFortPartySuggestion& PartySuggestion);
	void OnPartySuggestionAdded__DelegateSignature(int Index, const struct FFortPartySuggestion& PartySuggestion);
	void OnPartyLeftDelegate__DelegateSignature();
	void OnPartyJoinedDelegate__DelegateSignature();
	void OnPartyInvitesUpdatedDelegate__DelegateSignature(TArray<class UFortSocialItem*> ActiveFriends);
	void OnPartyInvitesCountUpdatedDelegate__DelegateSignature(int PartyInvitesCount);
	void OnPartyFunctionalityDegradedChanged__DelegateSignature(bool bDegradedFunctionality);
	void OnPartyDataChanged__DelegateSignature(const struct FPartyState& PartyData);
	void OnNumAliveChanged__DelegateSignature(const struct FUniqueNetIdRepl& UniqueId, int NumAlive);
	void OnMemberLocationStateChanged__DelegateSignature(const struct FUniqueNetIdRepl& UniqueId, EFortPartyMemberLocation Location);
	void OnLFGChanged__DelegateSignature(bool bLFG);
	void OnLeaderInvitesOnlyChanged__DelegateSignature(bool bLeaderInviteOnly);
	void OnLeaderFriendsOnlyChanged__DelegateSignature(bool bLeaderFriendsOnly);
	void OnFriendsCountChangedDelegate__DelegateSignature(int ActiveFriendsCount);
	void OnFriendsChangedDelegate__DelegateSignature(TArray<class UFortSocialItem*> ActiveFriends);
	void OnFriendPresenceUpdated__DelegateSignature(const struct FUniqueNetIdRepl& FriendId);
	void OnCrossplayPreferenceChanged__DelegateSignature();
	void OnClientSquadFillChanged__DelegateSignature(bool bSquadFill);
	void OnClientPlaylistChanged__DelegateSignature(const struct FName& PlaylistChanged);
	void OnClientPartyStateChanged__DelegateSignature(EFortPartyState PartyState);
	void MutePartyMember(const struct FUniqueNetIdRepl& PartyMemberId);
	bool LeavePartyForReplay(const struct FString& ReplayName, TArray<struct FString> ReplayOptions);
	void LeaveParty();
	void LeaveAction();
	void KickPartyMember(const struct FUniqueNetIdRepl& PartyMemberId);
	void JoinParty(class UFortSocialItem* PartyItem, bool bIsRetrying);
	bool STATIC_IsValidNetID(const struct FUniqueNetIdRepl& UniqueNetId);
	bool IsTeamMemberFriend(const struct FFortTeamMemberInfo& TeamMemberInfo);
	bool IsPlayerInOurParty(const struct FUniqueNetIdRepl& PlayerIdToCheck);
	bool IsPlayerBlocked(const struct FUniqueNetIdRepl& PlayerID);
	bool IsPartyMemberMuted(const struct FUniqueNetIdRepl& PartyMemberId);
	bool IsPartyFunctionalityDegraded();
	bool IsNetIdFromLocalPlayersPlatform(const struct FUniqueNetIdRepl& PlayerID);
	bool IsLocalPlayerPartyLeader();
	bool IsLocalPlayerLFG();
	bool IsLocalPlayerInPersistentParty();
	bool IsLocalPlayerInParty(class UFortSocialItem* SocialItem);
	bool IsInLocalPlayersParty(const struct FUniqueNetIdRepl& PlayerID);
	bool IsInCrossplatformParty(bool* bAllPlatformsKnown);
	bool IsEntirePartyInFrontEnd();
	bool IsAthenaPartyMemberReady(const struct FUniqueNetIdRepl& MemberId);
	void InviteOrJoinPartySuggestion(const struct FFortPartySuggestion& PartySuggestion);
	void InviteOrJoin(class UFortSocialItem* SocialItem);
	bool HasPendingMcpPartyInvitation(const struct FUniqueNetIdRepl& PlayerID);
	bool HasPendingFriendRequest();
	void HandlePendingInvites();
	class UFortUITeamInfo* GetTeamInfo(TEnumAsByte<EFortTeam> Team);
	void GetSocialItemCategories(TArray<class UFortSocialItem*>* OutSocialCategoryItems);
	void GetPartyTextForPlayer(const struct FUniqueNetIdRepl& UniqueNetId, struct FText* OutText);
	void GetPartySuggestions(TArray<struct FFortPartySuggestion>* OutSuggestions);
	bool GetPartySuggestionForPlayer(const struct FUniqueNetIdRepl& UniqueNetId, struct FFortPartySuggestion* OutPartySuggestion);
	bool GetPartySuggestionActionText(const struct FFortPartySuggestion& PartySuggestion, struct FText* ActionText);
	bool GetPartySuggestion(int Index, struct FFortPartySuggestion* OutSuggestion);
	bool GetPartyPrivacySetting(EPartyType* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly);
	bool GetPartyMemberLocation(const struct FUniqueNetIdRepl& MemberId, EFortPartyMemberLocation* LocationOut);
	ECommonInputType GetPartyMemberInputType(const struct FUniqueNetIdRepl& MemberId);
	EFortPartyMemberDisplayState GetPartyMemberDisplayState(const struct FFortTeamMemberInfo& PartyMemberInfo);
	void GetPartyInvites(TArray<class UFortSocialItem*>* OutPartyInvites);
	int GetNumPlayersInLocalParty();
	void GetNonMcpActiveFriends(TArray<class UFortSocialItem*>* OutPlatformActiveFriends);
	EFortFriendRequestStatus GetMcpFriendRequestStatusForPlayer(const struct FUniqueNetIdRepl& PlayerID);
	int GetMaxTeamSizeForSelectedTheater();
	bool GetLocalTeamTeamMemberInfo(class AFortPlayerState* TeamMemberState, struct FFortTeamMemberInfo* TeamMemberInfo);
	void GetLocalPlayerTeamMemberInfo(struct FFortTeamMemberInfo* LocalPlayerInfo);
	class UFortUITeamInfo* GetLocalPlayerTeam();
	struct FString GetLocalPlayerDisplayName();
	bool GetLocalPartyTeamFill();
	EFortPartyState GetLocalPartyProgression();
	struct FName GetLocalPartyPlaylist();
	bool GetLocalPartyMemberLocation(EFortPartyMemberLocation* Location);
	EFortFriendRequestStatus GetFriendRequestStatusForTeamMember(const struct FFortTeamMemberInfo& TeamMemberInfo, struct FUniqueNetIdRepl* UniqueIdUsed, bool* bIsMcpId);
	int GetCurrentPartyMaxSize();
	bool GetConsoleFriendRichPresenceText(const struct FUniqueNetIdRepl& FriendId, struct FText* RichPresenceText);
	EFortFriendRequestStatus GetConsoleFriendRequestStatusForPlayer(const struct FUniqueNetIdRepl& PlayerID);
	void GetAthenaPartyMemberTimeSpentInMatch(const struct FUniqueNetIdRepl& MemberId, struct FText* OutMinsText, struct FText* OutSecondsText);
	EAthenaPartyMemberReadyType GetAthenaPartyMemberReadyType(const struct FUniqueNetIdRepl& MemberId);
	struct FText GetAthenaPartyMemberReadyText(const struct FUniqueNetIdRepl& MemberId);
	int GetAthenaNumPlayersAlive(const struct FUniqueNetIdRepl& MemberId);
	void GetAllFriendsList(TArray<class UFortSocialItem*>* OutAllFriends);
	void GetActiveFriendsList(TArray<class UFortSocialItem*>* OutActiveFriends);
	void FinishSlatePartyJoinRequested(bool bShouldJoin);
	class UFortSocialItem* FindPartyInvite(const struct FUniqueNetIdRepl& PlayerUniqueId);
	void ClearPendingInvites();
	bool CanShowExternalProfile(const struct FString& TargetPlatform);
	bool CanDisplayFriendsActionNotifications();
	bool CanBeJoined(class UFortSocialItem* SocialItem, EFortPartyRestriction* FailReason);
	bool CanBeInvitedNetID(const struct FUniqueNetIdRepl& PlayerID, EFortPartyRestriction* FailReason);
	bool CanBeInvited(class UFortSocialItem* SocialItem, EFortPartyRestriction* FailReason);
	void AttemptRefreshConsoleFriendsList();
	void AthenaPartyMemberReadyTypeChanged__DelegateSignature(const struct FUniqueNetIdRepl& UniqueId, EAthenaPartyMemberReadyType MemberReadyType);
	void AcceptMcpFriendRequest(const struct FUniqueNetIdRepl& PlayerID);
};


// Class FortniteGame.FortPartyGameState
// 0x0320 (0x05E0 - 0x02C0)
class UFortPartyGameState : public UPartyGameState
{
public:
	struct FFortPartyRepState                          PartyState;                                               // 0x02C0(0x00A8)
	unsigned char                                      UnknownData00[0x278];                                     // 0x0368(0x0278) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyGameState");
		return ptr;
	}

};


// Class FortniteGame.FortPartyMemberState
// 0x0170 (0x01F8 - 0x0088)
class UFortPartyMemberState : public UPartyMemberState
{
public:
	struct FFortPartyMemberRepState                    MemberState;                                              // 0x0088(0x0158) (Transient)
	class UFortHeroType*                               HeroType;                                                 // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      NumAliveDiffUpdate;                                       // 0x01E8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	float                                              NumAliveUpdateTimer;                                      // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPartyMemberState");
		return ptr;
	}

};


// Class FortniteGame.FortPathCostEstimator
// 0x0080 (0x00A8 - 0x0028)
class UFortPathCostEstimator : public UObject
{
public:
	class AActor*                                      GoalActor;                                                // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortNavigationGraph*                        NavGraph;                                                 // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x70];                                      // 0x0038(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPathCostEstimator");
		return ptr;
	}

};


// Class FortniteGame.FortPatrolWardInterface
// 0x0000 (0x0028 - 0x0028)
class UFortPatrolWardInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPatrolWardInterface");
		return ptr;
	}


	EWardAffectType GetAffectingType();
	float GetAffectingDistance();
};


// Class FortniteGame.FortPawn_FeedbackAnnouncer
// 0x0000 (0x1010 - 0x1010)
class AFortPawn_FeedbackAnnouncer : public AFortPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawn_FeedbackAnnouncer");
		return ptr;
	}

};


// Class FortniteGame.FortPawn_Flinger
// 0x0000 (0x20F0 - 0x20F0)
class AFortPawn_Flinger : public AFortAIPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawn_Flinger");
		return ptr;
	}


	void SetScalarParameterOnAllCharacterMIDs(const struct FName& ParameterName, float ScalarValue);
	void RestorePreviousMaterialOnCharacterMesh(float ScalarValue);
	void OverrideMaterialAndCopyParametersOnCharacterMesh(class UMaterialInterface* NewMaterialToApply);
};


// Class FortniteGame.FortPawn_InteractablePawn
// 0x0010 (0x2100 - 0x20F0)
class AFortPawn_InteractablePawn : public AFortAIPawn
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x20F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawn_InteractablePawn");
		return ptr;
	}


	void BlueprintOnInteract(class AFortPawn* InteractingPawn);
	void BlueprintOnBeginInteract();
	struct FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn);
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn);
};


// Class FortniteGame.FortPawn_Taker
// 0x0020 (0x2110 - 0x20F0)
class AFortPawn_Taker : public AFortAIPawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x20F0(0x0008) MISSED OFFSET
	TArray<struct FBuildingHitTime>                    BuildingCollisions;                                       // 0x20F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x2108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawn_Taker");
		return ptr;
	}


	void SetScalarParameterOnAllCharacterMIDs(const struct FName& ParameterName, float ScalarValue);
	void RestorePreviousMaterialOnCharacterMesh(float ScalarValue);
	void OverrideMaterialAndCopyParametersOnCharacterMesh(class UMaterialInterface* NewMaterialToApply);
};


// Class FortniteGame.FortPlayerPawn
// 0x0EF0 (0x1F00 - 0x1010)
class AFortPlayerPawn : public AFortPawn
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x1010(0x0020) MISSED OFFSET
	float                                              CrouchMeshOffset;                                         // 0x1030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x1034(0x0028) MISSED OFFSET
	struct FFortAthenaVehicleInputStateUnreliable      VehicleInputStateUnreliable;                              // 0x105C(0x0024) (Net)
	struct FFortAthenaVehicleInputStateReliable        VehicleInputStateReliable;                                // 0x1080(0x0001) (Net)
	unsigned char                                      UnknownData02[0xB];                                       // 0x1081(0x000B) MISSED OFFSET
	bool                                               bIsOutsideSafeZone;                                       // 0x108C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayingSafeZoneEffects;                                  // 0x108D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDoSafeZoneCleanup;                                       // 0x108E(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x108F(0x0001) MISSED OFFSET
	float                                              OutsideSafeZoneBlendSpeed;                                // 0x1090(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentOutsideSafeZonePPVBlend;                           // 0x1094(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TargetOutsideSafeZonePPVBlend;                            // 0x1098(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x109C(0x0004) MISSED OFFSET
	class UPostProcessComponent*                       OutsideSafeZonePPComponent;                               // 0x10A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UClass*                                      SafeZoneAppliedGE;                                        // 0x10A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x10B0(0x0018) MISSED OFFSET
	class UClass*                                      SelfReviveGameplayEffect;                                 // 0x10C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TeammateReviveGameplayEffect;                             // 0x10D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              SetByCallerReviveHealth;                                  // 0x10D8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       DBNOInteractionCollisionProfile;                          // 0x10F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     DBNOInteractionBoxExtent;                                 // 0x1100(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              DBNODeferTime;                                            // 0x110C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UBoxComponent*                               DBNOInteractCollisionComponent;                           // 0x1110(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FGameplayTag                                EventReviveTag;                                           // 0x1118(0x0008) (Edit, DisableEditOnInstance)
	float                                              AggroRangeOverride;                                       // 0x1120(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2C];                                      // 0x1124(0x002C) MISSED OFFSET
	EFortPawnStasisMode                                StasisMode;                                               // 0x1150(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EFortPawnStasisMode                                PreviousStasisMode;                                       // 0x1151(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x1152(0x0006) MISSED OFFSET
	class UBuildingEditModeMetadata*                   LastBuildingMetadata;                                     // 0x1158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintJump;                                            // 0x1160(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x1161(0x0003) MISSED OFFSET
	float                                              SprintCancelTime;                                         // 0x1164(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUsingJetpack;                                          // 0x1168(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanPredictJumpApex;                                      // 0x1169(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0xE];                                       // 0x116A(0x000E) MISSED OFFSET
	TArray<class AFortAIPawn*>                         AbilityAITargets;                                         // 0x1178(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData10[0x18];                                      // 0x1188(0x0018) MISSED OFFSET
	class UAnimMontage*                                UnableToPerformActionMontage;                             // 0x11A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  UnableToPerformActionSound;                               // 0x11A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MoveSoundStimulusBroadcastInterval;                       // 0x11B0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0xE4];                                      // 0x11B4(0x00E4) MISSED OFFSET
	float                                              EmoteStartTime;                                           // 0x1298(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayingPassengerToPassengerAnimation;                    // 0x129C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0xB];                                       // 0x129D(0x000B) MISSED OFFSET
	bool                                               bPlayingDriverToPassengerAnimation;                       // 0x12A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0xF];                                       // 0x12A9(0x000F) MISSED OFFSET
	bool                                               bPlayingPassengerToDriverAnimation;                       // 0x12B8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0xF];                                       // 0x12B9(0x000F) MISSED OFFSET
	bool                                               bCameraLockedForVehicleSeatTransition;                    // 0x12C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0xF];                                       // 0x12C9(0x000F) MISSED OFFSET
	float                                              VehicleSpeedAtTimeOfJump;                                 // 0x12D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x12DC(0x0004) MISSED OFFSET
	struct FVehiclePawnState                           VehicleStateRep;                                          // 0x12E0(0x0010) (Net)
	struct FVehiclePawnState                           VehicleStateLocal;                                        // 0x12F0(0x0010) (Transient)
	struct FVehiclePawnState                           VehicleStateLastTick;                                     // 0x1300(0x0010) (Transient)
	struct FZiplinePawnState                           ZiplineState;                                             // 0x1310(0x003C) (Net)
	bool                                               bShowingOverdriveEffect;                                  // 0x134C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortBuildingState>                    BuildingState;                                            // 0x134D(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTargeting;                                             // 0x134E(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x31];                                      // 0x134F(0x0031) MISSED OFFSET
	int64_t                                            SlopeCameraOffsetFrameCounter;                            // 0x1380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVectorRK4SpringInterpolator                SlopeCameraOffsetInterpolator;                            // 0x1388(0x0008) (Transient)
	unsigned char                                      UnknownData18[0x48];                                      // 0x1390(0x0048) MISSED OFFSET
	struct FGuid                                       LastEquippedWeaponGUID;                                   // 0x13D8(0x0010) (Net, IsPlainOldData)
	unsigned char                                      UnknownData19[0x10];                                      // 0x13E8(0x0010) MISSED OFFSET
	class UInputComponent*                             VehicleInputComponent;                                    // 0x13F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x1400(0x0008) MISSED OFFSET
	class UAnimMontage*                                BluePrintPlaceAnimation;                                  // 0x1408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                BluePrintEditAnimation;                                   // 0x1410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0xC];                                       // 0x1418(0x000C) MISSED OFFSET
	unsigned char                                      bPawnLODDirty : 1;                                        // 0x1424(0x0001) (Transient)
	bool                                               bStartedInteractSearch;                                   // 0x1425(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData22[0x2];                                       // 0x1426(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStartedInteractSearch;                                  // 0x1428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndedInteractSearch;                                    // 0x1438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPartChanged;                                            // 0x1448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UMaterialInstanceDynamic*                    BlueprintPaperMID;                                        // 0x1458(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTimeline                                   BlueprintPaperPulseTimeline;                              // 0x1460(0x0098) (Transient)
	class UCustomColorComponent*                       AccessoryColorSwatchHandler[0x6];                         // 0x14F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UFortHero>                    Hero;                                                     // 0x1528(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCustomPlayerComponent*                      HACK_CustomPRIComponent;                                  // 0x1530(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TEnumAsByte<EFortCustomGender>                     CharacterGender;                                          // 0x1538(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortCustomBodyType>                   CharacterBodyType;                                        // 0x1539(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0x6];                                       // 0x153A(0x0006) MISSED OFFSET
	class UCustomCharacterPart*                        CharacterParts[0x6];                                      // 0x1540(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCustomColorSwatch*                          CharacterColorSwatches[0x2];                              // 0x1570(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x6];                          // 0x1580(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCharacterPartsCastIndirectShadows;                       // 0x15B0(0x0001) (ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      UnknownData24[0x7];                                       // 0x15B1(0x0007) MISSED OFFSET
	class USkeletalMeshComponentBudgeted*              CharacterPartSkeletalMeshComponents[0x6];                 // 0x15B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCustomCharacterPart*                        PreviousCharacterParts[0x6];                              // 0x15E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACustomCharacterPartModifier*                CharacterPartModifiers[0x6];                              // 0x1618(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FFortCharacterPartsRepMontageInfo           RepCharPartAnimMontageInfo;                               // 0x1648(0x0020) (Net, Transient)
	unsigned char                                      UnknownData25[0x8];                                       // 0x1668(0x0008) MISSED OFFSET
	class UClass*                                      AnimBPOverride;                                           // 0x1670(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      OriginalAnimBP;                                           // 0x1678(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UFortFootstepAudioBank*                      FootstepBankOverride;                                     // 0x1680(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UFortFootstepAudioBank*                      OriginalFootstepBank;                                     // 0x1688(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FFortClientObservedStatArray                ClientObservedStats;                                      // 0x1690(0x00E0) (Net, Transient)
	unsigned char                                      UnknownData26[0x18];                                      // 0x1770(0x0018) MISSED OFFSET
	TArray<class AFortPickup*>                         QueuedAutoPickups;                                        // 0x1788(0x0010) (ZeroConstructor, Transient)
	struct FScalableFloat                              AutoPickupDropRepickupDelay;                              // 0x1798(0x0020) (Edit)
	unsigned char                                      UnknownData27[0x8];                                       // 0x17B8(0x0008) MISSED OFFSET
	struct FName                                       CarriedObjectAttachmentSocket;                            // 0x17C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PickupSpeedMultiplier;                                    // 0x17C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x17CC(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x17D0(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 AboveBelowMiniMapIconBrush;                               // 0x1858(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 FarOffMiniMapIconBrush;                                   // 0x18E0(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 DBNOMiniMapIconBrush;                                     // 0x1968(0x0088) (Edit, DisableEditOnInstance)
	struct FLinearColor                                MinimapIconColorSelf;                                     // 0x19F0(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapIconColorTeammate;                                 // 0x1A00(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                MinimapIconColorEnemy;                                    // 0x1A10(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxIndicatorVisibilityDistForEnemies;                     // 0x1A20(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxIndicatorVisibilityDistForAllies;                      // 0x1A24(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData29[0x18];                                      // 0x1A28(0x0018) MISSED OFFSET
	uint16_t                                           PackedReplicatedSlopeAngles;                              // 0x1A40(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bBeingRepossessed;                                        // 0x1A42(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bInitAbilitySystemComponentFromPlayerState;               // 0x1A43(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData30[0x4];                                       // 0x1A44(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFinishedCharacterCustomization;                         // 0x1A48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortCustomizationAssetLoader*               CustomizationAssetLoader;                                 // 0x1A58(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData31[0x8];                                       // 0x1A60(0x0008) MISSED OFFSET
	class UParticleSystem*                             SpawnParticles;                                           // 0x1A68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SpawnSound;                                               // 0x1A70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NumSecondsOnGroundBeforeStoppingRagdoll;                  // 0x1A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x1A7C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData33 : 2;                                        // 0x1A80(0x0001)
	unsigned char                                      bIsLocalPlayer : 1;                                       // 0x1A80(0x0001) (Transient)
	unsigned char                                      UnknownData34 : 1;                                        // 0x1A80(0x0001)
	unsigned char                                      bIsInCharacterCustomization : 1;                          // 0x1A80(0x0001) (Transient)
	unsigned char                                      bDamagedEnemy : 1;                                        // 0x1A80(0x0001) (Transient)
	unsigned char                                      UnknownData35[0x17];                                      // 0x1A81(0x0017) MISSED OFFSET
	uint32_t                                           PlayerStatus;                                             // 0x1A98(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint16_t                                           AccelerationPack;                                         // 0x1A9C(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int8_t                                             AccelerationZPack;                                        // 0x1A9E(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData36[0x1];                                       // 0x1A9F(0x0001) MISSED OFFSET
	TArray<class UFortAnimNotifyState_RootMotionInterrupt*> RootMotionInterruptNotifyStack;                           // 0x1AA0(0x0010) (ZeroConstructor, Transient)
	TArray<class UAnimMontage*>                        RootMotionInterruptMontageStack;                          // 0x1AB0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData37[0x20];                                      // 0x1AC0(0x0020) MISSED OFFSET
	class UFortVisibilityComponent*                    VisibilityComponent;                                      // 0x1AE0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       BlendablesPostProcessComp;                                // 0x1AE8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData38[0x8];                                       // 0x1AF0(0x0008) MISSED OFFSET
	unsigned char                                      bUseControllerRotationYawToRestore : 1;                   // 0x1AF8(0x0001)
	unsigned char                                      UnknownData39[0x7];                                       // 0x1AF9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginSkydivingEvent;                                    // 0x1B00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBallooningGravityCeilingChanged;                        // 0x1B10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USoundBase*                                  CurrentGliderOpenSound;                                   // 0x1B20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              CurrentGliderOpenAudioComponent;                          // 0x1B28(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundBase*                                  CurrentGliderCloseSound;                                  // 0x1B30(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              CurrentGliderCloseAudioComponent;                         // 0x1B38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData40[0x10];                                      // 0x1B40(0x0010) MISSED OFFSET
	struct FRepFortMeshAttachment                      AttachmentMesh;                                           // 0x1B50(0x0010) (Net)
	class USkeletalMeshComponentBudgeted*              AttachmentMeshComponent;                                  // 0x1B60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UFortPawnScriptedBehavior*                   BotScriptedBehavior;                                      // 0x1B68(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsScriptedBot;                                           // 0x1B70(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData41[0x3];                                       // 0x1B71(0x0003) MISSED OFFSET
	struct FVortexParams                               VortexParams;                                             // 0x1B74(0x0010) (Net, IsPlainOldData)
	unsigned char                                      UnknownData42[0x4];                                       // 0x1B84(0x0004) MISSED OFFSET
	struct FSlipperySlopeParams                        SlipperySlopeParams;                                      // 0x1B88(0x0160) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UAthenaGliderItemDefinition*                 GliderClass;                                              // 0x1CE8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x10];                                      // 0x1CF0(0x0010) MISSED OFFSET
	bool                                               bIsSkydiving;                                             // 0x1D00(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bLocalIsSkydiving;                                        // 0x1D01(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsParachuteOpen;                                         // 0x1D02(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsParachuteForcedOpen;                                   // 0x1D03(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSkydivingFromBus;                                      // 0x1D04(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSkydivingFromLaunchPad;                                // 0x1D05(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPendingSkydiveLaunch;                                    // 0x1D06(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInVortex;                                              // 0x1D07(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReplicatedIsInVortex;                                    // 0x1D08(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInSlipperyMovement;                                    // 0x1D09(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReplicatedIsInSlipperyMovement;                          // 0x1D0A(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBelowAutoDeployTestHeight;                             // 0x1D0B(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSlopeSliding;                                          // 0x1D0C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsProxySimulationTimedOut;                               // 0x1D0D(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData44[0x2];                                       // 0x1D0E(0x0002) MISSED OFFSET
	class AFortPlayerPetRepState*                      PetState;                                                 // 0x1D10(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortPlayerPet*                              CosmeticPetInstance;                                      // 0x1D18(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData45[0x10];                                      // 0x1D20(0x0010) MISSED OFFSET
	class AFortPlayerParachute*                        ParachuteAttachment;                                      // 0x1D30(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParachuteAttachSocket;                                    // 0x1D38(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScalableFloat                              ParachuteDeployTraceForGroundDistance;                    // 0x1D40(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              LaunchPadParachuteDeployTraceForGroundDistance;           // 0x1D60(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              LaunchPadParachuteDeployTraceForDownwardSpeed;            // 0x1D80(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              ParachuteDeployVelocityBlend;                             // 0x1DA0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ParachuteCooldownToOpen;                                  // 0x1DC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ParachuteCooldownToClose;                                 // 0x1DC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bParachuteDeployFixedVerticalDistance;                    // 0x1DC8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData46[0x7];                                       // 0x1DC9(0x0007) MISSED OFFSET
	struct FScalableFloat                              GliderRedeployAllowedRow;                                 // 0x1DD0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              GliderRedeployLateralVelocityMultiplierRow;               // 0x1DF0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              GliderRedeployHeighLimitRow;                              // 0x1E10(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FScalableFloat                              BalloonFallDamageThresholdVelocityZ;                      // 0x1E30(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      BalloonActiveCount;                                       // 0x1E50(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData47[0x7];                                       // 0x1E51(0x0007) MISSED OFFSET
	class UClass*                                      PreDrivingAnimBP;                                         // 0x1E58(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAudioComponent*                             ParachuteAudioLoop;                                       // 0x1E60(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData48[0x8];                                       // 0x1E68(0x0008) MISSED OFFSET
	class UAudioComponent*                             SkydiveAudioLoop;                                         // 0x1E70(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USoundBase*                                  SkydivingLoop1P;                                          // 0x1E78(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SkydivingLoop3P;                                          // 0x1E80(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ParachuteOpenLoop1P;                                      // 0x1E88(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  ParachuteOpenLoop3P;                                      // 0x1E90(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData49[0x2C];                                      // 0x1E98(0x002C) MISSED OFFSET
	uint32_t                                           RemoteViewData32;                                         // 0x1EC4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              LastQuickBarSwitchRequestTime;                            // 0x1EC8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBuildHotfix;                                             // 0x1ECC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData50[0x3];                                       // 0x1ECD(0x0003) MISSED OFFSET
	float                                              CrouchStartTime;                                          // 0x1ED0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CrouchEndTime;                                            // 0x1ED4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CrouchLerpTime;                                           // 0x1ED8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MeleeAbilityCooldown;                                     // 0x1EDC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TWeakObjectPtr<class AFortRemoteControlledPawnAthena> ControlledRCPawn;                                         // 0x1EE0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             CachedTeamControllingRC;                                  // 0x1EE8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData51[0x3];                                       // 0x1EE9(0x0003) MISSED OFFSET
	struct FRotator                                    StoredControlRotation;                                    // 0x1EEC(0x000C) (Net, Transient, IsPlainOldData)
	float                                              GhostModeExitStartTime;                                   // 0x1EF8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              GhostModeExitDuration;                                    // 0x1EFC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerPawn");
		return ptr;
	}


	void VerifySkydivingMatchesServer();
	void UpdateAimbotDetectionStatus();
	void UnlockCameraAfterVehicleSeatTransition();
	void UnableToPerformAction(bool bPlayMontage, const struct FGameplayTagContainer& FailedReason);
	void ToggleGender();
	void ToggleBodyType();
	float TimeFromJumpApex();
	void SwitchToPreviousPart(const struct FString& PartName);
	void SwitchToNextPart(const struct FString& PartName);
	void StartGhostModeExit(float InGhostModeExitDuration);
	void StartedInteractSearch();
	void SetVehicleOverrideExit(bool bIgnoreLaunch);
	void SetStasisMode(EFortPawnStasisMode InStasisMode);
	void SetPetType(class UAthenaPetItemDefinition* PetToCreate);
	void SetPendingSkydiveLaunch(bool bPending);
	void SetNumActiveBalloons(int NewBalloonCount);
	void SetInVortex(bool bNewValue, float UpwardLaunchVelocity, float GravityFloorAltitude, float GravityFloorWidth, float GravityFloorGravityScalar, float GravityFloorTerminalVelocity);
	void SetInSlipperyMovement(bool bIsSlippery);
	void SetHomeActor(class AActor* NewActor);
	void SetFootstepBankOverride(class UFortFootstepAudioBank* InFootstepBankOverride);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void SetAnimBPOverride(class UClass* InAnimBPOverride);
	void ServerUpdateVehicleInputStateUnreliable(const struct FFortAthenaVehicleInputStateUnreliable& ReliableInput);
	void ServerUpdateVehicleInputStateReliable(const struct FFortAthenaVehicleInputStateReliable& ReliableInput);
	void ServerToggleGender();
	void ServerToggleBodyType();
	void ServerSetAttachment(const struct FRepFortMeshAttachment& Attachment);
	void ServerSetAimbotDetection(bool bEnableDetection);
	void ServerSendAimbotDetectionStatus(TArray<unsigned char> Payload);
	void ServerRootMotionInterruptNotifyStopMontage(class UAnimMontage* MontageToStop);
	void ServerReviveFromDBNO(class AController* EventInstigator);
	void ServerRespawnFromDBNO();
	void ServerPlayUnableToPerformActionMontage();
	class AFortAthenaVehicle* ServerOnExitVehicle();
	void ServerHandlePickupWithSwap(class AFortPickup* Pickup, const struct FGuid& Swap, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerHandlePickup(class AFortPickup* Pickup, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound);
	void ServerEndZiplining();
	void ServerCyclePart(TEnumAsByte<EFortCustomPartType> Part, bool bNextPart);
	void ServerCycleColorSwatch(TEnumAsByte<EColorSwatchType> SwatchType, bool bNext);
	void ServerCycleAccessoryColorSwatch(TEnumAsByte<EFortCustomPartType> Part, bool bNext);
	void ServerChoosePart(TEnumAsByte<EFortCustomPartType> Part, class UCustomCharacterPart* ChosenCharacterPart);
	void ServerChooseGender(TEnumAsByte<EFortCustomGender> Gender);
	void SafeZoneStatusChanged();
	void ReviveFromDBNO(class AController* EventInstigator);
	void RemoveAttachment();
	void RemoveAbilityAITarget(class AFortAIPawn* InTarget);
	void RandomizeCharacter(const struct FString& GenderString);
	void PassengerToPassengerAnimationStopped();
	void PassengerToDriverAnimationStopped();
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation);
	void OnSlidingStateChanged(bool bNewSlidingState);
	void OnRep_ZiplineState();
	void OnRep_VehicleInputStateUnreliable();
	void OnRep_VehicleInputStateReliable();
	void OnRep_StoredControlRotation();
	void OnRep_StartedInteractSearch();
	void OnRep_ReplicatedIsInVortex();
	void OnRep_ReplicatedIsInSlipperyMovement();
	void OnRep_ParachuteAttachment();
	void OnRep_IsTargeting();
	void OnRep_IsSlopeSliding();
	void OnRep_IsSkydivingFromBus();
	void OnRep_IsSkydiving(bool bPreviousState);
	void OnRep_IsParachuteOpen(bool bPreviousState);
	void OnRep_IsOutsideSafeZone();
	void OnRep_InVehicle();
	void OnRep_FootstepBankOverride();
	void OnRep_ControlledRCPawn();
	void OnRep_CharPartAnimMontageInfo();
	void OnRep_AttachmentMesh();
	void OnRep_AnimBPOverride();
	void OnRep_AccelerationZPack();
	void OnRep_AccelerationPack();
	void OnOpenParachute(bool* bConsumeEvent);
	void OnExitedVehicle();
	void OnEnteredVehicle();
	void OnCharacterPartsReinitialized();
	void OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifyTeammateSkydivedFromBus();
	void MarkSafe(class UClass* GEtoApply);
	void ListCharacterParts(const struct FString& GenderAndOrPartString);
	bool IsZiplining();
	bool IsUsingUmbrella();
	bool IsUsingPersonalVehicle();
	bool IsSprinting();
	bool IsSkydivingFromLaunchPad();
	bool IsSkydivingFromBus();
	bool IsSkydiving();
	bool IsPassivelySkydiving();
	bool IsParachuteOpen();
	bool IsParachuteForcedOpen();
	bool IsOperatingTurret();
	bool IsInVortex();
	bool IsInVehicle();
	bool IsInSlipperyMovement();
	bool IsInCharacterCustomization();
	bool IsDrivingVehicle();
	bool IsActivelyStrafingInAir();
	bool IsActivelySkydivingUpInVortex();
	bool IsActivelySkydiving();
	void HandleInStasis();
	unsigned char GetVehicleSeatIndex();
	bool GetVehicleOverrideExit();
	class AFortAthenaVehicle* GetVehicle();
	EFortPawnStasisMode GetStasisMode();
	float GetStamina();
	struct FVector GetSlopeSlidingNormal();
	void GetSlopeSlidingAngles(float* LocalPitch, float* LocalRoll);
	class USkeletalMeshComponent* GetSkeletalMeshForPartType(TEnumAsByte<EFortCustomPartType> PartType);
	float GetSimulatedAttributeValue(const struct FGameplayAttribute& Attribute, float DefaultValue);
	bool GetPendingSkydiveLaunch();
	int GetPawnRawBudgetValue();
	int GetPawnLOD();
	int GetNumActiveBalloons();
	float GetMaxStamina();
	bool GetIsSlopeSliding();
	class AActor* GetHomeActor();
	void GetGender(bool* IsMale, bool* IsFemale);
	int GetExtraLives();
	class UParticleSystem* GetContrailParticleSystem();
	TEnumAsByte<EFortCustomGender> GetCharacterGender();
	TEnumAsByte<EFortCustomBodyType> GetCharacterBodyType();
	float GetBaseAimPitchQuantized();
	void ForceDetachFromRemoteControlledPawn();
	void EndSkydiving();
	void EndHovering();
	void EndGhostModeExit();
	void EndedInteractSearch();
	void DriverToPassengerAnimationStopped();
	void DebugDestroyVehicle();
	void ClientNotifyAbilityFailed(class UGameplayAbility* FailedAbility, const struct FGameplayTagContainer& FailedReason);
	void ClearFootstepBankOverride(class UFortFootstepAudioBank* InFootstepBankOverride);
	void ClearExistingCosmeticPetInstance();
	void ClearAnimBPOverride(class UClass* InAnimBPOverride);
	bool CanPredictJumpApex();
	void BeginZiplining(class AFortAthenaZipline* Zipline, float Speed, class USceneComponent* SocketComponent, const struct FName& SocketName, const struct FVector& SocketOffset);
	void BeginSkydiving(bool bFromBus);
	void BeginHovering();
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, const struct FName& FirstSocketName, const struct FName& SecondSocketName, float Width);
	void AnimTrailsNotify(bool bActive);
	void AnimTrailsDisable();
	void AITargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	void AddAttachment(class USkeletalMesh* Attachment, class UAnimBlueprint* InAnimBP);
	void AddAbilityAITarget(class AFortAIPawn* InTarget);
};


// Class FortniteGame.FortPawnScriptedBehavior
// 0x00D0 (0x00F8 - 0x0028)
class UFortPawnScriptedBehavior : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	TArray<struct FScriptedAction>                     ActionTemplates;                                          // 0x0048(0x0010) (ZeroConstructor, Config)
	TArray<struct FScriptedBehavior>                   ScriptedBehaviors;                                        // 0x0058(0x0010) (ZeroConstructor, Config)
	struct FScriptedBehavior                           CurrentBehavior;                                          // 0x0068(0x0020)
	struct FScriptedAction                             CurrentCommand;                                           // 0x0088(0x0070)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPawnScriptedBehavior");
		return ptr;
	}


	void PlaceStructure();
};


// Class FortniteGame.FortPermaniteStructureInterface
// 0x0000 (0x0028 - 0x0028)
class UFortPermaniteStructureInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPermaniteStructureInterface");
		return ptr;
	}


	void OnBoundariesChanged(int MinLevel, int MaxLevel, int CurrentLevel);
};


// Class FortniteGame.FortPersistentResourceItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortPersistentResourceItemDefinition : public UFortAccountItemDefinition
{
public:
	bool                                               bIsEventItem;                                             // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0391(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPersistentResourceItemDefinition");
		return ptr;
	}


	bool IsEventItem();
};


// Class FortniteGame.FortItemTypeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortItemTypeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemTypeFunctionLibrary");
		return ptr;
	}


	struct FText STATIC_ToText(EFortItemType ItemType, bool UsePlural);
	EFortItemType STATIC_GetTemplateType(EFortItemType ItemType);
};


// Class FortniteGame.FortPersonalVehicleItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortPersonalVehicleItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPersonalVehicleItem");
		return ptr;
	}

};


// Class FortniteGame.FortPersonalVehicleItemDefinition
// 0x00B0 (0x0440 - 0x0390)
class UFortPersonalVehicleItemDefinition : public UFortAccountItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0390(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortPersonalVehicleItemDefinition.PersonalVehicleAbility
	float                                              MountTime;                                                // 0x03B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x03BC(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPersonalVehicleItemDefinition.SkeletalMesh
	class UClass*                                      AnimClass;                                                // 0x03E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x03F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPersonalVehicleItemDefinition.ActivateSound
	unsigned char                                      UnknownData04[0x28];                                      // 0x0418(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPersonalVehicleItemDefinition.DeactivateSound

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPersonalVehicleItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortPetAnimInstanceShared
// 0x0060 (0x0470 - 0x0410)
class UFortPetAnimInstanceShared : public UFortAnimInstance
{
public:
	float                                              DeltaTime;                                                // 0x0410(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class AFortPlayerPawn*                             OwnerFortPawn;                                            // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AFortPlayerPet*                              OwnerPet;                                                 // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTagContainer                       PendingActiveVariantContextTags;                          // 0x0428(0x0020) (Edit, Transient)
	struct FGameplayTagContainer                       ActiveVariantContextTags;                                 // 0x0448(0x0020) (Transient)
	unsigned char                                      bIsFrontEndPreview : 1;                                   // 0x0468(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bAreActiveFlagChangesPending : 1;                         // 0x0468(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0469(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPetAnimInstanceShared");
		return ptr;
	}

};


// Class FortniteGame.FortPetAnimInstance
// 0x0080 (0x04F0 - 0x0470)
class UFortPetAnimInstance : public UFortPetAnimInstanceShared
{
public:
	struct FFortAnimInput_Skydiving                    SkydivingState;                                           // 0x0470(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	float                                              LookAtAlpha;                                              // 0x04B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LookAtTargetLocation;                                     // 0x04BC(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              LookAtTargetingSpeed;                                     // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                JumpAnimIndex;                                            // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsOnGround : 1;                                          // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsSlopeSliding : 1;                                      // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsJumpLandComplete : 1;                                  // 0x04D0(0x0001) (Edit, BlueprintVisible, Transient)
	unsigned char                                      bIsTargeting : 1;                                         // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsDBNO : 1;                                              // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsHappy : 1;                                             // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsHunker : 1;                                            // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsFrontEndLobbyPartyMember : 1;                          // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsOwnerPawnBeingControlledByNonPlayerAnimBP : 1;         // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00 : 1;                                        // 0x04D1(0x0001)
	unsigned char                                      bIsCrouching : 1;                                         // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsMoving2D : 1;                                          // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsLocomotion : 1;                                        // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsJogging : 1;                                           // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsSprinting : 1;                                         // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsCrouchSprinting : 1;                                   // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEmotePlaying_WhereHunkeringIsBest : 1;                   // 0x04D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEmotePlaying_WhereHappyIsBest : 1;                       // 0x04D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bResponse_ShouldBeHappy : 1;                              // 0x04D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x5];                                       // 0x04D3(0x0005) MISSED OFFSET
	class UFortMontageItemDefinitionBase*              LastObservedFrontEndEmote;                                // 0x04D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x04E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPetAnimInstance");
		return ptr;
	}


	void TEMP_OnActiveTagChanged(const struct FGameplayTag& NewTag);
	struct FGameplayTag TEMP_GetActiveTag();
	void ApplyOrRemoveFlagsFromEmote(class UFortMontageItemDefinitionBase* Emote, bool bApply);
};


// Class FortniteGame.FortPetAnimInstance_AnimDynamics
// 0x0010 (0x0480 - 0x0470)
class UFortPetAnimInstance_AnimDynamics : public UFortPetAnimInstanceShared
{
public:
	float                                              PawnSpeedForAnimDynamics;                                 // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PawnSpeedForPlayingEmote;                                 // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PawnSpeedForDBNO;                                         // 0x0478(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      bIsJoggingSprintingOrTargeting : 1;                       // 0x047C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bPetWantsAnimDynamics : 1;                                // 0x047C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsPlayingEmote : 1;                                      // 0x047C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsDBNO : 1;                                              // 0x047C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsPlayingEmoteOrDBNO : 1;                                // 0x047C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x047D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPetAnimInstance_AnimDynamics");
		return ptr;
	}

};


// Class FortniteGame.FortPetManager
// 0x0020 (0x0048 - 0x0028)
class UFortPetManager : public UObject
{
public:
	TArray<class AFortPlayerPetRepState*>              RegisteredPets;                                           // 0x0028(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortPlayerPetRepState*>              PetsPendingUpdate;                                        // 0x0038(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPetManager");
		return ptr;
	}

};


// Class FortniteGame.FortPetStimuliBank
// 0x0010 (0x0040 - 0x0030)
class UFortPetStimuliBank : public UDataAsset
{
public:
	TArray<struct FPetResponseFromQuestSystem>         QuestTriggers;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPetStimuliBank");
		return ptr;
	}

};


// Class FortniteGame.FortPhysicsBall
// 0x0060 (0x0758 - 0x06F8)
class AFortPhysicsBall : public ABuildingGameplayActor
{
public:
	bool                                               bDetachRootChildrenOnServer;                              // 0x06F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateRotationOnlyIfRendered;                            // 0x06F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRollingAudioFaded;                                       // 0x06FA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x06FB(0x0001) MISSED OFFSET
	float                                              UpdateRollingAudioRangeMeters;                            // 0x06FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            SphereCollision;                                          // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RotationPivot;                                            // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RotatedComponent;                                         // 0x0710(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData)
	class UFortVehicleAudioVoice*                      RollingAudioComponent;                                    // 0x0718(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0720(0x0010) MISSED OFFSET
	bool                                               bEnableBackspinOnKick;                                    // 0x0730(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyingBackspin;                                        // 0x0731(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0732(0x0002) MISSED OFFSET
	float                                              BackspinRotationScale;                                    // 0x0734(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableLiftAndDrag;                                       // 0x0738(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStopLiftWhenFalling;                                     // 0x0739(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyingLift;                                            // 0x073A(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x073B(0x0001) MISSED OFFSET
	float                                              LiftFactor;                                               // 0x073C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StopLiftHorizontalVelocityThreshold;                      // 0x0740(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StopLiftVerticalVelocityThreshold;                        // 0x0744(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StopLiftTimeDuration;                                     // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LiftDuration;                                             // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              DragVelocityThreshold;                                    // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DragFactor;                                               // 0x0754(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPhysicsBall");
		return ptr;
	}


	void UpdateDirectionAndRotation(float DeltaSeconds);
};


// Class FortniteGame.FortPhysicsReplicatedTargetGhost
// 0x0010 (0x0338 - 0x0328)
class AFortPhysicsReplicatedTargetGhost : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPhysicsReplicatedTargetGhost");
		return ptr;
	}

};


// Class FortniteGame.FortPickaxePreviewActor
// 0x0030 (0x0358 - 0x0328)
class AFortPickaxePreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	class UAnimMontage*                                MontageToPlayForSwinging;                                 // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAthenaPickaxeItemDefinition*                CosmeticPickaxeItemDefinition;                            // 0x0340(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AFortWeapon*                                 WeaponActor;                                              // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0350(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPickaxePreviewActor");
		return ptr;
	}

};


// Class FortniteGame.FortPickupAthena
// 0x0000 (0x05C0 - 0x05C0)
class AFortPickupAthena : public AFortPickup
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPickupAthena");
		return ptr;
	}

};


// Class FortniteGame.FortPickupBackpack
// 0x0000 (0x05C0 - 0x05C0)
class AFortPickupBackpack : public AFortPickup
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPickupBackpack");
		return ptr;
	}

};


// Class FortniteGame.FortPickupEffect
// 0x0078 (0x03A0 - 0x0328)
class AFortPickupEffect : public AActor
{
public:
	class UStaticMesh*                                 StaticMesh;                                               // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UFortAlterationItemDefinition*>       ActiveAlterations;                                        // 0x0338(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UFortWorldItemDefinition*                    ItemDefinition;                                           // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDoNotShowSpawnParticles;                                 // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDoNotTickSkeletalMeshComponents;                         // 0x0351(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0352(0x0002) MISSED OFFSET
	struct FVector                                     PickupColor;                                              // 0x0354(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FLinearColor                                BackpackWorldPosition;                                    // 0x0360(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      bOwnedByALocalPlayer : 1;                                 // 0x0370(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bOwnedByPlayer : 1;                                       // 0x0370(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0371(0x0003) MISSED OFFSET
	bool                                               bRandomRotation;                                          // 0x0374(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0375(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x0375(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPickupEffect.PickupByNearbyPawnSound

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPickupEffect");
		return ptr;
	}


	void OnTossed();
	void OnPickedUp();
	void OnAttached();
	void OnAboutToEnterBackpack(class AFortPawn* PickupTarget);
	void EnableBacchusHighlight();
	void DisableBacchusHighlight();
	class UMaterialInstanceDynamic* ApplyCosmeticOverridesToMaterial(class UMeshComponent* MeshComponent, int MatIndex);
};


// Class FortniteGame.FortPlaceableActorItemDefinition
// 0x00A0 (0x03C0 - 0x0320)
class UFortPlaceableActorItemDefinition : public UFortItemDefinition
{
public:
	class UClass*                                      BasePlaceableActorClass;                                  // 0x0320(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 DisplayImage;                                             // 0x0328(0x0088) (BlueprintVisible)
	struct FName                                       ActorName;                                                // 0x03B0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaceableActorItemDefinition");
		return ptr;
	}


	struct FName GetActorName();
	class UFortPlaceableActorItemDefinition* STATIC_CreatePlaceableActorItemDefinitionFromActor(const struct FBuildingDuplicationData& DuplicationData, const struct FSlateBrush& ImageToDisplay);
};


// Class FortniteGame.FortPlacedPawnMarker
// 0x0000 (0x0350 - 0x0350)
class AFortPlacedPawnMarker : public ANavigationObjectBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlacedPawnMarker");
		return ptr;
	}

};


// Class FortniteGame.FortPlacementActor
// 0x0008 (0x0638 - 0x0630)
class AFortPlacementActor : public ABuildingActor
{
public:
	TWeakObjectPtr<class AActor>                       OccupyingActor;                                           // 0x0630(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlacementActor");
		return ptr;
	}

};


// Class FortniteGame.FortPlacementActorDataProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UFortPlacementActorDataProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlacementActorDataProviderInterface");
		return ptr;
	}

};


// Class FortniteGame.FortPlacementActorTagTest
// 0x0040 (0x0068 - 0x0028)
class UFortPlacementActorTagTest : public UObject
{
public:
	struct FGameplayTagContainer                       TagsToApplyOnSuccess;                                     // 0x0028(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagContainer                       TagsToApplyOnFailure;                                     // 0x0048(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlacementActorTagTest");
		return ptr;
	}


	bool ShouldApplyTagsToPlacementActor(class AFortPlacementActor* FocusPlacementActor, const struct FVector& AveragePlacementActorLocation);
	bool LineTraceByChannel(class AFortPlacementActor* PlacementActor, const struct FVector& Start, const struct FVector& End, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, bool bIgnoreSelf, struct FHitResult* OutHit);
};


// Class FortniteGame.FortPlayerAnimInstance
// 0x32B0 (0x36C0 - 0x0410)
class UFortPlayerAnimInstance : public UFortAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	float                                              DeltaTime;                                                // 0x0418(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x041C(0x0004) MISSED OFFSET
	class AFortPlayerPawn*                             FortPlayerPawn;                                           // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortCustomBodyType>                   BodyType;                                                 // 0x0428(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EFortPlayerAnimBodyType                            AnimBodyType;                                             // 0x0429(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortCustomGender>                     Gender;                                                   // 0x042A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x042B(0x0001) MISSED OFFSET
	float                                              FallAnimDuration;                                         // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallPlayRate;                                             // 0x0430(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	class AFortPlayerPawnAthena*                       FortPlayerPawnAthena;                                     // 0x0438(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAnimInput_SpeedWarping                 SpeedWarping;                                             // 0x0440(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              JogStartSpeedWarpingAlpha;                                // 0x0460(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	struct FFortAnimInput_SpeedWarping                 JogStartSpeedWarping;                                     // 0x0468(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_HoverBoard                   HoverBoardInput;                                          // 0x0488(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_ShoppingCart                 ShoppingCartInput;                                        // 0x04F0(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_GolfCart                     GolfCartInput;                                            // 0x0568(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_Quad                         QuadBikeInput;                                            // 0x05D0(0x0080) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_MountedTurret                MountedTurretInput;                                       // 0x0650(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_FerretVehicle                FerretVehicleInput;                                       // 0x0670(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FFortAnimInput_Zipline                      ZiplineInput;                                             // 0x06D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              SlopeWarpingAlpha;                                        // 0x06E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DBNOSlopeWarpingAlpha;                                    // 0x06EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    DBNOSlopeRotation;                                        // 0x06F0(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              DBNOTurnPlayRate;                                         // 0x06FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAnimInput_TurnInPlace                  TurnInPlaceInput;                                         // 0x0700(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRotator                                    TurnPelvisRotationOffset;                                 // 0x0758(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	struct FFortAnimInput_AdjustedAim                  AdjustedAimBase;                                          // 0x0768(0x01F0) (Edit)
	struct FFortAnimInput_AdjustedAim                  AdjustedAimAthena;                                        // 0x0958(0x01F0) (Edit)
	struct FFortAnimInput_AdjustedAim                  AdjustedAim;                                              // 0x0B48(0x01F0) (BlueprintVisible, BlueprintReadOnly, Transient)
	float                                              ADSToNonADSBlendTime;                                     // 0x0D38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightHandIKAlpha;                                         // 0x0D3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftHandIKAlpha;                                          // 0x0D40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftHandFKAlpha;                                          // 0x0D44(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEnableHandIK;                                            // 0x0D48(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0D49(0x0003) MISSED OFFSET
	float                                              SnapWeapon_LHandAlpha;                                    // 0x0D4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LegIKAlpha;                                               // 0x0D50(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAnimInput_Skydiving                    Skydiving;                                                // 0x0D54(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	bool                                               bIsSlopeSliding;                                          // 0x0D9C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0D9D(0x0003) MISSED OFFSET
	float                                              SlopeSlidingPitch;                                        // 0x0DA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SlopeSlidingRoll;                                         // 0x0DA4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              JumpAdditiveLayerAlpha;                                   // 0x0DA8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0DAC(0x0004) MISSED OFFSET
	struct FCachedAnimStateData                        JumpAdditiveLayerPassthrough;                             // 0x0DB0(0x0020) (Edit)
	struct FCachedAnimStateArray                       JumpAdditiveLeanOverride;                                 // 0x0DD0(0x0018) (Edit)
	float                                              JumpAdditiveLeanAlpha;                                    // 0x0DE8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DisableArmsHeadAdditiveCurveAlpha;                        // 0x0DEC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              CurrentAnimSet;                                           // 0x0DF0(0x00A0) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              DefaultAnimSetMale;                                       // 0x0E90(0x00A0) (Edit, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              DefaultAnimSetFemale;                                     // 0x0F30(0x00A0) (Edit, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              MaleAnimSetOverrides[0x1D];                               // 0x0FD0(0x00A0) (Edit, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              FemaleAnimSetOverrides[0x1D];                             // 0x21F0(0x00A0) (Edit, IsPlainOldData)
	float                                              AimPitchAdjustment;                                       // 0x3410(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AimYawAdjustment;                                         // 0x3414(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x8];                                       // 0x3418(0x0008) MISSED OFFSET
	struct FTransform                                  LastFramePawnTransform;                                   // 0x3420(0x0030) (Transient, IsPlainOldData)
	float                                              MaxAimYawAdjustment;                                      // 0x3450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitch;                                                 // 0x3454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxYaw;                                                   // 0x3458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReticleAimDistance;                                       // 0x345C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimAdjustmentInterpSpeed;                                 // 0x3460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AimTwistCorrectionExponent;                               // 0x3464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SlopeWarpingFloorOffset;                                  // 0x3468(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    WeaponAimingFreezeInterpScale;                            // 0x3474(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FName                                       WeaponAimingCurveName;                                    // 0x3480(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponAimingFreezeCurveName;                              // 0x3488(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               ConsumableOffsetPose;                                     // 0x3490(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bAimWeaponTowardsReticle : 1;                             // 0x3498(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDebugWeaponAiming : 1;                                   // 0x3498(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCachedPawnTransform : 1;                                 // 0x3498(0x0001) (Transient)
	unsigned char                                      bHasValidWeaponMuzzleSocket : 1;                          // 0x3498(0x0001) (Transient)
	unsigned char                                      bUseCustomFloorOffset : 1;                                // 0x3498(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bPlayConsumableOffsetPose : 1;                            // 0x3498(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsOnGround : 1;                                          // 0x3498(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsTargeting : 1;                                         // 0x3498(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bPlayingRootMotion : 1;                                   // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsStunned : 1;                                           // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsMontagePlaying : 1;                                    // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsPlayingMeleeAnim : 1;                                  // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsGoingCommando : 1;                                     // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bTempIsRelaxedLevel1 : 1;                                 // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsCrouching : 1;                                         // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsCrouchSprinting : 1;                                   // 0x3499(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bUsingHoverboard : 1;                                     // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsSprinting : 1;                                         // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsAccelerating2D : 1;                                    // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsMoving2D : 1;                                          // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsAboveMinimumLocomotionSpeed : 1;                       // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsBackpedaling : 1;                                      // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldWalkRightFootFwd : 1;                              // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldPlayJogStartTransition : 1;                        // 0x349A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldPlayJogStopTransition : 1;                         // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldPlayJogPivotTransition : 1;                        // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bStartTransitionActive : 1;                               // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bStopTransitionActive : 1;                                // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bPivotTransitionActive : 1;                               // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldPlayPostPivotTransition : 1;                       // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldEarlyOutStartState : 1;                            // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldEarlyOutStopState : 1;                             // 0x349B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bShouldEarlyOutPivotState : 1;                            // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsDBNO : 1;                                              // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsUsingJetpack : 1;                                      // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsUsingRemoteControlPawn : 1;                            // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsInVehicle : 1;                                         // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsInShoppingCart : 1;                                    // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsShoppingCartFrontPassenger : 1;                        // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsShoppingCartSidePassenger : 1;                         // 0x349C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bHasFacialAnimationData : 1;                              // 0x349D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bStopJogDoOnceTriggered : 1;                              // 0x349D(0x0001) (Transient)
	unsigned char                                      bStartJogDoOnceTriggered : 1;                             // 0x349D(0x0001) (Transient)
	unsigned char                                      bPivotTransitionDoOnceTriggered : 1;                      // 0x349D(0x0001) (Transient)
	unsigned char                                      bPostPivotTransitionDoOnceTriggered : 1;                  // 0x349D(0x0001) (Transient)
	unsigned char                                      bIsFallingSlow : 1;                                       // 0x349D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsFloatingHigher : 1;                                    // 0x349D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsBalloonInAir : 1;                                      // 0x349D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bHasBalloons : 1;                                         // 0x349E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bIsGhost : 1;                                             // 0x349E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bHasIcyFeet : 1;                                          // 0x349E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	TEnumAsByte<EFortBuildingState>                    BuildingState;                                            // 0x349F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              TargetingWeight;                                          // 0x34A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              MeleeTwistCurveValue;                                     // 0x34A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              JumpUpperBodyBlendWeight;                                 // 0x34A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              RightArmMaskWeight;                                       // 0x34AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LeftArmMaskWeight;                                        // 0x34B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              UpperBodyNoAdditivesMaskWeight;                           // 0x34B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocomotionAdditiveAlpha;                                  // 0x34B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalAccelYawAngle;                                       // 0x34BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalAccelYawAngleLastTick;                               // 0x34C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalAccelDeltaYawAngle;                                  // 0x34C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x34C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              VelocityZ;                                                // 0x34CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              Speed2D;                                                  // 0x34D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalVelocityYawAngle;                                    // 0x34D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalVelocityYawAngleMinusJogBlendSpaceRotation;          // 0x34D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalVelocityYawAngleMinusMeleeTwist;                     // 0x34DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocalAccelVelocityYawDelta;                               // 0x34E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              SpeedAdjustedPlayRate;                                    // 0x34E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LeanAdditiveAlpha;                                        // 0x34E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LeanAngle;                                                // 0x34EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              SprintYawAngle;                                           // 0x34F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LocomotionTransitionAdditiveAlpha;                        // 0x34F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartStateWeight;                                         // 0x34F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartStateRotationMultiplier;                             // 0x34FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartAnimDeltaAngleNorth;                                 // 0x3500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartAnimDeltaAngleEast;                                  // 0x3504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartAnimDeltaAngleSouth;                                 // 0x3508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StartAnimDeltaAngleWest;                                  // 0x350C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StopStateRotationMultiplier;                              // 0x3510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StopStateWeight;                                          // 0x3514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              StopAnimDeltaAngle;                                       // 0x3518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              JogPrePivotTimer;                                         // 0x351C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PivotStateWeight;                                         // 0x3520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PrePivotAnimDeltaAngle;                                   // 0x3524(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PostPivotAnimDeltaAngle;                                  // 0x3528(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              TransitionPlayRate;                                       // 0x352C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              YawDeltaCurrentTick;                                      // 0x3530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              YawDeltaLastTick;                                         // 0x3534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              YawDeltaSmoothed;                                         // 0x3538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              AbsYawDeltaSmoothed;                                      // 0x353C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PawnToVehicleDeltaYawAngleDegrees;                        // 0x3540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              LastPawnToVehicleDeltaYawAngleDegrees;                    // 0x3544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	struct FVector                                     WorldAcceleration;                                        // 0x3548(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	struct FVector                                     LocalAcceleration;                                        // 0x3554(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	struct FVector                                     WorldVelocity;                                            // 0x3560(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	struct FVector                                     LocalVelocity;                                            // 0x356C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	struct FVector                                     ActorSpaceVelocityDirPreTurn;                             // 0x3578(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	struct FRotator                                    ActorRotationLastTick;                                    // 0x3584(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst, IsPlainOldData)
	TEnumAsByte<EFortWeaponCoreAnimation>              WeaponCoreAnim;                                           // 0x3590(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x3591(0x0007) MISSED OFFSET
	class UFortWeaponAnimSet*                          WeaponAnimSet;                                            // 0x3598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	EFortCardinalDirection                             LocomotionCardinalDirection;                              // 0x35A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	EFortCardinalDirection                             StartTransitionInitialDirection;                          // 0x35A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	EFortCardinalDirection                             StopCardinalDirection;                                    // 0x35A2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	EFortCardinalDirection                             PrePivotCardinalDirection;                                // 0x35A3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	EFortCardinalDirection                             PostPivotCardinalDirection;                               // 0x35A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x35A5(0x0003) MISSED OFFSET
	float                                              TargetingSpeed;                                           // 0x35A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpUpperBodyBlendSpeed;                                  // 0x35AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetingWeightInLocomotion;                              // 0x35B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinimumLocomotionSpeed;                                   // 0x35B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BackpedalSpeedThresholdAngle;                             // 0x35B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedAdjustedPlayratePivotSpeed;                          // 0x35BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredCrouchSprintSpeed;                                // 0x35C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredCrouchWalkSpeed;                                  // 0x35C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredCrouchJogSpeed;                                   // 0x35C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredSprintSpeed;                                      // 0x35CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredWalkSpeed;                                        // 0x35D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredJogBwdSpeed;                                      // 0x35D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredJogFwdSpeed;                                      // 0x35D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AuthoredJogStrafeSpeed;                                   // 0x35DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanFadeInSpeed;                                          // 0x35E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanFadeOutSpeed;                                         // 0x35E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanAngleMultiplier;                                      // 0x35E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LeanAngleBackpedalMultiplier;                             // 0x35EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintYawAngleInterpSpeed;                                // 0x35F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintYawAngleFadeOutSpeed;                               // 0x35F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LocomotionDeadZoneAngle;                                  // 0x35F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartStateRotationFadeInSpeed;                            // 0x35FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StopStateRotationFadeOutSpeed;                            // 0x3600(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JogPivotTimeToPivot;                                      // 0x3604(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PostPivotAnimInterpSpeed;                                 // 0x3608(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAllowedPivotRotation;                                  // 0x360C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       MeleeTwistCurveValueName;                                 // 0x3610(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       MeleeAnimCurveValueName;                                  // 0x3618(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       AdditiveLayerCurveValueName;                              // 0x3620(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaskRightArmCurveValueName;                               // 0x3628(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartAnimCurveValueName;                                  // 0x3630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       StopAnimCurveValueName;                                   // 0x3638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       PivotAnimCurveValueName;                                  // 0x3640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableAdditiveLayer : 1;                                 // 0x3648(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bShouldDisableJogTransitions : 1;                         // 0x3648(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData12[0x7];                                       // 0x3649(0x0007) MISSED OFFSET
	struct FName                                       HeadTrackingReticleSocketName;                            // 0x3650(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAxis>                                 HeadTrackingReticleSocketLookAtAxis;                      // 0x3658(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x3659(0x0003) MISSED OFFSET
	float                                              HeadTrackingReticleInterpSpeed;                           // 0x365C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    HeadTrackingReticleAdjustment;                            // 0x3660(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              HeadTrackingReticlePitchAlpha;                            // 0x366C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadTrackingReticleAimDistance;                           // 0x3670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HeadTrackingReticleAimDistanceDownsights;                 // 0x3674(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagAnimations                      GameplayTagAnimations;                                    // 0x3678(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector                                     StandardIdlePelvisOffset;                                 // 0x3688(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     LargeFemaleIdlePelvisOffset;                              // 0x3694(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     IdlePelvisOffset;                                         // 0x36A0(0x000C) (Edit, BlueprintVisible, Transient, EditConst, IsPlainOldData)
	float                                              IdlePelvisOffsetAlpha;                                    // 0x36AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	int                                                PawnLOD;                                                  // 0x36B0(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      bTransition_FullBody_Sprinting : 1;                       // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_FullBody_Stunned : 1;                         // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_FullBody_DBNOMove : 1;                        // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_FullBody_DBNOTurn : 1;                        // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_Fullbody_LaunchpadTakeOff : 1;                // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEarlyOut_Lowerbody_Turns : 1;                            // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_LowerBody_Shuffle : 1;                        // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_LowerBody_Movement : 1;                       // 0x36B4(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTransition_LocomotionAdditive_CrouchTurning : 1;         // 0x36B5(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bLocomotion_Idles_to_Turns : 1;                           // 0x36B5(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bFullBodyAdditives_NewFallAdditive_to_BalloonLoop : 1;    // 0x36B5(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData14[0xA];                                       // 0x36B6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance");
		return ptr;
	}


	void OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
	void HandleBeginSkydiving();
	float GetRelativeAngle(float MovementAngle, EFortCardinalDirection Direction, bool bMirrorBackside);
	EFortCardinalDirection GetCardinalDirectionFromAngle(float Angle, float DeadZoneAngle);
	void AnimNotify_StopFireFX(class UAnimNotify* Notify);
	void AnimNotify_SkydiveAdditiveEnd(class UAnimNotify* Notify);
	void AnimNotify_PlaySecondaryFireFX(class UAnimNotify* Notify);
	void AnimNotify_PlayFireFX(class UAnimNotify* Notify);
};


// Class FortniteGame.FortPlayerAnimInstance_ATVDriver
// 0x01A0 (0x3860 - 0x36C0)
class UFortPlayerAnimInstance_ATVDriver : public UFortPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x36C0(0x00B8) MISSED OFFSET
	struct FVector                                     ImpactDisplacement;                                       // 0x3778(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              AbsSteerAngle;                                            // 0x3784(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x3788(0x0004) MISSED OFFSET
	bool                                               bInAir;                                                   // 0x378C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInRollAngleThreshold;                                  // 0x378D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDriveStarting;                                         // 0x378E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x378F(0x0001) MISSED OFFSET
	struct FVector                                     LocalLeftOffset;                                          // 0x3790(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     WorldPosLeft;                                             // 0x379C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    LocalRotLeftOffset;                                       // 0x37A8(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    WorldRotLeft;                                             // 0x37B4(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     LocalRightOffset;                                         // 0x37C0(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     WorldPosRight;                                            // 0x37CC(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    LocalRotRightOffset;                                      // 0x37D8(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    WorldRotRight;                                            // 0x37E4(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bIsSteeringRotating;                                      // 0x37F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsStopped;                                               // 0x37F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSlowingDown;                                           // 0x37F2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDrivingFast;                                           // 0x37F3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTurningRightHard;                                      // 0x37F4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTurningLeftHard;                                       // 0x37F5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBraking;                                               // 0x37F6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x37F7(0x0001) MISSED OFFSET
	bool                                               bIsBoosting;                                              // 0x37F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpTrick;                                             // 0x37F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x37FA(0x0002) MISSED OFFSET
	float                                              JumpPlayRate;                                             // 0x37FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpFlipping;                                          // 0x3800(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShouldEnableAO;                                          // 0x3801(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBodyDragging;                                          // 0x3802(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x3803(0x0001) MISSED OFFSET
	float                                              FallDistanceJumpingThreshold;                             // 0x3804(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RollAngleThreshold;                                       // 0x3808(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartSpeedThreshold;                                      // 0x380C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SlowingSpeedThreshold;                                    // 0x3810(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FastSpeedThreshold;                                       // 0x3814(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDeltaThreshold;                                    // 0x3818(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SteerHardAngleThreshold;                                  // 0x381C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GroundTraceUpOffset;                                      // 0x3820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GroundTraceLength;                                        // 0x3824(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   JumpPlayRateInRange;                                      // 0x3828(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   JumpPlayRateOutRange;                                     // 0x3830(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bIsJumpingAndNotRolling;                                  // 0x3838(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsOnGroundAndNotRolling;                                 // 0x3839(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsOnGroundAndBoosting;                                   // 0x383A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayPivotOnGroundAndNotBoosting;                         // 0x383B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x383C(0x0004) MISSED OFFSET
	struct FVector2D                                   LandStartPosInRange;                                      // 0x3840(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   LandStartPosOutRange;                                     // 0x3848(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              LandStartPosition;                                        // 0x3850(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x3854(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance_ATVDriver");
		return ptr;
	}


	void AnimNotify_JumpEntered();
};


// Class FortniteGame.FortPlayerAnimInstance_Gauntlet
// 0x0000 (0x36C0 - 0x36C0)
class UFortPlayerAnimInstance_Gauntlet : public UFortPlayerAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance_Gauntlet");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerAnimInstance_GolfCartDriver
// 0x0130 (0x37F0 - 0x36C0)
class UFortPlayerAnimInstance_GolfCartDriver : public UFortPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x36C0(0x00B8) MISSED OFFSET
	struct FVector                                     ImpactDisplacement;                                       // 0x3778(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x3784(0x0004) MISSED OFFSET
	struct FGolfCartHandOnWheelControl                 RightHand;                                                // 0x3788(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	struct FGolfCartHandOnWheelControl                 LeftHand;                                                 // 0x37B8(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x37E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance_GolfCartDriver");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerAnimInstance_MountedTurret
// 0x00D0 (0x3790 - 0x36C0)
class UFortPlayerAnimInstance_MountedTurret : public UFortPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x36C0(0x00B8) MISSED OFFSET
	struct FVector                                     ImpactDisplacement;                                       // 0x3778(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x3784(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance_MountedTurret");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerAnimInstance_ShoppingCartDriver
// 0x00D0 (0x3790 - 0x36C0)
class UFortPlayerAnimInstance_ShoppingCartDriver : public UFortPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x36C0(0x00B8) MISSED OFFSET
	struct FVector                                     ImpactDisplacement;                                       // 0x3778(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bIsInAirFarFromGround;                                    // 0x3784(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               bForwardVelocityGT400;                                    // 0x3785(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               bForwardSpeedKmHLT5;                                      // 0x3786(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x9];                                       // 0x3787(0x0009) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAnimInstance_ShoppingCartDriver");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerAttributesProxyActor
// 0x0060 (0x0388 - 0x0328)
class AFortPlayerAttributesProxyActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FFortPlayerAttributeSets                    AttributeSets;                                            // 0x0330(0x0050)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAttributesProxyActor");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerAttrSet
// 0x0340 (0x0370 - 0x0030)
class UFortPlayerAttrSet : public UFortAttributeSet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  Stamina;                                                  // 0x0038(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StaminaRegenRate;                                         // 0x0058(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StaminaRegenDelay;                                        // 0x0078(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxStamina;                                               // 0x0098(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  StaminaCost;                                              // 0x00B8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  SprintCost;                                               // 0x00D8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  ItemRegenMaxStack;                                        // 0x0100(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ItemRegenCooldown;                                        // 0x0120(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ItemMaxStack;                                             // 0x0140(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DoubleLootRollChance;                                     // 0x0160(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DoubleItemLootChance;                                     // 0x0180(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  DoubleCraftChance;                                        // 0x01A0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CraftingTimeMultiplier;                                   // 0x01C0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CraftItemLevelBonusMin;                                   // 0x01E0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CraftItemLevelBonusMax;                                   // 0x0200(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ResourceHarvesting;                                       // 0x0220(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  HarvestingTool;                                           // 0x0240(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ExtraLives;                                               // 0x0260(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ResurrectTeammateDuration;                                // 0x0280(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Fortitude_Team;                                           // 0x02A0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Offense_Team;                                             // 0x02C0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Tech_Team;                                                // 0x02E0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  Resistance_Team;                                          // 0x0300(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ActiveEffectDuration;                                     // 0x0320(0x0020)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0340(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAttrSet");
		return ptr;
	}


	void OnRep_Tech_Team();
	void OnRep_StaminaRegenRate();
	void OnRep_StaminaRegenDelay();
	void OnRep_StaminaCost();
	void OnRep_Stamina();
	void OnRep_SprintCost();
	void OnRep_ResurrectTeammateDuration();
	void OnRep_ResourceHarvesting();
	void OnRep_Resistance_Team();
	void OnRep_Offense_Team();
	void OnRep_MaxStamina();
	void OnRep_ItemRegenMaxStack();
	void OnRep_ItemRegenCooldown();
	void OnRep_ItemMaxStack();
	void OnRep_HarvestingTool();
	void OnRep_Fortitude_Team();
	void OnRep_ExtraLives();
	void OnRep_DoubleLootRollChance();
	void OnRep_DoubleItemLootChance();
	void OnRep_DoubleCraftChance();
	void OnRep_CraftItemLevelBonusMin();
	void OnRep_CraftItemLevelBonusMax();
	void OnRep_CraftingTimeMultiplier();
};


// Class FortniteGame.FortPlayerCameraSpectator
// 0x0000 (0x2480 - 0x2480)
class AFortPlayerCameraSpectator : public APlayerCameraManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerCameraSpectator");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerCameraZone
// 0x0020 (0x2A70 - 0x2A50)
class AFortPlayerCameraZone : public AFortPlayerCameraBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x2A50(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerCameraZone");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerControllerZone
// 0x0300 (0x1EF0 - 0x1BF0)
class AFortPlayerControllerZone : public AFortPlayerControllerGameplay
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1BF0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEndSkydiving;                                           // 0x1BF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVehicleSeatTransitionTargetIndexChange;                 // 0x1C08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartedRespawn;                                         // 0x1C18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDontChangeReticleColorForEnemy;                          // 0x1C28(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x1C29(0x0003) MISSED OFFSET
	float                                              LastVehicleSeatSwitchTime;                                // 0x1C2C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x1C30(0x0008) MISSED OFFSET
	class APawn*                                       PlayerToSpectateOnDeath;                                  // 0x1C38(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       GadgetTrackedAttributeItemInstanceId;                     // 0x1C40(0x0010) (Transient, IsPlainOldData)
	class UInputComponent*                             DeathInputComponent;                                      // 0x1C50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             RemoteControlledPawnInputComponent;                       // 0x1C58(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x1C60(0x0020) MISSED OFFSET
	struct FFortPlayerDeathReport                      PlayerDeathReport;                                        // 0x1C80(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient)
	bool                                               bClientNotifiedOfPawnDied;                                // 0x1CD0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEnterCameraModeOnDeath;                                  // 0x1CD1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC6];                                      // 0x1CD2(0x00C6) MISSED OFFSET
	TScriptInterface<class UFortHUDTargetUnderReticleInterface> HUDTargetUnderReticle;                                    // 0x1D98(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FUniqueNetIdRepl>                    RejoinablePartyMembers;                                   // 0x1DA8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x10];                                      // 0x1DB8(0x0010) MISSED OFFSET
	float                                              LastScoreEarnedTime;                                      // 0x1DC8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1C];                                      // 0x1DCC(0x001C) MISSED OFFSET
	int                                                VehicleSeatTransitionTargetIndex;                         // 0x1DE8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1C];                                      // 0x1DEC(0x001C) MISSED OFFSET
	struct FString                                     VoiceChatPlayerName;                                      // 0x1E08(0x0010) (ZeroConstructor, Transient)
	struct FString                                     VoiceChatChannel;                                         // 0x1E18(0x0010) (ZeroConstructor, Transient)
	int                                                VoiceChatJoinFailCount;                                   // 0x1E28(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                VoiceChatReconnectCount;                                  // 0x1E2C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bVoiceChatBanned;                                         // 0x1E30(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1F];                                      // 0x1E31(0x001F) MISSED OFFSET
	TArray<class AActor*>                              DesyncNotifyList;                                         // 0x1E50(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData09[0x40];                                      // 0x1E60(0x0040) MISSED OFFSET
	bool                                               bJetpackExecuteToggle;                                    // 0x1EA0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x1EA1(0x0007) MISSED OFFSET
	struct FFortAbilitySetHandle                       AppliedInGameModifierAbilitySetHandle;                    // 0x1EA8(0x0028) (Transient)
	unsigned char                                      UnknownData11[0x20];                                      // 0x1ED0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerZone");
		return ptr;
	}


	void TestVehicleVelocity(const struct FString& Command);
	void SpectateOnDeath();
	void SpawnVehicle(const struct FString& Command);
	void ServerVoiceChatRejoinChannel();
	void ServerVoiceChatReconnected();
	void ServerTriggerSetupTeleportCameraEvent();
	void ServerSubmitGameplayVote(EFortVoteType VoteType, int VoteDecision);
	void ServerSpectatePlayerState(class AFortPlayerStateAthena* PlayerToSpectate);
	void ServerSpectatePlayer(class APawn* NewPlayerToSpectate);
	void ServerSetShouldDisablePlayerTeleportingDuringMissionResults();
	void ServerSendPlayerList(int PlayerID, int PlayerListLength, TArray<unsigned char> PlayerListPart1, TArray<unsigned char> PlayerListPart2, int PlayerType);
	void ServerSendPartyJoinInfoToPlayer(const struct FUniqueNetIdRepl& RecipientId, const struct FString& JoinInfoStr);
	void ServerSendLoadoutConfig(int LoadoutSeed, TArray<unsigned char> Loadout);
	void ServerRequestSeatChange(int TargetSeatIndex);
	void ServerEndGameplayVote(EFortVoteType VoteType);
	void ServerDetachFromRemoteControlledPawn();
	void ServerDestroyFromRemoteControlledPawn();
	void ServerBeginGameplayVote(EFortVoteType VoteType, const struct FFortVoteConfig& VoteConfig);
	void ServerAttemptExitVehicle();
	void ServerActivateMission();
	void RewindVehicle(const struct FString& Command);
	void ResetExecuteJetpackToggle();
	void PushDeathInputComponent();
	void PopDeathInputComponent();
	void OnPlayerStartedRespawn__DelegateSignature();
	void KillAllVehicles(const struct FString& Command);
	bool IsClientNotifiedOfPawnDied();
	int GetVehicleSeatTransitionTargetIndex();
	void DumpPhysicsVehicleBuffer(const struct FString& Command);
	void DisableRangedWeaponScopeFX();
	void ClientVoiceChatLogin(const struct FString& InVoiceChatPlayerName, const struct FString& LoginToken);
	void ClientVoiceChatChannelJoin(const struct FString& InVoiceChatPlayerName, const struct FString& InVoiceChatChannel, const struct FString& JoinToken);
	void ClientSendPartyJoinInfoToPlayer(const struct FString& JoinInfoStr);
	void ClientOnZoneEndScoreReports(TArray<struct FFortPlayerScoreReport> ScoreReports);
	void ClientOnPawnSpawned();
	void ClientOnPawnRevived(class AController* EventInstigator);
	void ClientOnPawnDied(const struct FFortPlayerDeathReport& DeathReport);
};


// Class FortniteGame.FortPlayerControllerPvP
// 0x0000 (0x1EF0 - 0x1EF0)
class AFortPlayerControllerPvP : public AFortPlayerControllerZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvP");
		return ptr;
	}


	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
	void ClientShowGameOverWidget(TEnumAsByte<EFortPvPGameResult> GameResult);
	void ClientReceiveKillNotification(class AFortPlayerStateZone* Killer, class AFortPlayerStateZone* Killed);
};


// Class FortniteGame.FortPlayerControllerAthena
// 0x06F0 (0x25E0 - 0x1EF0)
class AFortPlayerControllerAthena : public AFortPlayerControllerPvP
{
public:
	float                                              FireAbilityToWeaponSwitchTime;                            // 0x1EF0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x1EF4(0x000C) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAircraftStateChange;                                    // 0x1F00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortWorldItemDefinition*                    SwappingItemDefinition;                                   // 0x1F10(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              WinScreenDelayTime;                                       // 0x1F18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSkipPlayWinEffects;                                      // 0x1F1C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasHadValidPawn;                                         // 0x1F1D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClientNotifiedOfWin;                                     // 0x1F1E(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClientNotifiedOfTeamWin;                                 // 0x1F1F(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClientNotifiedOfLoss;                                    // 0x1F20(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1F];                                      // 0x1F21(0x001F) MISSED OFFSET
	TArray<class AActor*>                              CurrentlyHighlightedActors;                               // 0x1F40(0x0010) (ZeroConstructor)
	struct FString                                     VoiceChat3DPlayerName;                                    // 0x1F50(0x0010) (ZeroConstructor, Transient)
	struct FString                                     VoiceChat3DChannel;                                       // 0x1F60(0x0010) (ZeroConstructor, Transient)
	bool                                               bMutedPositionalVoiceChatForNoPawn;                       // 0x1F70(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x1F71(0x0007) MISSED OFFSET
	TArray<struct FString>                             PlayersTalking;                                           // 0x1F78(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x50];                                      // 0x1F88(0x0050) MISSED OFFSET
	struct FScriptMulticastDelegate                    TalkingPlayersChanged;                                    // 0x1FD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDeferringStartRecordingHighlights;                       // 0x1FE8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x1FE9(0x0007) MISSED OFFSET
	struct FString                                     HighlightGroupId;                                         // 0x1FF0(0x0010) (ZeroConstructor, Transient)
	int                                                CachedHighlightCount;                                     // 0x2000(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HighlightFirstKillTime;                                   // 0x2004(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                HighlightKillMultiple;                                    // 0x2008(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                HighlightDownMultiple;                                    // 0x200C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HighlightKillCooldown;                                    // 0x2010(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HighlightKillRewindTime;                                  // 0x2014(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x2018(0x0020) MISSED OFFSET
	bool                                               bUseNewPickupSwapLogic;                                   // 0x2038(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x2039(0x0003) MISSED OFFSET
	float                                              SpectatorLevelStreamDistance;                             // 0x203C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RespawnLevelStreamDistance;                               // 0x2040(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x2044(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    SpectatorStreamingChanged;                                // 0x2048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ACameraActor*                                RespawnCameraActor;                                       // 0x2058(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x2060(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    InGameMatchmakingComplete;                                // 0x2078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bNoInGameMatchmaking;                                     // 0x2088(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x2089(0x0007) MISSED OFFSET
	class USoundBase*                                  AudioOnExitAircraft;                                      // 0x2090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AudioOnExitAircraftHornDoppler;                           // 0x2098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  AudioOnMapIndicatorPlaced;                                // 0x20A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinQuickChatCooldown;                                     // 0x20A8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              QuickChatOffCooldownTime;                                 // 0x20AC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FFortAthenaLoadout                          CustomizationLoadout;                                     // 0x20B0(0x00C0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bMarkedAlive;                                             // 0x2170(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0xF];                                       // 0x2171(0x000F) MISSED OFFSET
	TArray<struct FSettingsHUDVisibilityAndText>       HUDVisibilityGameplayTags;                                // 0x2180(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData11[0x28];                                      // 0x2190(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlayerControllerAthena.GamepadSettingsAssetPtr
	struct FVector                                     MapCursor;                                                // 0x21B8(0x000C) (IsPlainOldData)
	float                                              MapCursorSpeed;                                           // 0x21C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MapCursorSpeedGamepad;                                    // 0x21C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x64];                                      // 0x21CC(0x0064) MISSED OFFSET
	struct FLinearColor                                TeamMemberIndicatorColor;                                 // 0x2230(0x0010) (BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData13[0x10];                                      // 0x2240(0x0010) MISSED OFFSET
	bool                                               bRevertPlayerListenerChange;                              // 0x2250(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData14[0xF];                                       // 0x2251(0x000F) MISSED OFFSET
	bool                                               bAllowNoShadows;                                          // 0x2260(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowNoDOF;                                              // 0x2261(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasSentMatchEndedQuestProgress;                          // 0x2262(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowFPS;                                                 // 0x2263(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x2264(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShowFPSChange;                                          // 0x2268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FQuickBarData                               QuickBarDefinitions[0x2];                                 // 0x2278(0x0010) (Edit)
	unsigned char                                      UnknownData16[0x18];                                      // 0x2298(0x0018) MISSED OFFSET
	class UFortHero*                                   StrongMyHero;                                             // 0x22B0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x22B8(0x0008) MISSED OFFSET
	float                                              EndMatchHeartbeatTimerDelay;                              // 0x22C0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x22C4(0x0004) MISSED OFFSET
	double                                             EndMatchHeartbeatTimestamp;                               // 0x22C8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              VoiceChatUpdateLimiter;                                   // 0x22D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x22D4(0x0004) MISSED OFFSET
	class AFortPlayerStartWarmup*                      WarmupPlayerStart;                                        // 0x22D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInputComponent*                             AircraftInputComponent;                                   // 0x22E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             FullScreenMapInputComponent;                              // 0x22E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData20[0xE0];                                      // 0x22F0(0x00E0) MISSED OFFSET
	bool                                               bUseTrapPicker;                                           // 0x23D0(0x0001) (ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      UnknownData21[0x27];                                      // 0x23D1(0x0027) MISSED OFFSET
	float                                              MovementCancellableActionLeashLength;                     // 0x23F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MovementCancellableActionLeashLocation;                   // 0x23FC(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData22[0x38];                                      // 0x2408(0x0038) MISSED OFFSET
	class UAthenaPlayerMatchReport*                    MatchReport;                                              // 0x2440(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0x50];                                      // 0x2448(0x0050) MISSED OFFSET
	TArray<class AFortPlayerStateAthena*>              TeamMembers;                                              // 0x2498(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class AFortPlayerStateAthena*>              SquadMembers;                                             // 0x24A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      MinimapIndicatorClass;                                    // 0x24B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SquadMarkerActorClass;                                    // 0x24C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FBuildingEditAnalyticEvent>          BuildingAnalyticsArray;                                   // 0x24C8(0x0010) (ZeroConstructor, Transient)
	float                                              TimeStartedTrackingBuildingAnalytics;                     // 0x24D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0xC4];                                      // 0x24DC(0x00C4) MISSED OFFSET
	int                                                CurrentSpawnCharges;                                      // 0x25A0(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x25A4(0x0004) MISSED OFFSET
	TArray<struct FItemAndCount>                       CachedPurchasedItems;                                     // 0x25A8(0x0010) (BlueprintVisible, Net, ZeroConstructor)
	unsigned char                                      UnknownData26[0x18];                                      // 0x25B8(0x0018) MISSED OFFSET
	class UFortPlaysetItemDefinition*                  CurrentPlayset;                                           // 0x25D0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x8];                                       // 0x25D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerAthena");
		return ptr;
	}


	void WriteCreateBuildingAnalytics();
	void UpdateRichPresenceTimer();
	struct FString TryToFilterNameOfPlayerForStreamerMode(class AFortPlayerState* OtherPlayerState);
	void ToggleCreativePlotPlayset(const struct FVector& PlotLocation);
	void TeleportToMapMarker();
	void StopRecordingHighlights();
	void StopAutoPerfCaptureWrapper();
	void StopAutoPerfCapture(EAthenaGamePhase GamePhase);
	void StartRespawnLoading();
	void StartAutoPerfCapture(EAthenaGamePhase GamePhase);
	void ShowHighlightSummary();
	void SetPlayspacePlayset(class AFortPlayspace* PlaySpace, class UFortPlaysetItemDefinition* NewPlayset);
	void SetPlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void SetCreativePlotSize(const struct FVector& PlotLocation, int NewSize);
	void SetActivePlayset(const struct FVector& PlotLocation, class UFortPlaysetItemDefinition* NewPlayset);
	void ServerThankBusDriver();
	void ServerSpawnCreativeSupplyDrop(const struct FVector& Position, class UClass* InSupplyDropClass);
	void ServerSetTeam(TEnumAsByte<EFortTeam> InTeam);
	void ServerSetSafezoneCenterOnPlayer();
	void ServerSetRespawnData(const struct FVector& RespawnLoc, const struct FRotator& RespawnRot);
	void ServerSetHopRockDuration(const struct FName& RowName, float Duration);
	void ServerSetFriendlyFire(bool bEnabled);
	void ServerSetCurrentSaveout(int NewValue);
	void ServerSetCurrentLoadout(int NewValue);
	void ServerSetCreativeSpawnCharges(int NewCharges);
	void ServerSendSquadFriend(class AFortPlayerStateAthena* FriendInSquad);
	void ServerRemoveMapCursor();
	void ServerPlaySquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, const struct FUniqueNetIdRepl& SenderID);
	void ServerPlaceMapCursor(const struct FVector_NetQuantize& CursorPos);
	void ServerGenerateMockMatchReport();
	void ServerEnableStreamerMode();
	void ServerDBNOReviveStarted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerDBNOReviveInterrupted(class AFortPlayerPawnAthena* DBNOPawn);
	void ServerClientIsReadyToRespawn();
	void ServerAttemptAircraftJump(const struct FRotator& ClientRotation);
	void ServerAddToCachedPurchased(class UFortItemDefinition* ItemDefinition, int Count);
	void SaveCreativePlot(const struct FVector& PlotLocation, bool bUseLocalSave);
	void RotateCreativePlot(const struct FVector& PlotLocation);
	void RespawnPlayerAfterDeath();
	void ResetPlayspace(class AFortPlayspace* PlaySpace);
	void RecordTeamStats();
	void RecordMatchStats();
	void PrepareClientForRespawning();
	void PlayWinEffects(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, EDeathCause DeathCause);
	void OnPlayersLeftChanged(int NumPlayersLeft);
	void MultiKillExpired();
	void LoadCreativePlot(const struct FVector& PlotLocation, bool bClearFirst, bool bUseLocalSave);
	bool IsUsingStreamerMode();
	bool IsTryToFireRestrictedByTypeCooldowns();
	bool IsTeamDead();
	bool IsLocalPlayerFriendsWithSquadMember(class AFortPlayerState* SquadMember);
	bool IsInAircraft();
	bool IsClientNotifiedOfWin();
	bool IsClientNotifiedOfTeamWin();
	bool IsClientNotifiedOfLoss();
	void HighlightNumberReturned(int NumHighlights);
	void GetSquadKills(TArray<int>* Kills);
	struct FString GetSpectatingPlayerName();
	bool GetRevertPlayerListenerChangeFlag();
	void GetPlaysetSize(int* SizeX, int* SizeY);
	class UFortPlaysetItemDefinition* GetPlayset();
	class UAthenaPlayerMatchReport* GetMatchReport();
	struct FVector2D GetMapIndicatorLocation();
	int GetFPSForHUD();
	int GetCachedHighlightCount();
	void FullscreenMapCursorRemove();
	void FullscreenMapCursorPlaceAtLocation(const struct FVector& Coords);
	void FollowSpecialActor();
	void FollowPreviousTeammate();
	void FollowNextTeammate();
	void ClientVoiceChat3DChannelJoin(const struct FString& InVoiceChatPlayerName, const struct FString& InVoiceChatChannel, const struct FString& JoinToken);
	void ClientStartRespawnPreparation(const struct FVector& RespawnLoc, const struct FRotator& RespawnRot);
	void ClientSendTeamStatsForPlayer(const struct FAthenaMatchTeamStats& TeamStats);
	void ClientSendStateEncryptionKey(const struct FPlayerStateEncryptionKey& Key);
	void ClientSendMatchStatsForPlayer(const struct FAthenaMatchStats& Stats);
	void ClientSendEndMatchReportHeartbeat();
	void ClientSendEndBattleRoyaleMatchForPlayer(bool bSuccess, const struct FAthenaRewardResult& Result);
	void ClientSendDebugPoiVolumeData(const struct FString& PoiVolumes);
	void ClientSendDebugPoiLocationTags(const struct FGameplayTagContainer& InPoiTags);
	void ClientReceiveSquadQuickChatMessage(const struct FAthenaQuickChatActiveEntry& ChatEntry, class AFortPlayerController* SenderPC);
	void ClientNotifyWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, EDeathCause DeathCause);
	void ClientNotifyTeamWon(class APawn* FinisherPawn, class UFortWeaponItemDefinition* FinishingWeapon, EDeathCause DeathCause);
	void ClientNotifyLost(class APawn* WinningPawn, EEndOfMatchReason LostReason);
	void ClientEquipItem(const struct FGuid& ItemGuid, bool bForceExecution);
	void ClientBotStopDogpile();
	void ClientBotStartDogpile(const struct FVector& DogpilePosition);
	void ClientAutoEquipFirstItem(const struct FGuid& ItemGuid, bool bForceExecution);
	void ClientActivateSlot(EFortQuickBars InQuickBar, int SlotIndex);
	void ClearCreativePlot(const struct FVector& PlotLocation);
	void CheckIfSafeToRespawn();
	bool CanFollowTeammate();
	bool CanFollowSpecialActor();
};


// Class FortniteGame.FortPlayerControllerPvE
// 0x0000 (0x1EF0 - 0x1EF0)
class AFortPlayerControllerPvE : public AFortPlayerControllerZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvE");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerControllerDeployableBase
// 0x0060 (0x1F50 - 0x1EF0)
class AFortPlayerControllerDeployableBase : public AFortPlayerControllerPvE
{
public:
	class ADeployableBasePlot*                         CurrentPlot;                                              // 0x1EF0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ADeployableBasePlot*                         PreviousPlot;                                             // 0x1EF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x1F00(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerDeployableBase");
		return ptr;
	}


	void ServerMoveItemToDeployableBase(const struct FGuid& ItemOnPlayer, int Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveItemFromDeployableBase(const struct FGuid& ItemOnPlot, int Count, class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsToDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void ServerMoveAllItemsFromDeployableBase(class ADeployableBasePlot* ExpectedPlot);
	void MoveItemToDeployableBase(const struct FGuid& ItemOnPlayer, int Count);
	void MoveItemFromDeployableBase(const struct FGuid& ItemOnPlot, int Count);
	void MoveAllItemsToDeployableBase();
	void MoveAllItemsFromDeployableBase();
	void ClientOnHordeWaveComplete(int Wave, TArray<struct FItemAndCount> Rewards);
	void ClientOnHordeTierInitialized(TArray<struct FItemAndCount> Items);
	void ClientOnHordeTierComplete(EFortCompletionResult Result);
};


// Class FortniteGame.FortPlayerControllerFOB
// 0x0000 (0x1EF0 - 0x1EF0)
class AFortPlayerControllerFOB : public AFortPlayerControllerPvE
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerFOB");
		return ptr;
	}


	void ServerSaveFOB(class ABuildingFOBConfigActor* FOBToSave);
	void ServerResetFOB(class ABuildingFOBConfigActor* FOBToReset);
	void ServerReloadFOB(class ABuildingFOBConfigActor* FOBToReload);
	void ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect);
};


// Class FortniteGame.FortPlayerControllerFrontEnd
// 0x0090 (0x1A90 - 0x1A00)
class AFortPlayerControllerFrontEnd : public AFortPlayerController
{
public:
	unsigned char                                      UnknownData00[0x82];                                      // 0x1A00(0x0082) MISSED OFFSET
	bool                                               bUnlockAllZones;                                          // 0x1A82(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD];                                       // 0x1A83(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerFrontEnd");
		return ptr;
	}


	void OpenEmotePicker();
	bool IsXboxPlatform();
	bool IsVoiceChatPlayerMuted(const struct FUniqueNetIdRepl& UniqueNetId);
	bool IsInVoiceChat();
	void EmotePickerSelect();
	void EmotePickerPrevWheel();
	void EmotePickerNextWheel();
	void CloseEmotePicker();
};


// Class FortniteGame.FortPlayerControllerKeep
// 0x0020 (0x1F10 - 0x1EF0)
class AFortPlayerControllerKeep : public AFortPlayerControllerPvE
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x1EF0(0x0004) MISSED OFFSET
	int                                                WorkshopPickedItems;                                      // 0x1EF4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                ArmoryPickedItems;                                        // 0x1EF8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x1EFC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerKeep");
		return ptr;
	}


	void StreamOutStuff();
	void StreamInStuff();
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreContainers();
	void ResetContainers();
	void DumpItemData();
	void ClientUnloadFoundations();
	void ClientSetPermaniteAvailability(bool bAvailable);
};


// Class FortniteGame.FortPlayerControllerManor
// 0x0040 (0x1F30 - 0x1EF0)
class AFortPlayerControllerManor : public AFortPlayerControllerPvE
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x1EF0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerManor");
		return ptr;
	}


	void ServerOnUnlockPortalComplete(class AManorPortal* ManorPortal);
	void ClientOpenManorPortalUnlockMenu(class AManorPortal* ManorPortal);
};


// Class FortniteGame.FortPlayerControllerOutpost
// 0x0080 (0x1F70 - 0x1EF0)
class AFortPlayerControllerOutpost : public AFortPlayerControllerPvE
{
public:
	struct FScriptMulticastDelegate                    OnItemFabricated;                                         // 0x1EF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFortOutpostItemDefinition*                  BuildingBeingUpgraded;                                    // 0x1F00(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LevelBeforeUpgrade;                                       // 0x1F08(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bOutpostRefundDialogPending;                              // 0x1F0C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1F0D(0x0003) MISSED OFFSET
	class UFortWorldItemDefinition*                    ItemPendingToFabricate;                                   // 0x1F10(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x1F18(0x0010) MISSED OFFSET
	class UFortWorldItem*                              FabricatedItemPendingForNotification;                     // 0x1F28(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x1F30(0x0008) MISSED OFFSET
	int64_t                                            DisintegrationStartTime;                                  // 0x1F38(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                QuantumGooCompleted;                                      // 0x1F40(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                QuantumGooIncoming;                                       // 0x1F44(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x1F48(0x0008) MISSED OFFSET
	TArray<struct FFortDepositedResources>             PostDepositedResources;                                   // 0x1F50(0x0010) (Net, ZeroConstructor)
	bool                                               bIsOutpostOwnerInPIE;                                     // 0x1F60(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x1F61(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerOutpost");
		return ptr;
	}


	void UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	void UpgradeBuilding(EOutpostBuildings OutpostBuilding);
	void ToggleOwnerInPIE();
	void ServerUpgradePOST();
	void ServerUpgradeBuilding(class UFortOutpostItemDefinition* BuildingToUpgrade);
	void ServerNotifyPendingFabricationCompleted();
	void ServerMoveItemToStorageVault(const struct FFortItemEntry& NewlyStoredItem);
	void ServerMoveItemFromStorageVault(const struct FFortItemEntry& NewlyCollectedItem);
	void ServerLeaveOutpostAsParty();
	void ServerFabricateItem(class UFortWorldItemDefinition* ItemDef);
	void ServerDisintegrateItem(const struct FGuid& ItemGuid, int Count);
	void ServerDepositPOSTResource(const struct FGuid& ItemGuid, int Count);
	void ServerDeactivateCraftingTable();
	void ServerActivateCraftingTable();
	void ServerAbortDisintegration();
	void OnRep_QuantumGooIncoming();
	void OnRep_QuantumGooCompleted();
	void OnRep_PostDepositedResources();
	void OnRep_DisintegrationStartTime();
	bool IsOutpostOwner();
	bool IsFabricationPending();
	class UFortWorldItemDefinition* GetPendingItemToFabricate();
	float GetPendingFabricationProgress();
	int GetOutpostCoreLevel();
	void GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	void GetBuildingUpgradeCost(EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems);
	int GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int GetBuildingMaxLevel(EOutpostBuildings OutpostBuilding);
	int GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding);
	int GetBuildingLevel(EOutpostBuildings OutpostBuilding);
	void DumpInventory();
	void ClientOnOutpostRefundOccurred();
	void ClientOnBuildingLevelChanged(class UFortOutpostItemDefinition* UpgradedBuilding, int InLevelBeforeUpgrade);
	bool CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog);
	bool CanUpgradeBuilding(EOutpostBuildings OutpostBuilding, bool bLog);
};


// Class FortniteGame.FortPlayerControllerPvPBaseDestruction
// 0x0000 (0x1EF0 - 0x1EF0)
class AFortPlayerControllerPvPBaseDestruction : public AFortPlayerControllerPvP
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerControllerPvPBaseDestruction");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerCustomizable
// 0x0000 (0x0028 - 0x0028)
class UFortPlayerCustomizable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerCustomizable");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerInput
// 0x0378 (0x0720 - 0x03A8)
class UFortPlayerInput : public UPlayerInput
{
public:
	struct FString                                     CampaignDefaultKBMPresetName;                             // 0x03A8(0x0010) (ZeroConstructor, Config)
	struct FString                                     AthenaDefaultKBMPresetName;                               // 0x03B8(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             CampaignKBMResetToDefaultPresetNames;                     // 0x03C8(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FString>                             AthenaKBMResetToDefaultPresetNames;                       // 0x03D8(0x0010) (Edit, ZeroConstructor, Config)
	struct FString                                     DefaultGamepadPresetName;                                 // 0x03E8(0x0010) (ZeroConstructor, Config)
	struct FString                                     DefaultGamepadPresetNameAthena;                           // 0x03F8(0x0010) (ZeroConstructor, Config)
	struct FString                                     CustomGamepadPresetNameAthena;                            // 0x0408(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             FortPlayerInputSettingsNames;                             // 0x0418(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      UnknownData00[0x2F];                                      // 0x0428(0x002F) MISSED OFFSET
	EFortMotionYawAxis                                 MotionYawAxis;                                            // 0x0457(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x118];                                     // 0x0458(0x0118) MISSED OFFSET
	bool                                               bApplyGamepadDownsightsLookScale;                         // 0x0570(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	float                                              AthenaTargetingMultiplier;                                // 0x0574(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AthenaScopedMultiplier;                                   // 0x0578(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AthenaGamepadTargetingMultiplier;                         // 0x057C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AthenaGamepadScopedMultiplier;                            // 0x0580(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadBuildingMultiplier;                                // 0x0584(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedPitchForMotion;                                  // 0x0588(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bInvertedYawMobile;                                       // 0x0589(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x058A(0x0002) MISSED OFFSET
	float                                              MotionTargetingMultiplier;                                // 0x058C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MotionScopedMultiplier;                                   // 0x0590(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MotionHarvestingToolMultiplier;                           // 0x0594(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x130];                                     // 0x0598(0x0130) MISSED OFFSET
	TArray<class UFortPlayerInputSettings*>            AllPlayerInputSettings;                                   // 0x06C8(0x0010) (ZeroConstructor)
	class UFortPlayerInputSettings*                    DesiredKBMPlayerInputSettings;                            // 0x06D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortPlayerInputSettings*                    DesiredGamepadPlayerInputSettings;                        // 0x06E0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x06E8(0x0010) MISSED OFFSET
	TArray<struct FText>                               InputActionTypeFriendlyNames;                             // 0x06F8(0x0010) (ZeroConstructor, Config)
	TArray<struct FFortInputActionGroupContext>        InputActionGroupContexts;                                 // 0x0708(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0718(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerInput");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerInputAthena
// 0x0040 (0x0760 - 0x0720)
class UFortPlayerInputAthena : public UFortPlayerInput
{
public:
	class UFortGamepadSettings*                        GamepadSettings;                                          // 0x0720(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0728(0x0028) MISSED OFFSET
	bool                                               bReduceAimAssistWhileScoped;                              // 0x0750(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0751(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerInputAthena");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerInputSettings
// 0x0098 (0x00C0 - 0x0028)
class UFortPlayerInputSettings : public UObject
{
public:
	struct FText                                       FriendlyName;                                             // 0x0028(0x0018) (Config)
	struct FText                                       Description;                                              // 0x0040(0x0018) (Config)
	struct FText                                       SubDescription;                                           // 0x0058(0x0018) (Config)
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                           // 0x0070(0x0010) (ZeroConstructor, Config)
	TArray<struct FFortInputActionKeyAlias>            ActionKeyAliases;                                         // 0x0080(0x0010) (ZeroConstructor, Config)
	TArray<struct FFortInputActionThatShouldAlwaysBeBound> ActionsThatShouldAlwaysBeBound;                           // 0x0090(0x0010) (ZeroConstructor, Config)
	float                                              HoldInputTime;                                            // 0x00A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HoldCraftAmmoTime;                                        // 0x00A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HoldHudChatTime;                                          // 0x00A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HoldVoteDialogTime;                                       // 0x00AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bBuildingPickerOnlyChoosesCategories;                     // 0x00B0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bWeaponPickerShowOnlySlottedItems;                        // 0x00B1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bTrapPickerUsesRadial;                                    // 0x00B2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRadialClosesOnRelease;                                   // 0x00B3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	int                                                NumActiveTrapSlots;                                       // 0x00B4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bWeaponSlotsAreSharedWhenUsingGamepad;                    // 0x00B8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEditModeUsableFromCombatMode;                            // 0x00B9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bOnlyShowNextPrevBuildingSlotKeybinds;                    // 0x00BA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnabledForCampaign;                                      // 0x00BB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnabledForAthena;                                        // 0x00BC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerInputSettings");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerMannequin
// 0x01B0 (0x0560 - 0x03B0)
class AFortPlayerMannequin : public ASkeletalMeshActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	class UFortHeroType*                               FortHeroType;                                             // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAthenaCharacterItemDefinition*              AthenaCharacter;                                          // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAthenaBackpackItemDefinition*               AthenaBackBling;                                          // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCustomCharacterPart*                        CharacterParts[0x7];                                      // 0x03D0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FLightingChannels                           MannequinLightingChannels;                                // 0x0408(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	float                                              MannequinBoundsScale;                                     // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMannequinVisible;                                      // 0x0410(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMannequinCastsHiddenShadow;                              // 0x0411(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0412(0x0006) MISSED OFFSET
	class UCustomCharacterPart*                        CharacterPartList[0x6];                                   // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FMcpVariantChannelInfo>              OverrideVariants;                                         // 0x0448(0x0010) (Edit, ZeroConstructor)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x7];                          // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCustomColorSwatch*                          ColorSwatchesForCharacterParts[0x6];                      // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCustomColorComponent*                       AccessoryColorSwatchHandler[0x6];                         // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCustomColorSwatch*                          ColorSwatches[0x2];                                       // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMesh*                               WeaponSkeletalMesh;                                       // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponAttachSocket;                                       // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x38];                                      // 0x0510(0x0038) MISSED OFFSET
	TArray<struct FMorphValuePair>                     MorphTargets;                                             // 0x0548(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bInitialized;                                             // 0x0558(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0559(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerMannequin");
		return ptr;
	}


	void UpdateMorphTargets();
	void ToggleGenderBP();
	bool SetWeaponSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	void SetSkeletalMesh(class USkeletalMesh* SkeletalMesh);
	bool SetPart(TEnumAsByte<EFortCustomPartType> Part, class UCustomCharacterPart* PartAsset);
	void SetHeroType(class UFortHeroType* NewHeroType);
	void SetAthenaCharacterDefAndVariants(class UAthenaCharacterItemDefinition* NewAthenaCharacter, TArray<struct FMcpVariantChannelInfo> InOverrideVariants);
	bool RemovePart(TEnumAsByte<EFortCustomPartType> Part);
	class USkeletalMeshComponent* GetPartSkeletalMeshComponent(TEnumAsByte<EFortCustomPartType> Part);
	TEnumAsByte<EFortCustomGender> GetGender();
	void GetAllPartSkeletalMeshComponents(TArray<class USkeletalMeshComponent*>* SkeletalMeshComponents);
	bool CyclePartBP(TEnumAsByte<EFortCustomPartType> Part, bool bNextPart);
};


// Class FortniteGame.FortPlayerMarkerBase
// 0x0068 (0x0390 - 0x0328)
class AFortPlayerMarkerBase : public AActor
{
public:
	float                                              MinimumHeight;                                            // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeightOffset;                                             // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UAthenaMapMarkerItemDefinition*              CustomMarkerItemDefinition;                               // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  OnPlaceSound;                                             // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlaceSoundCooldownTime;                                   // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PlaceSoundCountMax;                                       // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FPlayerMarkerData                           Data;                                                     // 0x0350(0x0020)
	struct FVector                                     MarkerPosition2D;                                         // 0x0370(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	struct FTimerHandle                                PlaceSoundCooldownTimer;                                  // 0x0380(0x0008)
	int                                                PlaceSoundCount;                                          // 0x0388(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerMarkerBase");
		return ptr;
	}


	void ResetPlaceSoundCooldownTimer();
	void OnSetupMarker(const struct FPlayerMarkerData& MarkerData);
	void OnMarkerPlaced();
	void OnMarkerHidden();
};


// Class FortniteGame.FortPlayerParachute
// 0x0098 (0x03C0 - 0x0328)
class AFortPlayerParachute : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	class USoundBase*                                  CurrentGliderOpenSound;                                   // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              CurrentGliderOpenAudioComponent;                          // 0x0340(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USoundBase*                                  CurrentGliderCloseSound;                                  // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UAudioComponent>              CurrentGliderCloseAudioComponent;                         // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0358(0x0010) MISSED OFFSET
	class AFortPlayerPawn*                             PlayerPawn;                                               // 0x0368(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UAthenaGliderItemDefinition*                 ParachuteItemDef;                                         // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              ParachuteHiddenAnimFinishTime;                            // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGliderFullyDeployed : 1;                                 // 0x037C(0x0001)
	unsigned char                                      bChuteOpened : 1;                                         // 0x037C(0x0001) (BlueprintVisible)
	unsigned char                                      bIsFrontEndPreview : 1;                                   // 0x037C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	bool                                               bParachuteVisible;                                        // 0x037D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bActivateTrailOnRationalMovement;                         // 0x037E(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x037F(0x0001) MISSED OFFSET
	struct FRotator                                    LastRotationalMovement;                                   // 0x0380(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	struct FName                                       ParachuteTrailParameterName;                              // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsCosmeticPreview;                                        // 0x0398(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0399(0x0007) MISSED OFFSET
	class USkeletalMeshComponentBudgeted*              ParachuteMesh;                                            // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    TrailParticles;                                           // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x03B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerParachute");
		return ptr;
	}


	void SetChuteMeshVisibility(bool bParachuteVisiblity);
	void OnRep_PlayerPawn();
	void OnRep_ParachuteItemDef();
	void OnPlayerPawnSet();
	void OnParachuteTrailUpdated(float MovementLengthSquared, float ForwardDot, float RightDot, float RotationalMovementAcceleration);
	bool IsGliderFullyDeployedAccordingToAnim();
	void InitalizeFromItemDef(class UAthenaGliderItemDefinition* InParachuteItemDef, bool bSynchronousLoad);
	class USkeletalMeshComponent* GetParachuteRootMesh();
	class AFortPlayerPawn* GetFortPlayerPawn();
	void DisableTrailParticles();
};


// Class FortniteGame.FortPlayerPawnAthena
// 0x0600 (0x2500 - 0x1F00)
class AFortPlayerPawnAthena : public AFortPlayerPawn
{
public:
	struct FScriptMulticastDelegate                    OnInteractionFailedCallback;                              // 0x1F00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xC];                                       // 0x1F10(0x000C) MISSED OFFSET
	float                                              CurrentPawnSpeed;                                         // 0x1F1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentPawnSpeedXY;                                       // 0x1F20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CurrentPawnVelXYRot;                                      // 0x1F24(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     PreviousVelocityXY;                                       // 0x1F30(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1F3C(0x0004) MISSED OFFSET
	class USoundBase*                                  OnReviveSound;                                            // 0x1F40(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReviveFromDBNOTime;                                       // 0x1F48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DBNOStartTime;                                            // 0x1F4C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DBNOInvulnerableTime;                                     // 0x1F50(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      DBNORevivalStacking;                                      // 0x1F54(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x1F55(0x000B) MISSED OFFSET
	bool                                               bWasCrouchedBeforeDBNO;                                   // 0x1F60(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x1F61(0x0007) MISSED OFFSET
	class UCurveFloat*                                 DirectionalSpeedMultiplierCurve;                          // 0x1F68(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemSpecialActorID;                                       // 0x1F70(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTag                                ItemSpecialActorCategoryTag;                              // 0x1F78(0x0008) (Net, Transient)
	unsigned char                                      UnknownData04[0x4];                                       // 0x1F80(0x0004) MISSED OFFSET
	float                                              BecameSpecialActorTime;                                   // 0x1F84(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 ParachuteDirectionalSpeedMultiplierCurve;                 // 0x1F88(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 SkydivingDirectionalSpeedMultiplierCurve;                 // 0x1F90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 BallooningDirectionalSpeedMultiplierCurve;                // 0x1F98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnUIGameplayCue;                                          // 0x1FA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDBNOStateChanged;                                       // 0x1FB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bPlaytestWithNoMouse;                                     // 0x1FC0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x1FC1(0x0007) MISSED OFFSET
	bool                                               bNetMovementPrioritized;                                  // 0x1FC8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x1FC9(0x0003) MISSED OFFSET
	float                                              CapsuleRadiusAthena;                                      // 0x1FCC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleHalfHeightAthena;                                  // 0x1FD0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MeshHeightAdjustAthena;                                   // 0x1FD4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FFortPlayerAthenaAttributeReplicationProxy  AttributeReplicationProxy;                                // 0x1FD8(0x0014) (Net)
	unsigned char                                      UnknownData07[0x4];                                       // 0x1FEC(0x0004) MISSED OFFSET
	struct FGameplayAbilityRepAnimMontage              RepAnimMontageInfo;                                       // 0x1FF0(0x0030) (Net)
	int                                                RepAnimMontageStartSection;                               // 0x2020(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x2024(0x0004) MISSED OFFSET
	struct FGameplayAbilityRepAnimMontage              ReplayRepAnimMontageInfo;                                 // 0x2028(0x0030) (Net)
	unsigned char                                      UnknownData09[0x8];                                       // 0x2058(0x0008) MISSED OFFSET
	struct FMinimalGameplayCueReplicationProxy         SimulatedProxyGameplayCues;                               // 0x2060(0x01D0) (Net)
	struct FReplicatedMontagePair                      LandingMontagePair;                                       // 0x2230(0x0028) (Net)
	unsigned char                                      UnknownData10[0x8];                                       // 0x2258(0x0008) MISSED OFFSET
	class UTexture2D*                                  CurrentQuickChatIcon;                                     // 0x2260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x39];                                      // 0x2268(0x0039) MISSED OFFSET
	bool                                               WeaponActivated;                                          // 0x22A1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bADSWhileNotOnGround;                                     // 0x22A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x5];                                       // 0x22A3(0x0005) MISSED OFFSET
	class USoundBase*                                  DefaultCrouchedFootstepSound;                             // 0x22A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultCrouchSprintFootstepSound;                         // 0x22B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinimumTimeBetweenSteps;                                  // 0x22B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LastStepTime;                                             // 0x22BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFootstepEvent;                                          // 0x22C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerStartDBNO;                                        // 0x22D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class APawn*                                       KillerForSpectatorRotation;                               // 0x22E0(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsInWaterVolume;                                         // 0x22E8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x22E9(0x0003) MISSED OFFSET
	struct FFortEffectDistanceQuality                  DamageFXSignificance;                                     // 0x22EC(0x0018) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData14[0x14];                                      // 0x2304(0x0014) MISSED OFFSET
	class UWeaponHitNotifyAudioBank*                   DefaultHitNotifyAudioBank;                                // 0x2318(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsPlayerPawnReady;                                       // 0x2320(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x2321(0x0007) MISSED OFFSET
	struct FFortAthenaLoadout                          CustomizationLoadout;                                     // 0x2328(0x00C0) (Net)
	unsigned char                                      UnknownData16[0x4];                                       // 0x23E8(0x0004) MISSED OFFSET
	struct FVector                                     LastFiredLocation;                                        // 0x23EC(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     LastFiredDirection;                                       // 0x23F8(0x000C) (Transient, IsPlainOldData)
	float                                              LastFiredTime;                                            // 0x2404(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x8];                                       // 0x2408(0x0008) MISSED OFFSET
	class UDataTable*                                  PrototypeShootingModel;                                   // 0x2410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AController*                                 FallInstigator;                                           // 0x2418(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGameplayTagContainer                       FallDamageTags;                                           // 0x2420(0x0020) (Transient)
	class ABuildingSMActor*                            LastFloorBeforeFalling;                                   // 0x2440(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastFallDistance;                                         // 0x2448(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MeleeCombatSlowSpeedMultiplier;                           // 0x244C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MeleeCombatSlowDuration;                                  // 0x2450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x2454(0x0004) MISSED OFFSET
	struct FAthenaPawnReplayData                       EncryptedPawnReplayData;                                  // 0x2458(0x0030) (Net, Transient)
	TArray<class UFortMobileInteractionComponent*>     MobileInteractionComponents;                              // 0x2488(0x0010) (ExportObject, ZeroConstructor)
	struct FLinearColor                                MinimapIconColorFiftyFiftyPlayer;                         // 0x2498(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxIndicatorVisibilityDistForReplays;                     // 0x24A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x24AC(0x0004) MISSED OFFSET
	class UAudioComponent*                             ConsumableUseAudio;                                       // 0x24B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              LastHealthPostProcessWeight;                              // 0x24B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealthPostProcessStartTime;                               // 0x24BC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HealthPostProcessMuteTime;                                // 0x24C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3C];                                      // 0x24C4(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerPawnAthena");
		return ptr;
	}


	void TeleportToSkyDive(float HeightAboveGround);
	void StopConsumableUseAudio();
	void StartConsumableUseAudio(class USoundBase* Sound);
	void SetMeshHeightAdjustAthena(float HeightAdjust);
	void SetFallInstigator(class AController* NewFallInstigator, const struct FGameplayTagContainer& NewFallingDamageTags);
	void SetCapsuleRadiusAthena(float Radius);
	void SetCapsuleHalfHeightAthena(float HalfHeight);
	void SetBushEnabled(bool bEnableBush);
	void OnSignificantTick(float Significance);
	void OnResInDuringWarmup();
	void OnRep_WeaponActivated();
	void OnRep_ReplicatedAnimMontage();
	void OnRep_ReplayRepAnimMontageInfo();
	void OnRep_RepAnimMontageStartSection();
	void OnRep_NetMovementPrioritized();
	void OnRep_MeshHeightAdjustAthena();
	void OnRep_IsInWaterVolume();
	void OnRep_CustomizationLoadout();
	void OnRep_CapsuleRadiusAthena();
	void OnRep_CapsuleHalfHeightAthena();
	void OnRep_AttributeProxy();
	void OnPawnLODChanged(int NewLOD);
	void OnOutsideSafeZonePhaseChanged(int SafeZonePhase);
	void OnLeftReplayRelevancy();
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void OnEnteredReplayRelevancy();
	void MeleeCombatBlocked();
	void MeleeCombatActivated();
	bool LocalIsTryingToEnterVehicle();
	void LandscapeCheck();
	bool IsBackpackEquipped(EBackpackType BackpackType);
	float GetDefaultReviveFromDBNOTime();
	void FastSharedReplication(const struct FSharedRepMovement& SharedRepMovement);
	void CancelMeleeCombatSlow();
	void BushStateChanged(bool bNewBushState);
};


// Class FortniteGame.FortPlayerPet
// 0x0058 (0x0380 - 0x0328)
class AFortPlayerPet : public AActor
{
public:
	class UAthenaPetItemDefinition*                    PetItemDef;                                               // 0x0328(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsFrontEndPreview : 1;                                   // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET
	class USkeletalMeshComponentBudgeted*              PetMesh;                                                  // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInterface*>                  SavedMaterials;                                           // 0x0340(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0350(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerPet");
		return ptr;
	}


	void ResetPetMaterials();
	void OnRequestedCustomizationComplete(class AFortPlayerPawn* Pawn);
	class AFortPlayerPawn* GetFortPlayerPawn();
};


// Class FortniteGame.FortPlayerPetRepState
// 0x0030 (0x0358 - 0x0328)
class AFortPlayerPetRepState : public AActor
{
public:
	class AActor*                                      LookAtTarget;                                             // 0x0328(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UAthenaPetItemDefinition*                    PetItemDef;                                               // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FPetStimuliRepData                          StimuliTag;                                               // 0x0338(0x0010) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0348(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerPetRepState");
		return ptr;
	}


	void OnRep_StimuliTag();
	void OnRep_PetItemDef();
	void OnRep_LookAtTarget();
	class AFortPlayerPawn* GetFortPlayerPawn();
};


// Class FortniteGame.FortPlayerSpawnPad
// 0x0020 (0x0C08 - 0x0BE8)
class AFortPlayerSpawnPad : public ABuildingSMActor
{
public:
	TArray<class UStaticMeshComponent*>                Chests;                                                   // 0x0BE8(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0BF8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerSpawnPad");
		return ptr;
	}


	void PrestreamChestTextures();
	void InitializeChestProgression();
	int GetRewardedChestIndex();
	void GetPossessedPlayerPawnsByID(TArray<class AFortPlayerPawn*>* SortedPlayerPawns);
	void ChestProgressionUpdate(const struct FVector& PrimaryChestOffset, const struct FVector& ChestOffset);
};


// Class FortniteGame.FortPlayerStart
// 0x0008 (0x0360 - 0x0358)
class AFortPlayerStart : public APlayerStart
{
public:
	class UParticleSystemComponent*                    StartParticleComponent;                                   // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStart");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStartCreative
// 0x0020 (0x0378 - 0x0358)
class AFortPlayerStartCreative : public APlayerStart
{
public:
	struct FGameplayTagContainer                       PlayerStartTags;                                          // 0x0358(0x0020) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStartCreative");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStartWarmup
// 0x0008 (0x0360 - 0x0358)
class AFortPlayerStartWarmup : public APlayerStart
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStartWarmup");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerState
// 0x0598 (0x0988 - 0x03F0)
class AFortPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x03F0(0x0018) MISSED OFFSET
	unsigned char                                      bIsWorldDataOwner : 1;                                    // 0x0408(0x0001) (Net, Transient)
	unsigned char                                      bIsGameSessionOwner : 1;                                  // 0x0408(0x0001) (Net, Transient)
	unsigned char                                      UnknownData01[0x37];                                      // 0x0409(0x0037) MISSED OFFSET
	unsigned char                                      bIsGameSessionAdmin : 1;                                  // 0x0440(0x0001) (Net, Transient)
	unsigned char                                      bIsReadyToContinue : 1;                                   // 0x0440(0x0001) (Net, Transient)
	unsigned char                                      bHasFinishedLoading : 1;                                  // 0x0440(0x0001) (Net)
	unsigned char                                      bHasStartedPlaying : 1;                                   // 0x0440(0x0001) (Net)
	unsigned char                                      bShowHeroBackpack : 1;                                    // 0x0440(0x0001) (Net, Transient)
	unsigned char                                      bShowHeroHeadAccessories : 1;                             // 0x0440(0x0001) (Net, Transient)
	unsigned char                                      bRepFlag1 : 1;                                            // 0x0440(0x0001) (Net)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0441(0x0003) MISSED OFFSET
	EFortPlayerRole                                    PlayerRole;                                               // 0x0444(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0441(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	struct FUniqueNetIdRepl                            PartyOwnerUniqueId;                                       // 0x0448(0x0028) (Net)
	int                                                WorldPlayerId;                                            // 0x0470(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	struct FString                                     HeroId;                                                   // 0x0478(0x0010) (Net, ZeroConstructor)
	class UFortHeroType*                               HeroType;                                                 // 0x0488(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       HeroSquadId;                                              // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0498(0x0018) MISSED OFFSET
	int                                                CurrentCharXP;                                            // 0x04B0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4C];                                      // 0x04B4(0x004C) MISSED OFFSET
	TWeakObjectPtr<class AFortPickup>                  MyBackpackPickup;                                         // 0x0500(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                InitialExperienceLevel;                                   // 0x0508(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                InitialExperienceAmount;                                  // 0x050C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortExperienceDelta>                ExperienceDeltas;                                         // 0x0510(0x0010) (Net, ZeroConstructor, Transient)
	TArray<class UFortAwardItemDefinition*>            Awards;                                                   // 0x0520(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x28];                                      // 0x0530(0x0028) MISSED OFFSET
	struct FString                                     Platform;                                                 // 0x0558(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData08[0x18];                                      // 0x0568(0x0018) MISSED OFFSET
	TEnumAsByte<EFortCustomGender>                     CharacterGender;                                          // 0x0580(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCustomBodyType>                   CharacterBodyType;                                        // 0x0581(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x0582(0x0006) MISSED OFFSET
	struct FCustomCharacterParts                       CharacterParts;                                           // 0x0588(0x0040) (Net)
	class UCustomColorSwatch*                          CharacterColorSwatches[0x2];                              // 0x05C8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortCustomGender>                     LocalCharacterGender;                                     // 0x05D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortCustomBodyType>                   LocalCharacterBodyType;                                   // 0x05D9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x6];                                       // 0x05DA(0x0006) MISSED OFFSET
	class UCustomCharacterPart*                        LocalCharacterParts[0x6];                                 // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCustomColorSwatch*                          LocalCharacterColorSwatches[0x2];                         // 0x0610(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCustomPlayerComponent*                      CustomPRIComponent;                                       // 0x0620(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCustomColorSwatch*                          CharacterPartColorSwatches[0x6];                          // 0x0628(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	class UCustomColorSwatch*                          LocalCharacterPartColorSwatches[0x6];                     // 0x0658(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortTeamInfo*                               PlayerTeam;                                               // 0x0688(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AFortTeamPrivateInfo*                        PlayerTeamPrivate;                                        // 0x0690(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipReplicatedStats;                                     // 0x0698(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0699(0x0003) MISSED OFFSET
	struct FReplicatedStatValues                       ReplicatedStats_Campaign[0x22];                           // 0x069C(0x0008) (Net, Transient)
	struct FReplicatedStatValues                       ReplicatedStats_Zone[0x22];                               // 0x07AC(0x0008) (Net, Transient)
	unsigned char                                      UnknownData12[0x4];                                       // 0x08BC(0x0004) MISSED OFFSET
	bool                                               bAreZoneStatsFinalized;                                   // 0x08C0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EReadyCheckState                                   ReadyCheckState;                                          // 0x08C1(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x6];                                       // 0x08C2(0x0006) MISSED OFFSET
	class AActor*                                      HomeActor;                                                // 0x08C8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FFortPlayerAttributeSets                    AttributeSets;                                            // 0x08D0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0920(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       PlayerOSSName;                                            // 0x0928(0x0008) (ZeroConstructor, IsPlainOldData)
	ETrustedPlatformType                               TrustedPlatformType;                                      // 0x0930(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0931(0x0007) MISSED OFFSET
	struct FUniqueNetIdRepl                            PlatformUniqueNetId;                                      // 0x0938(0x0028) (Net)
	unsigned char                                      UnknownData15[0x10];                                      // 0x0960(0x0010) MISSED OFFSET
	bool                                               bInvitedToConsoleSession;                                 // 0x0970(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bInitializedPlayerCustomizationOptionsFromClientSettings; // 0x0971(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x0972(0x0002) MISSED OFFSET
	struct FVector                                     PawnDeathLocation;                                        // 0x0974(0x000C) (Transient, IsPlainOldData)
	int                                                CachedPreviousWorldPlayerId;                              // 0x0980(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0984(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerState");
		return ptr;
	}


	void UpdateScoreStatChanged();
	void ServerSetShowHeroHeadAccessories(bool bShow);
	void ServerSetShowHeroBackpack(bool bShow);
	void OnRep_ShowHeroHeadAccessories();
	void OnRep_ShowHeroBackpack();
	void OnRep_SessionOwner();
	void OnRep_ScoreStatChanged();
	void OnRep_PlayerTeam();
	void OnRep_PlatformUniqueNetId();
	void OnRep_Platform();
	void OnRep_PartyOwner();
	void OnRep_HomeActor(class AActor* OldHomeActor);
	void OnRep_HeroType();
	void OnRep_HeroId();
	void OnRep_CurrentCharXP();
	void OnRep_CharacterParts();
	void OnRep_CharacterGender();
	void OnRep_CharacterColorSwatches();
	void OnRep_CharacterBodyType();
	void OnRep_bHasStartedPlaying();
	void OnRep_AccessoryColorSwatches();
	bool IsConsolePlayer();
	struct FUniqueNetIdRepl GetUniqueID();
	struct FName GetPlayerOSSName();
	struct FUniqueNetIdRepl GetPlatformUniqueNetId();
	struct FString GetPlatform();
	class AFortPlayerPawn* GetCurrentPawn();
	void ClientNotifyAwardGranted(class UFortAwardItemDefinition* AwardDefinition);
	bool STATIC_AreUniqueIDsIdentical(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B);
};


// Class FortniteGame.FortPlayerStateZone
// 0x02D0 (0x0C58 - 0x0988)
class AFortPlayerStateZone : public AFortPlayerState
{
public:
	struct FScriptMulticastDelegate                    OnCurrentPawnChanged;                                     // 0x0988(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0998(0x0018) MISSED OFFSET
	class AFortPlayerStateZone*                        SpectatingTarget;                                         // 0x09B0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FFortSpectatorZoneArray                     Spectators;                                               // 0x09B8(0x00C8) (Net)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0A80(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSpectatorsRemovedEvent;                                 // 0x0A90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpectatorCountChangedEvent;                             // 0x0AA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpectatingTargetChangedEvent;                           // 0x0AB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0AC0(0x0008) MISSED OFFSET
	EFortKickReason                                    KickedFromSessionReason;                                  // 0x0AC8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0AC9(0x0003) MISSED OFFSET
	struct FReplicatedStatValues                       RS_Zone_Old[0x22];                                        // 0x0ACC(0x0008) (Transient)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0BDC(0x0004) MISSED OFFSET
	class AFortCarriedObject*                          CarriedObject;                                            // 0x0BE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                NumRejoins;                                               // 0x0BE8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                OldTotalScoreStat;                                        // 0x0BEC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0BF0(0x0018) MISSED OFFSET
	bool                                               bInvincibleDueToUI;                                       // 0x0C08(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0C09(0x0003) MISSED OFFSET
	float                                              CurrentHealth;                                            // 0x0C0C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxHealth;                                                // 0x0C10(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CurrentShield;                                            // 0x0C14(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxShield;                                                // 0x0C18(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0C1C(0x0004) MISSED OFFSET
	TArray<struct FAccumulatedItemEntry>               AccumulatedItems;                                         // 0x0C20(0x0010) (Net, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnAccumulatedItemsChanged;                                // 0x0C30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSimulatedAttributeEntry>            SimulatedAttributes;                                      // 0x0C40(0x0010) (Net, ZeroConstructor)
	class UFortGadgetItemDefinition*                   PendingDestroyedGadgetItemDefinition;                     // 0x0C50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateZone");
		return ptr;
	}


	void OnRep_SpectatingTarget();
	void OnRep_NumRejoins();
	void OnRep_AccumulatedItems();
	void MulticastTriggerOnGadgetTrackedAttributeDestroyedFX(class UFortGadgetItemDefinition* GadgetItemDefinition);
	bool IsPlayerDead();
	int GetSpectatorCount();
	float GetSimulatedAttributeValue(const struct FGameplayAttribute& Attribute, float DefaultValue);
	struct FString GetPlayerNameForStreaming();
	int GetNumOfAccumulatedItem(class UFortWorldItemDefinition* ItemDefinition);
};


// Class FortniteGame.FortPlayerStatePvP
// 0x0020 (0x0C78 - 0x0C58)
class AFortPlayerStatePvP : public AFortPlayerStateZone
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0C58(0x0018) MISSED OFFSET
	int                                                TotalQuantum;                                             // 0x0C70(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0C74(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStatePvP");
		return ptr;
	}


	void OnRep_TotalQuantum(int PrevTotalQuantum);
};


// Class FortniteGame.FortPlayerStateAthena
// 0x03B0 (0x1028 - 0x0C78)
class AFortPlayerStateAthena : public AFortPlayerStatePvP
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0C78(0x0004) MISSED OFFSET
	struct FFortRespawnData                            RespawnData;                                              // 0x0C7C(0x001C)
	ETeamMemberState                                   ReplicatedTeamMemberState;                                // 0x0C98(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	ETeamMemberState                                   TeamMemberState;                                          // 0x0C99(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0C9A(0x0002) MISSED OFFSET
	float                                              TeamMemberStateRepTime;                                   // 0x0C9C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0CA0(0x0020) MISSED OFFSET
	TEnumAsByte<EFortTeam>                             TeamIndex;                                                // 0x0CC0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasWonAGame;                                             // 0x0CC1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0CC2(0x0002) MISSED OFFSET
	int                                                TeamScorePlacement;                                       // 0x0CC4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                TeamScore;                                                // 0x0CC8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                Place;                                                    // 0x0CCC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                TeamKillScore;                                            // 0x0CD0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0CD4(0x0004) MISSED OFFSET
	TMap<class UAthenaGadgetItemDefinition*, int>      KillsWhileAthenaGadgetEquippedMap;                        // 0x0CD8(0x0050) (ZeroConstructor, Transient)
	int                                                DownScore;                                                // 0x0D28(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0D2C(0x0004) MISSED OFFSET
	int                                                KillScore;                                                // 0x0D30(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0D34(0x0008) MISSED OFFSET
	int                                                NumChestsOpened;                                          // 0x0D3C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0D40(0x0004) MISSED OFFSET
	int                                                NumAmmoCansOpened;                                        // 0x0D44(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0D48(0x0004) MISSED OFFSET
	int                                                NumSupplyDropsOpened;                                     // 0x0D4C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0D50(0x0004) MISSED OFFSET
	int                                                NumLlamasOpened;                                          // 0x0D54(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0D58(0x0004) MISSED OFFSET
	int                                                NumForagedItemsConsumed;                                  // 0x0D5C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0D60(0x0004) MISSED OFFSET
	int                                                NumMinutesAlive;                                          // 0x0D64(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0D68(0x0004) MISSED OFFSET
	int                                                NumBronzeCoinsCollected;                                  // 0x0D6C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0D70(0x0004) MISSED OFFSET
	int                                                NumSilverCoinsCollected;                                  // 0x0D74(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0D78(0x0004) MISSED OFFSET
	int                                                NumGoldCoinsCollected;                                    // 0x0D7C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0D80(0x0004) MISSED OFFSET
	int                                                TotalPlayerScore;                                         // 0x0D84(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    PointsAddedToScore;                                       // 0x0D88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    TeamScoreChanged;                                         // 0x0D98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    TeamPlacementChanged;                                     // 0x0DA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PlaceChanged;                                             // 0x0DB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortPlayerStateAthena*>              FriendsInSquad;                                           // 0x0DC8(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortPlayerStateAthena*>              SquadPlayerStates;                                        // 0x0DD8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                SquadListUpdateValue;                                     // 0x0DE8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0DEC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData17[0x50];                                      // 0x0DEC(0x0050) UNKNOWN PROPERTY: SetProperty FortniteGame.FortPlayerStateAthena.HostilePlayersDamaged
	unsigned char                                      SquadId;                                                  // 0x0E40(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInAircraft : 1;                                          // 0x0E41(0x0001) (Net, Transient)
	unsigned char                                      bThankedBusDriver : 1;                                    // 0x0E41(0x0001) (Net, Transient)
	unsigned char                                      bUsingStreamerMode : 1;                                   // 0x0E41(0x0001) (Net, Transient)
	unsigned char                                      UnknownData18[0x6];                                       // 0x0E42(0x0006) MISSED OFFSET
	struct FText                                       StreamerModeName;                                         // 0x0E48(0x0018) (Net, Transient)
	class AFortPlayerMarkerBase*                       LocalWorldMapMarker;                                      // 0x0E60(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MapIndicatorServerTime;                                   // 0x0E68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTalking;                                               // 0x0E6C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMuted;                                                 // 0x0E6D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x2];                                       // 0x0E6E(0x0002) MISSED OFFSET
	struct FPlayerBannerInfo                           Banner;                                                   // 0x0E70(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData20[0x138];                                     // 0x0E98(0x0138) MISSED OFFSET
	struct FVector2D                                   MapIndicatorPos;                                          // 0x0FD0(0x0008) (Net, Transient, DuplicateTransient, IsPlainOldData)
	int                                                SecondsAlive;                                             // 0x0FD8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDisconnected;                                          // 0x0FDC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData21[0x1B];                                      // 0x0FDD(0x001B) MISSED OFFSET
	class UTexture2D*                                  GameModeIcon;                                             // 0x0FF8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FDeathInfo                                  DeathInfo;                                                // 0x1000(0x0028) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateAthena");
		return ptr;
	}


	void SetMapIndicatorPos(const struct FVector2D& Position);
	void ServerSetInAircraft(bool bNewInAircraft);
	void OnRep_ThankedBusDriver();
	void OnRep_TeamScorePlacement();
	void OnRep_TeamScore();
	void OnRep_TeamIndex(TEnumAsByte<EFortTeam> OldVal);
	void OnRep_SquadListUpdateValue();
	void OnRep_SquadId();
	void OnRep_ReplicatedTeamMemberState();
	void OnRep_Place();
	void OnRep_NumSupplyDropsOpened();
	void OnRep_NumSilverCoinsCollected();
	void OnRep_NumMinutesAlive();
	void OnRep_NumLlamasOpened();
	void OnRep_NumGoldCoinsCollected();
	void OnRep_NumForagedItemsConsumed();
	void OnRep_NumChestsOpened();
	void OnRep_NumBronzeCoinsCollected();
	void OnRep_NumAmmoCansOpened();
	void OnRep_MapIndicatorPos();
	void OnRep_Kills();
	void OnRep_Downs();
	void OnRep_DeathInfo();
	void OnRep_BannerInfo();
	bool IsSquadDead();
	bool IsDisconnected();
	struct FLinearColor GetPinColor();
	struct FVector2D GetMapIndicatorPos();
	struct FDeathInfo GetDeathInfo();
	void ClientReportTeamKill(int TeamKills);
	void ClientReportKill(class AFortPlayerStateAthena* Player);
	void ClientReportDBNO(class AFortPlayerStateAthena* Player);
	void ClientNotifyTournamentStatsFinal();
};


// Class FortniteGame.FortPlayerStateDeployableBase
// 0x0000 (0x0C58 - 0x0C58)
class AFortPlayerStateDeployableBase : public AFortPlayerStateZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateDeployableBase");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStateFOB
// 0x0000 (0x0C58 - 0x0C58)
class AFortPlayerStateFOB : public AFortPlayerStateZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateFOB");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStateFrontEnd
// 0x0000 (0x0988 - 0x0988)
class AFortPlayerStateFrontEnd : public AFortPlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateFrontEnd");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStateKeep
// 0x0000 (0x0C58 - 0x0C58)
class AFortPlayerStateKeep : public AFortPlayerStateZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateKeep");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStateManor
// 0x0000 (0x0C58 - 0x0C58)
class AFortPlayerStateManor : public AFortPlayerStateZone
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateManor");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerStateOutpost
// 0x0008 (0x0C60 - 0x0C58)
class AFortPlayerStateOutpost : public AFortPlayerStateZone
{
public:
	bool                                               bCanEditOutpost;                                          // 0x0C58(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0C59(0x0003) MISSED OFFSET
	int                                                CraftingTableItemsRemaing;                                // 0x0C5C(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerStateOutpost");
		return ptr;
	}


	void SetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void ServerSetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit);
	void OnRep_CraftingTableItemsRemaing();
	void OnRep_CanEditOutpost();
	bool IsOutpostOwner();
	bool CanEditOutpost();
};


// Class FortniteGame.FortPlaylist
// 0x0218 (0x0248 - 0x0030)
class UFortPlaylist : public UPrimaryDataAsset
{
public:
	int                                                PlaylistId;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       PlaylistName;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinPlayers;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxPlayers;                                               // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxTeamCount;                                             // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxTeamSize;                                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxSocialPartySize;                                       // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxSquadSize;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxSquads;                                                // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EnforceSquadFill;                                         // 0x005C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowSquadFillOption;                                    // 0x005D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005E(0x0002) MISSED OFFSET
	class UPlaylistUserOptions*                        UserOptions;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0068(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylist.AdditionalLevels
	TEnumAsByte<EFortTeam>                             DefaultFirstTeam;                                         // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             DefaultLastTeam;                                          // 0x0079(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x007A(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       GameplayTagContainer;                                     // 0x0080(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EFriendlyFireType                                  FriendlyFireType;                                         // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseFriendlyFireAimAssist;                                // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	int                                                LootLevel;                                                // 0x00A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTagQuery                           LootTagQuery;                                             // 0x00A8(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly)
	int                                                BuildingLevelOverride;                                    // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EDBNOType                                          DBNOType;                                                 // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData06[0x10];                                      // 0x00F5(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylist.ModifierList
	TArray<class UFortWorldItemDefinition*>            ItemsToFullyLoad;                                         // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                               bIsDefaultPlaylist;                                       // 0x0118(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0119(0x0007) MISSED OFFSET
	struct FText                                       UIDisplayName;                                            // 0x0120(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       UIDescription;                                            // 0x0138(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                       HUDElementsToHide;                                        // 0x0150(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData08[0x28];                                      // 0x0170(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylist.LootTierData
	unsigned char                                      UnknownData09[0x28];                                      // 0x0198(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylist.LootPackages
	unsigned char                                      UnknownData10[0x28];                                      // 0x01C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylist.RangedWeapons
	unsigned char                                      UnknownData11[0x28];                                      // 0x01E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylist.GameData
	unsigned char                                      UnknownData12[0x28];                                      // 0x0210(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylist.ResourceRates
	float                                              GarbageCollectionFrequency;                               // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ServerPerformanceEventFrequency;                          // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ServerMetricsEventFrequency;                              // 0x0240(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0244(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaylist");
		return ptr;
	}

};


// Class FortniteGame.FortPlaylistAthena
// 0x02E0 (0x0528 - 0x0248)
class UFortPlaylistAthena : public UFortPlaylist
{
public:
	bool                                               bRewardsTrackPlacement;                                   // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRewardsAllowXPProgression;                               // 0x0249(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRewardForRevivingTeammates;                              // 0x024A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERewardPlacementBonusType                          RewardPlacementBonusType;                                 // 0x024B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RewardsPlacementThreshold;                                // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERewardTimePlayedType                              RewardTimePlayedType;                                     // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0251(0x0003) MISSED OFFSET
	int                                                RewardTimePlayedXPPerMinute;                              // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RewardTimePlayedXPFlatValue;                              // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRequeueAfterFailedSessionAssignment;                     // 0x025C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUpdateMMR;                                               // 0x025D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x025E(0x0002) MISSED OFFSET
	struct FString                                     RatingType;                                               // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     Strategy;                                                 // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FRatingExpansion>                    PriorityRatingExpansion;                                  // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EAthenaWinCondition                                WinConditionType;                                         // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaVictoryUIType                               VictoryUIType;                                            // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0292(0x0006) MISSED OFFSET
	struct FText                                       VictoryText;                                              // 0x0298(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              TimedWinConditionTime;                                    // 0x02B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              FinalWinConditionTime;                                    // 0x02D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FWinConditionScoreData                      ScoringData;                                              // 0x02F0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              TimedSafeZonePhaseTime;                                   // 0x0340(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                WinConditionPlayersRemaining;                             // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsLargeTeamGame;                                         // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreDefaultQuests;                                     // 0x0365(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisallowMultipleWeaponsOfType;                           // 0x0366(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0367(0x0001) MISSED OFFSET
	int                                                LootDropRounds;                                           // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	TArray<struct FItemAndCount>                       InventoryItemsToGrant;                                    // 0x0370(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                               bForceCameraFadeOnRespawn;                                // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	float                                              MinTimeBeforeRespawnCameraFade;                           // 0x0384(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaRespawnType                                 RespawnType;                                              // 0x0388(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0389(0x0007) MISSED OFFSET
	struct FScalableFloat                              RespawnHeight;                                            // 0x0390(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              RespawnTime;                                              // 0x03B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bRespawnInAir;                                            // 0x03D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAirCraftBehavior                                  AirCraftBehavior;                                         // 0x03D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCustomAircraftPathSelection;                          // 0x03D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseSameDirectionForOpposingAircraft;                     // 0x03D3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AircraftPathOffsetFromMapCenterMin;                       // 0x03D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AircraftPathOffsetFromMapCenterMax;                       // 0x03D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AircraftPathMidpointSelectionRadiusMin;                   // 0x03DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AircraftPathMidpointSelectionRadiusMax;                   // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x03E4(0x0004) MISSED OFFSET
	class UClass*                                      PlaylistMissionGen;                                       // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceLTMLoadingScreenBackground;                         // 0x03F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x03F1(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData09[0x28];                                      // 0x03F1(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortPlaylistAthena.LoadingScreenWidget
	TArray<struct FPlaylistUIExtension>                UIExtensions;                                             // 0x0420(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      UIExtenderClass;                                          // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  MissionIcon;                                              // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       UIDisplaySubName;                                         // 0x0440(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bLimitedTimeMode;                                         // 0x0458(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisplayScoreInHUD;                                       // 0x0459(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayRespawnWidget;                                    // 0x045A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnforceFullSquadInUI;                                    // 0x045B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESafeZoneStartUp                                   SafeZoneStartUp;                                          // 0x045C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWarmUpInStorm;                                           // 0x045D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x045E(0x0002) MISSED OFFSET
	float                                              StormEffectDelay;                                         // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisplayFinalStormPosition;                               // 0x0464(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDrawLineToStormCircleIfOutside;                          // 0x0465(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x0466(0x0002) MISSED OFFSET
	int                                                LastSafeZoneIndex;                                        // 0x0468(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDefaultSupplyDrops;                                   // 0x046C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x046D(0x0003) MISSED OFFSET
	TArray<struct FSupplyDropModifierData>             SupplyDropModifierList;                                   // 0x0470(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData13[0x10];                                      // 0x0480(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylistAthena.SupplyDropInfoList
	unsigned char                                      UnknownData14[0x10];                                      // 0x0490(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylistAthena.QueryNameToLootChanceScaleTables
	unsigned char                                      UnknownData15[0x10];                                      // 0x04A0(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylistAthena.QueryNameToLootCountScaleTables
	unsigned char                                      UnknownData16[0x28];                                      // 0x04B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylistAthena.ExitCraftInfo
	unsigned char                                      UnknownData17[0x10];                                      // 0x04D8(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortPlaylistAthena.SpawnActorInfoList
	unsigned char                                      bEnableCreativeMode : 1;                                  // 0x04E8(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bEnablePlayspaceManager : 1;                              // 0x04E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bAllowTeamSwitching : 1;                                  // 0x04E8(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bAllowLayoutRequirementsFeature : 1;                      // 0x04E8(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                               bUsesAnimationSharing;                                    // 0x04E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x6];                                       // 0x04EA(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData19[0x28];                                      // 0x04EA(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaylistAthena.AnimationSharingSetup
	int                                                PlaylistStatId;                                           // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAccumulateToProfileStats;                                // 0x051C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSaveToRecentGameList;                                    // 0x051D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x051E(0x0002) MISSED OFFSET
	class UAthenaAISettings*                           AISettings;                                               // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaylistAthena");
		return ptr;
	}


	void CreateCalendarPayload_RegionalOverride();
	void CreateCalendarPayload_Enabling();
};


// Class FortniteGame.FortPlaylistManager
// 0x0010 (0x0038 - 0x0028)
class UFortPlaylistManager : public UObject
{
public:
	TArray<class UFortPlaylistAthena*>                 AthenaPlaylists;                                          // 0x0028(0x0010) (BlueprintVisible, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaylistManager");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionBase
// 0x0050 (0x0080 - 0x0030)
class UPlaylistUserOptionBase : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.PlaylistUserOptionBase.OptionScope
	struct FString                                     OptionKey;                                                // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FText                                       OptionDisplayName;                                        // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionBase");
		return ptr;
	}


	struct FString GetOptionKey(bool bWithScoping);
};


// Class FortniteGame.PlaylistUserOptionEnum
// 0x0018 (0x0098 - 0x0080)
class UPlaylistUserOptionEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionValue>                OptionValues;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                DefaultValueIndex;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionEnum");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionIntEnum
// 0x0018 (0x0098 - 0x0080)
class UPlaylistUserOptionIntEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionIntValue>             OptionValues;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                DefaultValueIndex;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionIntEnum");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionFloatEnum
// 0x0018 (0x0098 - 0x0080)
class UPlaylistUserOptionFloatEnum : public UPlaylistUserOptionBase
{
public:
	TArray<struct FPlaylistOptionFloatValue>           OptionValues;                                             // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                DefaultValueIndex;                                        // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionFloatEnum");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionFloatRange
// 0x0010 (0x0090 - 0x0080)
class UPlaylistUserOptionFloatRange : public UPlaylistUserOptionBase
{
public:
	float                                              Min;                                                      // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Max;                                                      // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultValue;                                             // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionFloatRange");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionIntRange
// 0x0010 (0x0090 - 0x0080)
class UPlaylistUserOptionIntRange : public UPlaylistUserOptionBase
{
public:
	int                                                Min;                                                      // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Max;                                                      // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DefaultValue;                                             // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionIntRange");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptionBool
// 0x0008 (0x0088 - 0x0080)
class UPlaylistUserOptionBool : public UPlaylistUserOptionBase
{
public:
	bool                                               bDefaultValue;                                            // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptionBool");
		return ptr;
	}

};


// Class FortniteGame.PlaylistUserOptions
// 0x0010 (0x0040 - 0x0030)
class UPlaylistUserOptions : public UDataAsset
{
public:
	TArray<class UPlaylistUserOptionBase*>             Options;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlaylistUserOptions");
		return ptr;
	}

};


// Class FortniteGame.FortPlayMontageForGameplayTagQueryInterface
// 0x0000 (0x0028 - 0x0028)
class UFortPlayMontageForGameplayTagQueryInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayMontageForGameplayTagQueryInterface");
		return ptr;
	}

};


// Class FortniteGame.FortPlaysetItemDefinition
// 0x0060 (0x03F0 - 0x0390)
class UFortPlaysetItemDefinition : public UFortAccountItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0390(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortPlaysetItemDefinition.PlaysetToSpawn
	int                                                SizeX;                                                    // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SizeY;                                                    // 0x03BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       UIDisplayName;                                            // 0x03C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      MinigameClass;                                            // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PlaysetName;                                              // 0x03E0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlaysetItemDefinition");
		return ptr;
	}


	class ULevelStreamingDynamic* STATIC_SpawnPlaysetFromStruct(class AActor* WorldContextObject, const struct FFortPlaysetStreamingData& LevelData);
	class ULevelStreamingDynamic* STATIC_SpawnPlayset(class AActor* WorldContextObject, class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation, struct FFortPlaysetStreamingData* OutLevelData);
	void STATIC_SpawnActorsInPlayset(class AActor* WorldContextObject, class UFortPlaysetItemDefinition* Playset);
	struct FName GetPlaysetName();
};


// Class FortniteGame.FortPlayspace
// 0x00F0 (0x07E8 - 0x06F8)
class AFortPlayspace : public ABuildingGameplayActor
{
public:
	class UBoxComponent*                               StreamingBounds;                                          // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        PlayBounds;                                               // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UFortPlaysetItemDefinition*                  OverridePlayset;                                          // 0x0708(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UFortPlaysetItemDefinition*>          PlaysetOptions;                                           // 0x0710(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UFortPlaysetItemDefinition*                  CurrentPlayset;                                           // 0x0720(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortMinigameState*                          CurrentMinigameState;                                     // 0x0728(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FFortPlaysetStreamingData                   ClientPlaysetData;                                        // 0x0730(0x0030) (Net)
	class ULevelStreamingDynamic*                      StreamedLevel;                                            // 0x0760(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayspaceConsole*                       ConsoleActor;                                             // 0x0768(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FUniqueNetIdRepl>                    ActivePlayers;                                            // 0x0770(0x0010) (Net, ZeroConstructor)
	TArray<struct FUniqueNetIdRepl>                    CachedActivePlayers;                                      // 0x0780(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bPendingLoad : 1;                                         // 0x0790(0x0001) (Transient)
	EPlayplaceLoadState                                LoadState;                                                // 0x0791(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EPlayplaceActivityState                            ActivityState;                                            // 0x0792(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0793(0x0005) MISSED OFFSET
	class AFortMinigameMode*                           AuthorityMinigameMode;                                    // 0x0798(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              ActorsToDelete;                                           // 0x07A0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x38];                                      // 0x07B0(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayspace");
		return ptr;
	}


	void UpdateSize(const struct FVector& NewScale);
	void UnloadPlayspaceClients();
	void StreamingBoundsLeft(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void StreamingBoundsEntered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void StopPlayspaceActivity();
	void StartPlayspaceActivity();
	void SetRuntimePlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void SetPlayset(class UFortPlaysetItemDefinition* NewPlayset);
	void ResetPlayspace();
	void RemovePlayerFromPlayspace(const struct FUniqueNetIdRepl& RemovedUser);
	void PushAllPlayersOutsidePlayspace();
	void PlayBoundsLeft(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void PlayBoundsEntered(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_ClientPlaysetData();
	void OnRep_ActivityState();
	void OnRep_ActivePlayers();
	void OnFinishedUnloading();
	void OnFinishedLoading();
	void LoadPlayspaceClients();
	bool IsPlayerAllowedInPlayspace(const struct FUniqueNetIdRepl& NewUser);
	class AFortMinigameState* GetMinigameState();
	class UFortPlaysetItemDefinition* GetCurrentPlayset();
	class AFortMinigameMode* GetAuthorityMinigameMode();
	void FailsafeTimerExpired();
	void DeleteActorsTimerHelper();
	void AddPlayerToPlayspace(class AFortPlayerController* PlayerToAdd);
};


// Class FortniteGame.FortPlayspaceConsole
// 0x0008 (0x0C40 - 0x0C38)
class AFortPlayspaceConsole : public ABuildingProp
{
public:
	class AFortPlayspace*                              ConnectedPlayspace;                                       // 0x0C38(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayspaceConsole");
		return ptr;
	}


	void SetPlayspace(class AFortPlayspace* NewPlayspace);
	class AFortPlayspace* GetCurrentPlayspace();
};


// Class FortniteGame.FortPlayspaceManager
// 0x0030 (0x0358 - 0x0328)
class AFortPlayspaceManager : public AInfo
{
public:
	struct FScriptMulticastDelegate                    OnClientEnteredPlayspace;                                 // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientLeftPlayspace;                                    // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AFortPlayspace*>                      PlayspaceEntries;                                         // 0x0348(0x0010) (Net, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayspaceManager");
		return ptr;
	}


	void SpawnPlayspaceWithoutPlayBounds(class UClass* PlayspaceActor, class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation);
	class AFortPlayspace* SpawnPlayspace(class UClass* PlayspaceActor, class UFortPlaysetItemDefinition* Playset, const struct FVector& Location, const struct FRotator& Rotation);
	void OnRepPlayspaceEntries();
	void STATIC_GetPlayspaceManager(class UObject* WorldContextObject, class AFortPlayspaceManager** OutPlayspaceManager, EValidityResult* OutIsValid);
	void ClientLeftPlayspace(class AFortPlayspace* LeftPlayspace);
	void ClientEnteredPlayspace(class AFortPlayspace* EnteredPlayspace);
	bool STATIC_CheckForOverlappingPlayspaces(class UObject* WorldContextObject, const struct FVector& StartLocation, class UFortPlaysetItemDefinition* NewPlayset);
};


// Class FortniteGame.FortPOIAmbientAudioBank
// 0x0058 (0x0088 - 0x0030)
class UFortPOIAmbientAudioBank : public UDataAsset
{
public:
	struct FGameplayTag                                LocationTag;                                              // 0x0030(0x0008) (Edit)
	struct FFortPOIAmbientAudioLoop                    Loops[0x4];                                               // 0x0038(0x0010) (Edit, DisableEditOnInstance)
	TArray<struct FFortPOIAmbientAudioOneShot>         OneShots;                                                 // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPOIAmbientAudioBank");
		return ptr;
	}

};


// Class FortniteGame.FortPoiCollisionComponent
// 0x0160 (0x06C0 - 0x0560)
class UFortPoiCollisionComponent : public UPrimitiveComponent
{
public:
	struct FBodyInstance                               PoiBodyInstance;                                          // 0x0560(0x0158)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPoiCollisionComponent");
		return ptr;
	}

};


// Class FortniteGame.FortPoiManager
// 0x00C8 (0x03F0 - 0x0328)
class AFortPoiManager : public AActor
{
public:
	struct FFortPoiGridInfo                            FortPoiGridInfo;                                          // 0x0328(0x0028) (Net)
	TArray<int16_t>                                    FortPoiGridCellsTagContainerTableIds;                     // 0x0350(0x0010) (ZeroConstructor)
	TArray<struct FFortPoiVolumeGridCell>              FortPoiGridCellsLargeVolume;                              // 0x0360(0x0010) (ZeroConstructor)
	TArray<class AFortPoiVolume*>                      SmallTickUpdatedPoi;                                      // 0x0370(0x0010) (ZeroConstructor)
	TArray<class AFortPoiVolume*>                      LargePoiVolumes;                                          // 0x0380(0x0010) (ZeroConstructor)
	TArray<class AFortPoiVolume*>                      AllPoiVolumes;                                            // 0x0390(0x0010) (ZeroConstructor)
	int                                                TestPlayerIndex;                                          // 0x03A0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxNumTestsPerFrame;                                      // 0x03A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FGameplayTagContainer>               PoiTagContainerTable;                                     // 0x03A8(0x0010) (Net, ZeroConstructor)
	int                                                PoiTagContainerTableSize;                                 // 0x03B8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                PoiGridPrevSizeForDebugDisplay;                           // 0x03BC(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int16_t>                                    PoiGridForDebugDisplay;                                   // 0x03C0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData00[0x20];                                      // 0x03D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPoiManager");
		return ptr;
	}


	void OnRep_PoiTagContainerTable();
	void OnRep_PoiGridForDebugDisplay();
	void OnRep_FortPoiGridInfo();
};


// Class FortniteGame.FortPoiVolume
// 0x0038 (0x0398 - 0x0360)
class AFortPoiVolume : public AVolume
{
public:
	float                                              LargeGameVolume;                                          // 0x0360(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       LocationTags;                                             // 0x0368(0x0020) (Edit)
	class UFortPOIAmbientAudioBank*                    AudioBank;                                                // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFortPoiCollisionComponent*                  PoiCollisionComp;                                         // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPoiVolume");
		return ptr;
	}


	bool DoesShapeComponentOverlap(class UShapeComponent* Shape);
	bool ContainsLocationTag(const struct FGameplayTag& Tag);
};


// Class FortniteGame.FortPooledSkelMeshComponent
// 0x0050 (0x0BA0 - 0x0B50)
class UFortPooledSkelMeshComponent : public USkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0B50(0x0030) MISSED OFFSET
	TArray<class UMaterialInterface*>                  SavedMaterials;                                           // 0x0B80(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0B90(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPooledSkelMeshComponent");
		return ptr;
	}

};


// Class FortniteGame.FortProceduralFoliageComponent
// 0x0000 (0x0118 - 0x0118)
class UFortProceduralFoliageComponent : public UProceduralFoliageComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProceduralFoliageComponent");
		return ptr;
	}

};


// Class FortniteGame.FortProfileGo
// 0x0578 (0x05A0 - 0x0028)
class UFortProfileGo : public UObject
{
public:
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0028(0x00E8) MISSED OFFSET
	TArray<struct FProfileGoScenario>                  ProfileGoScenarios;                                       // 0x0110(0x0010) (ZeroConstructor, Config)
	TArray<struct FProfileGoCollection>                ProfileGoCollections;                                     // 0x0120(0x0010) (ZeroConstructor, Config)
	TArray<struct FProfileGoCommand>                   AllCommands;                                              // 0x0130(0x0010) (ZeroConstructor, Config)
	float                                              DefaultSettleTime;                                        // 0x0140(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x45C];                                     // 0x0144(0x045C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProfileGo");
		return ptr;
	}

};


// Class FortniteGame.FortProjectile_MOBATurret
// 0x0010 (0x06D8 - 0x06C8)
class AFortProjectile_MOBATurret : public AFortProjectileBase
{
public:
	TArray<struct FHitResult>                          ForcedHitResults;                                         // 0x06C8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProjectile_MOBATurret");
		return ptr;
	}


	void OnHomingTargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
};


// Class FortniteGame.FortProjectileAthena
// 0x00F0 (0x07B8 - 0x06C8)
class AFortProjectileAthena : public AFortProjectileBase
{
public:
	struct FVector_NetQuantize                         FireStartLoc;                                             // 0x06C8(0x000C) (Net)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	class UBulletWhipTrackerComponentBase*             BulletWhipTrackerComponent;                               // 0x06D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x06E0(0x0010) MISSED OFFSET
	struct FHitResult                                  PawnHitResult;                                            // 0x06F0(0x0088) (Net, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0778(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortProjectileAthena.BulletWhipTrackerComponentClass
	unsigned char                                      UnknownData03[0x18];                                      // 0x07A0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProjectileAthena");
		return ptr;
	}


	void ServerNotifyPawnHit(const struct FHitResult& Hit);
	void OnRep_PawnHitResult();
	void OnRep_FireStart();
	void KillAfterNoPawnHit();
};


// Class FortniteGame.FortProjectileFallingTrap
// 0x0008 (0x06D0 - 0x06C8)
class AFortProjectileFallingTrap : public AFortProjectileBase
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x06C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProjectileFallingTrap");
		return ptr;
	}

};


// Class FortniteGame.FortProjectileTrajectory
// 0x0000 (0x0328 - 0x0328)
class AFortProjectileTrajectory : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortProjectileTrajectory");
		return ptr;
	}


	void SetTrajectoryFromNative(TArray<struct FVector> SplinePoints, TArray<struct FVector> SplineTangents);
};


// Class FortniteGame.FortPrototypingContext
// 0x0048 (0x0070 - 0x0028)
class UFortPrototypingContext : public UBlueprintContextBase
{
public:
	struct FScriptMulticastDelegate                    OnPrototypingStatusChangedEvent;                          // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0038(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPrototypingContext");
		return ptr;
	}


	void OnPrototypingStatusChanged__DelegateSignature();
	EFortPrototypingStatus GetPrototypingStatus();
};


// Class FortniteGame.FortPushNotificationManager
// 0x0008 (0x0030 - 0x0028)
class UFortPushNotificationManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPushNotificationManager");
		return ptr;
	}

};


// Class FortniteGame.StrategicBuildingActor
// 0x0138 (0x0830 - 0x06F8)
class AStrategicBuildingActor : public ABuildingGameplayActor
{
public:
	float                                              HealthBarVisibilityDistance;                              // 0x06F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HealthBarVisibilityDistanceSquared;                       // 0x06FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UBoxComponent*                               TouchBoxComponent;                                        // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	EFortStrategicBuildingCategory                     StrategicBuildingCategory;                                // 0x0708(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0709(0x0007) MISSED OFFSET
	TArray<class UFortAbilitySet*>                     PermanentInherentAbilitySets;                             // 0x0710(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FStrategicBuildingLevelInformation>  LevelInfo;                                                // 0x0720(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance)
	float                                              ProximityPulseInterval;                                   // 0x0730(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0734(0x0004) MISSED OFFSET
	class UClass*                                      DeathPenaltyAbility;                                      // 0x0738(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             DeathParticles;                                           // 0x0740(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  DeathSound;                                               // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFortGadgetItemDefinition*                   SpawnedFromItemDefinition;                                // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTeamStrategicBuildingHandle                SBAHandle;                                                // 0x0758(0x0004) (Transient)
	struct FStrategicBuildingActiveConstructionInfo    ConstructionProgress;                                     // 0x075C(0x0010) (Net, Transient)
	unsigned char                                      UnknownData02[0x4];                                       // 0x076C(0x0004) MISSED OFFSET
	TArray<struct FStrategicBuildingLevelActiveCriteriaProgress> LevelProgress;                                            // 0x0770(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FFortAbilitySetHandle>               StrategicBuildingAbilitySets;                             // 0x0780(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortAbilitySetHandle>               PersistentlyAppliedAbilitySets;                           // 0x0790(0x0010) (ZeroConstructor, Transient)
	TArray<class AActor*>                              DeferredTouchActorsToProcess;                             // 0x07A0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x58];                                      // 0x07B0(0x0058) MISSED OFFSET
	unsigned char                                      bIsActive : 1;                                            // 0x0808(0x0001) (Net, Transient)
	unsigned char                                      bHasGEsToApplyOnTouch : 1;                                // 0x0808(0x0001) (Transient)
	unsigned char                                      bHasGEsToApplyOnPulseTimer : 1;                           // 0x0808(0x0001) (Transient)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0809(0x0007) MISSED OFFSET
	class UFortVisibilityComponent*                    VisibilityComponent;                                      // 0x0810(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTexture2D*                                  MiniMapIcon;                                              // 0x0818(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0820(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.StrategicBuildingActor");
		return ptr;
	}


	void SetupVisibilityComponent();
	void SetupIndicators();
	void ProcessDeferredTouchActors();
	void OnRep_ConstructionProgress();
	void OnRep_bIsActive();
	void OnConstructionTickPlayEffects(float DeltaTime, float ElapsedPct, int ConstructionLvl);
	void OnConstructionStartedPlayEffects(float ServerStartTime, float ServerEndTime, float CurrentServerTime, float ElapsedPct, int ConstructionLvl);
	void OnConstructionEndedPlayEffects(int ConstructionLevel);
	void OnActiveStatusChanged(bool bNewActiveStatus);
	bool IsActive();
	void GiveItemFromStrategicBuildingToPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int NumberToGive);
	float GetMaxLevelUnlockProgress(int InLevel);
	struct FVector GetDeathEffectsScale();
	struct FRotator GetDeathEffectsRotation();
	struct FVector GetDeathEffectsLocation();
	float GetCurrentLevelUnlockProgress(int InLevel);
	bool AttemptIncrementLevelUnlockProgress(int InLevel, float InProgressDelta);
	void ApplyProximityPulseEffects();
};


// Class FortniteGame.FortPvPBaseCornerstone
// 0x0030 (0x0860 - 0x0830)
class AFortPvPBaseCornerstone : public AStrategicBuildingActor
{
public:
	unsigned char                                      bInvincible : 1;                                          // 0x0830(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0831(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCornerstoneDamaged;                                     // 0x0838(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCornerstoneOutOfHealth;                                 // 0x0848(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0858(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPBaseCornerstone");
		return ptr;
	}


	void SetInvincibility(bool bInInvincible);
	void OnRep_bInvincible();
	void OnInvincibilityChanged(bool bIsInvincible);
};


// Class FortniteGame.FortPvPFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortPvPFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPFunctionLibrary");
		return ptr;
	}


	void STATIC_SetMatchLevel(class UObject* WorldContextObject, int MatchLevel);
	class AStrategicBuildingActor* STATIC_GetTeamStrategicBuildingActor(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> Team, const struct FTeamStrategicBuildingHandle& SBAHandle);
	class AFortPvPBaseCornerstone* STATIC_GetTeamCornerstone(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> Team);
	int STATIC_GetRoundTimeAccumulated(class UObject* WorldContextObject);
	int STATIC_GetMatchLevel(class UObject* WorldContextObject);
	void STATIC_GetDifficultyRowNamesFromPvPRating(float InPvPRating, TArray<struct FName>* OutDifficultyRows);
	class AFortTeamInfoPvPBaseDestruction* STATIC_GetBaseDestructionTeamInfo(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> Team);
	int STATIC_GetBaseBuildingCost(class ABuildingActor* BuildingActor);
	void STATIC_FirePvPVictoryMissionEvent(class UObject* WorldContextObject, TEnumAsByte<EFortTeam> InWinningTeam);
	void STATIC_DestroyAllFortPickupsWithItem(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinitionToCheck);
};


// Class FortniteGame.FortPvPMission
// 0x0010 (0x06B0 - 0x06A0)
class AFortPvPMission : public AFortMission
{
public:
	class AFortPlayerStatePvP*                         WinningPlayerState;                                       // 0x06A0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AFortTeamInfo*                               WinningTeam;                                              // 0x06A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPMission");
		return ptr;
	}

};


// Class FortniteGame.FortPvPMission_3PtDomination
// 0x0028 (0x06D8 - 0x06B0)
class AFortPvPMission_3PtDomination : public AFortPvPMission
{
public:
	TArray<class ABuildingCapturePointActor*>          CapturePoints;                                            // 0x06B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<int>                                        TeamScores;                                               // 0x06C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	int                                                ScoreToWin;                                               // 0x06D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_3PtDomination");
		return ptr;
	}


	void CapturePointSetterHackTimer();
};


// Class FortniteGame.FortPvPMission_CTF
// 0x0018 (0x06C8 - 0x06B0)
class AFortPvPMission_CTF : public AFortPvPMission
{
public:
	TArray<int>                                        TeamCaptureTotals;                                        // 0x06B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	int                                                TotalCapturesToWin;                                       // 0x06C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_CTF");
		return ptr;
	}

};


// Class FortniteGame.FortPvPMission_EnemyBaseDestruction
// 0x0000 (0x06B0 - 0x06B0)
class AFortPvPMission_EnemyBaseDestruction : public AFortPvPMission
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPMission_EnemyBaseDestruction");
		return ptr;
	}


	class AFortPvPBaseCornerstone* GetCornerstoneForTeam(TEnumAsByte<EFortTeam> InTeam);
};


// Class FortniteGame.FortPvPMissionManager
// 0x0000 (0x0528 - 0x0528)
class AFortPvPMissionManager : public AFortMissionManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPMissionManager");
		return ptr;
	}

};


// Class FortniteGame.FortPvPObjective
// 0x0008 (0x0400 - 0x03F8)
class AFortPvPObjective : public AFortObjectiveBase
{
public:
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x03F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective");
		return ptr;
	}

};


// Class FortniteGame.FortPvPObjective_3PtDomination
// 0x0000 (0x0400 - 0x0400)
class AFortPvPObjective_3PtDomination : public AFortPvPObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_3PtDomination");
		return ptr;
	}

};


// Class FortniteGame.FortPvPObjective_CTF
// 0x0000 (0x0400 - 0x0400)
class AFortPvPObjective_CTF : public AFortPvPObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_CTF");
		return ptr;
	}

};


// Class FortniteGame.FortPvPObjective_EnemyBaseDestruction
// 0x0000 (0x0400 - 0x0400)
class AFortPvPObjective_EnemyBaseDestruction : public AFortPvPObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPObjective_EnemyBaseDestruction");
		return ptr;
	}

};


// Class FortniteGame.FortPvPPlayerStart
// 0x0010 (0x0368 - 0x0358)
class AFortPvPPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x0360(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	unsigned char                                      bDynamicStartLocation : 1;                                // 0x0364(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0365(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPPlayerStart");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_AllEnemies
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_AllEnemies : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllEnemies");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_AllGoals
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_AllGoals : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllGoals");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_AllPlayers
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_AllPlayers : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AllPlayers");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_AthenaCurrentSafeZoneCenter
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_AthenaCurrentSafeZoneCenter : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_AthenaCurrentSafeZoneCenter");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_BuildingRifts
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_BuildingRifts : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_BuildingRifts");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterFallbackTarget
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterFallbackTarget : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterFallbackTarget");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterGoalsCenterLocation : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterGoalsCenterLocation");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterGoalsOnGround
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterGoalsOnGround : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterGoalsOnGround");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterPrimaryAssignmentGoals : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterPrimaryAssignmentGoals");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterQueryActor
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterQueryActor : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterQueryActor");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterRandomDirection
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterRandomDirection : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterRandomDirection");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_EncounterTargetObjective
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_EncounterTargetObjective : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_EncounterTargetObjective");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_Goal
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_Goal : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_Goal");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_GoalProviderRootAssignmentGoals : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_GoalProviderRootAssignmentGoals");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_NearbyFriends
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_NearbyFriends : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_NearbyFriends");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_StWStormShield
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_StWStormShield : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_StWStormShield");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_TwoPointSolverPointA
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_TwoPointSolverPointA : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_TwoPointSolverPointA");
		return ptr;
	}

};


// Class FortniteGame.FortQueryContext_TwoPointSolverRotationA
// 0x0000 (0x0028 - 0x0028)
class UFortQueryContext_TwoPointSolverRotationA : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryContext_TwoPointSolverRotationA");
		return ptr;
	}

};


// Class FortniteGame.FortQueryData_CurvesAroundLine
// 0x0070 (0x00A0 - 0x0030)
class UFortQueryData_CurvesAroundLine : public UDataAsset
{
public:
	struct FFortPointsOnCurve                          PointsOnSideA;                                            // 0x0030(0x0038) (Edit, DisableEditOnInstance)
	struct FFortPointsOnCurve                          PointsOnSideB;                                            // 0x0068(0x0038) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryData_CurvesAroundLine");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_ActorsAround
// 0x0000 (0x00C0 - 0x00C0)
class UFortQueryGenerator_ActorsAround : public UEnvQueryGenerator_ActorsOfClass
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_ActorsAround");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_AssignmentGoal
// 0x0000 (0x0050 - 0x0050)
class UFortQueryGenerator_AssignmentGoal : public UEnvQueryGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_AssignmentGoal");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_BuildingRifts
// 0x0000 (0x0050 - 0x0050)
class UFortQueryGenerator_BuildingRifts : public UEnvQueryGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_BuildingRifts");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_Buildings
// 0x0158 (0x01A8 - 0x0050)
class UFortQueryGenerator_Buildings : public UEnvQueryGenerator
{
public:
	class UClass*                                      BuildingGridVolumeCenter;                                 // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAIDataProviderIntValue                     HorizontalBuildingCellRadius;                             // 0x0058(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderIntValue                     BuildingCellsAbove;                                       // 0x0088(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderIntValue                     BuildingCellsBelow;                                       // 0x00B8(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderBoolValue                    bIncludeWalls;                                            // 0x00E8(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderBoolValue                    bIncludeFloors;                                           // 0x0118(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderBoolValue                    bIncludeCenterCell;                                       // 0x0148(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderIntValue                     MaxBuildingActorsPerVolumeCenterToCollect;                // 0x0178(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_Buildings");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_BuildingsOnCachedPath
// 0x0098 (0x00E8 - 0x0050)
class UFortQueryGenerator_BuildingsOnCachedPath : public UEnvQueryGenerator
{
public:
	class UClass*                                      CachedPathSource;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAIDataProviderBoolValue                    bIncludeWalls;                                            // 0x0058(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderBoolValue                    bIncludeFloors;                                           // 0x0088(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderBoolValue                    bIncludeCenterCell;                                       // 0x00B8(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_BuildingsOnCachedPath");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_EncounterTargets
// 0x0000 (0x0050 - 0x0050)
class UFortQueryGenerator_EncounterTargets : public UEnvQueryGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_EncounterTargets");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_Enemies
// 0x0038 (0x0088 - 0x0050)
class UFortQueryGenerator_Enemies : public UEnvQueryGenerator
{
public:
	bool                                               bPerceivedEnemiesOnly;                                    // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSleepCapableAIUsePerceivedEnemiesOnly;                   // 0x0051(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreSleepingAIs;                                       // 0x0052(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
	struct FAIDataProviderFloatValue                   MaxTimeSincePerceived;                                    // 0x0058(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_Enemies");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_GoalOnCircle
// 0x0008 (0x01F0 - 0x01E8)
class UFortQueryGenerator_GoalOnCircle : public UEnvQueryGenerator_OnCircle
{
public:
	bool                                               bIncludeCenterActorInGeneratedGoals;                      // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_GoalOnCircle");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_HotspotSlots
// 0x0048 (0x0098 - 0x0050)
class UFortQueryGenerator_HotspotSlots : public UEnvQueryGenerator
{
public:
	class UClass*                                      GenerateAround;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAIDataProviderFloatValue                   Radius;                                                   // 0x0058(0x0030) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseTetherZone : 1;                                       // 0x0088(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class UClass*                                      HotspotClass;                                             // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_HotspotSlots");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_InfluenceMapPoints
// 0x0040 (0x00C0 - 0x0080)
class UFortQueryGenerator_InfluenceMapPoints : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue                     Density;                                                  // 0x0080(0x0030) (Edit, DisableEditOnInstance)
	unsigned char                                      bOnlyFlatSurface : 1;                                     // 0x00B0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	class UClass*                                      GenerateAround;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_InfluenceMapPoints");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_MissionPlacementActors
// 0x0048 (0x0098 - 0x0050)
class UFortQueryGenerator_MissionPlacementActors : public UEnvQueryGenerator
{
public:
	struct FGameplayTagQuery                           MissionPlacementActorTagQuery;                            // 0x0050(0x0048) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_MissionPlacementActors");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_PointsAroundLine
// 0x0090 (0x0110 - 0x0080)
class UFortQueryGenerator_PointsAroundLine : public UEnvQueryGenerator_ProjectedPoints
{
public:
	class UClass*                                      GenerateAround;                                           // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAIDataProviderIntValue                     MaxPointsPerClusterLocation;                              // 0x0088(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ClusterRadius;                                            // 0x00B8(0x0030) (Edit)
	unsigned char                                      UnknownData00[0x28];                                      // 0x00E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQueryGenerator_PointsAroundLine.CurvesAroundLineAsset

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsAroundLine");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_PointsFromNavGraph
// 0x0128 (0x01A8 - 0x0080)
class UFortQueryGenerator_PointsFromNavGraph : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderFloatValue                   MinPathDistance;                                          // 0x0080(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MaxPathDistance;                                          // 0x00B0(0x0030) (Edit)
	struct FAIDataProviderIntValue                     Density;                                                  // 0x00E0(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderFloatValue                   ExploreDirectionYaw;                                      // 0x0110(0x0030) (Edit, DisableEditOnInstance)
	struct FEnvDirection                               ExploreDirection;                                         // 0x0140(0x0020) (Edit, DisableEditOnInstance)
	float                                              ExploreAngleDot;                                          // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	struct FAIDataProviderFloatValue                   ExploreInnerRadius;                                       // 0x0168(0x0030) (Edit, DisableEditOnInstance)
	unsigned char                                      bLimitExplorationDirection : 1;                           // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bOnlyFlatSurface : 1;                                     // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseParameterizedDirection : 1;                           // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowTerrain : 1;                                  // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowBuildings : 1;                                // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowDropdown : 1;                                 // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowClimbup : 1;                                  // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowSmash : 1;                                    // 0x0198(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0199(0x0003) MISSED OFFSET
	TEnumAsByte<EFortPointsFromNavGraphGoalPathDistanceFilterOperator> PathDistanceFilterOperator;                               // 0x019C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x019D(0x0003) MISSED OFFSET
	class UClass*                                      GenerateAround;                                           // 0x01A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsFromNavGraph");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_PointsInVolume
// 0x0040 (0x0090 - 0x0050)
class UFortQueryGenerator_PointsInVolume : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue                     NumberOfPoints;                                           // 0x0050(0x0030) (Edit, DisableEditOnInstance)
	TEnumAsByte<EFortNamedNavmesh>                     NavMeshToUse;                                             // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	class UClass*                                      GenerateIn;                                               // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsInVolume");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid
// 0x0070 (0x00F0 - 0x0080)
class UFortQueryGenerator_PointsOnBuildingGrid : public UEnvQueryGenerator_ProjectedPoints
{
public:
	struct FAIDataProviderIntValue                     HorizontalGridSize;                                       // 0x0080(0x0030) (Edit)
	struct FAIDataProviderIntValue                     VerticalGridSize;                                         // 0x00B0(0x0030) (Edit)
	bool                                               bStartGridFromBottom;                                     // 0x00E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsePointInVerticalCenterOfCell;                          // 0x00E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00E2(0x0006) MISSED OFFSET
	class UClass*                                      GenerateAround;                                           // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_PointsOnBuildingGrid");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals
// 0x0040 (0x0090 - 0x0050)
class UFortQueryGenerator_SpecificAssignmentGoals : public UEnvQueryGenerator
{
public:
	struct FFortAIAssignmentIdentifier                 AssignmentIdentifier;                                     // 0x0050(0x0030) (Edit)
	class UFortAIAssignmentSettings*                   AssignmentSettings;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GoalProvider;                                             // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_SpecificAssignmentGoals");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_TerrainDonut
// 0x00D0 (0x0120 - 0x0050)
class UFortQueryGenerator_TerrainDonut : public UEnvQueryGenerator
{
public:
	class UClass*                                      Center;                                                   // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAIDataProviderFloatValue                   Radius;                                                   // 0x0058(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderFloatValue                   RadiusWidth;                                              // 0x0088(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderFloatValue                   SpacingArc;                                               // 0x00B8(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderIntValue                     NumRings;                                                 // 0x00E8(0x0030) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowTerrain : 1;                                  // 0x0118(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFilterAllowBuildings : 1;                                // 0x0118(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_TerrainDonut");
		return ptr;
	}

};


// Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors
// 0x0030 (0x0080 - 0x0050)
class UFortQueryGenerator_ValidSpawnRiftActors : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderIntValue                     NumAIForGroup;                                            // 0x0050(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryGenerator_ValidSpawnRiftActors");
		return ptr;
	}

};


// Class FortniteGame.FortQueryItemType_Goal
// 0x0000 (0x0030 - 0x0030)
class UFortQueryItemType_Goal : public UEnvQueryItemType_ActorBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryItemType_Goal");
		return ptr;
	}

};


// Class FortniteGame.FortQueryItemType_PointOrSlot
// 0x0000 (0x0030 - 0x0030)
class UFortQueryItemType_PointOrSlot : public UEnvQueryItemType_Point
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryItemType_PointOrSlot");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalBase
// 0x0018 (0x01D8 - 0x01C0)
class UFortQueryTest_GoalBase : public UEnvQueryTest
{
public:
	unsigned char                                      bScoreEnemies : 1;                                        // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bScoreEncounterGoals : 1;                                 // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bScoreWorldGoals : 1;                                     // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bScoreSpecificAssignments : 1;                            // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	TArray<struct FFortAIAssignmentIdentifier>         AssignmentIDs;                                            // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalBase");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_AssignmentTypeInterest
// 0x0180 (0x0358 - 0x01D8)
class UFortQueryTest_AssignmentTypeInterest : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   InvalidTypeStartInterest;                                 // 0x01D8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   InvalidTypeEndInterest;                                   // 0x0208(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   InvalidTypeTimeBeforeLerp;                                // 0x0238(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   InvalidTypeLerpDuration;                                  // 0x0268(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ValidTypeStartInterest;                                   // 0x0298(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ValidTypeEndInterest;                                     // 0x02C8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ValidTypeTimeBeforeLerp;                                  // 0x02F8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ValidTypeLerpDuration;                                    // 0x0328(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_AssignmentTypeInterest");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_BuildingCriteria
// 0x0300 (0x04D8 - 0x01D8)
class UFortQueryTest_BuildingCriteria : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   ScoreForGroundSupportedFloor;                             // 0x01D8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ScoreForBeingGroundSupported;                             // 0x0208(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ScoreForTraps;                                            // 0x0238(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ScoreForWalls;                                            // 0x0268(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ScoreForNavigableOpening;                                 // 0x0298(0x0030) (Edit)
	struct FFortAIAssignmentIdentifier                 RootAssignmentID;                                         // 0x02C8(0x0030) (Edit)
	struct FAIDataProviderBoolValue                    bPreferCloserToRootAssignment;                            // 0x02F8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ScoreForDistanceFromClosestRootAssignmentGoal;            // 0x0328(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MinDistanceForDistanceScoring;                            // 0x0358(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MaxDistanceForDistanceScoring;                            // 0x0388(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MaxHealthScore;                                           // 0x03B8(0x0030) (Edit)
	struct FAIDataProviderBoolValue                    bPreferHigherHealth;                                      // 0x03E8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ClampMaxHealthValue;                                      // 0x0418(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ClampMinHealthValue;                                      // 0x0448(0x0030) (Edit)
	struct FAIDataProviderBoolValue                    bPreferHigherHealthPercentage;                            // 0x0478(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MaxHealthPercentageScore;                                 // 0x04A8(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_BuildingCriteria");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_CanAttackTarget
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_CanAttackTarget : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanAttackTarget");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_CanBeDamaged
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_CanBeDamaged : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanBeDamaged");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility
// 0x0030 (0x01F0 - 0x01C0)
class UFortQueryTest_CanHitWithGameplayAbility : public UEnvQueryTest
{
public:
	class UClass*                                      AIsUsingAbility;                                          // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      AbilityTargets;                                           // 0x01C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTagContainer                       GameplayAbilityTag;                                       // 0x01D0(0x0020) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_CanHitWithGameplayAbility");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_DecoyDistance
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_DecoyDistance : public UEnvQueryTest
{
public:
	class UClass*                                      DistanceTo;                                               // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_DecoyDistance");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GameplayTagsPerDifficulty
// 0x0010 (0x01D0 - 0x01C0)
class UFortQueryTest_GameplayTagsPerDifficulty : public UEnvQueryTest
{
public:
	TArray<struct FFortGameplayTagQueryPerDifficulty>  TagQueriesPerDifficulty;                                  // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GameplayTagsPerDifficulty");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalActorDot
// 0x0018 (0x01F0 - 0x01D8)
class UFortQueryTest_GoalActorDot : public UFortQueryTest_GoalBase
{
public:
	class UClass*                                      LineATo;                                                  // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      LineBTo;                                                  // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFortTestGoalActorDot                              TestMode;                                                 // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAbsoluteValue;                                           // 0x01E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01EA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalActorDot");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalDiscouragement
// 0x0030 (0x0208 - 0x01D8)
class UFortQueryTest_GoalDiscouragement : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderBoolValue                    DisableDiscouragementWhenUndermining;                     // 0x01D8(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDiscouragement");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalDistance
// 0x0018 (0x01F0 - 0x01D8)
class UFortQueryTest_GoalDistance : public UFortQueryTest_GoalBase
{
public:
	EDistanceMode                                      DistanceMode;                                             // 0x01D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	class UClass*                                      DistanceTo;                                               // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEnvTestDistance>                      TestMode;                                                 // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDistance");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalDistanceRanges
// 0x0028 (0x0200 - 0x01D8)
class UFortQueryTest_GoalDistanceRanges : public UFortQueryTest_GoalBase
{
public:
	EDistanceMode                                      DistanceMode;                                             // 0x01D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	class UClass*                                      DistanceTo;                                               // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEnvTestDistance>                      ScreeningTestMode;                                        // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEnvTestDistance>                      TestMode;                                                 // 0x01E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x01EA(0x0006) MISSED OFFSET
	TArray<struct FGoalDistanceData>                   GoalDistanceDataRanges;                                   // 0x01F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalDistanceRanges");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_GoalFrustrationDiscouragement : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalFrustrationDiscouragement");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalMarkedByPlayer
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_GoalMarkedByPlayer : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalMarkedByPlayer");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned
// 0x0008 (0x01E0 - 0x01D8)
class UFortQueryTest_GoalNumberOfAIAssigned : public UFortQueryTest_GoalBase
{
public:
	ECountAIAssignedToType                             TypeOfMatchToCount;                                       // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalNumberOfAIAssigned");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalOverallDamageCaused
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_GoalOverallDamageCaused : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalOverallDamageCaused");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalStickiness
// 0x00F0 (0x02C8 - 0x01D8)
class UFortQueryTest_GoalStickiness : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   StartValueForGoal;                                        // 0x01D8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   EndValueForGoal;                                          // 0x0208(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   TimeBeforeValueLerp;                                      // 0x0238(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   ValueLerpDuration;                                        // 0x0268(0x0030) (Edit)
	struct FAIDataProviderBoolValue                    ApplyStickinessToAllGoalsWithSameActor;                   // 0x0298(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalStickiness");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalType
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_GoalType : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalType");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_GoalWithinTetheredBounds
// 0x0000 (0x01D8 - 0x01D8)
class UFortQueryTest_GoalWithinTetheredBounds : public UFortQueryTest_GoalBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_GoalWithinTetheredBounds");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_HasNearbyBuildings
// 0x0010 (0x01D0 - 0x01C0)
class UFortQueryTest_HasNearbyBuildings : public UEnvQueryTest
{
public:
	unsigned char                                      bIncludeCenter : 1;                                       // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIncludeFloors : 1;                                       // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIncludeFloorsAbove : 1;                                  // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIncludeWalls : 1;                                        // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	int                                                ExtentXY;                                                 // 0x01C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExtentZ;                                                  // 0x01C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_HasNearbyBuildings");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_HasNearbyEncounterGoals
// 0x0038 (0x01F8 - 0x01C0)
class UFortQueryTest_HasNearbyEncounterGoals : public UEnvQueryTest
{
public:
	unsigned char                                      bOnlyActiveEncounters : 1;                                // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	struct FAIDataProviderFloatValue                   TestDistance;                                             // 0x01C8(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_HasNearbyEncounterGoals");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_HotspotSlotOrientation
// 0x0038 (0x01F8 - 0x01C0)
class UFortQueryTest_HotspotSlotOrientation : public UEnvQueryTest
{
public:
	class UClass*                                      FaceToward;                                               // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAIDataProviderFloatValue                   DotThreshold;                                             // 0x01C8(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_HotspotSlotOrientation");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_HotspotSlotState
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_HotspotSlotState : public UEnvQueryTest
{
public:
	EAIHotSpotSlot                                     SlotState;                                                // 0x01C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_HotspotSlotState");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_InfluenceScore
// 0x0000 (0x01C0 - 0x01C0)
class UFortQueryTest_InfluenceScore : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_InfluenceScore");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_InsideAthenaSafeZone
// 0x0030 (0x01F0 - 0x01C0)
class UFortQueryTest_InsideAthenaSafeZone : public UEnvQueryTest
{
public:
	struct FAIDataProviderIntValue                     SafeZoneIndex;                                            // 0x01C0(0x0030) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_InsideAthenaSafeZone");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_InsideBuilding
// 0x0000 (0x01C0 - 0x01C0)
class UFortQueryTest_InsideBuilding : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_InsideBuilding");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_InsideWater
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_InsideWater : public UEnvQueryTest
{
public:
	float                                              TestRadius;                                               // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_InsideWater");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_IsCloseToHotspotSlot
// 0x0040 (0x0200 - 0x01C0)
class UFortQueryTest_IsCloseToHotspotSlot : public UEnvQueryTest
{
public:
	class UClass*                                      HotspotClass;                                             // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAIDataProviderFloatValue                   Radius;                                                   // 0x01C8(0x0030) (Edit, DisableEditOnInstance)
	bool                                               bIgnoreItemsWithSlotData;                                 // 0x01F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_IsCloseToHotspotSlot");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_IsCloseToPatrolWard
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_IsCloseToPatrolWard : public UEnvQueryTest
{
public:
	EWardAffectType                                    WardEffectTypeFilter;                                     // 0x01C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_IsCloseToPatrolWard");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_IsGoalForAssignment
// 0x0038 (0x01F8 - 0x01C0)
class UFortQueryTest_IsGoalForAssignment : public UEnvQueryTest
{
public:
	bool                                               bRetrieveRootAssignmentFromOwner;                         // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	struct FFortAIAssignmentIdentifier                 RootAssignmentID;                                         // 0x01C8(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_IsGoalForAssignment");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_MissionGameplayTagMatch
// 0x0068 (0x0228 - 0x01C0)
class UFortQueryTest_MissionGameplayTagMatch : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                           MissionPlacementActorTagQuery;                            // 0x01C0(0x0048) (Edit)
	struct FGameplayTagContainer                       GameplayTagsToMatch;                                      // 0x0208(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_MissionGameplayTagMatch");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_MissionSameMap
// 0x0048 (0x0208 - 0x01C0)
class UFortQueryTest_MissionSameMap : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                           MissionPlacementActorTagQuery;                            // 0x01C0(0x0048) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_MissionSameMap");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_NavGraphDistance
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_NavGraphDistance : public UEnvQueryTest
{
public:
	class UClass*                                      DistanceTo;                                               // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_NavGraphDistance");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_OnFlatSurface
// 0x0010 (0x01D0 - 0x01C0)
class UFortQueryTest_OnFlatSurface : public UEnvQueryTest
{
public:
	float                                              Radius;                                                   // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ToleranceZ;                                               // 0x01C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TraceOffsetUp;                                            // 0x01C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TraceOffsetDown;                                          // 0x01CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_OnFlatSurface");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_PerceptionAge
// 0x0010 (0x01D0 - 0x01C0)
class UFortQueryTest_PerceptionAge : public UEnvQueryTest
{
public:
	TEnumAsByte<ECorePerceptionTypes>                  Sense;                                                    // 0x01C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UClass*                                      SenseClass;                                               // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionAge");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_PerceptionAll
// 0x0180 (0x0358 - 0x01D8)
class UFortQueryTest_PerceptionAll : public UFortQueryTest_GoalBase
{
public:
	struct FAIDataProviderFloatValue                   SenseScores[0x6];                                         // 0x01D8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MinSenseAge;                                              // 0x02F8(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   MaxSenseAge;                                              // 0x0328(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionAll");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_PerceptionExists
// 0x0010 (0x01D0 - 0x01C0)
class UFortQueryTest_PerceptionExists : public UEnvQueryTest
{
public:
	TEnumAsByte<ECorePerceptionTypes>                  Sense;                                                    // 0x01C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UClass*                                      SenseClass;                                               // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PerceptionExists");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_PrimaryAssignment
// 0x00F8 (0x02D0 - 0x01D8)
class UFortQueryTest_PrimaryAssignment : public UFortQueryTest_GoalBase
{
public:
	bool                                               bUseItemActorLocation;                                    // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	struct FAIDataProviderFloatValue                   DistanceClose;                                            // 0x01E0(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   DistanceFar;                                              // 0x0210(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   PercentValueClose;                                        // 0x0240(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   PercentValueRegular;                                      // 0x0270(0x0030) (Edit)
	struct FAIDataProviderFloatValue                   PercentValueFar;                                          // 0x02A0(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_PrimaryAssignment");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTest_Random
// 0x0008 (0x01C8 - 0x01C0)
class UFortQueryTest_Random : public UEnvQueryTest
{
public:
	unsigned char                                      bUseRandomSeedForAI : 1;                                  // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseRandomSeedForOthers : 1;                              // 0x01C0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTest_Random");
		return ptr;
	}

};


// Class FortniteGame.FortQueryTwoPointSolver
// 0x00C8 (0x00F0 - 0x0028)
class UFortQueryTwoPointSolver : public UObject
{
public:
	class UEnvQuery*                                   QueryPointA;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UEnvQuery*                                   QueryPointB;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FEnvNamedValue>                      QueryParamsA;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FEnvNamedValue>                      QueryParamsB;                                             // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnFinished;                                               // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	ETwoPointSolverRotationA                           RotationMode;                                             // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	struct FRotator                                    MinRotationOffset;                                        // 0x007C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FRotator                                    MaxRotationOffset;                                        // 0x0088(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      bUseNegativeAngleOffsets : 1;                             // 0x0094(0x0001) (Edit)
	unsigned char                                      bUsePositiveAngleOffsets : 1;                             // 0x0094(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x4B];                                      // 0x0095(0x004B) MISSED OFFSET
	class UFortAISystem*                               AISys;                                                    // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UObject*                                     CachedQuerier;                                            // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQueryTwoPointSolver");
		return ptr;
	}


	void Start(class UObject* Querier);
	void SkipToNextPointA();
	void SetCustomRotationA(const struct FRotator& Rotation);
	void OnCustomRotationMode(const struct FVector& InPointA, const struct FVector& Querier);
	struct FRotator GetRandomRotationOffset();
	void AddNamedFloatParamB(const struct FName& ParamName, float Value);
	void AddNamedFloatParamA(const struct FName& ParamName, float Value);
};


// Class FortniteGame.FortQuestItem
// 0x00C8 (0x01A8 - 0x00E0)
class UFortQuestItem : public UFortAccountItem
{
public:
	TArray<class UFortQuestObjectiveInfo*>             Objectives;                                               // 0x00E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                LastNotifiedQuestCount;                                   // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortQuestState                                    quest_state;                                              // 0x00F4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               sent_new_notification;                                    // 0x00F5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00F6(0x0002) MISSED OFFSET
	struct FDateTime                                   last_state_change_time;                                   // 0x00F8(0x0008)
	TMap<struct FName, int>                            CompletionCounts;                                         // 0x0100(0x0050) (ZeroConstructor, Transient)
	bool                                               bSentCompleteNotification;                                // 0x0150(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllObjectivesComplete;                                   // 0x0151(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0152(0x0006) MISSED OFFSET
	struct FString                                     twitch_broadcaster_channel_id;                            // 0x0158(0x0010) (ZeroConstructor, Transient)
	int                                                CurrentStage;                                             // 0x0168(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	struct FDateTime                                   expiry_time;                                              // 0x0170(0x0008)
	struct FFortMissionInstancedConfigData             InstancedConfigData;                                      // 0x0178(0x0010) (Transient)
	struct FString                                     challenge_linked_quest_given;                             // 0x0188(0x0010) (ZeroConstructor, Transient)
	struct FString                                     challenge_linked_quest_parent;                            // 0x0198(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestItem");
		return ptr;
	}


	bool ShouldDisplayOverallQuestInformation();
	bool IsVisibleToUser(bool bAllowClaimedQuestsToBeVisible);
	bool IsQuestPinned();
	bool IsQuestInProgress();
	bool IsObjectiveWithNameInProgress(const struct FName& BackendName);
	bool IsObjectiveInProgress(const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsIncludedInCategories();
	bool HasVisibleRewards();
	bool HasQuestExpired(const struct FDateTime& UtcNow);
	bool HasCompletedQuest();
	bool HasCompletedObjectiveWithName(const struct FName& BackendName);
	bool HasCompletedObjective(const struct FDataTableRowHandle& ObjectiveStatHandle);
	struct FString GetTwitchBroadcasterChannelId();
	struct FFortRewardInfo GetRewardInfo();
	struct FTimespan GetRemainingExpirationDuration(const struct FDateTime& UtcNow);
	EFortQuestState GetQuestState();
	class UFortQuestItemDefinition* GetQuestDefinitionBP();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewSelectableRewards(int RewardIndex);
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewRewards();
	TArray<struct FFortItemInstanceQuantityPair> GetPreviewAllSelectableRewards();
	float GetPercentageComplete();
	class UFortQuestObjectiveInfo* GetObjectiveInfo(const struct FDataTableRowHandle& ObjectiveStatHandle);
	int GetNumObjectivesComplete();
	class UFortMissionConfigData* GetMissionConfigData(const struct FGameplayTag& InBucketTag);
	struct FFortRewardInfo GetChallengeChainRewardInfo(bool bGetCurrentChainQuestOnly);
	struct FDateTime GetBroadcasterGrantWindowEnd();
	void GetAchievedCount(int* OutTotalAchievedCount, int* OutTotalRequiredCount);
	bool DoesQuestExpire();
	bool CanPinQuest();
};


// Class FortniteGame.FortQuestItemDefinition
// 0x0210 (0x05A0 - 0x0390)
class UFortQuestItemDefinition : public UFortAccountItemDefinition
{
public:
	EFortQuestType                                     QuestType;                                                // 0x0390(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EQuestVisualStyle                                  VisualStyle;                                              // 0x0391(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0392(0x0002) MISSED OFFSET
	int                                                ExpirationDuration;                                       // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortItemQuantityPair>               Rewards;                                                  // 0x0398(0x0010) (Edit, ZeroConstructor)
	class UDataTable*                                  RewardsTable;                                             // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x03B0(0x0038) MISSED OFFSET
	TArray<struct FFortHiddenRewardQuantityPair>       HiddenRewards;                                            // 0x03E8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFortMcpQuestRewardInfo>             SelectableRewards;                                        // 0x03F8(0x0010) (Edit, ZeroConstructor)
	bool                                               bShouldDisplayOverallQuestInformation;                    // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	TArray<struct FFortMcpQuestObjectiveInfo>          Objectives;                                               // 0x0410(0x0010) (Edit, ZeroConstructor)
	bool                                               bAthenaUpdateObjectiveOncePerMatch;                       // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAthenaMustCompleteInSingleMatch;                         // 0x0421(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0422(0x0002) MISSED OFFSET
	int                                                ObjectiveCompletionCount;                                 // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       Prerequisites;                                            // 0x0428(0x0020) (Edit)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0448(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQuestItemDefinition.PrerequisiteQuest
	struct FDataTableRowHandle                         PrerequisiteObjective;                                    // 0x0470(0x0010) (Edit)
	float                                              Weight;                                                   // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint16_t                                           GranterWindowPeriodMinutes;                               // 0x0484(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	uint16_t                                           GranterCooldownPeriodSeconds;                             // 0x0486(0x0002) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsStreamingRequired;                                      // 0x0488(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0489(0x0007) MISSED OFFSET
	struct FDataTableRowHandle                         Category;                                                 // 0x0490(0x0010) (Edit)
	unsigned char                                      UnknownData06[0x28];                                      // 0x04A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQuestItemDefinition.IntroConversation
	unsigned char                                      UnknownData07[0x28];                                      // 0x04C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQuestItemDefinition.SelectRewardsConversation
	unsigned char                                      UnknownData08[0x28];                                      // 0x04F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQuestItemDefinition.ClaimConversation
	struct FText                                       RewardHeaderText;                                         // 0x0518(0x0018) (Edit)
	struct FText                                       RewardDescription;                                        // 0x0530(0x0018) (Edit)
	struct FText                                       CompletionText;                                           // 0x0548(0x0018) (Edit)
	bool                                               bExpandsStormShield;                                      // 0x0560(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHidden;                                                  // 0x0561(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludedInCategories;                                    // 0x0562(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoLaunch;                                              // 0x0563(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDeprecated;                                              // 0x0564(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0565(0x0003) MISSED OFFSET
	TArray<struct FFortQuestMissionCreationContext>    MissionCreationContexts;                                  // 0x0568(0x0010) (Edit, ZeroConstructor)
	struct FFortMissionConfigDataParams                MissionConfigMetadata;                                    // 0x0578(0x0010) (Edit, DisableEditOnInstance)
	bool                                               bDisableBackendConditionEvaluation;                       // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0589(0x0003) MISSED OFFSET
	uint32_t                                           ClaimPriority;                                            // 0x058C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowTileMatching;                                       // 0x0590(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowPlayNowNavigation;                                  // 0x0591(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAllowMissionAlertMatchesBypassingTileRequirements;       // 0x0592(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x1];                                       // 0x0593(0x0001) MISSED OFFSET
	int                                                SortPriority;                                             // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTutorialQuest;                                           // 0x0598(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0599(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestItemDefinition");
		return ptr;
	}


	bool ShouldDisplayOverallQuestInformation();
	bool ShouldAutoLaunch();
	bool IsTutorialQuest();
	bool IsIncludedInCategories();
	bool IsHidden();
	bool IsDeprecated();
	float GetWeight();
	EQuestVisualStyle GetVisualStyle();
	class UFortConversation* GetSelectRewardsConversation();
	TArray<struct FFortMcpQuestRewardInfo> GetSelectableRewards_BP();
	EFortQuestRewardType GetRewardType();
	TArray<struct FFortItemQuantityPair> GetRewards_BP();
	struct FFortRewardInfo GetRewardInfo_BP();
	struct FText GetRewardHeaderText();
	struct FText GetRewardDescription();
	EFortQuestType GetQuestType();
	class UFortQuestItemDefinition* GetPrerequisiteQuest();
	struct FDataTableRowHandle GetPrerequisiteObjective();
	int GetPartialObjectiveCompletionCount();
	TArray<struct FFortMcpQuestObjectiveInfo> GetObjectives_BP();
	int GetObjectiveNeededToComplete();
	class UFortConversation* GetIntroConversation();
	TArray<struct FFortHiddenRewardQuantityPair> GetHiddenRewards_BP();
	struct FText GetCompletionText();
	class UFortConversation* GetClaimConversation();
	struct FFortRewardInfo GetChallengeChainRewardInfo(bool bGetAllQuestRewards);
	struct FDataTableRowHandle GetCategory();
	bool ExpandsStormShield();
	bool AthenaUpdateObjectiveOncePerMatch();
	bool AthenaObjectiveMustBeCompletedInASingleMatch();
	bool AllowsTileMatching();
	bool AllowsPlayNowNavigation();
};


// Class FortniteGame.FortQuestItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortQuestItemDefinitionTooltip : public UFortItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortQuestCategory
// 0x0060 (0x0088 - 0x0028)
class UFortQuestCategory : public UObject
{
public:
	struct FText                                       Name;                                                     // 0x0028(0x0018) (BlueprintVisible, BlueprintReadOnly)
	TArray<class UFortQuestItem*>                      CurrentQuests;                                            // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bExpanded;                                                // 0x0050(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FFortCategoryTableRow                       CategoryInfo;                                             // 0x0058(0x0028)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0080(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestCategory");
		return ptr;
	}


	bool HasUnseenQuests();
	int GetUnseenQuestCount();
};


// Class FortniteGame.FortQuestManager
// 0x01F8 (0x0220 - 0x0028)
class UFortQuestManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnQuestsUpdated;                                          // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnQuestsCompleted;                                        // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnQuestsGranted;                                          // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnQuestRewardClaimed;                                     // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnQuestSeen;                                              // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNoQuestRewardsToClaim;                                  // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPinnedQuestsChanged;                                    // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDailyQuestRerolled;                                     // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDisplayDynamicQuestUpdate;                              // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UFortQuestItem*>                      CurrentQuests;                                            // 0x00B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<struct FName, class UFortQuestCategory*>      CurrentCategorizedQuestsMap;                              // 0x00C8(0x0050) (ZeroConstructor)
	TArray<struct FFortQuestObjectiveCompletion>       PendingChanges;                                           // 0x0118(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0128(0x0028) MISSED OFFSET
	TWeakObjectPtr<class UFortMcpProfileSubgame>       BoundProfile;                                             // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC8];                                      // 0x0158(0x00C8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestManager");
		return ptr;
	}


	bool SetQuestPinned(class UFortQuestItem* Quest, bool bEnabled);
	void SendCustomStatEvent(const struct FDataTableRowHandle& ObjectiveStat, int Count, bool bForceFlush);
	void RerollDailyQuest(class UFortQuestItem* QuestToDiscard);
	struct FString PopNextPendingFeatureUnlock();
	void MarkQuestsSeen(bool bOnlyMarkPendingSeenQuests);
	void MarkQuestSeen(class UFortQuestItem* Quest);
	bool IsQuestInProgress(class UFortQuestItemDefinition* Definition);
	bool IsPendingFeatureUnlockNotification();
	bool IsObjectiveWithNameInProgress(class UFortQuestItemDefinition* Definition, const struct FName& BackendName);
	bool IsObjectiveInProgress(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	bool IsMainQuest(class UFortQuestItem* Quest);
	bool IsCurrentTutorialQuest(class UFortQuestItem* Quest);
	bool HasUnseenQuests();
	bool HasUnsavedPrimaryMissionProgress();
	bool HasQuestBeenSeenLocally(class UFortQuestItem* Quest);
	bool HasCompletedQuest(class UFortQuestItemDefinition* Definition);
	bool HasCompletedObjectiveWithName(class UFortQuestItemDefinition* Definition, const struct FName& BackendName);
	bool HasCompletedObjective(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GrantFirstDailyQuest();
	int GetUnseenQuestCount();
	void GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags);
	int GetRemainingDailyQuestRerolls();
	class UFortQuestItem* GetQuestWithDefinition(class UFortQuestItemDefinition* Definition);
	class UFortQuestCategory* GetQuestCategory(class UFortQuestItem* QuestItem);
	void GetPinnedQuests(TArray<class UFortQuestItem*>* OutPinnedQuestItems);
	int GetNumCompletedObjectives(class UFortQuestItemDefinition* Definition);
	class UFortQuestItem* GetNextUnseenQuest(EFortQuestType QuestType);
	class UFortQuestItem* GetMainQuest();
	void GetCurrentQuestsCategories(TArray<class UFortQuestCategory*>* Categories);
	void GetCurrentQuests(TArray<class UFortQuestItem*>* OutCurrentQuests);
	int GetCurrentObjectiveCount(class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle);
	void GetCompletedQuests(TArray<class UFortQuestItem*>* OutCompletedQuests);
	class UFortQuestItem* GetBroadcasterQuestWithOpenWindow();
	void GetBattlePassQuestsInProgress(int MaxCount, class UFortItemDefinition* RequiredReward, TArray<class UFortQuestItem*>* OutQuests, bool* bAllQuestsComplete);
	void ForceTriggerQuestsUpdated();
	void ClaimSelectedQuestReward(class UFortQuestItem* Quest, int RewardIndex);
	void ClaimQuestReward(class UFortQuestItem* Quest);
	void ClaimNextCompletedQuestReward(EFortQuestType QuestType);
	bool CanProgressQuestInCurrentZone(class UFortQuestItemDefinition* QuestItemDefinition);
	bool AreTutorialQuestsActive();
};


// Class FortniteGame.FortQuestObjectiveInfo
// 0x0088 (0x00B0 - 0x0028)
class UFortQuestObjectiveInfo : public UObject
{
public:
	struct FName                                       BackendName;                                              // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortQuestObjectiveStatEvent                       StatEvent;                                                // 0x0030(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortQuestObjectiveItemEvent                       ItemEvent;                                                // 0x0031(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0032(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortQuestObjectiveInfo.ItemReference
	struct FText                                       Description;                                              // 0x0060(0x0018) (BlueprintVisible, BlueprintReadOnly)
	struct FText                                       HudShortDescription;                                      // 0x0078(0x0018) (BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  HudIcon;                                                  // 0x0090(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AchievedCount;                                            // 0x0098(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RequiredCount;                                            // 0x009C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                LastNotifiedCount;                                        // 0x00A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bVisible;                                                 // 0x00A4(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bActive;                                                  // 0x00A5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xA];                                       // 0x00A6(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestObjectiveInfo");
		return ptr;
	}


	bool IsVisibleToUser();
	bool IsInProgress();
	bool IsActive();
	bool HasCompleted();
	class UFortQuestItem* GetOwningQuest();
	void DisplayDynamicQuestUpdate();
};


// Class FortniteGame.FortQuestObjectiveTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortQuestObjectiveTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuestObjectiveTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortQuickBars
// 0x02F0 (0x0618 - 0x0328)
class AFortQuickBars : public AActor
{
public:
	struct FQuickBar                                   PrimaryQuickBar;                                          // 0x0328(0x0090) (Net)
	struct FQuickBar                                   PrimaryQuickBar_Previous;                                 // 0x03B8(0x0090) (Transient)
	struct FQuickBar                                   SecondaryQuickBar;                                        // 0x0448(0x0090) (Net)
	struct FQuickBar                                   SecondaryQuickBar_Previous;                               // 0x04D8(0x0090) (Transient)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0568(0x0068) MISSED OFFSET
	TArray<class UFortWorldItem*>                      AllCachedTraps;                                           // 0x05D0(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortWorldItem*>                      CachedFloorTraps;                                         // 0x05E0(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortWorldItem*>                      CachedWallTraps;                                          // 0x05F0(0x0010) (ZeroConstructor, Transient)
	TArray<class UFortWorldItem*>                      CachedCeilingTraps;                                       // 0x0600(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0610(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuickBars");
		return ptr;
	}


	void ServerSwapItemsInternal(EFortQuickBars QuickBarA, int SlotIndexA, EFortQuickBars QuickBarB, int SlotIndexB);
	void ServerRemoveItemInternal(const struct FGuid& Item, bool bFindReplacement, bool bForce);
	void ServerEnableSlot(EFortQuickBars InQuickBar, int SlotIndex);
	void ServerDisableSlot(EFortQuickBars InQuickBar, int SlotIndex);
	void ServerAddItemInternal(const struct FGuid& Item, EFortQuickBars InQuickBar, int Slot);
	void ServerActivateSlotInternal(EFortQuickBars InQuickBar, int Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot, bool bForceExecution);
	void OnRep_SecondaryQuickBar();
	void OnRep_PrimaryQuickBar();
	void EmptySlot(EFortQuickBars InQuickBar, int SlotIndex);
};


// Class FortniteGame.FortQuickBarsAthena
// 0x0000 (0x0618 - 0x0618)
class AFortQuickBarsAthena : public AFortQuickBars
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuickBarsAthena");
		return ptr;
	}

};


// Class FortniteGame.FortQuotaItem
// 0x0030 (0x0110 - 0x00E0)
class UFortQuotaItem : public UFortAccountItem
{
public:
	float                                              current_value;                                            // 0x00E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FString                                     last_mod_time;                                            // 0x00E8(0x0010) (ZeroConstructor)
	int                                                units_per_minute_recharge;                                // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                max_quota;                                                // 0x00FC(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                recharge_delay_minutes;                                   // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0104(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuotaItem");
		return ptr;
	}


	int GetCurrentQuotaAmount();
};


// Class FortniteGame.FortQuotaItemDefinition
// 0x0010 (0x03A0 - 0x0390)
class UFortQuotaItemDefinition : public UFortAccountItemDefinition
{
public:
	float                                              StartingValue;                                            // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaximumValue;                                             // 0x0394(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnitsPerMinuteRechargeRate;                               // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RechargeDelayMinutes;                                     // 0x039C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortQuotaItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortRarityData
// 0x0500 (0x0530 - 0x0030)
class UFortRarityData : public UDataAsset
{
public:
	struct FFortRarityItemData                         RarityCollection[0xA];                                    // 0x0030(0x0080) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRarityData");
		return ptr;
	}


	struct FFortRarityItemData STATIC_BPGetRarityData(EFortRarity Rarity);
};


// Class FortniteGame.FortHealthRegenInterface
// 0x0000 (0x0028 - 0x0028)
class UFortHealthRegenInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortHealthRegenInterface");
		return ptr;
	}


	class UClass* GetShieldRegenGameplayEffectClass();
	class UGameplayEffect* GetShieldRegenGameplayEffect();
	class UGameplayEffect* GetShieldRegenDelayGameplayEffect();
	class UClass* GetHealthRegenGameplayEffectClass();
	class UGameplayEffect* GetHealthRegenGameplayEffect();
	class UGameplayEffect* GetHealthRegenDelayGameplayEffect();
};


// Class FortniteGame.FortRegenHealthSet
// 0x00D8 (0x03A0 - 0x02C8)
class UFortRegenHealthSet : public UFortHealthSet
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C8(0x0008) MISSED OFFSET
	struct FFortGameplayAttributeData                  HealthRegenRate;                                          // 0x02D0(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  HealthRegenDelay;                                         // 0x02F0(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  HealthRegenThreshold;                                     // 0x0310(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ShieldRegenRate;                                          // 0x0330(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ShieldRegenDelay;                                         // 0x0350(0x0020) (BlueprintVisible, Net)
	struct FFortGameplayAttributeData                  ShieldRegenThreshold;                                     // 0x0370(0x0020) (BlueprintVisible, Net)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0390(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRegenHealthSet");
		return ptr;
	}

};


// Class FortniteGame.FortRegionInfo
// 0x00F8 (0x0128 - 0x0030)
class UFortRegionInfo : public UDataAsset
{
public:
	struct FText                                       RegionName;                                               // 0x0030(0x0018) (Edit, DisableEditOnInstance)
	struct FGameplayTagContainer                       RegionTags;                                               // 0x0048(0x0020) (Edit, DisableEditOnInstance)
	struct FFortRequirementsInfo                       Requirements;                                             // 0x0068(0x0058) (Edit, DisableEditOnInstance)
	TArray<struct FFortMissionAlertRequirementsInfo>   MissionAlertRequirements;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FFortTheaterMapMissionData                  MissionData;                                              // 0x00D0(0x0030) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortRegionInfo.RegionThemeIcon

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRegionInfo");
		return ptr;
	}

};


// Class FortniteGame.FortRegisteredPlayerInfo
// 0x02E8 (0x0310 - 0x0028)
class UFortRegisteredPlayerInfo : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnAbilitySystemActorChangedChangedDelegate;               // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FUniqueNetIdRepl                            PlayerID;                                                 // 0x0038(0x0028)
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (ZeroConstructor)
	struct FUniqueNetIdRepl                            PartyLeaderId;                                            // 0x0070(0x0028)
	struct FString                                     Platform;                                                 // 0x0098(0x0010) (ZeroConstructor)
	TEnumAsByte<EFortTeam>                             TeamAssignment;                                           // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                PlayerIndex;                                              // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsInitialPlayer;                                         // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bShouldLockProfile;                                       // 0x00B1(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bFailedToLockProfile;                                     // 0x00B2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00B3(0x0001) MISSED OFFSET
	struct FGuid                                       UnregistrationSaveGUID;                                   // 0x00B4(0x0010) (IsPlainOldData)
	ERegisteredPlayerUnregistrationStatus              UnregistrationStatus;                                     // 0x00C4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	struct FTimerHandle                                UnregisterFailsafeTimerHandle;                            // 0x00C8(0x0008)
	struct FTimerHandle                                PollForDedicatedServerReadyToShutdownTimerHandle;         // 0x00D0(0x0008)
	class UFortMcpProfileCommonPublic*                 CommonPublicProfile;                                      // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileCommonCore*                   CommonCoreProfile;                                        // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileCampaign*                     AccountProfile;                                           // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileWorld*                        WorldProfile;                                             // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileWorld*                        OutpostProfile;                                           // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileMetadata*                     MetadataProfile;                                          // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortMcpProfileAthena*                       AthenaProfile;                                            // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	TMap<ESubGame, class UFortQuestManager*>           QuestManagers;                                            // 0x0110(0x0050) (ZeroConstructor)
	TMap<ESubGame, class UFortAwardManager*>           AwardManagers;                                            // 0x0160(0x0050) (ZeroConstructor)
	class UFortCollectionBookManager*                  CollectionBookManager;                                    // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortExpeditionManager*                      ExpeditionManager;                                        // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortLinkedAccountManager*                   LinkedAccountManager;                                     // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA8];                                      // 0x01C8(0x00A8) MISSED OFFSET
	class UFortHero*                                   AthenaMenuHeroDef;                                        // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FDisplayManagerVariantData                  CharacterCosmeticVariantData;                             // 0x0278(0x0018) (Transient)
	bool                                               bAthenaMenuHeroDirty;                                     // 0x0290(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0291(0x0007) MISSED OFFSET
	class UFortCustomizationAssetLoader*               CustomizationAssetLoader;                                 // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FEndZoneScoreAndAwards                      EndZoneScoreAndAwards;                                    // 0x02A0(0x0070) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRegisteredPlayerInfo");
		return ptr;
	}


	struct FString GetPlayerName();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
};


// Class FortniteGame.FortRegisteredPlayerInfoTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortRegisteredPlayerInfoTooltip : public UFortTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRegisteredPlayerInfoTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortRejoinCheck
// 0x0030 (0x0150 - 0x0120)
class UFortRejoinCheck : public URejoinCheck
{
public:
	bool                                               bAbandonAfterCheck;                                       // 0x0120(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bAttemptingAbandon;                                       // 0x0121(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2E];                                      // 0x0122(0x002E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRejoinCheck");
		return ptr;
	}

};


// Class FortniteGame.FortReleaseVersionManager
// 0x0000 (0x0028 - 0x0028)
class UFortReleaseVersionManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReleaseVersionManager");
		return ptr;
	}

};


// Class FortniteGame.FortRelevancyZoneIndicator
// 0x0160 (0x0488 - 0x0328)
class AFortRelevancyZoneIndicator : public AActor
{
public:
	class UStaticMeshComponent*                        RelevancyZoneMesh;                                        // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        CustomDepthMesh;                                          // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              RelevancyZoneToWorldScale;                                // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          MiniMapNetRelevancyOverlayMaterial;                       // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          MiniMapNetRelevancyCircleMaterial;                        // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MinimapNetRelevancyOverlayMID;                            // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 MinimapNetRelevancyOverlayBrush;                          // 0x0358(0x0088) (Transient)
	class UMaterialInstanceDynamic*                    MinimapNetRelevancyCircleMID;                             // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSlateBrush                                 MinimapNetRelevancyCircleBrush;                           // 0x03E8(0x0088) (Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0470(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRelevancyZoneIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortRemoteControlledPawnAthena
// 0x0100 (0x2600 - 0x2500)
class AFortRemoteControlledPawnAthena : public AFortPlayerPawnAthena
{
public:
	bool                                               bCurrentlyDelayingLaunch;                                 // 0x2500(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x2501(0x0003) MISSED OFFSET
	float                                              ServerFuseStartTime;                                      // 0x2504(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             RCTeam;                                                   // 0x2508(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x2509(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AFortPlayerPawnAthena>        ControllingPlayerPawn;                                    // 0x250C(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AFortPlayerPawnAthena>        SpectateReturnPlayerPawn;                                 // 0x2514(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x251C(0x0004) MISSED OFFSET
	class UFortAbilitySystemComponent*                 OverrideAbilitySystemComponent;                           // 0x2520(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              TriggeredHealthThreshold;                                 // 0x2528(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x252C(0x0004) MISSED OFFSET
	struct FFortGameplayEffectContainerSpec            EffectContainerSpecToApplyOnKill;                         // 0x2530(0x0080) (BlueprintVisible, BlueprintReadOnly)
	class UFortRemoteControlPawnSet*                   RemoteControlPawnSet;                                     // 0x25B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bTriggeredForDestroy;                                     // 0x25B8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x25B9(0x0007) MISSED OFFSET
	struct FFortAttributeInitializationKey             AttributeInitKey;                                         // 0x25C0(0x0010) (Edit, DisableEditOnInstance)
	class UClass*                                      RemoteControlledPawnDefaultCameraClass;                   // 0x25D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      RemoteControlledPawnTriggeredCameraClass;                 // 0x25D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ControllingPlayerEffect;                                  // 0x25E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FActiveGameplayEffectHandle                 ControllingPlayerEffectHandle;                            // 0x25E8(0x0008) (Transient)
	bool                                               bIsKeyboardTurnPressed;                                   // 0x25F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsKeyboardLookPressed;                                   // 0x25F1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0xE];                                       // 0x25F2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRemoteControlledPawnAthena");
		return ptr;
	}


	void TriggerDestroyRemoteControlPawn();
	void SetupRemoteControlPawn(class AFortPlayerControllerAthena* InFortPC, class AFortPlayerPawnAthena* InControllingPawn, TEnumAsByte<EFortCustomMovement> CustomMovementType, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecOnKill);
	void OnTriggeredHealthThreshold(float PreviousTriggeredHealthThreshold, float CurrentTriggeredHealthThreshold);
	void OnRep_TriggeredHealthThreshold(float PreviousTriggeredHealthThreshold);
	void OnRep_TriggeredForDestroy();
	void OnRep_OverrideAbilitySystemComponent();
	void OnRep_ControllingPlayerPawn();
	void OnDoKill();
	void OnClientSetupRemoteControlPawn();
	void OnCapsuleTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	bool IsCurrentlyDelayingLaunch();
	void HandleControllingPlayerOutOfHealth();
	float GetOutOfHealthExplodeDelay();
	float GetLaunchDelay();
	float GetFuseLength();
	void BeginCapsuleOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class FortniteGame.FortRemoteControlPawnSet
// 0x01E0 (0x0210 - 0x0030)
class UFortRemoteControlPawnSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  FuseLength;                                               // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MouseTurnCap;                                             // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MouseTurnRate;                                            // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MouseTurnRateMax;                                         // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  GyroTurnRateMax;                                          // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  KeyboardTurnRate;                                         // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  ControllerTurnRate;                                       // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  TouchTurnRate;                                            // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxSpeed;                                                 // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  MaxAcceleration;                                          // 0x0150(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  UseLaunchDelay;                                           // 0x0170(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  LaunchDelay;                                              // 0x0190(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  LaunchSpeed;                                              // 0x01B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  OutOfHealthExplodeDelay;                                  // 0x01D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  PlayerCanDetonate;                                        // 0x01F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRemoteControlPawnSet");
		return ptr;
	}

};


// Class FortniteGame.FortReplayContext
// 0x01E0 (0x0208 - 0x0028)
class UFortReplayContext : public UBlueprintContextBase
{
public:
	struct FFortReplayPlaybackState                    PlaybackState;                                            // 0x0028(0x0018) (BlueprintVisible, BlueprintReadOnly)
	struct FFortReplayFXState                          EffectsState;                                             // 0x0040(0x0014) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReplayFXStateChange;                                    // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              TimeBeforeEvent;                                          // 0x0068(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPauseStateChanged;                                      // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayTimeChanged;                                      // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayTimelineChanged;                                  // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayPlaybackMultiplierChanged;                        // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayHudVisibilityChanged;                             // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleReplayViewSettings;                               // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnToggleReplayPlayerList;                                 // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayLevelStreamingChanged;                            // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayTimelineFocusChanged;                             // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayTimelineMarkerAdded;                              // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayTimelineMarkersCleared;                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpectatorMatchStatusChanged;                            // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpectatorPlayerStatusChanged;                           // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplayScrubComplete;                                    // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0xB8];                                      // 0x0150(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplayContext");
		return ptr;
	}


	void ToggleViewSettingsVisibility();
	void TogglePlayPause();
	void TogglePlayerListVisibility();
	void ToggleHUDVisibility();
	void TakeScreenshot();
	void SkipForward(float TimeInSeconds);
	void SkipBack(float TimeInSeconds);
	void SetTimelineInputFocus(bool bShouldHaveFocus);
	void SetHighQualityFXFlag(bool bEnabled);
	void ReplayHUDCleanup();
	void JumpToPreviousEvent();
	void JumpToNextEvent();
	void JumpToEvent(int EventIndex);
	void JumpReplayToTimelinePosition(float TimeRatio);
	bool IsDepthOfFieldActive();
	void IncreasePlaybackMultiplier();
	struct FText GetCameraNameFromType(ESpectatorCameraType CamType);
	void EnableTransportNavigation();
	void DisableTransportNavigation();
	void DecreasePlaybackMultiplier();
};


// Class FortniteGame.FortReplaySpectator
// 0x0080 (0x2170 - 0x20F0)
class AFortReplaySpectator : public AFortPlayerControllerSpectating
{
public:
	TArray<float>                                      PlaybackSpeedLUT;                                         // 0x20F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x38];                                      // 0x2100(0x0038) MISSED OFFSET
	class AFortTimeOfDayManager*                       OverriddenTODManager;                                     // 0x2138(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x2140(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplaySpectator");
		return ptr;
	}


	bool SetOverrideTimeOfDay(bool bOverride, float Time, bool bImmediate);
	void SetCloudAltitudes(float NewCloudAltitude);
	void OnZoomOutEnd();
	void OnZoomOutBegin();
	void OnZoomInEnd();
	void OnZoomInBegin();
	void OnShotStartGotoTimeComplete(bool bWasSuccessful);
	void OnScrubComplete(bool bWasSuccessful);
	void OnPauseStateChanged(bool bNewPauseState);
	void OnNotifyNewPlaybackMultiplier(float NewMultiplier);
	void OnDemoScrubComplete(bool bWasSuccessful);
};


// Class FortniteGame.FortReplaySpectatorAthena
// 0x0010 (0x2180 - 0x2170)
class AFortReplaySpectatorAthena : public AFortReplaySpectator
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x2170(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplaySpectatorAthena");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraph
// 0x0200 (0x05F0 - 0x03F0)
class UFortReplicationGraph : public UReplicationGraph
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	TArray<class UClass*>                              NonSpatializedChildClasses;                               // 0x03F8(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              AlwaysRelevantClasses;                                    // 0x0408(0x0010) (ZeroConstructor)
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReplicationGraphNode_ActorList*             AlwaysRelevantNode;                                       // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortReplicationGraphNode_BroadcastSpectator* BroadcastSpectatorRelevancyNode;                          // 0x0428(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0430(0x0050) MISSED OFFSET
	TArray<class AFortPlayerPawn*>                     PlayerPawnsToVerify;                                      // 0x0480(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x160];                                     // 0x0490(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraph");
		return ptr;
	}


	void OnVehicleDestroyed(class AActor* DestroyedVehicle);
	void OnHighFrequencyPawnDestroyed(class AActor* Pawn);
};


// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0238 (0x0288 - 0x0050)
class UFortReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x228];                                     // 0x0050(0x0228) MISSED OFFSET
	class AActor*                                      LastPawn;                                                 // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0280(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraphNode_PlayerStateFrequencyLimiter
// 0x0030 (0x0080 - 0x0050)
class UFortReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0050(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_PlayerStateFrequencyLimiter");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForTeam
// 0x0020 (0x0070 - 0x0050)
class UFortReplicationGraphNode_AlwaysRelevantForTeam : public UReplicationGraphNode
{
public:
	class AFortTeamPrivateInfo*                        FortTeamPrivateInfo;                                      // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForTeam");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForSquad
// 0x0038 (0x0088 - 0x0050)
class UFortReplicationGraphNode_AlwaysRelevantForSquad : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	TArray<class AFortPlayerStateAthena*>              PlayerStates;                                             // 0x0058(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0068(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_AlwaysRelevantForSquad");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraphNode_BroadcastSpectator
// 0x00A8 (0x01A0 - 0x00F8)
class UFortReplicationGraphNode_BroadcastSpectator : public UReplicationGraphNode_ActorList
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x00F8(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_BroadcastSpectator");
		return ptr;
	}

};


// Class FortniteGame.FortReplicationGraphNode_DeimosDynamic
// 0x0008 (0x0140 - 0x0138)
class UFortReplicationGraphNode_DeimosDynamic : public UReplicationGraphNode_ActorListFrequencyBuckets
{
public:
	class UReplicationGraphNode_ActorListFrequencyBuckets* NonAINode;                                                // 0x0138(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortReplicationGraphNode_DeimosDynamic");
		return ptr;
	}

};


// Class FortniteGame.FortResourceItemDefinition
// 0x0010 (0x08E0 - 0x08D0)
class UFortResourceItemDefinition : public UFortWorldItemDefinition
{
public:
	TEnumAsByte<EFortResourceType>                     ResourceType;                                             // 0x08D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x08D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortResourceItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortRiftBlockerComponent
// 0x0000 (0x0590 - 0x0590)
class UFortRiftBlockerComponent : public UBoxComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRiftBlockerComponent");
		return ptr;
	}

};


// Class FortniteGame.FortRuntimeOptions
// 0x04D8 (0x0500 - 0x0028)
class UFortRuntimeOptions : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnHotfixApplied;                                          // 0x0028(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bEnableSpectatorUpdates;                                  // 0x0038(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsTournamentMode;                                        // 0x0039(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	struct FName                                       TournamentPlaylistName;                                   // 0x0040(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableManualBroadcasterStart;                            // 0x0048(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableInventorySharingForBroadcast;                      // 0x0049(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowSquadOnSpectatorPlayerStatusWidget;                  // 0x004A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsSpectator;                                             // 0x004B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsBroadcaster;                                           // 0x004C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              EsportsAnalyticsHeartbeatRate;                            // 0x0050(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CurrentSocialImportVersion;                               // 0x0054(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CurrentVKImportVersion;                                   // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               CurrentMultiFactorModalVersion;                           // 0x005C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSocialImport;                                      // 0x005D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableStartupSocialImport;                               // 0x005E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableStartupErebusFriendImport;                         // 0x005F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableVKImport;                                          // 0x0060(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSteamImport;                                       // 0x0061(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
	struct FString                                     SocialImportURI;                                          // 0x0068(0x0010) (ZeroConstructor, Config)
	int                                                DaysBetweenSocialImportPrompts;                           // 0x0078(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                DaysBetweenVKImportPrompt;                                // 0x007C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                SocialImportPromptsBeforeOptOut;                          // 0x0080(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                FriendImportCaptionSelection;                             // 0x0084(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSplitWalletTextNotice;                             // 0x0088(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaStoreToast;                                    // 0x0089(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaStoreToastForFeatured;                         // 0x008A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaStoreToastForDaily;                            // 0x008B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaStoreToastForRolloverAlone;                    // 0x008C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaStarsInStoreNotification;                      // 0x008D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	TArray<struct FName>                               AthenaStarterGameMode;                                    // 0x0090(0x0010) (ZeroConstructor, Config)
	TArray<struct FName>                               AthenaStarterGameModeB;                                   // 0x00A0(0x0010) (ZeroConstructor, Config)
	bool                                               AthenaStarterFill;                                        // 0x00B0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	float                                              PartyRichPresenceUpdateTime;                              // 0x00B4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PartySuggestionUpdateTimer;                               // 0x00B8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxPartySuggestionsToConsider;                            // 0x00BC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowPartySuggestions;                                   // 0x00C0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowLFG;                                                // 0x00C1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableXboxPartySuggestionTempFix;                        // 0x00C2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowPartyPresenceUpdates;                               // 0x00C3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableInteractiveConsumables;                            // 0x00C4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableContextHelpMenu;                                   // 0x00C5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaItemShop;                                      // 0x00C6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableShowdown;                                          // 0x00C7(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableBattlePass;                                        // 0x00C8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableBattlePassPurchase;                                // 0x00C9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableBattlePassFAQ;                                     // 0x00CA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAthenaFavoriting;                                  // 0x00CB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAthenaCustomPreviewActionForCosmetics;             // 0x00CC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAthenaItemRandomization;                           // 0x00CD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableProfileStatTracking;                               // 0x00CE(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableProfileStatUI;                                     // 0x00CF(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableTrickUI;                                           // 0x00D0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableMultiplayerTricks;                                 // 0x00D1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAthenaChallengesTabWhenOutOfSeason;                  // 0x00D2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bLoginXBLDisabled;                                        // 0x00D3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bLoginPSNDisabled;                                        // 0x00D4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bLoginErebusDisabled;                                     // 0x00D5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSkipInternetCheck;                                       // 0x00D6(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableClientSettingsSaveToCloud;                         // 0x00D7(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableShowdownXmppNotify;                                // 0x00D8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	int                                                ShowdownTournamentCacheExpirationHours;                   // 0x00DC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                ShowdownTournamentJsonRevision;                           // 0x00E0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ShowdownXmppRefreshRateInSeconds;                         // 0x00E4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	double                                             CloudSaveIntervalConfig;                                  // 0x00E8(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSaveToCloudOnMapLoad;                                    // 0x00F0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	double                                             GiftNotificationRefreshTimer;                             // 0x00F8(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableReplayBrowser;                                     // 0x0100(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	TArray<bool>                                       bShowFeaturedReplays;                                     // 0x0108(0x0010) (ZeroConstructor, Config)
	TArray<uint32_t>                                   WhitelistedReplayCLs;                                     // 0x0118(0x0010) (ZeroConstructor, Config)
	bool                                               bEnableReplayRecording;                                   // 0x0128(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableLargeTeamReplayRecording;                          // 0x0129(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableHearingAccessibility;                              // 0x012A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableGiftXMPPMessageSend;                              // 0x012B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableReceiveGiftXMPPMessages;                          // 0x012C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableGifting;                                          // 0x012D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableReceiveGiftOption;                                // 0x012E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bLimitGiftingToEligiblePlatforms;                         // 0x012F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bCanGiftYourself;                                         // 0x0130(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	int                                                GiftLimitAmount;                                          // 0x0134(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                DaysOfFriendshipBeforeCanGift;                            // 0x0138(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              EndBattleRoyalUpdateDelay;                                // 0x013C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LightswitchDownLoginDelay;                                // 0x0140(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowStatusButtonOnWaitingRoomScreen;                     // 0x0144(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAthenaShowMapMarkersInWorld;                             // 0x0145(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInvertMotionOnUnattachedSwitchControllers;               // 0x0146(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableTouchLookVelocityScaling;                         // 0x0147(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisablePurchaseHistoryScreen;                            // 0x0148(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	float                                              TouchAimAssistStrengthScalar;                             // 0x014C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableTouchAimAssistAutoTracking;                       // 0x0150(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bProcessGamepadInputOnMobile;                             // 0x0151(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x0152(0x0002) MISSED OFFSET
	float                                              GamepadShortThrowLookScale;                               // 0x0154(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseNativeQuickbar;                                       // 0x0158(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseNewLookAccel;                                         // 0x0159(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSoundIndicatorsEnabledForTeammates;                      // 0x015A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEquipFirstWeaponOnMobile;                                // 0x015B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ShowEliminationDistanceOver;                              // 0x015C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              FadeOutTeamIndicatorsAfter;                               // 0x0160(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MapIndicatorTouchClearDistance;                           // 0x0164(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FVector2D                                   MapIndicatorOffset;                                       // 0x0168(0x0008) (Config, IsPlainOldData)
	float                                              AthenaMapZoomMax;                                         // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              BacchusMapIndicatorSizeMultiplier;                        // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AthenaMapPanSpeedMultiplier;                              // 0x0178(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AthenaMapZoomSpeedMultiplier;                             // 0x017C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              WaitTimeBeforeShowingNewModeViolator;                     // 0x0180(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	struct FRuntimeOptionLocalizableString             FriendCodeShareWarningMessage;                            // 0x0188(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             PlatformPlayAllowedErrorMessage;                          // 0x0198(0x0010) (Config)
	bool                                               bOnlyShareURLWithNoMessage;                               // 0x01A8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bExcludeURLInShareMessage;                                // 0x01A9(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableBacchusFriendCodeSharing;                         // 0x01AA(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowCreateAccountOnRedirect;                             // 0x01AB(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	struct FString                                     AthenaCodeOfConductURL;                                   // 0x01B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	struct FString                                     BacchusFriendCodeShareURL;                                // 0x01C0(0x0010) (ZeroConstructor, Config)
	struct FString                                     CreateAccountUrl;                                         // 0x01D0(0x0010) (ZeroConstructor, Config)
	struct FString                                     LinkAccountURL;                                           // 0x01E0(0x0010) (ZeroConstructor, Config)
	struct FString                                     SupportURL;                                               // 0x01F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	struct FString                                     WaitingListURL;                                           // 0x0200(0x0010) (ZeroConstructor, Config)
	struct FString                                     CheckStatusURL;                                           // 0x0210(0x0010) (ZeroConstructor, Config)
	struct FString                                     iOSAppStoreURL;                                           // 0x0220(0x0010) (ZeroConstructor, Config)
	struct FString                                     TurnOnMfaURL;                                             // 0x0230(0x0010) (ZeroConstructor, Config)
	struct FString                                     ListOfCreatorsURL;                                        // 0x0240(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	int                                                MaxStreamerMatchmakingDelay;                              // 0x0250(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableHiddenMatchmakingDelay;                            // 0x0254(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0255(0x0003) MISSED OFFSET
	struct FString                                     TencentStoreDetailsURL;                                   // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	int                                                ScamWarningPercentChance;                                 // 0x0268(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                ScamWarningMinimumGames;                                  // 0x026C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     StwDownloadLauncherOption;                                // 0x0270(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config)
	struct FRuntimeOptionLocalizableString             OverrideDefaultBonusXpEventTitleString;                   // 0x0280(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             XBLDisableText;                                           // 0x0290(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             XBLPartyFinderPlatformHeaderText;                         // 0x02A0(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             XBLPartyFinderMcpHeaderText;                              // 0x02B0(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             PSNDisableText;                                           // 0x02C0(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             PSNPartyFinderPlatformHeaderText;                         // 0x02D0(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             PSNPartyFinderMcpHeaderText;                              // 0x02E0(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             SwitchDisableText;                                        // 0x02F0(0x0010) (Config)
	struct FRuntimeOptionReviewPromptCriteria          ReviewPromptCriteria;                                     // 0x0300(0x0014) (Config, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0314(0x0004) MISSED OFFSET
	struct FRuntimeOptionLocalizableString             AffiliateDescriptionText;                                 // 0x0318(0x0010) (Config)
	struct FRuntimeOptionLocalizableString             AffiliateErrorText;                                       // 0x0328(0x0010) (Config)
	bool                                               bDisableMatchmakingKnobs;                                 // 0x0338(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableAffiliateFeature;                                 // 0x0339(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseHotfixedAffiliateNamesArray;                          // 0x033A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData15[0x5];                                       // 0x033B(0x0005) MISSED OFFSET
	TArray<struct FRuntimeOptionTabStateInfo>          DisabledFrontendNavigationTabs;                           // 0x0340(0x0010) (ZeroConstructor, Config)
	TArray<struct FRuntimeOptionTabStateInfo>          TournamentDisabledFrontendNavigationTabs;                 // 0x0350(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             DisabledMatchmakingKnobs;                                 // 0x0360(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             AffiliateNames;                                           // 0x0370(0x0010) (ZeroConstructor, Config)
	float                                              PickingInteractDistance;                                  // 0x0380(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PickingInteractHighlightDistanceScaler;                   // 0x0384(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PickingHighlightMovementUpdateDist;                       // 0x0388(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PickingHighlightUpdateTime;                               // 0x038C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PickingTime;                                              // 0x0390(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AutoOpenDoorInputMagnitude;                               // 0x0394(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AutoOpenDoorTraceDistance;                                // 0x0398(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAutofireEnabled;                                         // 0x039C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAutofireUsesAutoaimTarget;                               // 0x039D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHoldToFireOnAutofireTarget;                              // 0x039E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData16[0x1];                                       // 0x039F(0x0001) MISSED OFFSET
	float                                              DefaultAutofireRange;                                     // 0x03A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bServerNetDriverAnalytics;                                // 0x03A4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableReplicationGraph;                                 // 0x03A5(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData17[0x2];                                       // 0x03A6(0x0002) MISSED OFFSET
	float                                              BRServerMaxTickRate;                                      // 0x03A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DoubleTapOnEndTouchTime;                                  // 0x03AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DoubleTapOnStartTouchTime;                                // 0x03B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DoubleTapDistance;                                        // 0x03B4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TouchMoveStickRadius;                                     // 0x03B8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TouchMoveStickRadiusTargeting;                            // 0x03BC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TouchMoveStickRadiusScoped;                               // 0x03C0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TouchMoveStickRadiusDriving;                              // 0x03C4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AutorunLockZoneOffset;                                    // 0x03C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AutorunLockZoneDelay;                                     // 0x03CC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MoveOriginResetTime;                                      // 0x03D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MoveOriginResetDistance;                                  // 0x03D4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MoveOriginFollowDistance;                                 // 0x03D8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableTouchLookInertia;                                 // 0x03DC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x03DD(0x0003) MISSED OFFSET
	float                                              RotateInertiaMultiplier;                                  // 0x03E0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RotateInertiaMinTime;                                     // 0x03E4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RotateInertiaMinLength;                                   // 0x03E8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RotateInertiaMinMagnitude;                                // 0x03EC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                RotateInertiaNumAveragedTouches;                          // 0x03F0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableHUDLayoutTool;                                     // 0x03F4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableHUDLayoutToolPanZoom;                              // 0x03F5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData19[0x2];                                       // 0x03F6(0x0002) MISSED OFFSET
	float                                              EnablePlayButtonTime;                                     // 0x03F8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AthenaExternalRichPresenceDelayTimeSeconds;               // 0x03FC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableExternalPresenceAthenaPlayersRemain;               // 0x0400(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0401(0x0003) MISSED OFFSET
	float                                              MinimumTimeBetweenConsolePresenceUpdates;                 // 0x0404(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MinimumTimeBetweenMCPPresenceUpdates;                     // 0x0408(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              EnablePlayButtonTimePostError;                            // 0x040C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bInviteUIDisabled;                                        // 0x0410(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableBacchusLogin;                                     // 0x0411(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFriendSuggestions;                                 // 0x0412(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFilterDuplicateFriendsIntoEpicTab;                       // 0x0413(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFriendsListButton;                                 // 0x0414(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bPrioritizeMcpInviteOverConsoleInvite;                    // 0x0415(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowMCPFriendDataRetrieval;                             // 0x0416(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bForceDisableCrossplatformSquadFill;                      // 0x0417(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRequireCrossplayOptIn;                                   // 0x0418(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSingleCrossplayOptInPrompt;                              // 0x0419(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bImmediatelyDisplayCrossplayOptIn_STW;                    // 0x041A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bImmediatelyDisplayCrossplayOptIn_BR;                     // 0x041B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowIconForSamePlatformPlayers;                          // 0x041C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableChatWidget;                                        // 0x041D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowVoiceChatSettings;                                   // 0x041E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSupportCenter;                                     // 0x041F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bPartyInProgress;                                         // 0x0420(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowAccountBoosts;                                       // 0x0421(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowCustomerSupport;                                     // 0x0422(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableGlobalChat;                                        // 0x0423(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableEULA;                                              // 0x0424(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableEndOfZoneCinematic;                                // 0x0425(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableOnboardingCinematics;                              // 0x0426(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowFounderBannerIcons;                                  // 0x0427(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowCurrentRegionInLobby;                                // 0x0428(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFoundersDailyRewards;                              // 0x0429(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableTwitchIntegration;                                 // 0x042A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableMatchmakingRegionSetting;                          // 0x042B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableLanguageSetting;                                   // 0x042C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFriendCodeSetting;                                 // 0x042D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableEarlyAccessLoadingScreenBanner;                    // 0x042E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData21[0x1];                                       // 0x042F(0x0001) MISSED OFFSET
	int                                                CampaignMatchEndRetryCount;                               // 0x0430(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShopPurchaseConfirmation;                                // 0x0434(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShopPurchaseConfirmationJapanPS4;                        // 0x0435(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bToyMessagingEnabled;                                     // 0x0436(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAthenaHarvestingToolsInSTW;                        // 0x0437(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAthenaDancesInSTW;                                 // 0x0438(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableCosmeticLockerInSTW;                               // 0x0439(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableCosmeticItemShopInSTW;                             // 0x043A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSTWLootDrops;                                      // 0x043B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSTWContainerItemCacheDrops;                        // 0x043C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSTWEnemyItemCacheDrops;                            // 0x043D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSkipTrailerMovie;                                        // 0x043E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideUnaffordableMtxPurchases;                            // 0x043F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowXboxStwAccessDuringLiveStoreOutage;                 // 0x0440(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowReplayTrailerButton_Athena;                          // 0x0441(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAlterationModification;                            // 0x0442(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableSchematicRarityUpgrade;                            // 0x0443(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableMissionActivationVote;                             // 0x0444(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableLtmRetrieveTheData;                                // 0x0445(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableExternalRichPresence;                              // 0x0446(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowEnableMFAModalAtStartupAthena;                       // 0x0447(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowEnableMFAModalAtStartupSTW;                          // 0x0448(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableHuskBuildingHitFX;                                 // 0x0449(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData22[0x2];                                       // 0x044A(0x0002) MISSED OFFSET
	int                                                LevelToStartShowingMFAModal;                              // 0x044C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                DaysBetweenEnableMFAModalPrompts;                         // 0x0450(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DelayGiftButtonWhenMFANotEnabledSeconds;                  // 0x0454(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                LevelToAutoOpenBattlePassOnNewSeason;                     // 0x0458(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bForceBattlePassUpsell;                                   // 0x045C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowLeaderboardPrivacySettings;                          // 0x045D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableServerScoreboardLog;                               // 0x045E(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableInputBasedMatchmaking;                             // 0x045F(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNotifyBlockedInput;                                      // 0x0460(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDisableVideoOptions;                                     // 0x0461(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnablePlayerReportingFlow;                               // 0x0462(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bForceGamepadPlaytest;                                    // 0x0463(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bForceGamepadXboxOne;                                     // 0x0464(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableNewFireModeSelection;                              // 0x0465(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAddFriendWhileSpectating;                          // 0x0466(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableFriendLink;                                        // 0x0467(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     FriendLinkURL;                                            // 0x0468(0x0010) (ZeroConstructor, Config)
	struct FString                                     MFAEnableURL;                                             // 0x0478(0x0010) (ZeroConstructor, Config)
	bool                                               bAllowForceTouchFire;                                     // 0x0488(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	float                                              VehicleSessionMinTimeUsed;                                // 0x048C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseHordeStormShield;                                     // 0x0490(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData24[0x3];                                       // 0x0491(0x0003) MISSED OFFSET
	float                                              HordeStormShieldStartingRadiusOverride;                   // 0x0494(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HordeStormShieldEndingRadiusOverride;                     // 0x0498(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HordeStormShieldBreatherRadiusOverride;                   // 0x049C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseHordeRespawnAtLastPawnLocation;                       // 0x04A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bAllowHordePlayerTriggeredRespawn;                        // 0x04A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData25[0x2];                                       // 0x04A2(0x0002) MISSED OFFSET
	int                                                MaxQuickScopeAimAssistPulls;                              // 0x04A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              QuickScopeAimAssistPullWatchTime;                         // 0x04A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldDisablePickaxeFXFrontendPreview;                   // 0x04AC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRegisterPawnsWithSignificanceManagerInFrontEnd;          // 0x04AD(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnPS4;           // 0x04AE(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnXB1;           // 0x04AF(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch;        // 0x04B0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnPS4_STWOnly;   // 0x04B1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnXB1_STWOnly;   // 0x04B2(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideExclusiveCosmeticsFromOtherPlatformsOnSwitch_STWOnly;// 0x04B3(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bSimpleHeistVanEntrance;                                  // 0x04B4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData26[0x3];                                       // 0x04B5(0x0003) MISSED OFFSET
	struct FString                                     LobbyGenericLinkButtonURL;                                // 0x04B8(0x0010) (ZeroConstructor, Config)
	bool                                               bEnableLobbyGenericLinkButton;                            // 0x04C8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData27[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET
	struct FRuntimeOptionLocalizableString             LobbyGenericLinkButtonText;                               // 0x04D0(0x0010) (Config)
	TArray<struct FString>                             PlaylistOptionWhitelist;                                  // 0x04E0(0x0010) (ZeroConstructor, Config)
	int                                                HighlightClipRewindTimeInSeconds;                         // 0x04F0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableAntiTaxi;                                          // 0x04F4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData28[0x3];                                       // 0x04F5(0x0003) MISSED OFFSET
	int                                                HotfixVersionId;                                          // 0x04F8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bIsUserChoiceAllowedForForcedAndroidStore;                // 0x04FC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData29[0x3];                                       // 0x04FD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRuntimeOptions");
		return ptr;
	}


	bool ShouldShowLeaderboardPrivacySettings();
	bool ShouldDisableReceiveGiftOption();
	void SetEnableMainMenuSocialButton(bool NewValue);
	void OnHotfixApplied__DelegateSignature();
	bool STATIC_IsPartyInProgressEnabled();
	bool IsMatchmakingKnobEnabled(const struct FString& KnobName);
	bool IsInviteUIDisabled();
	bool IsGiftingDisabled();
	TArray<struct FString> GetValidAffiliateNames();
	bool GetShowReplayTrailerButton_Athena();
	class UFortRuntimeOptions* STATIC_GetRuntimeOptions();
	struct FText GetOverrideBonusEventXpTitleText();
	struct FText GetOverrideAffiliateErrorText();
	struct FText GetOverrideAffiliateDescriptionText();
	struct FString GetLobbyGenericLinkButtonURL();
	struct FText GetLobbyGenericLinkButtonOverrideText();
	bool GetIsPlayerReportingFlowEnabled();
	bool GetIsFriendLinkEnabled();
	struct FString GetGameVersion();
	bool GetEnableXboxPartySuggestionTempFix();
	bool GetEnableSplitWalletTextNotice();
	bool GetEnableMainMenuSocialButton();
	bool GetEnableLobbyGenericLinkButton();
	bool GetEnableLFG();
	bool GetDisablePurchaseHistoryScreen();
	TArray<struct FRuntimeOptionTabStateInfo> GetDisabledFrontendNavigationTabs();
	float GetDelayGiftButtonWhenMFANotEnabledSeconds();
};


// Class FortniteGame.FortSafeZoneIndicator
// 0x0210 (0x0538 - 0x0328)
class AFortSafeZoneIndicator : public AActor
{
public:
	class UFortMiniMapComponent*                       MinimapComp;                                              // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              LastRadius;                                               // 0x0330(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              NextRadius;                                               // 0x0334(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              NextNextRadius;                                           // 0x0338(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize100                      LastCenter;                                               // 0x033C(0x000C) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FVector_NetQuantize100                      NextCenter;                                               // 0x0348(0x000C) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FVector_NetQuantize100                      NextNextCenter;                                           // 0x0354(0x000C) (BlueprintVisible, BlueprintReadOnly, Net)
	float                                              SafeZoneStartShrinkTime;                                  // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              SafeZoneFinishShrinkTime;                                 // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPaused;                                                  // 0x0368(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPausedForPreview;                                        // 0x0369(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPausedForPreview_Previous;                               // 0x036A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x036B(0x0005) MISSED OFFSET
	struct FGameplayTag                                MegaStormGameplayCueTag;                                  // 0x0370(0x0008) (Edit, DisableEditOnInstance)
	int                                                NextNextMegaStormGridCellThickness;                       // 0x0378(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                NextMegaStormGridCellThickness;                           // 0x037C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              MegaStormDelayTimeBeforeDestruction;                      // 0x0380(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumActiveMegaStormCircles;                                // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ActiveMegaStormCircleGridCellCountFromEdge;               // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x038C(0x0014) MISSED OFFSET
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x03A0(0x0088) (Edit, DisableEditOnInstance)
	struct FSlateBrush                                 FarOffMiniMapIconBrush;                                   // 0x0428(0x0088) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04B0(0x0004) MISSED OFFSET
	float                                              Radius;                                                   // 0x04B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        SafeZoneMesh;                                             // 0x04B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 MovementAudioCrossfadeCurve;                              // 0x04C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 MovementAudioPitchModCurve;                               // 0x04C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ClockTickingAudioVolumeCurve;                             // 0x04D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ClockTickingAudioPitchCurve;                              // 0x04D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialParameterCollection*                MaterialCollection;                                       // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SafeZoneLocName;                                          // 0x04E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SafeZoneScaleName;                                        // 0x04F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SafeZoneWorldScale;                                       // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ViewTargetLocation;                                       // 0x04FC(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bIsViewTargetPawnOutside;                                 // 0x0508(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0509(0x0007) MISSED OFFSET
	struct FName                                       SuperStormActiveName;                                     // 0x0510(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MegaStormFXAlphaFactor;                                   // 0x0518(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MegaStormFXFadeInTime;                                    // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MegaStormFXFadeOutTime;                                   // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMegaStormGameplayCueStarted;                             // 0x0524(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMegaStormStopPending;                                    // 0x0525(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCleanupFXWithAlphaFactor;                                // 0x0526(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0527(0x0001) MISSED OFFSET
	float                                              MegaStormOneOverFXFadeInTime;                             // 0x0528(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MegaStormOneOverFXFadeOutTime;                            // 0x052C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0530(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSafeZoneIndicator");
		return ptr;
	}


	void SetSafeZoneRadiusAndCenter(float InRadius, const struct FVector& InLocation);
	void OnSafeZoneStateChange(EFortSafeZoneState NewState, bool bInitial);
	void OnRep_NumActiveMegaStormCircles(int PrevNumActiveMegaStormCircles);
	void OnBeginStartingStateEffectsEvent();
	void OnBeginStartingStateEffects();
	void MegaStormMinTimerExpired();
	float GetTimeSinceSafeZonesStart();
	float GetSafeZoneShrinkSpeed();
	float GetSafeZoneRadius();
	struct FVector GetSafeZoneCenter();
	void GetMovementAudioCurveValues(float Time, float* CrossfadeValue, float* PitchModValue);
	void GetClockTickingAudioCurveValues(float Time, float* VolumeModValue, float* PitchModValue);
};


// Class FortniteGame.FortScalableFloatUtils
// 0x0000 (0x0028 - 0x0028)
class UFortScalableFloatUtils : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortScalableFloatUtils");
		return ptr;
	}


	struct FString STATIC_ToSimpleString(const struct FScalableFloat& Input);
	void STATIC_SetValue(float NewValue, struct FScalableFloat* Input);
	void STATIC_SetScalingValue(float InCoeffecient, const struct FName& InRowName, class UCurveTable* InTable, struct FScalableFloat* Input);
	bool STATIC_IsStatic(const struct FScalableFloat& Input);
	float STATIC_GetValueAtLevel(const struct FScalableFloat& Input, float Level);
	float STATIC_GetValue(const struct FScalableFloat& Input);
};


// Class FortniteGame.FortSchematicItem
// 0x0060 (0x0160 - 0x0100)
class UFortSchematicItem : public UFortAlterableItem
{
public:
	bool                                               bGrantedByAbility;                                        // 0x0100(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	int                                                RequiredTeamLevel;                                        // 0x0104(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0108(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSchematicItem");
		return ptr;
	}


	struct FRecipe GetSchematicRecipe();
	int GetSchematicQuantityProduced();
	int GetRequiredTeamLevelToCraft();
};


// Class FortniteGame.FortSchematicItemDefinition
// 0x0060 (0x03F0 - 0x0390)
class UFortSchematicItemDefinition : public UFortAlterableItemDefinition
{
public:
	struct FDataTableRowHandle                         CraftingRecipe;                                           // 0x0390(0x0010) (Edit)
	unsigned char                                      UnknownData00[0x28];                                      // 0x03A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortSchematicItemDefinition.CraftingSuccessSound
	struct FDataTableCategoryHandle                    LootLevelData;                                            // 0x03C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       CraftingTimeRowName;                                      // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseSchematicDisplayName;                                 // 0x03E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSchematicItemDefinition");
		return ptr;
	}


	class UFortWorldItemDefinition* GetResultWorldItemDefinition();
	struct FRecipe GetRecipe();
	int GetQuantityProduced();
	float GetCraftingTimeForCharacter(int Level, class AFortPlayerPawn* FortPawn);
	float GetCraftingTime(int Level);
	class USoundBase* GetCraftingSuccessSound();
};


// Class FortniteGame.FortSchematicTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortSchematicTooltip : public UFortAccountItemTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSchematicTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortScoreStylingData
// 0x1410 (0x1440 - 0x0030)
class UFortScoreStylingData : public UDataAsset
{
public:
	struct FFortScoreStylingInfo                       ScoreStyles[0x6];                                         // 0x0030(0x0358) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortScoreStylingData");
		return ptr;
	}


	bool STATIC_GetScoreStylingData(TEnumAsByte<EFortUIScoreType> Rarity, struct FFortScoreStylingInfo* ScoreStylingInfo);
};


// Class FortniteGame.FortScriptedAction
// 0x0060 (0x0388 - 0x0328)
class AFortScriptedAction : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	EFortScriptedActionEnvironment                     ActionEnvironment;                                        // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0331(0x0007) MISSED OFFSET
	struct FFortClientEventName                        ClientEventTrigger;                                       // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                ActionPriority;                                           // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	struct FFortScriptedActionParams                   CachedParams;                                             // 0x0350(0x0030) (Transient)
	bool                                               bIsActive;                                                // 0x0380(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0381(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortScriptedAction");
		return ptr;
	}


	void GetParams(struct FFortScriptedActionParams* Params);
	void Execute(const struct FFortScriptedActionParams& Params);
	void CompleteAction(bool bRegisterActionAgain);
	bool CanExecute(const struct FFortScriptedActionParams& Params);
	void CancelAction(bool bRegisterActionAgain);
};


// Class FortniteGame.FortScriptedActionManager
// 0x0050 (0x0378 - 0x0328)
class AFortScriptedActionManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class AFortScriptedAction*>                 ActiveScriptedActions;                                    // 0x0330(0x0010) (ZeroConstructor)
	TArray<struct FFortAvailableScriptedAction>        AvailableScriptedActions;                                 // 0x0340(0x0010) (ZeroConstructor)
	TArray<struct FFortAvailableScriptedAction>        PendingAvailableScriptedActions;                          // 0x0350(0x0010) (ZeroConstructor)
	TArray<struct FFortClientEventName>                PendingClientEvents;                                      // 0x0360(0x0010) (ZeroConstructor)
	bool                                               bIsProcessingClientEvent;                                 // 0x0370(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0371(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortScriptedActionManager");
		return ptr;
	}


	void HandleClientEvent_Undefined(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
};


// Class FortniteGame.FortSearchPass
// 0x0100 (0x0128 - 0x0028)
class UFortSearchPass : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET
	class UFortSessionHelper*                          SessionHelper;                                            // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	struct FFortSearchPassParams                       CurrentSearchParams;                                      // 0x0090(0x0028) (Transient)
	struct FFortSearchPassState                        CurrentSearchPassState;                                   // 0x00B8(0x0018) (Transient)
	unsigned char                                      UnknownData02[0x58];                                      // 0x00D0(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSearchPass");
		return ptr;
	}

};


// Class FortniteGame.FortSeasonalEventManager
// 0x0088 (0x00B0 - 0x0028)
class UFortSeasonalEventManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActiveEventFlagsChanged;                                // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x48];                                      // 0x0068(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSeasonalEventManager");
		return ptr;
	}


	bool IsEventFlagActive(const struct FString& QueriedEventFlagName);
	bool GetCalendarOffsetString(struct FString* OutString);
	int GetBRXPBonusPoints();
};


// Class FortniteGame.FortServerOnlyObject
// 0x0000 (0x0028 - 0x0028)
class UFortServerOnlyObject : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortServerOnlyObject");
		return ptr;
	}

};


// Class FortniteGame.FortSessionHelper
// 0x0128 (0x0150 - 0x0028)
class UFortSessionHelper : public UObject
{
public:
	class UClass*                                      BeaconClientClass;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortPartyBeaconClient*                      PartyBeaconClient;                                        // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0038(0x00D8) MISSED OFFSET
	struct FName                                       CurrentSessionName;                                       // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EPartyReservationResult>               LastBeaconResponse;                                       // 0x0118(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortSessionHelperJoinState>           CurrentJoinState;                                         // 0x0119(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EFortSessionHelperJoinResult                       CurrentJoinResult;                                        // 0x011A(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x35];                                      // 0x011B(0x0035) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSessionHelper");
		return ptr;
	}

};


// Class FortniteGame.FortNonPrimaryMissionList
// 0x0010 (0x0040 - 0x0030)
class UFortNonPrimaryMissionList : public UPrimaryDataAsset
{
public:
	TArray<struct FFortNonPrimaryMission>              NonPrimaryMissionList;                                    // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNonPrimaryMissionList");
		return ptr;
	}

};


// Class FortniteGame.FortSharedMissionLists
// 0x0180 (0x01A8 - 0x0028)
class UFortSharedMissionLists : public UObject
{
public:
	TArray<struct FFortNonPrimaryMission>              CombinedNonPrimaryMissionList;                            // 0x0028(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortNonPrimaryMission>              NonPrimaryMissionList;                                    // 0x0038(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortSharedMissionLists.NonPrimaryMissionLists
	TArray<struct FFortMissionDistributionCategory>    NonPrimaryMissionDistributionCategories;                  // 0x0058(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0068(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortSharedMissionLists.WorldSetupMissionGenerationLists
	struct FGameplayTagQuery                           PrimaryMissionTagQuery;                                   // 0x0078(0x0048) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           TheaterTagQuery;                                          // 0x00C0(0x0048) (Edit, DisableEditOnInstance)
	struct FGameplayTagQuery                           RegionTagQuery;                                           // 0x0108(0x0048) (Edit, DisableEditOnInstance)
	TArray<struct FFortGlobalMission>                  SharedMissionList;                                        // 0x0150(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FQuestDrivenMissionSubList>          QuestDrivenMissionLists;                                  // 0x0160(0x0010) (Edit, ZeroConstructor)
	TArray<struct FFortQuestDrivenMission>             AvailableQuestDrivenMissionList;                          // 0x0170(0x0010) (ZeroConstructor, Transient)
	TArray<class AFortPlayerController*>               PendingPIEPlayers;                                        // 0x0180(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0190(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSharedMissionLists");
		return ptr;
	}


	void UpdatePIEPlayers();
};


// Class FortniteGame.FortSignificanceManager
// 0x0030 (0x0148 - 0x0118)
class UFortSignificanceManager : public USignificanceManager
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0118(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSignificanceManager");
		return ptr;
	}

};


// Class FortniteGame.FortSimpleMiniMapIndicator
// 0x0120 (0x0228 - 0x0108)
class UFortSimpleMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                                 NormalBrush;                                              // 0x0108(0x0088) (Transient)
	struct FSlateBrush                                 AboveBelowBrush;                                          // 0x0190(0x0088) (Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0218(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSimpleMiniMapIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortSKFlyingVehicleConfigs
// 0x0028 (0x02D8 - 0x02B0)
class UFortSKFlyingVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                              WheelRotationRange;                                       // 0x02B0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontLowLateralFrictionMultiplier;                 // 0x02B4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearLowLateralFrictionMultiplier;                  // 0x02B8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleFrontHighLateralFrictionMultiplier;                // 0x02BC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VehicleRearHighLateralFrictionMultiplier;                 // 0x02C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LowToHighFrictionDuration;                                // 0x02C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              UphillIncline;                                            // 0x02C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardFrontFriction;                            // 0x02CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardRearFriction;                             // 0x02D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ReverseToForwardMaxSpeed;                                 // 0x02D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSKFlyingVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortSKPushVehicleConfigs
// 0x0050 (0x0300 - 0x02B0)
class UFortSKPushVehicleConfigs : public UFortVehicleConfigs
{
public:
	float                                              PedalForceMultiplier;                                     // 0x02B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PedalTopSpeedMultiplier;                                  // 0x02B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PedalForceDuration;                                       // 0x02B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CoastBrakingMinDelta;                                     // 0x02BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CoastBrakingMaxDelta;                                     // 0x02C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PedalMinDuration;                                         // 0x02C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MountDuration;                                            // 0x02C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              DismountDuration;                                         // 0x02CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MinPreDismountCooldown;                                   // 0x02D0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PreDismountCooldown;                                      // 0x02D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PedalCooldown;                                            // 0x02D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CoastBrakingStrength;                                     // 0x02DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              ShoppingMinPedalCoastSpeed;                               // 0x02E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              VehicleDebugStrafeCoastMultiplier;                        // 0x02E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              CanCoastCooldown;                                         // 0x02E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAutoDismountForwardSpeed;                              // 0x02EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              PedalMinForwardVelocity;                                  // 0x02F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              FastDismountIncline;                                      // 0x02F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	float                                              FastDismountDuration;                                     // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CanCoastAfterFastDismountCooldown;                        // 0x02FC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSKPushVehicleConfigs");
		return ptr;
	}

};


// Class FortniteGame.FortSkyDiveContrailPreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortSkyDiveContrailPreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSkyDiveContrailPreviewActor");
		return ptr;
	}


	void PreviewContrail(class UAthenaSkyDiveContrailItemDefinition* Contrail);
};


// Class FortniteGame.FortSkydivingShadowProxy
// 0x0018 (0x0340 - 0x0328)
class AFortSkydivingShadowProxy : public AActor
{
public:
	float                                              SkydivingHeightThreshold;                                 // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkydivingHeightCheckInterval;                             // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       ViewingPlayerController;                                  // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSkydivingShadowProxy");
		return ptr;
	}


	void ShowShadowProxy();
	void HideShadowProxy();
	void CheckHeight();
};


// Class FortniteGame.FortSocialItem
// 0x00A0 (0x00C8 - 0x0028)
class UFortSocialItem : public UObject
{
public:
	EFortSocialItemType                                SocialItemType;                                           // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EFortSocialItemHeaderType                          HeaderType;                                               // 0x0029(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	struct FText                                       HeaderName;                                               // 0x0030(0x0018) (BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    OnPresenceUpdated;                                        // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInviteJoinUpdated;                                      // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x60];                                      // 0x0068(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSocialItem");
		return ptr;
	}


	bool IsLFG();
	bool IsInUnjoinableMatch();
	struct FUniqueNetIdRepl GetUniquePlayerId();
	ESubGame GetSubGame();
	struct FText GetSocialName();
	EFortSocialItemPresenceStatus GetPresenceStatus();
	int GetPlayersAlive();
	int GetPartySize();
	struct FText GetLocation();
	struct FDateTime GetLFGTime();
	struct FText GetDisplayName();
	struct FString GetCurrentPlatform();
};


// Class FortniteGame.FortSoundCameraLensEffect
// 0x0010 (0x0420 - 0x0410)
class AFortSoundCameraLensEffect : public AFortEmitterCameraLensEffectDirectional
{
public:
	float                                              MaxAudibleDistanceOnSpawn;                                // 0x0410(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToSoundOnSpawn;                                   // 0x0414(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      InstigatingActor;                                         // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSoundCameraLensEffect");
		return ptr;
	}


	void SetType(EFortSoundIndicatorTypes NewType);
	void SetStrengthCurve(const struct FRuntimeFloatCurve& Curve);
	void SetInstigatingActor(class AActor* NewInstigator);
	void SetIcon(class UTexture* NewIcon);
	void OnEffectTypeChanged();
	void OnEffectDeactivated();
	void OnEffectActivated();
};


// Class FortniteGame.FortSpawnableByPlacementSystemInterface
// 0x0000 (0x0028 - 0x0028)
class UFortSpawnableByPlacementSystemInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpawnableByPlacementSystemInterface");
		return ptr;
	}


	struct FGuid GetMissionGuid();
	class AFortMission* GetMission();
};


// Class FortniteGame.FortSpawnActorInfo
// 0x0100 (0x0130 - 0x0030)
class UFortSpawnActorInfo : public UPrimaryDataAsset
{
public:
	struct FName                                       SpawnActorID;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SpawnActorClass;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FCollisionProfileName                       CollisionProfile;                                         // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	EFortSpawnActorTime                                SpawnTiming;                                              // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FScalableFloat                              SafeZoneIndex;                                            // 0x0050(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              SpawnAtSafeZoneIndex;                                     // 0x0070(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              DelayBetweenSpawns;                                       // 0x0090(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinActorsToSpawn;                                         // 0x00B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxActorsToSpawn;                                         // 0x00D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinSpawnHeight;                                           // 0x00F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxSpawnHeight;                                           // 0x0110(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpawnActorInfo");
		return ptr;
	}

};


// Class FortniteGame.FortSpawnContextObjectInterface
// 0x0000 (0x0028 - 0x0028)
class UFortSpawnContextObjectInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpawnContextObjectInterface");
		return ptr;
	}

};


// Class FortniteGame.FortSpawnedScoreActor
// 0x0020 (0x03F8 - 0x03D8)
class AFortSpawnedScoreActor : public AFortLevelSpawnActor
{
public:
	struct FGameplayTagContainer                       GameplayTags;                                             // 0x03D8(0x0020) (Edit, BlueprintVisible, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpawnedScoreActor");
		return ptr;
	}


	void OnScoreActorCollected(class APlayerState* PlayerState);
};


// Class FortniteGame.FortSpawnPointsPercentageCurveSequence
// 0x0018 (0x0048 - 0x0030)
class UFortSpawnPointsPercentageCurveSequence : public UDataAsset
{
public:
	TArray<struct FDataTableRowHandle>                 SpawnPointsPercentageCurves;                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TEnumAsByte<EFortIntensityCurveSequenceType>       SequenceType;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpawnPointsPercentageCurveSequence");
		return ptr;
	}

};


// Class FortniteGame.FortSpecialActorReplicationInfo
// 0x00D0 (0x03F8 - 0x0328)
class AFortSpecialActorReplicationInfo : public AInfo
{
public:
	struct FSpecialActorRepDataArray                   SpecialActorRepList;                                      // 0x0328(0x00C0) (Net)
	TArray<struct FSpecialActorStatData>               SpecialActorStats;                                        // 0x03E8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpecialActorReplicationInfo");
		return ptr;
	}

};


// Class FortniteGame.FortSpectatorCamComp_ThirdPerson
// 0x0150 (0x0A80 - 0x0930)
class UFortSpectatorCamComp_ThirdPerson : public UFortSpectatorCameraComponent
{
public:
	struct FFortChaseCameraHelper                      ChaseImplementation;                                      // 0x0930(0x0150) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpectatorCamComp_ThirdPerson");
		return ptr;
	}


	void UseCustomRotation(bool bUseCustomRotation);
	void SetNormalizedDistance(float NormalizedDist, bool bImmediate);
	void SetLazyAutoFollow(bool bNewLazyAutoFollow);
	void SetAutoFollow(bool bNewAutoFollow);
	float GetNormalizedDistance();
};


// Class FortniteGame.FortSpline
// 0x0040 (0x0068 - 0x0028)
class UFortSpline : public UObject
{
public:
	bool                                               bConstantVelocity;                                        // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FFortCatmullRomSpline                       Spline;                                                   // 0x0030(0x0020)
	struct FInterpCurveFloat                           SplineLookupTable;                                        // 0x0050(0x0018)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpline");
		return ptr;
	}


	void SetupSpline(TArray<struct FVector> ControlPoints, float InDuration);
	void SetDuration(float InDuration);
	bool IsValid();
	float GetVelocityCorrectedTime(float Time);
	struct FVector GetTangentFromTime(float Time);
	struct FVector GetStartPoint();
	float GetSplineLengthAtTime(float Time, float StepSize);
	float GetSplineLength(float StepSize);
	struct FVector GetPositionFromTime(float Time);
	struct FVector GetNormalFromTime(float Time);
	struct FVector GetEndPoint();
	float GetDuration();
	struct FVector GetBinormalFromTime(float Time);
	void EnableConstantVelocity(bool ConstVelEnabled);
	void DrawDebugSpline(class UObject* WorldContextObject, int Steps, float LifeTime, float Thickness, bool bPersistent, bool bJustDrawSpline, float BasisLength);
	void ClearSpline();
	void AddControlPoint(const struct FVector& Point, int Index);
};


// Class FortniteGame.FortSplineAudioActor
// 0x00A0 (0x03C8 - 0x0328)
class AFortSplineAudioActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              UpdateFrequencyInaudible;                                 // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpdateFrequencyAudible;                                   // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAudibleRange;                                          // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x033C(0x001C) MISSED OFFSET
	int                                                NumSamplePoints;                                          // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<struct FVector>                             SamplePoints;                                             // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0370(0x0020) MISSED OFFSET
	class USoundBase*                                  ClosestPointSound;                                        // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  NextClosestPointSound;                                    // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  MidPointSound;                                            // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USplineComponent*                            AudioSpline;                                              // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             AudioAtClosestPoint;                                      // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             AudioAtNextClosestPoint;                                  // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAudioComponent*                             AudioAtMidPoint;                                          // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSplineAudioActor");
		return ptr;
	}

};


// Class FortniteGame.FortSpottableActorInterface
// 0x0000 (0x0028 - 0x0028)
class UFortSpottableActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpottableActorInterface");
		return ptr;
	}

};


// Class FortniteGame.FortSpottedActorIndicator
// 0x0008 (0x0090 - 0x0088)
class UFortSpottedActorIndicator : public UFortSlateHUDIndicator
{
public:
	class AFortPlayerController*                       OwnerPC;                                                  // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSpottedActorIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortSprayDecalInstance
// 0x0038 (0x0C20 - 0x0BE8)
class AFortSprayDecalInstance : public ABuildingSMActor
{
public:
	struct FFortSprayDecalRepPayload                   SprayInfo;                                                // 0x0BE8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bDestroyOnNearbyDestruction : 1;                          // 0x0C08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDestroyOnNearbyDamageTaken : 1;                          // 0x0C08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDestroyOnNearbyBounce : 1;                               // 0x0C08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0C09(0x0007) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            SprayMIDsThatCanBounce;                                   // 0x0C10(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSprayDecalInstance");
		return ptr;
	}


	void StartSprayFadeOutDueToNewPlacement();
	void SetSprayParameters(class AFortPlayerController* SpawningPC, class UAthenaSprayItemDefinition* InSprayAsset);
	void OnSprayInfoReady();
	void OnRep_SprayInfo();
	void OnBounceOccurs();
};


// Class FortniteGame.FortSprayPreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortSprayPreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSprayPreviewActor");
		return ptr;
	}


	void PreviewSpray(class UAthenaSprayItemDefinition* Spray);
};


// Class FortniteGame.FortStampItem
// 0x0000 (0x00E0 - 0x00E0)
class UFortStampItem : public UFortAccountItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStampItem");
		return ptr;
	}

};


// Class FortniteGame.FortStampItemDefinition
// 0x0000 (0x0390 - 0x0390)
class UFortStampItemDefinition : public UFortAccountItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStampItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortStatEventManager
// 0x0060 (0x0088 - 0x0028)
class UFortStatEventManager : public UObject
{
public:
	class AFortPlayerController*                       FPC;                                                      // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortStatEvent>                      StatEvents;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortStatEventSequence>              StatEventSequences;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       PinnedSchematicNotification;                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               PinnedCanCraftStats;                                      // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FName>                               PinnedCanNotCraftStats;                                   // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FFortStatEventSequence>              PinnedSchematicSequences;                                 // 0x0078(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStatEventManager");
		return ptr;
	}

};


// Class FortniteGame.FortStaticMeshLinkComponent
// 0x0020 (0x0140 - 0x0120)
class UFortStaticMeshLinkComponent : public UNavRelevantComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0120(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshLinkComponent");
		return ptr;
	}

};


// Class FortniteGame.FortStaticMeshUserData
// 0x0010 (0x0038 - 0x0028)
class UFortStaticMeshUserData : public UAssetUserData
{
public:
	TArray<struct FTransformableNavLinkClass>          NavLinks;                                                 // 0x0028(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStaticMeshUserData");
		return ptr;
	}

};


// Class FortniteGame.FortAlwaysRelevantReplicatedActor
// 0x0000 (0x0328 - 0x0328)
class AFortAlwaysRelevantReplicatedActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAlwaysRelevantReplicatedActor");
		return ptr;
	}

};


// Class FortniteGame.FortStormShieldComponent
// 0x0010 (0x0250 - 0x0240)
class UFortStormShieldComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	bool                                               bDisabled;                                                // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStormShieldComponent");
		return ptr;
	}


	void StormShieldCreated(class AFortMissionStormShield* Shield);
	void OwnerDestroyed(class AActor* InOwner);
};


// Class FortniteGame.FortSuperTowerGrenadeProjectile
// 0x0020 (0x06E8 - 0x06C8)
class AFortSuperTowerGrenadeProjectile : public AFortProjectileBase
{
public:
	TArray<class AActor*>                              BuildingActorsToDestroy;                                  // 0x06C8(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                              BuildingActorsToIgnore;                                   // 0x06D8(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSuperTowerGrenadeProjectile");
		return ptr;
	}


	void DestroyActorsInGridCellLocation(class UBuildingStructuralSupportSystem* BuildingStructuralSupportSystem, const struct FVector& CellLocation, bool bDestroyFloorsQuickly);
	void ClearGridCells(TArray<struct FVector> GridCellsToClear, bool bDestroyFloorsQuickly, const struct FVector& BaseDestination, float AngleDeg);
};


// Class FortniteGame.FortSupplyDropInfo
// 0x02A8 (0x02D8 - 0x0030)
class UFortSupplyDropInfo : public UPrimaryDataAsset
{
public:
	struct FName                                       SupplyDropID;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SupplyDropClass;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESupplyDropSpawnType                               SpawnType;                                                // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreBlueprintOverrides;                                // 0x0041(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	TArray<struct FFortSupplyDropGamePhaseData>        GamePhaseData;                                            // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	ESupplyDropItemTrackType                           ItemTrackType;                                            // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAthenaGamePhase                                   GamePhaseToSpawn;                                         // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                SafeZoneIndexToSpawn;                                     // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       SupplyDropTrackingTags;                                   // 0x0060(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTag                                SpecialActorBaseTag;                                      // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTag                                SpecialActorTag;                                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateBrush                                 SpecialActorMinimapIconBrush;                             // 0x0090(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   SpecialActorMinimapIconScale;                             // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSlateBrush                                 SpecialActorCompassIconBrush;                             // 0x0120(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector2D                                   SpecialActorCompassIconScale;                             // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bShouldMaintainItemCount;                                 // 0x01B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET
	struct FScalableFloat                              NumDeliveryItemsToSpawn;                                  // 0x01B8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinInitialDeliveryDelayTime;                              // 0x01D8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxInitialDeliveryDelayTime;                              // 0x01F8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinTimeBetweenDrops;                                      // 0x0218(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxTimeBetweenDrops;                                      // 0x0238(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinRespawnTime;                                           // 0x0258(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxRespawnTime;                                           // 0x0278(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MinTraceHeight;                                           // 0x0298(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FScalableFloat                              MaxTraceHeight;                                           // 0x02B8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSupplyDropInfo");
		return ptr;
	}

};


// Class FortniteGame.FortSurvivorData
// 0x0068 (0x0098 - 0x0030)
class UFortSurvivorData : public UDataAsset
{
public:
	class UDataTable*                                  SurvivorFemaleFirstNameData;                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SurvivorMaleFirstNameData;                                // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SurvivorFemaleLastNameData;                               // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  SurvivorMaleLastNameData;                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0050(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortSurvivorData");
		return ptr;
	}

};


// Class FortniteGame.FortTagUIDataLookupTable
// 0x0060 (0x0090 - 0x0030)
class UFortTagUIDataLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTagUIData>                      TagUIDataList;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTagUIDataLookupTable");
		return ptr;
	}

};


// Class FortniteGame.FortTaggedActorsManager
// 0x03A8 (0x03D0 - 0x0028)
class UFortTaggedActorsManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x3A8];                                     // 0x0028(0x03A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTaggedActorsManager");
		return ptr;
	}

};


// Class FortniteGame.FortTakerRift
// 0x0030 (0x0768 - 0x0738)
class AFortTakerRift : public ABuildingRift
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0738(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortTakerRift.TakerRiftParticle
	class UParticleSystemComponent*                    TakerRiftParticleComponent;                               // 0x0760(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTakerRift");
		return ptr;
	}

};


// Class FortniteGame.FortTargetSelectionInterface
// 0x0000 (0x0028 - 0x0028)
class UFortTargetSelectionInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTargetSelectionInterface");
		return ptr;
	}


	struct FTransform GetTargetingTransform(EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility);
};


// Class FortniteGame.FortTeamActorInterface
// 0x0000 (0x0028 - 0x0028)
class UFortTeamActorInterface : public UGenericTeamAgentInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamActorInterface");
		return ptr;
	}


	TEnumAsByte<EFortTeam> GetTeam();
};


// Class FortniteGame.FortTeamIdentification
// 0x0010 (0x0038 - 0x0028)
class UFortTeamIdentification : public UObject
{
public:
	struct FColor                                      HUDColor;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UCustomAccessoryColorSwatch*                 CharacterAccessoryColorSwatch;                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamIdentification");
		return ptr;
	}

};


// Class FortniteGame.FortTeamInfo
// 0x0100 (0x0428 - 0x0328)
class AFortTeamInfo : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class AController*>                         TeamMembers;                                              // 0x0330(0x0010) (ZeroConstructor)
	TEnumAsByte<EFortTeam>                             Team;                                                     // 0x0340(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0341(0x0007) MISSED OFFSET
	struct FString                                     ChatRoomId;                                               // 0x0348(0x0010) (Net, ZeroConstructor, Transient)
	struct FTeamSpottedActorInfoArray                  TeamSpottedActors;                                        // 0x0358(0x00C8) (Net)
	class AFortTeamPrivateInfo*                        PrivateInfo;                                              // 0x0420(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamInfo");
		return ptr;
	}


	void OnSpottedActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, const struct FName& BoneName, const struct FVector& Momentum);
	int GetTeamLevel();
	int GetTeamExperience();
};


// Class FortniteGame.FortTeamInfoAthena
// 0x0018 (0x0440 - 0x0428)
class AFortTeamInfoAthena : public AFortTeamInfo
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0428(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamInfoAthena");
		return ptr;
	}

};


// Class FortniteGame.FortTeamInfoPvPBaseDestruction
// 0x01F8 (0x0620 - 0x0428)
class AFortTeamInfoPvPBaseDestruction : public AFortTeamInfo
{
public:
	class AFortPvPBaseCornerstone*                     TeamCornerstone;                                          // 0x0428(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FTeamStrategicBuildingEntryArray            TeamStrategicBuildingActors;                              // 0x0430(0x00C0) (Net, Transient)
	struct FTeamFOBCoreBuildingEntryArray              TeamFOBCoreBuildingActors;                                // 0x04F0(0x00C0) (Net, Transient)
	unsigned char                                      bAllFOBCoresLoaded : 1;                                   // 0x05B0(0x0001) (Net, Transient)
	unsigned char                                      UnknownData00[0x1F];                                      // 0x05B1(0x001F) MISSED OFFSET
	int                                                StrategicBuildingHandleGenerator;                         // 0x05D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                TeamLevel;                                                // 0x05D4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnHandleTeamLevelChanged;                                 // 0x05D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                TeamExperience;                                           // 0x05E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHandleTeamXPChanged;                                    // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOBCoresLoaded;                                         // 0x0600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFOBCoresDestroyed;                                      // 0x0610(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamInfoPvPBaseDestruction");
		return ptr;
	}


	void OnRep_TeamLevel();
	void OnRep_TeamFOBCoreBuildingActors();
	void OnRep_TeamExperience();
	void OnRep_AllFOBCoresLoaded();
	void GetTeamFOBCoresAndSpawnTags(TArray<class ABuildingFOBCoreActor*>* OutFOBCores, TArray<struct FGameplayTagContainer>* OutFOBSpawnTags);
	void GetTeamFOBCores(TArray<class ABuildingFOBCoreActor*>* OutFOBCores);
	class AFortPvPBaseCornerstone* GetTeamCornerstone();
	class AStrategicBuildingActor* GetStrategicBuildingActor(const struct FTeamStrategicBuildingHandle& Handle);
};


// Class FortniteGame.FortTeamPrivateInfo
// 0x01E8 (0x0510 - 0x0328)
class AFortTeamPrivateInfo : public AInfo
{
public:
	class AFortTeamInfo*                               TeamInfo;                                                 // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FPrivateTeamDataArray                       RepData;                                                  // 0x0330(0x0118) (Net)
	struct FLatentRepTeamDataArray                     LatentTeamRepData;                                        // 0x0448(0x00C8) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTeamPrivateInfo");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerBase
// 0x0028 (0x0058 - 0x0030)
class UFortTestControllerBase : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerBase");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerAthenaNoMcpTest
// 0x0008 (0x0060 - 0x0058)
class UFortTestControllerAthenaNoMcpTest : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerAthenaNoMcpTest");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerAutoTest
// 0x0078 (0x00D0 - 0x0058)
class UFortTestControllerAutoTest : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0058(0x0070) MISSED OFFSET
	EFortAutoTestState                                 CurrentState;                                             // 0x00C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerAutoTest");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerBootTest
// 0x0000 (0x0030 - 0x0030)
class UFortTestControllerBootTest : public UGauntletTestControllerBootTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerBootTest");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerCosmeticAudit
// 0x0008 (0x0060 - 0x0058)
class UFortTestControllerCosmeticAudit : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerCosmeticAudit");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerCosmeticMemory
// 0x00D0 (0x0128 - 0x0058)
class UFortTestControllerCosmeticMemory : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0058(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerCosmeticMemory");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerForceOOM
// 0x0000 (0x0058 - 0x0058)
class UFortTestControllerForceOOM : public UFortTestControllerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerForceOOM");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerMemoryReport
// 0x0088 (0x00E0 - 0x0058)
class UFortTestControllerMemoryReport : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0058(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerMemoryReport");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerPerfReplayTest
// 0x0020 (0x0050 - 0x0030)
class UFortTestControllerPerfReplayTest : public UGauntletTestController
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerPerfReplayTest");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerProfileGo
// 0x0068 (0x00C0 - 0x0058)
class UFortTestControllerProfileGo : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0058(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerProfileGo");
		return ptr;
	}

};


// Class FortniteGame.FortTestControllerReplaySmoke
// 0x0168 (0x01C0 - 0x0058)
class UFortTestControllerReplaySmoke : public UFortTestControllerBase
{
public:
	unsigned char                                      UnknownData00[0x168];                                     // 0x0058(0x0168) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTestControllerReplaySmoke");
		return ptr;
	}

};


// Class FortniteGame.FortTheaterCamera
// 0x0000 (0x0880 - 0x0880)
class AFortTheaterCamera : public AFortCameraBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTheaterCamera");
		return ptr;
	}


	void SetTileFocus(class AFortTheaterMapTile* TargetTile);
	struct FVector LimitToTheater(const struct FVector& DesiredPosition);
};


// Class FortniteGame.FortTheaterInfo
// 0x06C0 (0x06F0 - 0x0030)
class UFortTheaterInfo : public UDataAsset
{
public:
	struct FString                                     UniqueId;                                                 // 0x0030(0x0010) (ZeroConstructor)
	int                                                SaveVersion;                                              // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FFortTheaterMapData                         TheaterData;                                              // 0x0048(0x0560) (Edit, DisableEditOnInstance)
	struct FFortTheaterMapMissionData                  Missions;                                                 // 0x05A8(0x0030) (Edit, DisableEditOnInstance)
	struct FFortTheaterMapMissionAlertData             MissionAlerts;                                            // 0x05D8(0x0020) (Edit, DisableEditOnInstance)
	bool                                               bForceIncludeInCookIfReferenced;                          // 0x05F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05F9(0x0007) MISSED OFFSET
	class UClass*                                      SelectedZoneTheme;                                        // 0x0600(0x0008) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	class UFortRegionInfo*                             SelectedZoneRegion;                                       // 0x0608(0x0008) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	EFortTheaterMapTileType                            SelectedTileType;                                         // 0x0610(0x0001) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0611(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       SelectedTileTags;                                         // 0x0618(0x0020) (Edit, Transient, DisableEditOnInstance)
	struct FFortRequirementsInfo                       SelectedTileRequirements;                                 // 0x0638(0x0058) (Edit, Transient, DisableEditOnInstance)
	TArray<struct FFortLinkedQuest>                    SelectedLinkedQuests;                                     // 0x0690(0x0010) (Edit, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<struct FFortTheaterMissionWeight>           SelectedMissionWeightOverrides;                           // 0x06A0(0x0010) (Edit, ZeroConstructor, Transient, DisableEditOnInstance)
	TArray<struct FFortTheaterDifficultyWeight>        SelectedDifficultyWeightOverrides;                        // 0x06B0(0x0010) (Edit, ZeroConstructor, Transient, DisableEditOnInstance)
	bool                                               bCanSelectedTileHaveMissionAlert;                         // 0x06C0(0x0001) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x06C1(0x0007) MISSED OFFSET
	TArray<struct FFortEditorTheaterMapRegionColor>    RegionColors;                                             // 0x06C8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FFortTheaterTileEditorData>          EditorTiles;                                              // 0x06D8(0x0010) (ZeroConstructor)
	int                                                TheaterWidth;                                             // 0x06E8(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TheaterHeight;                                            // 0x06EC(0x0004) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTheaterInfo");
		return ptr;
	}

};


// Class FortniteGame.FortTheaterList
// 0x0010 (0x0040 - 0x0030)
class UFortTheaterList : public UPrimaryDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortTheaterList.ActiveTheatersList

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTheaterList");
		return ptr;
	}

};


// Class FortniteGame.FortTheaterMapTile
// 0x0290 (0x05C0 - 0x0330)
class AFortTheaterMapTile : public AFortClientOnlyActor
{
public:
	bool                                               bFocused;                                                 // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHostSelected;                                            // 0x0331(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bGoToPromptEnabled;                                       // 0x0332(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0333(0x0001) MISSED OFFSET
	struct FFortHexMapCoord                            MapCoord;                                                 // 0x0334(0x000C)
	bool                                               bHasFinishedLoading;                                      // 0x0340(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0341(0x000F) MISSED OFFSET
	EFortTheaterMapTileType                            TileType;                                                 // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	class UClass*                                      ZoneThemeClass;                                           // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                TileIndex;                                                // 0x0360(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RegionIndex;                                              // 0x0364(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SelectionOffset;                                          // 0x0368(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     FocusOffset;                                              // 0x0374(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	float                                              SelectionInterpSpeed;                                     // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NormalBrightness;                                         // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockedBrightness;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FocusedBrightness;                                        // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SelectedBrightnessRange;                                  // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SelectedPulseSpeed;                                       // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableBrightnessCode;                                    // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	float                                              StaticMeshMaterialID;                                     // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     InitialLocation;                                          // 0x03A0(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	struct FFortAvailableMissionData                   MissionData;                                              // 0x03B0(0x00A8)
	struct FFortAvailableMissionData                   LastValidMissionData;                                     // 0x0458(0x00A8)
	struct FDataTableRowHandle                         ZoneDifficultyInfo;                                       // 0x0500(0x0010)
	struct FFortAvailableMissionAlertData              MissionAlertData;                                         // 0x0510(0x0098)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x05A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            AdjacencyMIDs;                                            // 0x05B0(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTheaterMapTile");
		return ptr;
	}


	void OnTileClicked(class AActor* ClickedActor, const struct FKey& ButtonReleased);
	void OnSelectWrapper(bool bIsGameSessionOwner);
	void OnMouseOverEnd(class AActor* MousedOverActor);
	void OnMouseOverBegin(class AActor* MousedOverActor);
	void OnMissionDataUpdated();
	void OnMarkedQuestChanged();
	void OnInitializeTile();
	void OnHostSelect();
	void OnHostDeselect();
	void OnFocus();
	void OnEnableGoToPrompt();
	void OnDisableGoToPrompt();
	void OnDeselectWrapper(bool bIsGameSessionOwner);
	void OnDefocus();
	void OnClientSelect();
	void OnClientDeselect();
	bool IsTileValidForMarkedQuest(class UFortQuestItem** OutMarkedQuest);
	bool IsTileSelectable();
	bool IsTileQuestRecommended();
	bool IsTilePlayable();
	bool IsTileLocked();
	bool IsTileHidden();
	bool IsMissionAlertTile();
	bool HasValidMissionData();
	struct FGameDifficultyInfo GetZoneDifficulty();
	struct FGameplayTagContainer GetMissionAlertVisualTags();
	struct FName GetMissionAlertCategoryName();
	bool DoesTileAllowQuickplay();
};


// Class FortniteGame.FortTheaterMapViewer
// 0x0150 (0x0478 - 0x0328)
class AFortTheaterMapViewer : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<struct FFortAvailableTheaterMissions>       MissionAvailabilityList;                                  // 0x0330(0x0010) (ZeroConstructor)
	TArray<struct FFortAvailableMissionAlerts>         MissionAlertAvailabilityList;                             // 0x0340(0x0010) (ZeroConstructor)
	struct FBox                                        HexMapSize;                                               // 0x0350(0x001C) (IsPlainOldData)
	float                                              HexTileWidth;                                             // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HexTileHeight;                                            // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	TArray<class AFortTheaterMapTile*>                 HexMap;                                                   // 0x0378(0x0010) (ZeroConstructor)
	struct FString                                     CurrentTheaterId;                                         // 0x0388(0x0010) (ZeroConstructor)
	TArray<bool>                                       LeaderTileAccessStates;                                   // 0x0398(0x0010) (ZeroConstructor, Transient)
	class AFortTheaterMapTile*                         CurrentSelectedTile;                                      // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AFortTheaterMapTile*                         CurrentFocusedTile;                                       // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FFortTheaterMapData>                 TheaterList;                                              // 0x03B8(0x0010) (ZeroConstructor)
	int                                                NumValidHexMapTiles;                                      // 0x03C8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xAC];                                      // 0x03CC(0x00AC) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTheaterMapViewer");
		return ptr;
	}


	void HandleMarkedQuestsChanged();
};


// Class FortniteGame.FortThreatParticleActor
// 0x0010 (0x0338 - 0x0328)
class AFortThreatParticleActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortThreatParticleActor");
		return ptr;
	}


	void OnWorldReady();
	void OnThreatOverrideChanged(bool bForceThreatOn);
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo> ThreatLocationInfo);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
};


// Class FortniteGame.FortThreatVisualsManager
// 0x0200 (0x0528 - 0x0328)
class AFortThreatVisualsManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class UClass*                                      CloudBlueprint;                                           // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CloudRadius;                                              // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThreatBoxVolumeTopPadding;                                // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThreatBoxVolumeBottomPadding;                             // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseLocalPlayersOnlyForCloudMinimumHeight;                // 0x0344(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideClouds;                                              // 0x0345(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0346(0x0002) MISSED OFFSET
	float                                              CloudMinimumHeightAbovePlayers;                           // 0x0348(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMinimumHeightAboveGround;                            // 0x034C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMinimumAltitude;                                     // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMaxVerticalDelta;                                    // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMinSpeed;                                            // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMaxSpeed;                                            // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindCloudRadius;                                     // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindGoalRadius;                                      // 0x0364(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindFalloffRadius;                                   // 0x0368(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindInactiveMagnitude;                               // 0x036C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindActiveMagnitude;                                 // 0x0370(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindDesiredDeltaBlendTime;                           // 0x0374(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StormWindDirectionAdditionalAngle;                        // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	struct FThreatLocationArray                        ThreatLocations;                                          // 0x0380(0x00C0) (Net, Transient)
	struct FStormWindArray                             StormWindArray;                                           // 0x0440(0x00C0) (Net, Transient)
	TArray<struct FVector>                             GoalActorLocations;                                       // 0x0500(0x0010) (Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0510(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortThreatVisualsManager");
		return ptr;
	}


	bool StormsExist();
	void SetMinimumCloudAltitude(float NewMinimumAltitude);
	void SetCloudsAreHidden(bool bHide);
	void ResetMinimumCloudAltitude();
	void OnWorldReady();
	void OnThreatCloudsChanged(TArray<struct FThreatLocationInfo> ThreatLocationInfo);
	void OnRep_ThreatLocations();
	void OnRep_StormWinds();
	void OnRep_HideClouds();
	void OnRep_GoalActorLocations();
	void OnBeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& EndLocation);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	class AThreatCloud* GetThreatCloud(const struct FThreatLocationInfo& ThreatLocInfo);
	bool GetCloudsAreHidden();
	void BeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& ThreatLocation);
};


// Class FortniteGame.FortTieredCollectionLayout
// 0x00E8 (0x0118 - 0x0030)
class UFortTieredCollectionLayout : public UDataAsset
{
public:
	unsigned char                                      bUseTierAsRandomSeed : 1;                                 // 0x0030(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bFiniteTiers : 1;                                         // 0x0030(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                MaxNumberOfTiersAllowed;                                  // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                InitialTierUnlocked;                                      // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FTieredNamedCollectionProgressionData       SpawnWaveProgressions;                                    // 0x0040(0x0018) (Edit, DisableEditOnInstance)
	struct FDifficultyCollectionProgressionData        DifficultyProgressions;                                   // 0x0058(0x0018) (Edit, DisableEditOnInstance)
	struct FTieredNamedCollectionProgressionData       ModifierProgressions;                                     // 0x0070(0x0018) (Edit, DisableEditOnInstance)
	struct FRewardBadgesCollectionProgressionData      RewardBadgesProgression;                                  // 0x0088(0x0018) (Edit, DisableEditOnInstance)
	struct FCollectionLootSetData                      LootSetProgression;                                       // 0x00A0(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       CollectionLayoutDisplayName;                              // 0x00B8(0x0018) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x28];                                      // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortTieredCollectionLayout.PrerequisiteLayout
	struct FCurveTableRowHandle                        TierToMissionPointLookupTable;                            // 0x00F8(0x0010) (Edit, DisableEditOnInstance)
	struct FGuid                                       LayoutGUID;                                               // 0x0108(0x0010) (Edit, EditConst, DuplicateTransient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTieredCollectionLayout");
		return ptr;
	}


	bool ShouldUseTierAsRandomSeed();
	int GetMissionPointsForTier(int Tier);
	struct FText GetCollectionLayoutDisplayName();
};


// Class FortniteGame.FortTimeOfDayCollection
// 0x0010 (0x0040 - 0x0030)
class UFortTimeOfDayCollection : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty FortniteGame.FortTimeOfDayCollection.TimeOfDayManagers

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTimeOfDayCollection");
		return ptr;
	}

};


// Class FortniteGame.FortTimeOfDayData
// 0x0010 (0x0040 - 0x0030)
class UFortTimeOfDayData : public UPrimaryDataAsset
{
public:
	TArray<struct FWorldAmbientPropertiesMatchingGameContext> WorldAmbientPropertiesList;                               // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTimeOfDayData");
		return ptr;
	}

};


// Class FortniteGame.FortTimeOfDayManager
// 0x0898 (0x0BC0 - 0x0328)
class AFortTimeOfDayManager : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	float                                              TimeOfDay;                                                // 0x0330(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeOfDayReplicated;                                      // 0x0334(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortDayPhase>                         CurrentDayNightPhase;                                     // 0x0338(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortDayPhase>                         TransitionFromPhase;                                      // 0x0339(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortDayPhase>                         TransitionToPhase;                                        // 0x033A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x033B(0x0001) MISSED OFFSET
	float                                              TransitionBlendPercent;                                   // 0x033C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DefaultTimeOfDaySpeed;                                    // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartTimeOfDayInGame;                                     // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDaySpeed;                                           // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              MaxTimeOfDayAccumulationFactor;                           // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeOfDayAccumulator;                                     // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	class UMaterialInterface*                          BasePostProcessMaterial;                                  // 0x0358(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bBasePostProcessMaterialDisabledInBROnly : 1;             // 0x0360(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	class UMaterialInstanceDynamic*                    PostProcessMaterialMID;                                   // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           bHasClonedPPVs;                                           // 0x0370(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      bSkipNight : 1;                                           // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTimeStarted : 1;                                         // 0x0374(0x0001) (Net, Transient)
	unsigned char                                      bHeightFogEnabled : 1;                                    // 0x0374(0x0001) (Net)
	unsigned char                                      bBaseHeightFogOnAltitude : 1;                             // 0x0374(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0375(0x0003) MISSED OFFSET
	float                                              HeightFogZOffset;                                         // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	TArray<struct FCameraAltitudeAdjustments>          AltitudeAdjustments;                                      // 0x0380(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FRotator                                    SunriseDirectionalLightRotation;                          // 0x0390(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    SunsetDirectionalLightRotation;                           // 0x039C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET
	struct FQuat                                       DirectionalLightQuat;                                     // 0x03B0(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x14];                                      // 0x03C0(0x0014) MISSED OFFSET
	struct FRotator                                    SunriseSunObjectRotation;                                 // 0x03D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    SunsetSunObjectRotation;                                  // 0x03E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              SunObjectDivergencePower;                                 // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToSunOrMoon;                                      // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	class UDirectionalLightComponent*                  DirectionalLightComponent;                                // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UExponentialHeightFogComponent*              ActiveHeightFogComponent;                                 // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UFortDayPhaseChangeParams*                   DayPhaseChangeEventParams;                                // 0x0408(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FDayPhaseInfo                               LightAndFogPhaseSettings[0x4];                            // 0x0410(0x0170) (Edit)
	class UPostProcessComponent*                       MorningPostProcessComponent;                              // 0x09D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       DayPostProcessComponent;                                  // 0x09D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       EveningPostProcessComponent;                              // 0x09E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       NightPostProcessComponent;                                // 0x09E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UPostProcessComponent*                       DayPhasePostProcessComponent[0x4];                        // 0x09F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	struct FExponentialHeightFogValues                 CurrentTimeOfDayFogValues;                                // 0x0A10(0x0044) (BlueprintVisible)
	struct FLinearColor                                CurrentTimeOfDayDirectionalLightColor;                    // 0x0A54(0x0010) (BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0A64(0x0004) MISSED OFFSET
	class UMaterialParameterCollection*                MaterialParameterCollection;                              // 0x0A68(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RainParticleSystemRelativeOffset;                         // 0x0A70(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0A7C(0x0004) MISSED OFFSET
	class UStaticMesh*                                 SunMesh;                                                  // 0x0A80(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 MoonMesh;                                                 // 0x0A88(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UMaterialInterface*>                  SunMaterialOverrides;                                     // 0x0A90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>                  MoonMaterialOverrides;                                    // 0x0AA0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              SunScale;                                                 // 0x0AB0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MoonScale;                                                // 0x0AB4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          SkyDomeMaterial;                                          // 0x0AB8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	class UMaterialInterface*                          StarMapMaterial;                                          // 0x0AC0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	class UTexture2D*                                  CloudMaskTexture;                                         // 0x0AC8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseStormValues;                                          // 0x0AD0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0AD1(0x0003) MISSED OFFSET
	struct FLinearColor                                StormLightColor;                                          // 0x0AD4(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0AE4(0x0004) MISSED OFFSET
	class UMaterialInstance*                           StormMaterialInst;                                        // 0x0AE8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FExponentialHeightFogValues                 StormFogValues;                                           // 0x0AF0(0x0044) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0B34(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDayPhaseChangeEvent;                                    // 0x0B38(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	class USkyLightComponent*                          SkyLightComp;                                             // 0x0B48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    RainParticleSystemComp;                                   // 0x0B50(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SunOrMoonMeshComp;                                        // 0x0B58(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SkyDomeMeshComp;                                          // 0x0B60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StarMapMeshComp;                                          // 0x0B68(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ActiveSkyBoxMat;                                          // 0x0B70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    StarMapMID;                                               // 0x0B78(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              StormStrength;                                            // 0x0B80(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3C];                                      // 0x0B84(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTimeOfDayManager");
		return ptr;
	}


	void ToggleSkipNight();
	void ToggleDebugForceStormEffects();
	void SetUseSpecificTimeOfDayEditing(bool bShouldUseSpecificTimeOfDay);
	void SetTimeOfDaySpeedFloat(float InTimeOfDaySpeed);
	void SetTimeOfDaySpeed(float TimeOfDaySpeedFactor);
	void SetTimeOfDayManagerVisibility(bool bVisible);
	void SetTimeOfDayInHours(float TimeOfDayInHours);
	void SetTimeOfDayFloat(float TimeOfDayInHours);
	void SetTimeOfDayAbsoluteSpeed(float NewTimeOfDaySpeed);
	void SetTimeOfDay(const struct FString& NewTimeOfDay);
	void SetStormStrength(float NewStormStrength);
	void SetSpecificTimeOfDayInEditor(float NewTimeOfDayInEditor);
	void SetFogDirectionalInscatteringMultiplier(float NewFogDirectionalInscatteringMultiplier);
	void SetDirectionalLightColorMultiplier(float NewDirectionalLightColorMultiplier);
	void SetDayPhase(const struct FString& DayPhase);
	void OnUpdateDirectionalLightForTimeOfDay(const struct FLinearColor& AboutToApplyDirectionalLightColor);
	void OnStormStart();
	void OnStormEnd();
	void OnRep_TimeOfDayInit();
	void OnRep_TimeOfDay();
	void OnRep_HeightFogEnabled();
	void OnDayPhaseChange();
	struct FExponentialHeightFogValues STATIC_MakeExponentialHeightFogValues(float FogDensity, float FogHeightFalloff, float FogMaxOpacity, float StartDistance, float DirectionalInscatteringExponent, float DirectionalInscatteringStartDistance, const struct FLinearColor& DirectionalInscatteringColor, const struct FLinearColor& FogInscatteringColor, float VolumetricFogScatteringDistribution, float VolumetricFogExtinctionScale, float VolumetricFogDistance);
	class AFortTimeOfDayManager* STATIC_GetTimeOfDayManagerFromContext(class UObject* WorldContextObject);
	TArray<struct FThreatLocationInfo> GetThreatClouds();
	float GetStormStrength();
	TEnumAsByte<EFortDayPhase> GetPreviousDayPhase();
	void FFToTimeOfDay(float FastForwardTime, float FastForwardSpeed);
	void STATIC_BreakExponentialHeightFogValues(const struct FExponentialHeightFogValues& HeightFogValues, float* FogDensity, float* FogHeightFalloff, float* FogMaxOpacity, float* StartDistance, float* DirectionalInscatteringExponent, float* DirectionalInscatteringStartDistance, struct FLinearColor* DirectionalInscatteringColor, struct FLinearColor* FogInscatteringColor, float* VolumetricFogScatteringDistribution, float* VolumetricFogExtinctionScale, float* VolumetricFogDistance);
};


// Class FortniteGame.FortTips
// 0x0018 (0x0048 - 0x0030)
class UFortTips : public UDataAsset
{
public:
	TArray<struct FText>                               Tips;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               DisplayOnPlatformPC;                                      // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayOnPlatformXbox;                                    // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayOnPlatformPS4;                                     // 0x0042(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayOnPlatformSwitch;                                  // 0x0043(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayOnPlatformMobile;                                  // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTips");
		return ptr;
	}

};


// Class FortniteGame.FortTokenToTextTable
// 0x0060 (0x0090 - 0x0030)
class UFortTokenToTextTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipTokenInfo>               TokenInfoList;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTokenToTextTable");
		return ptr;
	}

};


// Class FortniteGame.FortTooltipDisplayStatsList
// 0x0010 (0x0040 - 0x0030)
class UFortTooltipDisplayStatsList : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayStatsCategory>    TooltipCategories;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipDisplayStatsList");
		return ptr;
	}

};


// Class FortniteGame.FortTooltipDisplayStatsLookupTable
// 0x0060 (0x0090 - 0x0030)
class UFortTooltipDisplayStatsLookupTable : public UDataAsset
{
public:
	TArray<struct FFortTooltipDisplayInfo>             TooltipDisplayStats;                                      // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipDisplayStatsLookupTable");
		return ptr;
	}

};


// Class FortniteGame.FortTooltipLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortTooltipLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipLibrary");
		return ptr;
	}


	struct FText STATIC_FormatAttributeBuffs(const struct FFortAttributeInfo& AttributeInfo, float AdditiveBuff, float MultiplicativeBuff);
};


// Class FortniteGame.FortTooltipInterface
// 0x0000 (0x0028 - 0x0028)
class UFortTooltipInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipInterface");
		return ptr;
	}


	class UClass* GetTooltip();
	class UFortTooltipDisplayStatsList* GetDisplayStats();
};


// Class FortniteGame.FortTooltipMap
// 0x0060 (0x0090 - 0x0030)
class UFortTooltipMap : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0030(0x0050) MISSED OFFSET
	TArray<struct FFortTooltipMapEntry>                Mapping;                                                  // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTooltipMap");
		return ptr;
	}

};


// Class FortniteGame.FortTouchInputSettings
// 0x0060 (0x0090 - 0x0030)
class UFortTouchInputSettings : public UDataAsset
{
public:
	class UCurveFloat*                                 LookSensitivityCurve;                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 LookVelocityScaleCurve;                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MovementCurve;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortTouchAimAssistSettings                 TouchAimAssist;                                           // 0x0048(0x0048) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTouchInputSettings");
		return ptr;
	}

};


// Class FortniteGame.FortTournamentManager
// 0x00D8 (0x0100 - 0x0028)
class UFortTournamentManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0028(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTournamentManager");
		return ptr;
	}

};


// Class FortniteGame.FortTournamentPlayerControllerFrontEnd
// 0x0000 (0x1A90 - 0x1A90)
class AFortTournamentPlayerControllerFrontEnd : public AFortPlayerControllerFrontEnd
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTournamentPlayerControllerFrontEnd");
		return ptr;
	}

};


// Class FortniteGame.FortToyAbilityInterface
// 0x0000 (0x0028 - 0x0028)
class UFortToyAbilityInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToyAbilityInterface");
		return ptr;
	}


	class AActor* NotifyAbilityToSpawnToy(const struct FTransform& DesiredLocation);
	void NotifyAbilityToReleaseToy();
};


// Class FortniteGame.FortToyContext
// 0x0000 (0x0028 - 0x0028)
class UFortToyContext : public UBlueprintContextBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToyContext");
		return ptr;
	}


	void PrintToMessageFeed(const struct FText& MESSAGE);
	struct FText PickToyOwnerNameStyle(class AFortPlayerState* Instigator);
	struct FString GetPlayerNameBasedOnStreamerSettings(class AFortPlayerState* Instigator);
	struct FText FormatPlayerNameForDisplay(class AFortPlayerState* Subject, EMessageFeedSubject SubjectType);
	bool ConditionalPrintToMessageFeed(class AFortPlayerState* Instigator, const struct FVector& MessageLocation, EMessageFeedRelationshipFilter RelationshipFilter, const struct FText& MESSAGE);
};


// Class FortniteGame.FortToyInterface
// 0x0000 (0x0028 - 0x0028)
class UFortToyInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToyInterface");
		return ptr;
	}


	void StartToyFadeOutDueToNewPlacement();
	void NotifyToyInstanceOfReuse();
	void InitializeToyPreviewInFrontend();
	void InitializeToyInstance(class AFortPlayerController* OwningPC, int NumTimesSummoned);
};


// Class FortniteGame.FortToyPreviewActor
// 0x0010 (0x0338 - 0x0328)
class AFortToyPreviewActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToyPreviewActor");
		return ptr;
	}


	void PreviewToy(class UAthenaToyItemDefinition* Toy);
};


// Class FortniteGame.FortTracerBase
// 0x00B0 (0x03E0 - 0x0330)
class AFortTracerBase : public AFortClientOnlyActor
{
public:
	class UMovementComp_Tracer*                        TracerMovementComponent;                                  // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TracerMesh;                                               // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBulletWhipTrackerComponentBase*             BulletWhipTrackerComponent;                               // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FCurveTableRowHandle                        Speed;                                                    // 0x0348(0x0010) (Edit, BlueprintVisible)
	float                                              SpeedScaleMinRange;                                       // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedScaleMaxRange;                                       // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedScaleMinMultiplier;                                  // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedScaleMaxMultiplier;                                  // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MeshScaleMult;                                            // 0x0368(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              MeshScaleTime;                                            // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0378(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortTracerBase.BulletWhipTrackerComponentClass
	unsigned char                                      bScaleOnDeath : 1;                                        // 0x03A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bScaleSpeed : 1;                                          // 0x03A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bScaledUp : 1;                                            // 0x03A0(0x0001) (Edit, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bDead : 1;                                                // 0x03A0(0x0001) (Edit, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bOwnedByPool : 1;                                         // 0x03A0(0x0001) (Edit, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      UnknownData01[0x33];                                      // 0x03A1(0x0033) MISSED OFFSET
	float                                              CurrentScale;                                             // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTracerBase");
		return ptr;
	}


	void Init(const struct FVector& Start, const struct FVector& End);
};


// Class FortniteGame.FortTrack
// 0x0190 (0x0DC8 - 0x0C38)
class AFortTrack : public ABuildingProp
{
public:
	struct FScriptMulticastDelegate                    OnTrackGraphChanged;                                      // 0x0C38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FText                                       ToggleSwitchText;                                         // 0x0C48(0x0018) (Edit, DisableEditOnInstance)
	float                                              ToggleInteractTime;                                       // 0x0C60(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0C64(0x0004) MISSED OFFSET
	class UStaticMesh*                                 TrackPieceMeshesByType[0x5];                              // 0x0C68(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseFloorMesh;                                            // 0x0C90(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0C91(0x0007) MISSED OFFSET
	class UStaticMesh*                                 TrackFloorMeshesByVerticality[0x3];                       // 0x0C98(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FTrackConnectorMeshConfig>           ConnectorMeshConfigs;                                     // 0x0CB0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AFortTrack*                                  NeighborsByDirection[0x4];                                // 0x0CC0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                SwitchState;                                              // 0x0CE0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ConfigurationIdx;                                         // 0x0CE4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FCollisionResponseContainer                 FloorCollisionResponseContainer;                          // 0x0CE8(0x0020) (Edit, DisableEditOnInstance)
	class UStaticMeshComponent*                        TrackMeshComp;                                            // 0x0D08(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TrackFloorMeshComp;                                       // 0x0D10(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ConnectorMeshCompsByDirection[0x4];                       // 0x0D18(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlacementCollision1;                                      // 0x0D38(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlacementCollision2;                                      // 0x0D40(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USplineComponent*                            SplineComp1;                                              // 0x0D48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USplineComponent*                            SplineComp2;                                              // 0x0D50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SwitchCompBase;                                           // 0x0D58(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         SwitchComp;                                               // 0x0D60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x60];                                      // 0x0D68(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrack");
		return ptr;
	}


	void OnSwitchStateChanged(int NewSwitchState, int OldSwitchState, int NumSwitchStates);
	void OnRep_SwitchState();
	void OnRep_NeighborsByDirection();
	void OnRep_ConfigurationIdx();
	void OnConfigurationChanged(int NewConfigurationIdx, int OldConfigurationIdx);
	bool IsConnectedToTrackList(TArray<class AFortTrack*> TargetTracks);
	bool IsConnectedToTrack(class AFortTrack* TargetTrack);
	void InitializeTrack(class UPrimitiveComponent* InSwitchComp);
	void GetSplineFromPositionAndOrientation(const struct FVector& InLocation, const struct FRotator& InRotation, class USplineComponent** OutSpline, float* OutDistanceAlongSpline, bool* OutReverseDirection);
	void GetSplineFromIncomingNeighbor(class AFortTrack* InNeighbor, class USplineComponent** OutSpline, bool* OutReverseDirection);
	float GetPathDistanceToTrack(class AFortTrack* TargetTrack, class USplineComponent* InCurrentSpline, float CurrentDistanceAlongSpline, bool InReverseDirection);
	void GetOutgoingNeighborFromSpline(class USplineComponent* InSpline, bool InReverseDirection, class AFortTrack** OutNeighbor);
};


// Class FortniteGame.FortTrack_CustomSpline
// 0x0008 (0x0DD0 - 0x0DC8)
class AFortTrack_CustomSpline : public AFortTrack
{
public:
	class USplineComponent*                            CustomSplineComp;                                         // 0x0DC8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrack_CustomSpline");
		return ptr;
	}

};


// Class FortniteGame.FortTrackMovementComponent
// 0x00A0 (0x01D0 - 0x0130)
class UFortTrackMovementComponent : public UMovementComponent
{
public:
	class AFortTrack*                                  OptionalEditorPlacedTrack;                                // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TrackSnapExtent;                                          // 0x0138(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TurnSpeed;                                                // 0x0144(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SplineLocationOffsetZ;                                    // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DiscoverSplineFrequency;                                  // 0x0154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrackVelocity;                                            // 0x0158(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bReverseYawWhenReversedOnSpline;                          // 0x015C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x015D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOutOfTrack;                                             // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLostTrack;                                              // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FTrackMovement                              TrackMovement;                                            // 0x0180(0x0010) (Transient)
	struct FRepTrackMovement                           ReplicatedTrackMovement;                                  // 0x0190(0x0018) (Net)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01A8(0x0010) MISSED OFFSET
	float                                              ClientPredictionSpeedModifier;                            // 0x01B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x01BC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrackMovementComponent");
		return ptr;
	}


	void OnRep_ReplicatedTrackMovement();
	bool IsReverseDirection();
	class AFortTrack* GetTrack();
	class USplineComponent* GetSpline();
	float GetDistanceAlongSpline();
	void FlipDirection();
};


// Class FortniteGame.FortTrackPreview
// 0x0038 (0x04C8 - 0x0490)
class AFortTrackPreview : public AFortDecoPreview
{
public:
	class UStaticMesh*                                 TrackPieceMeshesByType[0x5];                              // 0x0490(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CellSize;                                                 // 0x04B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        TrackMeshComp;                                            // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrackPreview");
		return ptr;
	}


	void InitializeTrackPreview(class UStaticMeshComponent* InTrackMeshComp);
};


// Class FortniteGame.FortTrajectoryAbilityInterface
// 0x0000 (0x0028 - 0x0028)
class UFortTrajectoryAbilityInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrajectoryAbilityInterface");
		return ptr;
	}


	void InitTrajectoryVariables();
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents);
	class UClass* GetProjectileTrajectoryActor();
};


// Class FortniteGame.FortWeaponItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortWeaponItemDefinitionTooltip : public UFortWorldItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortTrapItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortTrapItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrapItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortTrapTooltip
// 0x0090 (0x0120 - 0x0090)
class UFortTrapTooltip : public UFortWorldItemTooltip
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0090(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTrapTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortTwitchAccount
// 0x01D8 (0x0208 - 0x0030)
class UFortTwitchAccount : public UFortLinkedAccount
{
public:
	unsigned char                                      UnknownData00[0x1D8];                                     // 0x0030(0x01D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortTwitchAccount");
		return ptr;
	}


	void HandleQuestsUpdated();
};


// Class FortniteGame.FortInventorySortFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortInventorySortFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortInventorySortFunctionLibrary");
		return ptr;
	}


	struct FText STATIC_GetCriterionDisplayNameOfSortType(EInventoryContentSortType SortType);
};


// Class FortniteGame.FortBrushSizeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFortBrushSizeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBrushSizeFunctionLibrary");
		return ptr;
	}


	TEnumAsByte<EFortBrushSize> STATIC_ShrinkBrushSize(TEnumAsByte<EFortBrushSize> OriginalBrushSize, int Steps);
	TEnumAsByte<EFortBrushSize> STATIC_GrowBrushSize(TEnumAsByte<EFortBrushSize> OriginalBrushSize, int Steps);
};


// Class FortniteGame.FortMultiSizeBrushAsset
// 0x0330 (0x0360 - 0x0030)
class UFortMultiSizeBrushAsset : public UDataAsset
{
public:
	struct FFortMultiSizeBrush                         Brush;                                                    // 0x0030(0x0330) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMultiSizeBrushAsset");
		return ptr;
	}

};


// Class FortniteGame.FortUIBaseClass
// 0x0068 (0x0480 - 0x0418)
class AFortUIBaseClass : public AHUD
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0418(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIBaseClass");
		return ptr;
	}

};


// Class FortniteGame.FortUIFeedbackBank
// 0x00A8 (0x00D8 - 0x0030)
class UFortUIFeedbackBank : public UDataAsset
{
public:
	TMap<struct FName, struct FFortUIFeedback>         FeedbackEvents;                                           // 0x0030(0x0050) (Edit, ZeroConstructor)
	bool                                               bIsAthenaData;                                            // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TMap<struct FName, struct FFortUIFeedbackBlueprintOnly> BankDefinedFeedbackEvents;                                // 0x0088(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIFeedbackBank");
		return ptr;
	}

};


// Class FortniteGame.FortUIFriendNotification
// 0x0030 (0x00D0 - 0x00A0)
class UFortUIFriendNotification : public UFortUINotification
{
public:
	EFortUIFriendNotificationType                      FriendActionType;                                         // 0x00A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	struct FUniqueNetIdRepl                            FriendUniqueId;                                           // 0x00A8(0x0028) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIFriendNotification");
		return ptr;
	}

};


// Class FortniteGame.FortUIManagerInterface
// 0x0000 (0x0028 - 0x0028)
class UFortUIManagerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIManagerInterface");
		return ptr;
	}


	void KillConfirmation();
};


// Class FortniteGame.FortUIProxyActor
// 0x0098 (0x03C0 - 0x0328)
class AFortUIProxyActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	TArray<class UAttributeSet*>                       AttributeSets;                                            // 0x0338(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst)
	class UFortAbilitySystemComponent*                 AbilitySystemComponent;                                   // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFortItemDefinition*                         ItemDef;                                                  // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FFortAttributeInitializationKey             InitializerKey;                                           // 0x0358(0x0010)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0368(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIProxyActor");
		return ptr;
	}

};


// Class FortniteGame.FortUIZone
// 0x0320 (0x07A0 - 0x0480)
class AFortUIZone : public AFortUIBaseClass
{
public:
	struct FFontRenderInfo                             TextRenderInfo;                                           // 0x0480(0x0028)
	class UReporterGraph*                              CombatGraph;                                              // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              FactorGraph;                                              // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              IntensityGraph;                                           // 0x04B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              PIDValuesGraph;                                           // 0x04C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              PIDContributionsGraph;                                    // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              UtilitiesGraph;                                           // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x04D8(0x0028) MISSED OFFSET
	TEnumAsByte<EFortContextualReticleTypes>           CurrentContextualReticleIconType;                         // 0x0500(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0501(0x0003) MISSED OFFSET
	struct FColor                                      CurrentContextualReticleColor;                            // 0x0504(0x0004) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x140];                                     // 0x0508(0x0140) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortUIZone.ContextualReticleIcons
	unsigned char                                      UnknownData03[0x28];                                      // 0x0648(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortUIZone.ActorCanvasArrowBrush
	unsigned char                                      UnknownData04[0x118];                                     // 0x0670(0x0118) MISSED OFFSET
	TArray<class UFortSpottedActorIndicator*>          SpottedActorIndicators;                                   // 0x0788(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0798(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIZone");
		return ptr;
	}


	void ToggleTargetInfoSensing();
	void ToggleTargetInfoPaths();
	void ToggleTargetInfoLock(bool bTraceComplex);
	void ToggleTargetInfoAI();
	void ToggleTargetInfo();
};


// Class FortniteGame.FortUIPvP
// 0x0008 (0x07A8 - 0x07A0)
class AFortUIPvP : public AFortUIZone
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x07A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIPvP");
		return ptr;
	}

};


// Class FortniteGame.FortUIPvPBaseDestruction
// 0x0000 (0x07A8 - 0x07A8)
class AFortUIPvPBaseDestruction : public AFortUIPvP
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUIPvPBaseDestruction");
		return ptr;
	}

};


// Class FortniteGame.FortUITeamInfo
// 0x01E8 (0x0210 - 0x0028)
class UFortUITeamInfo : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamMemberFinishedSynchronizing;                        // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamMemberAdded;                                        // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamMemberRemoved;                                      // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamMemberStateChanged;                                 // 0x0060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamMemberPromoted;                                     // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTeamHitPointFractionsChanged;                           // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0xA0];                                      // 0x0090(0x00A0) MISSED OFFSET
	class UFortPartyContext*                           TeamContext;                                              // 0x0130(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortTeam>                             TeamAssignment;                                           // 0x0138(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	class UEnum*                                       FortTeamUEnum;                                            // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalFilledSlots;                                         // 0x0148(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                PreviousFilledSlots;                                      // 0x014C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC0];                                      // 0x0150(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUITeamInfo");
		return ptr;
	}


	void OnTeamMemberStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void OnTeamMemberSimpleDelegate__DelegateSignature();
	void OnTeamMemberRemovedDelegate__DelegateSignature(int PlayerIndex);
	void OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature(const struct FUniqueNetIdRepl& NewTeamMemberId);
	void OnTeamMemberAddedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& NewTeamMemberInfo);
	void OnTeamHitPointFractionsChanged__DelegateSignature(TArray<float> HealthFractions, TArray<float> ShieldFractions);
	bool IsTeamMemberSynchronizing(const struct FUniqueNetIdRepl& PlayerID);
	void GetTeamMembers(TArray<struct FFortTeamMemberInfo>* TeamMembers);
	void GetTeamMemberIDs(TArray<struct FUniqueNetIdRepl>* TeamMemberIDs);
	void GetTeamHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions);
};


// Class FortniteGame.FortUpdateManager
// 0x0008 (0x0120 - 0x0118)
class UFortUpdateManager : public UUpdateManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUpdateManager");
		return ptr;
	}

};


// Class FortniteGame.FortAsyncAction_CheckForUpdate
// 0x0038 (0x0068 - 0x0030)
class UFortAsyncAction_CheckForUpdate : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    OnUpToDate;                                               // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUpdateRequired;                                         // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UObject*                                     WorldContextObject;                                       // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowDialogOnFailure;                                     // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0059(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_CheckForUpdate");
		return ptr;
	}


	class UFortAsyncAction_CheckForUpdate* STATIC_CheckForUpdate(class UObject* InWorldContextObject, bool InShowDialogOnFailure);
};


// Class FortniteGame.FortWorldManager
// 0x0670 (0x0998 - 0x0328)
class AFortWorldManager : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0328(0x0060) MISSED OFFSET
	TArray<struct FFortLevelStreamingInfo>             StreamedLevels;                                           // 0x0388(0x0010) (ZeroConstructor)
	TArray<struct FFortPlacementLocationTagHandler>    PlacementLocationTagHandlers;                             // 0x0398(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bSavingEnabled : 1;                                       // 0x03A8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	uint32_t                                           SaveFrequency_Seconds;                                    // 0x03AC(0x0004) (ZeroConstructor, Transient, Config, IsPlainOldData)
	unsigned char                                      bStreamInBuildings : 1;                                   // 0x03B0(0x0001) (Edit)
	unsigned char                                      bConstructTileWorld : 1;                                  // 0x03B0(0x0001) (Edit)
	unsigned char                                      bUseSimMaps : 1;                                          // 0x03B0(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	int                                                NumNonAutoconstructedTiles;                               // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDataTableRowHandle                         GameDifficultyRowPIEOverride;                             // 0x03B8(0x0010) (Edit)
	class UClass*                                      ZoneThemeForPIE;                                          // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortWindIntensityAndDirection              InitialGlobalWind;                                        // 0x03D0(0x0008) (Net, Transient)
	TEnumAsByte<EFortWorldManagerState>                WorldManagerState;                                        // 0x03D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET
	class UWorldTileManager*                           TileManager;                                              // 0x03E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	int                                                X_Size;                                                   // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Y_Size;                                                   // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Z_StructuralGrid_Size;                                    // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VerticalCellNumOffsetFromOrigin;                          // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TileEdgeSize;                                             // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	class UWorldTheme*                                 Theme;                                                    // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefaultLootQuotaCategory;                                 // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFortTileLootData                           LootData;                                                 // 0x0410(0x0318)
	int                                                MaxTiles;                                                 // 0x0728(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseFixedSeed;                                            // 0x072C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x072D(0x0003) MISSED OFFSET
	int                                                FixedSeed;                                                // 0x0730(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0734(0x0004) MISSED OFFSET
	TArray<struct FWorldTileSubArray>                  Y;                                                        // 0x0738(0x0010) (ZeroConstructor)
	struct FVector                                     FriendlyPlayerSpawnExtent;                                // 0x0748(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     PadPlayerSpawnExtent;                                     // 0x0754(0x000C) (Edit, IsPlainOldData)
	float                                              DangerPlayerSpawnExclusionRadius;                         // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ObjectivePlayerSpawnExclusionRadius;                      // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTagContainer                       OverrideInitialPlayerSpawnTags;                           // 0x0768(0x0020) (Edit)
	struct FGameplayTagContainer                       OverrideBackupPlayerSpawnTags;                            // 0x0788(0x0020) (Edit)
	struct FFortStartingMissionInfo                    StartingMissionInfo;                                      // 0x07A8(0x0018) (Edit)
	class UFortWorldRecord*                            CurrentWorldRecord;                                       // 0x07C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFortZoneRecord*                             CurrentZoneRecord;                                        // 0x07C8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x20];                                      // 0x07D0(0x0020) MISSED OFFSET
	class UFortUserCloudHelperComponent*               CloudHelper;                                              // 0x07F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                CurrentZoneIndex;                                         // 0x07F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasCreatedMissions;                                      // 0x07FC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasCreatedPrimaryAdditionalFoundations;                  // 0x07FD(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasSpawnedActorsForMissions;                             // 0x07FE(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bZoneCompleted;                                           // 0x07FF(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bZoneFinished;                                            // 0x0800(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCreatedMissionRecord;                                    // 0x0801(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x6];                                       // 0x0802(0x0006) MISSED OFFSET
	struct FFortMissionManagerRecord                   MissionManagerRecord;                                     // 0x0808(0x0038) (Transient)
	TArray<struct FFortMissionEntry>                   ReactiveMissionsToAdd;                                    // 0x0840(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortDeferredNewActorData>           DeferredActors;                                           // 0x0850(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData09[0x110];                                     // 0x0860(0x0110) MISSED OFFSET
	int                                                FinalNumChosenBuildingFoundations;                        // 0x0970(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0974(0x0004) MISSED OFFSET
	TArray<class ABuildingFoundation*>                 ChosenBuildingFoundations;                                // 0x0978(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FFortPlayerEarnedItemCaches>         UnsavedPlayerEarnedItemCaches;                            // 0x0988(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldManager");
		return ptr;
	}


	void OnRep_InitialGlobalWind();
};


// Class FortniteGame.FortUserCloudHelperComponent
// 0x0080 (0x0170 - 0x00F0)
class UFortUserCloudHelperComponent : public UActorComponent
{
public:
	uint64_t                                           LastIssuedRequestHandle;                                  // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x78];                                      // 0x00F8(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortUserCloudHelperComponent");
		return ptr;
	}

};


// Class FortniteGame.FortValidationInterface
// 0x0000 (0x0028 - 0x0028)
class UFortValidationInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortValidationInterface");
		return ptr;
	}

};


// Class FortniteGame.FortVariantTokenType
// 0x0030 (0x03C0 - 0x0390)
class UFortVariantTokenType : public UFortAccountItemDefinition
{
public:
	EItemProfileType                                   ProfileType;                                              // 0x0390(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	class UFortItemDefinition*                         cosmetic_item;                                            // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                VariantChanelTag;                                         // 0x03A0(0x0008) (Edit)
	struct FGameplayTag                                VariantNameTag;                                           // 0x03A8(0x0008) (Edit)
	bool                                               bAutoEquipVariant;                                        // 0x03B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMarkItemUnseen;                                          // 0x03B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCreateGiftbox;                                           // 0x03B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD];                                       // 0x03B3(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVariantTokenType");
		return ptr;
	}


	struct FGameplayTag GetVariantNameTag();
	struct FGameplayTag GetVariantChannelTag();
	class UFortItemDefinition* GetCosmeticItem();
};


// Class FortniteGame.FortVehicleAudioVoice
// 0x0090 (0x06E0 - 0x0650)
class UFortVehicleAudioVoice : public UAudioComponent
{
public:
	bool                                               bFadeWhenOwnerDestroyed;                                  // 0x0650(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0651(0x0003) MISSED OFFSET
	float                                              FadeTimeWhenOwnerDestroyed;                               // 0x0654(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FFortVehicleAudioOneshotGate>        OneshotGates;                                             // 0x0658(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              OneShotGateInterpSpeed;                                   // 0x0668(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x066C(0x0014) MISSED OFFSET
	struct FFortVehicleAudioParam                      VolumeParam;                                              // 0x0680(0x0020) (Edit, DisableEditOnInstance)
	struct FFortVehicleAudioParam                      PitchParam;                                               // 0x06A0(0x0020) (Edit, DisableEditOnInstance)
	TArray<struct FFortVehicleAudioFloatParam>         FloatParams;                                              // 0x06C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FVector2D                                   ParamRange;                                               // 0x06D0(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleAudioVoice");
		return ptr;
	}


	void StopAllAudio();
	void SetParamRange(float Min, float Max);
	void SetParam(float Param);
};


// Class FortniteGame.FortVehicleDynAnimInstance
// 0x0020 (0x0390 - 0x0370)
class UFortVehicleDynAnimInstance : public UAnimInstance
{
public:
	class AFortAthenaAntelopeVehicle*                  Quad;                                                     // 0x0370(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    CurrentDriveJiggle;                                       // 0x0378(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              Speed;                                                    // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SpeedABS;                                                 // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBoosting;                                              // 0x038C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x038D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleDynAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleManager
// 0x0010 (0x0338 - 0x0328)
class AFortVehicleManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleManager");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleMovementSet
// 0x00A0 (0x00D0 - 0x0030)
class UFortVehicleMovementSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  FrontLateralFrictionScale;                                // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  RearLateralFrictionScale;                                 // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  BrakeForceTractionScale;                                  // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  ForwardForceTractionScale;                                // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FFortGameplayAttributeData                  SlopeAntigravityScale;                                    // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleMovementSet");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleSkelMeshComponent
// 0x0000 (0x0B70 - 0x0B70)
class UFortVehicleSkelMeshComponent : public USkeletalMeshComponentBudgeted
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleSkelMeshComponent");
		return ptr;
	}

};


// Class FortniteGame.FortVehicleTrickSet
// 0x0070 (0x00A0 - 0x0030)
class UFortVehicleTrickSet : public UPrimaryDataAsset
{
public:
	struct FDataTableRowHandle                         Basics;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          RollTricks;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          ReverseRollTricks;                                        // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          YawTricks;                                                // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          ReverseYawTricks;                                         // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          PitchTricks;                                              // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortVehicleIncrementTrick>          ReversePitchTricks;                                       // 0x0090(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVehicleTrickSet");
		return ptr;
	}

};


// Class FortniteGame.FortVisibilityManager
// 0x00D8 (0x0400 - 0x0328)
class AFortVisibilityManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	struct FVisibiltyInfoArray                         VisibilityInfoArray;                                      // 0x0338(0x00C0) (Net)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVisibilityManager");
		return ptr;
	}

};


// Class FortniteGame.FortVolumeMiniMapIndicator
// 0x0138 (0x0240 - 0x0108)
class UFortVolumeMiniMapIndicator : public UFortMiniMapIndicator
{
public:
	struct FSlateBrush                                 PerimeterBrush;                                           // 0x0108(0x0088) (Transient)
	struct FSlateBrush                                 OnRadarBrush;                                             // 0x0190(0x0088) (Transient)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0218(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortVolumeMiniMapIndicator");
		return ptr;
	}

};


// Class FortniteGame.FortWeap_BuildingToolBase
// 0x0020 (0x0B80 - 0x0B60)
class AFortWeap_BuildingToolBase : public AFortWeapon
{
public:
	class UStaticMeshComponent*                        PencilMeshComponent;                                      // 0x0B60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       BlueprintPaperSocket;                                     // 0x0B68(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       BlueprintPencilSocket;                                    // 0x0B70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       InstigatorController;                                     // 0x0B78(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeap_BuildingToolBase");
		return ptr;
	}

};


// Class FortniteGame.FortWeap_BuildingTool
// 0x0100 (0x0C80 - 0x0B80)
class AFortWeap_BuildingTool : public AFortWeap_BuildingToolBase
{
public:
	class UMaterialInterface*                          BlueprintPaperMaterial;                                   // 0x0B80(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  BlueprintDiffuseTextures[0x4];                            // 0x0B88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  BlueprintEmissiveMaskTextures[0x4];                       // 0x0BA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 BlueprintPaperPulseCurve;                                 // 0x0BC8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBuildingEditModeMetadata*                   DefaultMetadata;                                          // 0x0BD0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    BlueprintPaperMID;                                        // 0x0BD8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTimeline                                   BlueprintPaperPulseTimeline;                              // 0x0BE0(0x0098) (Transient)
	TEnumAsByte<EFortResourceType>                     LastResourceType;                                         // 0x0C78(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0C79(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeap_BuildingTool");
		return ptr;
	}


	void OnRep_DefaultMetadata(class UBuildingEditModeMetadata* OldMetadata);
	void OnBlueprintPaperPulseUpdate(float InCurveVal);
};


// Class FortniteGame.FortWeap_EditingTool
// 0x0010 (0x0B90 - 0x0B80)
class AFortWeap_EditingTool : public AFortWeap_BuildingToolBase
{
public:
	class ABuildingSMActor*                            EditActor;                                                // 0x0B80(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEditConfirmed;                                           // 0x0B88(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0B89(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeap_EditingTool");
		return ptr;
	}


	void OnRep_EditActor();
};


// Class FortniteGame.FortWeaponRanged
// 0x0290 (0x0DF0 - 0x0B60)
class AFortWeaponRanged : public AFortWeapon
{
public:
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                      // 0x0B60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      TracerTemplate;                                           // 0x0B70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CurrentNumBullets;                                        // 0x0B78(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ScopeTargetingMuzzleOffset;                               // 0x0B7C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CurrentMuzzleBlockedLocation;                             // 0x0B88(0x000C) (Transient, IsPlainOldData)
	EFortAbilityTargetingSource                        CurrentDamageStart;                                       // 0x0B94(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0B95(0x0003) MISSED OFFSET
	struct FRotator                                    MaxTargetingAimAdjustment;                                // 0x0B98(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ProjectilePitchOffset;                                    // 0x0BA4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bShouldDisplayAmmoCounter : 1;                            // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShouldAimFromMuzzleAtCloseRange : 1;                     // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bMaintainAimLocationDuringTargeting : 1;                  // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseScopeTargeting : 1;                                   // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseFirstPersonTargeting : 1;                             // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseReducedTargetingAimAssist : 1;                        // 0x0BA8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bPersistentFireFX : 1;                                    // 0x0BA8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseBeamParticles : 1;                                    // 0x0BA8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUseImpactFXForProjectiles : 1;                           // 0x0BA9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseImpactFXForProjectileOverlaps : 1;                    // 0x0BA9(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bUseImpactDecals : 1;                                     // 0x0BA9(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bUsePersistentBeam : 1;                                   // 0x0BA9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0BAA(0x0002) MISSED OFFSET
	struct FFortEffectDistanceQuality                  BeamSignificance;                                         // 0x0BAC(0x0018) (Edit, DisableEditOnInstance)
	struct FFortEffectDistanceQuality                  ImpactSignificance;                                       // 0x0BC4(0x0018) (Edit, DisableEditOnInstance)
	struct FFortEffectDistanceQuality                  DecalSignificance;                                        // 0x0BDC(0x0018) (Edit, DisableEditOnInstance)
	float                                              ScopeImpactEffectDistanceOffset;                          // 0x0BF4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             BeamParticleSystem;                                       // 0x0BF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BeamSourceSocketName;                                     // 0x0C00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     DecalSizeMin;                                             // 0x0C08(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     DecalSizeMax;                                             // 0x0C14(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalLifespanMin;                                         // 0x0C20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalLifespanMax;                                         // 0x0C24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                DecalColorStart;                                          // 0x0C28(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                DecalColorEnd;                                            // 0x0C38(0x0010) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          DecalMaterial;                                            // 0x0C48(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  DecalTexture;                                             // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TEnumAsByte<EPhysicalSurface>>              SurfaceAcceptingDecals;                                   // 0x0C58(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0C68(0x0004) MISSED OFFSET
	int                                                ShellReloadCounter;                                       // 0x0C6C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0C70(0x0004) MISSED OFFSET
	struct FRotator                                    TargetingRotAdjustmentTotal;                              // 0x0C74(0x000C) (Transient, IsPlainOldData)
	float                                              LastTargetingRotAdjustmentWeight;                         // 0x0C80(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6C];                                      // 0x0C84(0x006C) MISSED OFFSET
	bool                                               bUseAthenaRecoil;                                         // 0x0CF0(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bUseAthenaPerfectADSAim;                                  // 0x0CF1(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0CF2(0x0002) MISSED OFFSET
	float                                              FirstShotAccuracyMinWaitTime;                             // 0x0CF4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bFirstShotAccuracyCheckVehicleMovement;                   // 0x0CF8(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x9F];                                      // 0x0CF9(0x009F) MISSED OFFSET
	class UAnimMontage*                                FireAnimation;                                            // 0x0D98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                FireDownsightsAnimation;                                  // 0x0DA0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                CockingAnimation;                                         // 0x0DA8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponFireMontage;                                        // 0x0DB0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponFireDownsightsMontage;                              // 0x0DB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponCockingMontage;                                     // 0x0DC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    BeamPSC;                                                  // 0x0DC8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EFortWeaponOverheatState                           OverheatState;                                            // 0x0DD0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0DD1(0x0007) MISSED OFFSET
	class UAnimMontage*                                OverheatedAnimation;                                      // 0x0DD8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                WeaponOverheatedAnimation;                                // 0x0DE0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OverheatValue;                                            // 0x0DE8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeHeatWasLastAdded;                                     // 0x0DEC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRanged");
		return ptr;
	}


	bool UseScopeTargeting();
	bool UseReducedAimAssist();
	bool UseFirstPersonTargeting();
	void TempHack_PlayOverheatedAnimation();
	bool ShouldSpawnBulletShellFX();
	bool ShouldDisplayAmmoCounter();
	void ServerSetOverheatState(unsigned char NewState);
	void OnStartOverheated();
	void OnStartHeating();
	void OnStartCooling();
	void OnSpawnProjectile(class AFortProjectileBase* SpawnProjectile);
	void OnRep_OverheatState(EFortWeaponOverheatState PreviousOverheatState);
	void OnFinishedCooling();
	bool IsUsingScopeOrFirstPersonCamera();
	bool IsUsingScope();
	bool IsUsingFirstPersonCamera();
	bool IsCachedIsProjectileWeapon();
	void InitializeBeamFX(class UParticleSystemComponent* InBeamPSC);
	float GetTimeToNextFire();
	float GetOverheatingMaxValue();
	float GetCurrentOverheatValue();
	float GetADSTransitionOutTime();
	float GetADSTransitionInTime();
	void ForceScopeFX();
	void DeactivateBeamFX();
	void AbortScopeFX();
};


// Class FortniteGame.FortWeap_WannaGun
// 0x0068 (0x0E58 - 0x0DF0)
class AFortWeap_WannaGun : public AFortWeaponRanged
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0DF0(0x0020) MISSED OFFSET
	struct FVector                                     LastHitActorScale;                                        // 0x0E10(0x000C) (Net, IsPlainOldData)
	struct FRotator                                    LastHitActorRotation;                                     // 0x0E1C(0x000C) (Net, IsPlainOldData)
	class UClass*                                      LastHitActorClass;                                        // 0x0E28(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0E30(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeap_WannaGun.TransparentTextureData

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeap_WannaGun");
		return ptr;
	}


	void OnRep_LastHitActorClass();
};


// Class FortniteGame.FortWeaponAnimSet
// 0x0140 (0x0170 - 0x0030)
class UFortWeaponAnimSet : public UDataAsset
{
public:
	struct FFortAnimInput_PlayerAnimAsset              MaleAnimAsset;                                            // 0x0030(0x00A0) (Edit, IsPlainOldData)
	struct FFortAnimInput_PlayerAnimAsset              FemaleAnimAsset;                                          // 0x00D0(0x00A0) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponAnimSet");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponAttrSet
// 0x0120 (0x0150 - 0x0030)
class UFortWeaponAttrSet : public UFortAttributeSet
{
public:
	struct FFortGameplayAttributeData                  WeaponChanceToNotConsumeAmmo;                             // 0x0030(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  AccumulatedWeaponChanceToNotConsumeAmmo;                  // 0x0050(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponRateOfFire;                                         // 0x0070(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponHorizontalRecoil;                                   // 0x0090(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponVerticalRecoil;                                     // 0x00B0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponSpreadReduction;                                    // 0x00D0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponReloadSpeed;                                        // 0x00F0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  WeaponAmmoClipSize;                                       // 0x0110(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FFortGameplayAttributeData                  CharacterItemDurabilityDecayModifier;                     // 0x0130(0x0020) (BlueprintVisible, BlueprintReadOnly, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponAttrSet");
		return ptr;
	}


	void OnRep_WeaponVerticalRecoil();
	void OnRep_WeaponSpreadReduction();
	void OnRep_WeaponReloadSpeed();
	void OnRep_WeaponRateOfFire();
	void OnRep_WeaponHorizontalRecoil();
	void OnRep_WeaponChanceToNotConsumeAmmo();
	void OnRep_WeaponAmmoClipSize();
	void OnRep_CharacterItemDurabilityDecayModifier();
	void OnRep_AccumulatedWeaponChanceToNotConsumeAmmo();
};


// Class FortniteGame.FortWeaponMeleeItemDefinition
// 0x0000 (0x0C10 - 0x0C10)
class UFortWeaponMeleeItemDefinition : public UFortWeaponItemDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponMeleeItemDefinition");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponMeleeItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortWeaponMeleeItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponMeleeItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponRangedDual
// 0x0058 (0x0E48 - 0x0DF0)
class AFortWeaponRangedDual : public AFortWeaponRanged
{
public:
	class USkeletalMeshComponentBudgeted*              LeftHandWeaponMesh;                                       // 0x0DF0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAnimMontage*                                LeftHandFireAnimation;                                    // 0x0DF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftCockingAnimation;                                     // 0x0E00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftHandFireDownsightsAnimation;                          // 0x0E08(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftWeaponFireMontage;                                    // 0x0E10(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftWeaponFireDownsightsMontage;                          // 0x0E18(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftWeaponCockingMontage;                                 // 0x0E20(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimMontage*                                LeftWeaponReloadMontage;                                  // 0x0E28(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnHandFired;                                              // 0x0E30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0E40(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedDual");
		return ptr;
	}


	EDualWeaponHand GetNextFireHand();
	EDualWeaponHand GetLastFireHand();
};


// Class FortniteGame.FortWeaponRangedDualMountedTurret
// 0x0040 (0x0E88 - 0x0E48)
class AFortWeaponRangedDualMountedTurret : public AFortWeaponRangedDual
{
public:
	struct FVector                                     LeftWeaponLoc;                                            // 0x0E48(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    LeftWeaponRot;                                            // 0x0E54(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     RightWeaponLoc;                                           // 0x0E60(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    RightWeaponRot;                                           // 0x0E6C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              MinReticleAlphaForAimInterpolation;                       // 0x0E78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinAimAngleDiffForReticleAlpha;                           // 0x0E7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxAimAngleDiffForReticleAlpha;                           // 0x0E80(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0E84(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedDualMountedTurret");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponRangedItemDefinition
// 0x0060 (0x0C70 - 0x0C10)
class UFortWeaponRangedItemDefinition : public UFortWeaponItemDefinition
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0C10(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWeaponRangedItemDefinition.ProjectileTemplate
	bool                                               bUseNativeWeaponTrace;                                    // 0x0C38(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceThroughPawns;                                       // 0x0C39(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTraceThroughWorld;                                       // 0x0C3A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0C3B(0x0005) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0C3B(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWeaponRangedItemDefinition.BulletShellFXTemplate
	bool                                               bShouldSpawnBulletShellFX;                                // 0x0C68(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldUsePerfectAimWhenTargetingMinSpread;               // 0x0C69(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldUseCooldownOverTimeForPerfectAim;                  // 0x0C6A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDoNotAllowDoublePump;                                    // 0x0C6B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseOnTouch;                                              // 0x0C6C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowReticleHitNotifyAtImpactLocation;                    // 0x0C6D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceProjectileTooltip;                                  // 0x0C6E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0C6F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedItemDefinition");
		return ptr;
	}


	bool UseOnTouch();
	bool ShouldUsePerfectAimWhenTargetingMinSpread();
	bool ShouldUseNativeWeaponTrace();
	bool ShouldUseCooldownOverTimeForPerfectAim();
	bool ShouldTraceThroughWorld();
	bool ShouldTraceThroughPawns();
	bool ShouldSpawnBulletShellFX();
	bool ShouldShowReticleHitNotifyAtImpactLocation();
	class UClass* GetProjectileTemplate();
	class UParticleSystem* GetBulletShellFXTemplate();
	bool ForceProjectileTooltip();
	bool DoNotAllowDoublePump();
};


// Class FortniteGame.FortWeaponRangedItemDefinitionTooltip
// 0x0000 (0x0090 - 0x0090)
class UFortWeaponRangedItemDefinitionTooltip : public UFortWeaponItemDefinitionTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedItemDefinitionTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponTooltip
// 0x0088 (0x0118 - 0x0090)
class UFortWeaponTooltip : public UFortWorldItemTooltip
{
public:
	class UFortWorldItem*                              CachedWeapon;                                             // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x80];                                      // 0x0098(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWeaponRangedTooltip
// 0x0000 (0x0118 - 0x0118)
class UFortWeaponRangedTooltip : public UFortWeaponTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeaponRangedTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWeatherAugment
// 0x0020 (0x04B0 - 0x0490)
class AFortWeatherAugment : public AFortCarriedObject
{
public:
	struct FGameplayTagContainer                       WeatherTags;                                              // 0x0490(0x0020) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWeatherAugment");
		return ptr;
	}


	struct FGameplayTagContainer GetWeatherTags();
};


// Class FortniteGame.FortWindManager
// 0x0240 (0x0568 - 0x0328)
class AFortWindManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x0328(0x000C) MISSED OFFSET
	bool                                               bAllowWindImpulses;                                       // 0x0334(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowResponderAudio;                                     // 0x0335(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0336(0x0002) MISSED OFFSET
	float                                              SectionWidth;                                             // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSectionBlendTime;                                  // 0x033C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0340(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortWindManager.MaterialDefiningParametersToInterpolate
	struct FName                                       WindVectorParameterName;                                  // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               WindOffsetMaterialParameterNames;                         // 0x0370(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               WindSpeedMaterialParameterNames;                          // 0x0380(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               WindMaterialScalarParameterNamesToInterpolate;            // 0x0390(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               WindMaterialVectorParameterNamesToInterpolate;            // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortWindImpulseRadius>              WindImpulses;                                             // 0x03B0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortWindImpulseCylinderDelta>       WindImpulseCylinderDeltas;                                // 0x03C0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortWindImpulseCylinder>            WindImpulseCylinders;                                     // 0x03D0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFortWindResponder>                  WindResponders;                                           // 0x03E0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	TArray<int>                                        NearbyCacheIndicesForAudio;                               // 0x03F8(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        NearbyCacheIndicesForUpdates;                             // 0x0408(0x0010) (ZeroConstructor, Transient)
	int                                                NextNearbyIndexToUpdate;                                  // 0x0418(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x041C(0x000C) MISSED OFFSET
	struct FFortWindResponder                          ActiveAudioWindResponder;                                 // 0x0428(0x0090) (Transient)
	TMap<class ABuildingSMActor*, class UAudioComponent*> WindActorToWindResponderAudioMap;                         // 0x04B8(0x0050) (ExportObject, ZeroConstructor, Transient)
	struct FName                                       AudioWindSpeedParameterName;                              // 0x0508(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AudioWindInterpSpeed;                                     // 0x0510(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AudioWindMaxResponderDistance;                            // 0x0514(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UpdateWindMaxResponderDistance;                           // 0x0518(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ViewerMovementDistanceForRefresh;                         // 0x051C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAudioComponent*>                     WindAudioComponentPool;                                   // 0x0520(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x38];                                      // 0x0530(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWindManager");
		return ptr;
	}


	bool SetWindImpulseCylinderMagnitude(const struct FFortWindImpulseHandle& ImpulseHandle, float NewMagnitude, float BlendTime);
	bool SetWindImpulse(const struct FFortWindImpulseHandle& ImpulseHandle, const struct FFortWindImpulseRadius& WindImpulse);
	void RemoveWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	void RemoveWindImpulse(const struct FFortWindImpulseHandle& ImpulseHandle, float BlendTime);
	void OnWorldReady();
	void OnWindImpulseCylinderDeltaComplete(const struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderDeath(const struct FFortWindImpulseCylinder& WindImpulseCylinder);
	void OnWindImpulseCylinderCreation(const struct FFortWindImpulseCylinder& WindImpulseCylinder, const struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta);
	void OnWindAudioBecameInactive(class UAudioComponent* WindAudioComp);
	void OnWindAudioBecameActive(class UAudioComponent* WindAudioComp);
	struct FFortWindImpulseRadius STATIC_MakeWindImpulseRadius(const struct FVector& ImpulseLocation, float ImpulseRadius, float ImpulseMagnitude, float ImpulseBlendTime);
	struct FFortWindImpulseCylinder STATIC_MakeWindImpulseCylinder(const struct FVector& ImpulseLocation, float ImpulseInnerRadius, float ImpulseOuterRadius, float ImpulseMagnitude, const struct FVector& ImpulseDirection);
	bool HasWindImpulse(const struct FFortWindImpulseHandle& WindImpulseHandle);
	class AFortWindManager* STATIC_GetWindManager(class UObject* WorldContextObject);
	void GetGlobalWindIntensityAndDirection(float* WindIntensity, struct FVector* WindDirection);
	bool GetCurrentWindImpulseCylinderDelta(struct FFortWindImpulseCylinder* WindImpulseCylinder, struct FFortWindImpulseCylinderDelta* WindImpulseCylinderDelta);
	void STATIC_BreakWindImpulseRadius(const struct FFortWindImpulseRadius& InWindImpulseRadius, struct FVector* ImpulseLocation, float* ImpulseRadius, float* ImpulseMagnitude, float* ImpulseBlendTime);
	void STATIC_BreakWindImpulseCylinderDelta(const struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta, struct FVector* WindDeltaCenter, bool* bWindImpulseInitialized, bool* bWindRipplesOutward, float* WindDeltaSectionWidth, float* WindDeltaInnerSectionRadius, float* WindDeltaOuterSectionRadius, float* WindDeltaMaximumRadius, float* WindDeltaDesiredOverallBlendTime, float* WindDeltaSectionBlendTime, float* WindDeltaSectionCurrentBlendTime, float* WindDeltaPreviousMagnitude, float* WindDeltaSectionCurrentMagnitude, float* WindDeltaDesiredMagnitude, struct FBox* WindDeltaOuterWorldBounds, struct FBox* WindDeltaInnerWorldBounds, struct FBox* WindImpulseBounds, struct FFortWindImpulseHandle* WindImpulseHandleToModify);
	void STATIC_BreakWindImpulseCylinderAdvanced(const struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FVector* WindLocation, float* WindInnerRadius, float* WindOuterRadius, struct FVector* WindWorldDirection, float* WindMagnitude, struct FBox* WindWorldBounds, bool* bIsWindChanging, bool* bIsWindChangePending);
	void STATIC_BreakWindImpulseCylinder(const struct FFortWindImpulseCylinder& InWindImpulseCylinder, struct FVector* ImpulseLocation, float* ImpulseInnerRadius, float* ImpulseOuterRadius, float* ImpulseMagnitude, struct FVector* ImpulseDirection);
	void AddWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
	struct FFortWindImpulseHandle AddWindImpulseCylinder(const struct FFortWindImpulseCylinder& WindImpulseCylinder, float BlendTime);
	struct FFortWindImpulseHandle AddWindImpulse(const struct FFortWindImpulseRadius& WindImpulse);
};


// Class FortniteGame.FortWorkerTooltip
// 0x0000 (0x00B0 - 0x00B0)
class UFortWorkerTooltip : public UFortCharacterTooltip
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorkerTooltip");
		return ptr;
	}

};


// Class FortniteGame.FortWorldItem
// 0x0148 (0x01C0 - 0x0078)
class UFortWorldItem : public UFortItem
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0078(0x0048) MISSED OFFSET
	bool                                               bIsTemporaryItem;                                         // 0x00C0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsPersistentUpdate;                                   // 0x00C1(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bPendingPersistentDelete;                                 // 0x00C2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x00C3(0x0005) MISSED OFFSET
	class AFortInventory*                              OwnerInventory;                                           // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FFortItemEntry                              ItemEntry;                                                // 0x00D0(0x00D0)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01A0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldItem");
		return ptr;
	}


	bool SeenInFrontend();
	void MarkItemAsSeenInFrontend();
	void GetOwnedGameplayTags(struct FGameplayTagContainer* TagContainer);
};


// Class FortniteGame.FortWorldRecord
// 0x0168 (0x0238 - 0x00D0)
class UFortWorldRecord : public UFortGenericRecord
{
public:
	struct FFortCloudSaveInfo                          CloudInfo;                                                // 0x00D0(0x0018) (Transient)
	int                                                CurrentZoneIndex;                                         // 0x00E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	TArray<struct FFortPlayerRecord>                   SavedPlayers;                                             // 0x00F0(0x0010) (ZeroConstructor, Transient)
	struct FFortZoneInstanceDetails                    ZoneInstanceInfo;                                         // 0x0100(0x0128) (Transient)
	struct FString                                     WUID;                                                     // 0x0228(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldRecord");
		return ptr;
	}

};


// Class FortniteGame.FortWorldSettings
// 0x05B0 (0x0AD8 - 0x0528)
class AFortWorldSettings : public AWorldSettings
{
public:
	TArray<class AActor*>                              ActorsNeedingWorldReady;                                  // 0x0528(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        WorldCells;                                               // 0x0538(0x0010) (ZeroConstructor)
	struct FVector                                     WorldCellsOrigin;                                         // 0x0548(0x000C) (IsPlainOldData)
	int                                                WorldCellsFlags;                                          // 0x0554(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGenerateTestLevelSaves : 1;                              // 0x0558(0x0001) (Edit, Transient)
	unsigned char                                      bDisableCullDistance : 1;                                 // 0x0558(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0559(0x0003) MISSED OFFSET
	float                                              MinCullObjectSize;                                        // 0x055C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinCullDistance;                                          // 0x0560(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxCullObjectSize;                                        // 0x0564(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxCullDistance;                                          // 0x0568(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWorldSpecificCullDistanceOverride;                    // 0x056C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x056D(0x0003) MISSED OFFSET
	class UTexture2D*                                  TeamOnePvPMiniMapImage;                                   // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TeamTwoPvPMiniMapImage;                                   // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PvPMapWorldCenter;                                        // 0x0580(0x0008) (Edit, IsPlainOldData)
	float                                              PvPMapWorldWidth;                                         // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PvPMapWorldHeight;                                        // 0x058C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPvPUseWidgetRotation : 1;                                // 0x0590(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0591(0x0003) MISSED OFFSET
	float                                              MapZOffset;                                               // 0x0594(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MapRotation;                                              // 0x0598(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	class UTexture2D*                                  MapInitialMask;                                           // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideMainMapSettings : 1;                             // 0x05B0(0x0001) (Edit)
	unsigned char                                      bValidateNavGraphConnectivity : 1;                        // 0x05B0(0x0001) (Edit, Transient)
	unsigned char                                      bLimitNavGraphSkyCells : 1;                               // 0x05B0(0x0001) (Edit)
	unsigned char                                      bUseProceduralFoliage : 1;                                // 0x05B0(0x0001) (Edit)
	unsigned char                                      bUseConditionalBuildingFoundations : 1;                   // 0x05B0(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x7];                                       // 0x05B1(0x0007) MISSED OFFSET
	struct FSlateBrush                                 AthenaMapImage;                                           // 0x05B8(0x0088) (Edit)
	TArray<struct FMapLocation>                        MapLocations;                                             // 0x0640(0x0010) (Edit, ZeroConstructor)
	struct FSlateBrush                                 FloatingIslandBrush;                                      // 0x0650(0x0088) (Edit)
	struct FSlateBrush                                 FloatingIslandBrushActivated;                             // 0x06D8(0x0088) (Edit)
	float                                              MapWorldScale;                                            // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MiniMapZoom;                                              // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSlateBrush                                 AircraftPathBrush;                                        // 0x0768(0x0088) (Edit)
	struct FSlateBrush                                 AircraftMidlinePathBrush;                                 // 0x07F0(0x0088) (Edit)
	struct FSlateBrush                                 AircraftPathTeamIndicatorBrush;                           // 0x0878(0x0088) (Edit)
	struct FSlateBrush                                 SafeZoneFinalPosBrush;                                    // 0x0900(0x0088) (Edit)
	TArray<struct FIntPoint>                           NavGraphSkyCells;                                         // 0x0988(0x0010) (Edit, ZeroConstructor)
	class UCurveTable*                                 SearchSpeedOverride;                                      // 0x0998(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveTable*                                 ResourceRateOverride;                                     // 0x09A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShowTimeOfDayManager : 1;                                // 0x09A8(0x0001) (Edit, Transient)
	unsigned char                                      UnknownData05[0x7];                                       // 0x09A9(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData06[0x28];                                      // 0x09A9(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.WorldTimeOfDayManager
	unsigned char                                      UnknownData07[0x28];                                      // 0x09D8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.WorldMusicManager
	class UFortMusicManagerBank*                       WorldMusicManagerBank;                                    // 0x0A00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x28];                                      // 0x0A08(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.DefaultWorldTimeOfDayManager
	unsigned char                                      UnknownData09[0x28];                                      // 0x0A30(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.ZoneThemeTimeOfDayManager
	unsigned char                                      UnknownData10[0x28];                                      // 0x0A58(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.MissionTimeOfDayManager
	unsigned char                                      UnknownData11[0x28];                                      // 0x0A80(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortWorldSettings.ZoneThemeMusicManager
	class UFortMusicManagerBank*                       ZoneThemeMusicManagerBank;                                // 0x0AA8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBuildingFoundationStreamingData>    BuildingFoundationStreamingData;                          // 0x0AB0(0x0010) (Edit, ZeroConstructor, EditConst)
	float                                              EndGameTimeDilation;                                      // 0x0AC0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0AC4(0x0004) MISSED OFFSET
	class AFortTimeOfDayManager*                       TimeOfDayManager;                                         // 0x0AC8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	class AFortVehicleManager*                         VehicleManager;                                           // 0x0AD0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortWorldSettings");
		return ptr;
	}

};


// Class FortniteGame.FortZoneRecord
// 0x01D0 (0x02A0 - 0x00D0)
class UFortZoneRecord : public UFortGenericRecord
{
public:
	int                                                WorldSaveCount;                                           // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ZoneIndex;                                                // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       PersistentLevelName;                                      // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FFortLevelRecord>                    SavedLevels;                                              // 0x00E0(0x0010) (ZeroConstructor)
	int                                                NumSavedLevels;                                           // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ZoneTileSeed;                                             // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x190];                                     // 0x00F8(0x0190) MISSED OFFSET
	TArray<struct FStatManagerPeriodRecord>            PlayerMapStatManagerPeriods;                              // 0x0288(0x0010) (ZeroConstructor)
	int                                                CloudSaveItemDefContentVersion;                           // 0x0298(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bNeedsFullActorSave;                                      // 0x029C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x029D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortZoneRecord");
		return ptr;
	}

};


// Class FortniteGame.FortZoneTheme
// 0x02C0 (0x02F0 - 0x0030)
class UFortZoneTheme : public UPrimaryDataAsset
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortZoneTheme.TheaterMapTileClass
	unsigned char                                      UnknownData01[0x28];                                      // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortZoneTheme.ZoneToUse
	struct FText                                       ZoneName;                                                 // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ZoneDescription;                                          // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       AbundantResources;                                        // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EFortZoneType                                      ZoneType;                                                 // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData03[0x28];                                      // 0x00C9(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortZoneTheme.ZoneGameMode
	struct FGameplayTagContainer                       ZoneTags;                                                 // 0x00F8(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0118(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortZoneTheme.LobbyBeaconHostClass
	unsigned char                                      UnknownData05[0x28];                                      // 0x0140(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.FortZoneTheme.CloudSaveItemDefinition
	int                                                ZoneIndex;                                                // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlaylistId;                                               // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TeamSize;                                                 // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TeamCount;                                                // 0x0174(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxPartySize;                                             // 0x0178(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxPlayers;                                               // 0x017C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CriticalMissionEligibilityLength;                         // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CriticalMissionEligibilityGracePeriodLength;              // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FDeployableBaseSupportSettings              DeployableBaseSettings;                                   // 0x0188(0x0098) (Edit, DisableEditOnInstance)
	unsigned char                                      IgnoreGeneratedRewards : 1;                               // 0x0220(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData07[0x28];                                      // 0x0221(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortZoneTheme.PlayerSpawnPadClass
	struct FGameplayTagContainer                       InitialPlayerSpawnTags;                                   // 0x0250(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                       BackupPlayerSpawnTags;                                    // 0x0270(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bOverrideConningText;                                     // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0291(0x0007) MISSED OFFSET
	struct FText                                       ConningOverrideText;                                      // 0x0298(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x28];                                      // 0x02B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.FortZoneTheme.MusicManagerClass
	class UFortMusicManagerBank*                       MusicManagerBank;                                         // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FZoneThemeDifficultyProperties>      DifficultyProperties;                                     // 0x02E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortZoneTheme");
		return ptr;
	}

};


// Class FortniteGame.FromFortitudeModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromFortitudeModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromOffenseModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromOffenseModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromResistanceModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromResistanceModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromTeamFortitudeModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromTeamFortitudeModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromTeamFortitudeModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromTeamOffenseModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromTeamOffenseModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromTeamOffenseModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromTeamResistanceModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromTeamResistanceModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromTeamResistanceModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromTeamTechModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromTeamTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromTeamTechModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FromTechModMagnitudeCalculation
// 0x0018 (0x0058 - 0x0040)
class UFromTechModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FromTechModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.FrontendAnimInstance
// 0x0070 (0x03E0 - 0x0370)
class UFrontendAnimInstance : public UAnimInstance
{
public:
	bool                                               bIsSkydiving;                                             // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EFortDisplayGender>                    Gender;                                                   // 0x0371(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0372(0x0006) MISSED OFFSET
	class UAnimMontage*                                IntroAnimation_Female;                                    // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                IntroAnimation_Male;                                      // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                OutroAnimation_Female;                                    // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                OutroAnimation_Male;                                      // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                SelectedAnimation_Female;                                 // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                SelectedAnimation_Male;                                   // 0x03A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bCanPlayCustomAnimations : 1;                             // 0x03A8(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	struct FGameplayTagAnimations                      GameplayTagAnimations;                                    // 0x03B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagAnimations                      FemaleGameplayTagAnimations;                              // 0x03C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGameplayTagAnimations                      MaleGameplayTagAnimations;                                // 0x03D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FrontendAnimInstance");
		return ptr;
	}


	void PlaySelected();
	void PlayOutro();
	void PlayIntro();
	void OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying);
};


// Class FortniteGame.FrontEndSettings
// 0x0010 (0x0338 - 0x0328)
class AFrontEndSettings : public AActor
{
public:
	TArray<struct FCameraPair>                         Cameras;                                                  // 0x0328(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FrontEndSettings");
		return ptr;
	}

};


// Class FortniteGame.GameplayMutatorObserverInterface
// 0x0000 (0x0028 - 0x0028)
class UGameplayMutatorObserverInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.GameplayMutatorObserverInterface");
		return ptr;
	}

};


// Class FortniteGame.HeadPartAnimInstance
// 0x0010 (0x0460 - 0x0450)
class UHeadPartAnimInstance : public UCustomCharacterPartAnimInstance
{
public:
	unsigned char                                      bUseLiveLinkSourceExternal : 1;                           // 0x0450(0x0001) (Edit, BlueprintVisible, Transient)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0451(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.HeadPartAnimInstance");
		return ptr;
	}

};


// Class FortniteGame.HeartbeatManager
// 0x0040 (0x0068 - 0x0028)
class UHeartbeatManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	bool                                               bShouldTrackLocation;                                     // 0x0040(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              TrackLocationFrequencySec;                                // 0x0044(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShouldSendPerMinuteResourceAndDamageEvents;              // 0x0048(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1F];                                      // 0x0049(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.HeartbeatManager");
		return ptr;
	}

};


// Class FortniteGame.HoverDroneMovementComponent
// 0x0118 (0x02B0 - 0x0198)
class UHoverDroneMovementComponent : public USpectatorPawnMovement
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0198(0x0048) MISSED OFFSET
	float                                              RotAcceleration;                                          // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotDeceleration;                                          // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchRotSpeed;                                         // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawRotSpeed;                                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurboRotAcceleration;                                     // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurboRotDeceleration;                                     // 0x01F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurboMaxPitchRotSpeed;                                    // 0x01F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurboMaxYawRotSpeed;                                      // 0x01FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TurboAccelerationRange;                                   // 0x0200(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   TurboAccelerationAltitudeRange;                           // 0x0208(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              TurboDeceleration;                                        // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurboHoverThrustScale;                                    // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullAirFrictionVelocity;                                  // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x94];                                      // 0x021C(0x0094) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.HoverDroneMovementComponent");
		return ptr;
	}


	void OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer);
};


// Class FortniteGame.KeepHeartBase
// 0x0050 (0x0C38 - 0x0BE8)
class AKeepHeartBase : public ABuildingSMActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0BE8(0x0028) UNKNOWN PROPERTY: SoftClassProperty FortniteGame.KeepHeartBase.BuildingInstructionsHandlerClass
	unsigned char                                      UnknownData01[0x20];                                      // 0x0C10(0x0020) MISSED OFFSET
	class AFortSaveFileBuildingInstructionsHandler*    SaveFileInstructionsHandler;                              // 0x0C30(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.KeepHeartBase");
		return ptr;
	}


	void SetAllowLooting(bool bAllowed);
	bool SaveUserKeep(class AFortPlayerController* FortPC);
	bool ResetUserKeep(class AFortPlayerController* FortPC);
	void LoadUserKeep(class AFortPlayerController* FortPC);
	bool IsKeepOwner(class AFortPlayerController* FortPC);
	bool IsKeepLoaded();
};


// Class FortniteGame.KeepHeart
// 0x0028 (0x0C60 - 0x0C38)
class AKeepHeart : public AKeepHeartBase
{
public:
	class AActor*                                      DecorationRoomPlacement;                                  // 0x0C38(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UClass*                                      PermaniteHealEffect;                                      // 0x0C40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PermaniteWallWeight;                                      // 0x0C48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PermaniteFloorWeight;                                     // 0x0C4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PermaniteStairWeight;                                     // 0x0C50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PermaniteRoofWeight;                                      // 0x0C54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EKeepDefenseState>                     DefenseState;                                             // 0x0C58(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0C59(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.KeepHeart");
		return ptr;
	}


	bool UpgradeAllPermaniteStructures(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	void StreamOutWorld();
	void StreamInWorld();
	void StartVote(const struct FText& VoteText, const struct FText& YesText, const struct FText& NoText, float PercentageToPass, bool bSkipIfOnePlayerOnly);
	void SetPermaniteAvailability(bool bAvailable);
	void RestoreKeepHealth();
	void RestoreContainers();
	void ResetContainers();
	void OnWorldStreamedIn();
	void OnVoteComplete(bool bResult);
	void OnDefenseLevelChanged();
	void NotifyEncounterStarted(class UFortAIEncounterInfo* StartedEncounter);
	void NotifyEncounterEnded(class UFortAIEncounterInfo* EndedEncounter);
	bool IsWorldStreamingIn();
	bool IsWorldStreamedIn();
	bool IsDefenseActive();
	void HandleVoteComplete(bool bResult);
	float GetWorldStreamingInProgress();
	int GetUpgradeAllPermaniteCost(class AFortPlayerController* FortPC, bool bQuickUpgrade);
	int GetDefenseLevel();
	float GetAveragePermaniteLevel();
	bool DestroyNonPermaniteStructures();
	void DelayedVoteSuccess();
};


// Class FortniteGame.KeepItemContainer
// 0x0078 (0x0DC0 - 0x0D48)
class AKeepItemContainer : public ABuildingContainer
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0D48(0x0004) MISSED OFFSET
	int                                                HostUpgradeLevel;                                         // 0x0D4C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class AFortPlayerState>>     SearchedBy;                                               // 0x0D50(0x0010) (Net, ZeroConstructor)
	EKeepContainerType                                 ContainerType;                                            // 0x0D60(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseDefaultLootLogic;                                     // 0x0D61(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bResetThisWhenKeepResets;                                 // 0x0D62(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0D63(0x0005) MISSED OFFSET
	struct FName                                       ContainerNameKey;                                         // 0x0D68(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  ContainerDataTable;                                       // 0x0D70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowChoiceUI;                                            // 0x0D78(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0D79(0x0007) MISSED OFFSET
	TArray<EFortItemType>                              ItemsInChoiceUI;                                          // 0x0D80(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0D90(0x0010) MISSED OFFSET
	EFortRarity                                        BestAvailableRarity;                                      // 0x0DA0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0DA1(0x0003) MISSED OFFSET
	int                                                MaxItems;                                                 // 0x0DA4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0DA8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.KeepItemContainer");
		return ptr;
	}


	void RestoreLoot();
	void ResetContainer(class AFortPlayerController* FortPC);
	void OnRep_SearchedBy();
	void OnRep_HostUpgradeLevel();
	void InitializeContainer(int InitUpgradeLevel);
	int GetLootTierOverride();
	struct FName GetContainerNameAndLevelKey();
};


// Class FortniteGame.KeepItemCoreContainer
// 0x0000 (0x0DC0 - 0x0DC0)
class AKeepItemCoreContainer : public AKeepItemContainer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.KeepItemCoreContainer");
		return ptr;
	}

};


// Class FortniteGame.LevelTestingActorBase
// 0x0000 (0x0328 - 0x0328)
class ALevelTestingActorBase : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.LevelTestingActorBase");
		return ptr;
	}


	struct FVector STATIC_ExtractSkeletalMeshScale(class UClass* BlueprintClass);
	class USkeletalMesh* STATIC_ExtractSkeletalMesh(class UClass* BlueprintClass);
};


// Class FortniteGame.LobbyBackgroundTakeoverEvent
// 0x0050 (0x0400 - 0x03B0)
class ULobbyBackgroundTakeoverEvent : public UFortEventItemDefinitionBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x03B0(0x0020) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x03B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.LobbyBackgroundTakeoverEvent.AthenaLobbyBackgroundLevelName
	unsigned char                                      UnknownData02[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.LobbyBackgroundTakeoverEvent");
		return ptr;
	}

};


// Class FortniteGame.LocalServiceMessageContext
// 0x0028 (0x0050 - 0x0028)
class ULocalServiceMessageContext : public UBlueprintContextBase
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.LocalServiceMessageContext");
		return ptr;
	}


	void RemoveLocalServiceMessage(const struct FString& Identifier);
	void AddLocalServiceMessage(const struct FString& Identifier, const struct FText& Title, const struct FText& Body);
};


// Class FortniteGame.ManorHeart
// 0x0030 (0x0C68 - 0x0C38)
class AManorHeart : public AKeepHeartBase
{
public:
	class AActor*                                      KeepIconActor;                                            // 0x0C38(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TArray<struct FString>                             ContainerNamesToDestroy;                                  // 0x0C40(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	class UClass*                                      InfiniteStaminaEffect;                                    // 0x0C50(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0C58(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.ManorHeart");
		return ptr;
	}


	void TravelToNewWorld(const struct FString& NewTheaterId);
};


// Class FortniteGame.ManorPortal
// 0x0048 (0x0370 - 0x0328)
class AManorPortal : public AActor
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0328(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.ManorPortal");
		return ptr;
	}


	void UnlockPortal(class AFortPlayerController* Player);
	void OpenUnlockMenu(class AFortPlayerController* Player);
	bool IsProfileValidToReadPortalAvailability(class AFortPlayerController* Player);
	bool IsPortalUnlocked(class AFortPlayerController* Player);
	int GetPlayerCurrencyAmount(class AFortPlayerController* Player);
	int GetCurrencyCost(class AFortPlayerController* Player);
	void BlueprintOnUnlockPortalComplete();
};


// Class FortniteGame.MatchHeartbeatManager
// 0x0038 (0x0060 - 0x0028)
class UMatchHeartbeatManager : public UObject
{
public:
	class AFortGameMode*                               OwningGameMode;                                           // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USlowStatReader*                             SlowStatReader;                                           // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ServerMetricsLOD;                                         // 0x0038(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x003C(0x0018) MISSED OFFSET
	int                                                HighFrequencyServerMetricsDurationSec;                    // 0x0054(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                HighFrequencyEventsLOD;                                   // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.MatchHeartbeatManager");
		return ptr;
	}

};


// Class FortniteGame.FortMissionEventParams
// 0x0000 (0x0028 - 0x0028)
class UFortMissionEventParams : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionEventParams");
		return ptr;
	}

};


// Class FortniteGame.FortStartMissionParams
// 0x0000 (0x0028 - 0x0028)
class UFortStartMissionParams : public UFortMissionEventParams
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStartMissionParams");
		return ptr;
	}

};


// Class FortniteGame.FortItemCollectedParams
// 0x0018 (0x0040 - 0x0028)
class UFortItemCollectedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*                    CollectedItemDefinition;                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       CollectedBy;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                AmountCollected;                                          // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemCollectedParams");
		return ptr;
	}


	void SetParams(class UFortWorldItemDefinition* _CollectedItemDefinition, class AFortPlayerController* _CollectedBy, int _AmountCollected, class UFortItemCollectedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _CollectedItemDefinition, class AFortPlayerController** _CollectedBy, int* _AmountCollected);
};


// Class FortniteGame.FortItemDroppedParams
// 0x0018 (0x0040 - 0x0028)
class UFortItemDroppedParams : public UFortMissionEventParams
{
public:
	class UFortWorldItemDefinition*                    DroppedItemDefinition;                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       DroppedBy;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                AmountDropped;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemDroppedParams");
		return ptr;
	}


	void SetParams(class UFortWorldItemDefinition* _DroppedItemDefinition, class AFortPlayerController* _DroppedBy, int _AmountCollected, class UFortItemDroppedParams** ThisParam);
	void BreakParams(class UFortWorldItemDefinition** _DroppedItemDefinition, class AFortPlayerController** _DroppedBy, int* _AmountCollected);
};


// Class FortniteGame.FortItemCraftedParams
// 0x0018 (0x0040 - 0x0028)
class UFortItemCraftedParams : public UFortMissionEventParams
{
public:
	class UFortSchematicItemDefinition*                SchematicDefinition;                                      // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       CraftedBy;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                AmountCrafted;                                            // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bItemWasQuickCrafted;                                     // 0x003C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortItemCraftedParams");
		return ptr;
	}


	void SetParams(class UFortSchematicItemDefinition* _SchematicDefinition, class AFortPlayerController* _CraftedBy, int _AmountCrafted, bool _bItemWasQuickCrafted, class UFortItemCraftedParams** ThisParam);
	void BreakParams(class UFortSchematicItemDefinition** _SchematicDefinition, class AFortPlayerController** _CraftedBy, int* _AmountCrafted, bool* _bItemWasQuickCrafted);
};


// Class FortniteGame.FortEnemyKilledParams
// 0x0010 (0x0038 - 0x0028)
class UFortEnemyKilledParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                                   KilledPawn;                                               // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       KilledBy;                                                 // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEnemyKilledParams");
		return ptr;
	}


	void SetParams(class AFortPawn* _KilledPawn, class AFortPlayerController* _KilledBy, class UFortEnemyKilledParams** ThisParam);
	void BreakParams(class AFortPawn** _KilledPawn, class AFortPlayerController** _KilledBy);
};


// Class FortniteGame.FortEnemyDamagedParams
// 0x0018 (0x0040 - 0x0028)
class UFortEnemyDamagedParams : public UFortMissionEventParams
{
public:
	class AFortPawn*                                   DamagedPawn;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerController*                       DamagedBy;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DamageAmount;                                             // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortEnemyDamagedParams");
		return ptr;
	}


	void SetParams(class AFortPawn* _DamagedPawn, class AFortPlayerController* _DamagedBy, float _DamageAmount, class UFortEnemyDamagedParams** ThisParam);
	void BreakParams(class AFortPawn** _DamagedPawn, class AFortPlayerController** _DamagedBy, float* _DamageAmount);
};


// Class FortniteGame.FortNewPlayerParams
// 0x0008 (0x0030 - 0x0028)
class UFortNewPlayerParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       NewPlayerController;                                      // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortNewPlayerParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _NewPlayerController, class UFortNewPlayerParams** ThisParam);
	void BreakParams(class AFortPlayerController** _NewPlayerController);
};


// Class FortniteGame.FortPlayerAbandonParams
// 0x0028 (0x0050 - 0x0028)
class UFortPlayerAbandonParams : public UFortMissionEventParams
{
public:
	struct FUniqueNetIdRepl                            AbandoningPlayerId;                                       // 0x0028(0x0028)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerAbandonParams");
		return ptr;
	}

};


// Class FortniteGame.FortPlayerExitParams
// 0x0008 (0x0030 - 0x0028)
class UFortPlayerExitParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       ExitingPlayerController;                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerExitParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _ExitingPlayerController, class UFortPlayerExitParams** ThisParam);
	void BreakParams(class AFortPlayerController** _ExitingPlayerController);
};


// Class FortniteGame.FortPlayerSpawnedParams
// 0x0008 (0x0030 - 0x0028)
class UFortPlayerSpawnedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       SpawnedPlayerController;                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerSpawnedParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _SpawnedPlayerController, class UFortPlayerSpawnedParams** ThisParam);
	void BreakParams(class AFortPlayerController** _SpawnedPlayerController);
};


// Class FortniteGame.FortPlayerDiedParams
// 0x0010 (0x0038 - 0x0028)
class UFortPlayerDiedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                             KilledPlayer;                                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AController*                                 KilledBy;                                                 // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerDiedParams");
		return ptr;
	}


	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDiedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};


// Class FortniteGame.FortPlayerDBNOEnterParams
// 0x0010 (0x0038 - 0x0028)
class UFortPlayerDBNOEnterParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                             KilledPlayer;                                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AController*                                 KilledBy;                                                 // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerDBNOEnterParams");
		return ptr;
	}


	void SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDBNOEnterParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy);
};


// Class FortniteGame.FortPlayerDBNORevivedParams
// 0x0010 (0x0038 - 0x0028)
class UFortPlayerDBNORevivedParams : public UFortMissionEventParams
{
public:
	class AFortPlayerPawn*                             RevivedPlayer;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AController*                                 RevivedBy;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerDBNORevivedParams");
		return ptr;
	}


	void SetParams(class AFortPlayerPawn* _RevivedPlayer, class AController* _RevivedBy, class UFortPlayerDBNORevivedParams** ThisParam);
	void BreakParams(class AFortPlayerPawn** _RevivedPlayer, class AController** _RevivedBy);
};


// Class FortniteGame.FortDayPhaseChangeParams
// 0x0010 (0x0038 - 0x0028)
class UFortDayPhaseChangeParams : public UFortMissionEventParams
{
public:
	class AFortTimeOfDayManager*                       LightingAndFogManager;                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortDayPhase>                         NewDayPhase;                                              // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortDayPhaseChangeParams");
		return ptr;
	}


	void SetParams(class AFortTimeOfDayManager* _LightingAndFogManager, TEnumAsByte<EFortDayPhase> _NewDayPhase, class UFortDayPhaseChangeParams** ThisParam);
	void BreakParams(class AFortTimeOfDayManager** _LightingAndFogManager, TEnumAsByte<EFortDayPhase>* _NewDayPhase);
};


// Class FortniteGame.FortPlayerBuiltParams
// 0x0018 (0x0040 - 0x0028)
class UFortPlayerBuiltParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class AFortPlayerController*                       Builder;                                                  // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPlayerBuiltParams");
		return ptr;
	}


	void SetParams(class ABuildingActor* _Building, TEnumAsByte<EFortBuildingType> _BuildingType, class AFortPlayerController* _Builder, class UFortPlayerBuiltParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, TEnumAsByte<EFortBuildingType>* _BuildingType, class AFortPlayerController** _Builder);
};


// Class FortniteGame.FortBuildingDestroyedParams
// 0x0018 (0x0040 - 0x0028)
class UFortBuildingDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class AController*                                 Destroyer;                                                // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingDestroyedParams");
		return ptr;
	}


	void SetParams(class ABuildingActor* _Building, TEnumAsByte<EFortBuildingType> _BuildingType, class AController* _Destroyer, class UFortBuildingDestroyedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, TEnumAsByte<EFortBuildingType>* _BuildingType, class AController** _Destroyer);
};


// Class FortniteGame.FortBuildingEditedParams
// 0x0020 (0x0048 - 0x0028)
class UFortBuildingEditedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              OriginalBuilding;                                         // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              NewBuilding;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class AFortPlayerController*                       Editor;                                                   // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingEditedParams");
		return ptr;
	}


	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, TEnumAsByte<EFortBuildingType> _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingEditedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, TEnumAsByte<EFortBuildingType>* _BuildingType, class AFortPlayerController** _Editor);
};


// Class FortniteGame.FortBuildingUpgradedParams
// 0x0020 (0x0048 - 0x0028)
class UFortBuildingUpgradedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              OriginalBuilding;                                         // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingActor*                              NewBuilding;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class AFortPlayerController*                       Editor;                                                   // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingUpgradedParams");
		return ptr;
	}


	void SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, TEnumAsByte<EFortBuildingType> _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingUpgradedParams** ThisParam);
	void BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, TEnumAsByte<EFortBuildingType>* _BuildingType, class AFortPlayerController** _Editor);
};


// Class FortniteGame.FortBuildingDamagedParams
// 0x0020 (0x0048 - 0x0028)
class UFortBuildingDamagedParams : public UFortMissionEventParams
{
public:
	class ABuildingActor*                              Building;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortBuildingType>                     BuildingType;                                             // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class AController*                                 DamagedBy;                                                // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortBuildingDamagedParams");
		return ptr;
	}


	void SetParams(class ABuildingActor* _Building, TEnumAsByte<EFortBuildingType> _BuildingType, class AController* _DamagedBy, float _DamageAmount, class UFortBuildingDamagedParams** ThisParam);
	void BreakParams(class ABuildingActor** _Building, TEnumAsByte<EFortBuildingType>* _BuildingType, class AController** _DamagedBy, float* _DamageAmount);
};


// Class FortniteGame.FortMissionSucceededParams
// 0x0008 (0x0030 - 0x0028)
class UFortMissionSucceededParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                SucceededMission;                                         // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionSucceededParams");
		return ptr;
	}


	void SetParams(class AFortMission* _SucceededMission, class UFortMissionSucceededParams** ThisParam);
	void BreakParams(class AFortMission** _SucceededMission);
};


// Class FortniteGame.FortMissionFailedParams
// 0x0008 (0x0030 - 0x0028)
class UFortMissionFailedParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                FailedMission;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionFailedParams");
		return ptr;
	}


	void SetParams(class AFortMission* _FailedMission, class UFortMissionFailedParams** ThisParam);
	void BreakParams(class AFortMission** _FailedMission);
};


// Class FortniteGame.FortMissionForceSuccessParams
// 0x0008 (0x0030 - 0x0028)
class UFortMissionForceSuccessParams : public UFortMissionEventParams
{
public:
	float                                              FractionCompleted;                                        // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionForceSuccessParams");
		return ptr;
	}


	void SetParams(float _FractionCompleted, class UFortMissionForceSuccessParams** ThisParam);
	void BreakParams(float* _FractionCompleted);
};


// Class FortniteGame.FortMissionNeutralCompleteParams
// 0x0008 (0x0030 - 0x0028)
class UFortMissionNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortMission*                                NeutrallyCompletedMission;                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortMissionNeutralCompleteParams");
		return ptr;
	}


	void SetParams(class AFortMission* _NeutrallyCompletedMission, class UFortMissionNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortMission** _NeutrallyCompletedMission);
};


// Class FortniteGame.FortObjectiveSucceededParams
// 0x0008 (0x0030 - 0x0028)
class UFortObjectiveSucceededParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          SucceededObjective;                                       // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortObjectiveSucceededParams");
		return ptr;
	}


	void SetParams(class AFortObjectiveBase* _SucceededObjective, class UFortObjectiveSucceededParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _SucceededObjective);
};


// Class FortniteGame.FortObjectiveFailedParams
// 0x0008 (0x0030 - 0x0028)
class UFortObjectiveFailedParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          FailedObjective;                                          // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortObjectiveFailedParams");
		return ptr;
	}


	void SetParams(class AFortObjectiveBase* _FailedObjective, class UFortObjectiveFailedParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _FailedObjective);
};


// Class FortniteGame.FortObjectiveNeutralCompleteParams
// 0x0008 (0x0030 - 0x0028)
class UFortObjectiveNeutralCompleteParams : public UFortMissionEventParams
{
public:
	class AFortObjectiveBase*                          NeutrallyCompletedObjective;                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortObjectiveNeutralCompleteParams");
		return ptr;
	}


	void SetParams(class AFortObjectiveBase* _NeutrallyCompletedObjective, class UFortObjectiveNeutralCompleteParams** ThisParam);
	void BreakParams(class AFortObjectiveBase** _NeutrallyCompletedObjective);
};


// Class FortniteGame.FortToggledCursorModeParams
// 0x0010 (0x0038 - 0x0028)
class UFortToggledCursorModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledCursorMode;                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bInCursorMode;                                            // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToggledCursorModeParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _PlayerThatToggledCursorMode, bool InCursorMode, class UFortToggledCursorModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledCursorMode, bool* InCursorMode);
};


// Class FortniteGame.FortToggledOptionsMenuParams
// 0x0010 (0x0038 - 0x0028)
class UFortToggledOptionsMenuParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledOptionsMenu;                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bInOptionsMenu;                                           // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToggledOptionsMenuParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _PlayerThatToggledOptionsMenu, bool Opened, class UFortToggledOptionsMenuParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledOptionsMenu, bool* Opened);
};


// Class FortniteGame.FortToggledEditModeParams
// 0x0018 (0x0040 - 0x0028)
class UFortToggledEditModeParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerThatToggledEditMode;                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class ABuildingSMActor*                            EditableActor;                                            // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bInEditMode;                                              // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortToggledEditModeParams");
		return ptr;
	}


	void SetParams(class AFortPlayerController* _PlayerThatToggledEditMode, class ABuildingSMActor* InEditableActor, bool InEditMode, class UFortToggledEditModeParams** ThisParam);
	void BreakParams(class AFortPlayerController** _PlayerThatToggledEditMode, class ABuildingSMActor** EditableActor, bool* InEditMode);
};


// Class FortniteGame.FortShutdownParams
// 0x0000 (0x0028 - 0x0028)
class UFortShutdownParams : public UFortMissionEventParams
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortShutdownParams");
		return ptr;
	}

};


// Class FortniteGame.FortPvPVictoryParams
// 0x0008 (0x0030 - 0x0028)
class UFortPvPVictoryParams : public UFortMissionEventParams
{
public:
	TEnumAsByte<EFortTeam>                             WinningTeam;                                              // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortPvPVictoryParams");
		return ptr;
	}

};


// Class FortniteGame.FortStartLeavingZoneParams
// 0x0008 (0x0030 - 0x0028)
class UFortStartLeavingZoneParams : public UFortMissionEventParams
{
public:
	class AFortPlayerController*                       PlayerControllerRequestingLeaving;                        // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortStartLeavingZoneParams");
		return ptr;
	}


	void BreakParams(class AFortPlayerController** _PlayerControllerRequestingLeaving);
};


// Class FortniteGame.FortRiftCreatedParams
// 0x0008 (0x0030 - 0x0028)
class UFortRiftCreatedParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                               Rift;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRiftCreatedParams");
		return ptr;
	}

};


// Class FortniteGame.FortRiftDestroyedParams
// 0x0008 (0x0030 - 0x0028)
class UFortRiftDestroyedParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                               Rift;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRiftDestroyedParams");
		return ptr;
	}

};


// Class FortniteGame.FortRiftBeginOverlapPlayerParams
// 0x0010 (0x0038 - 0x0028)
class UFortRiftBeginOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                               Rift;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerPawn*                             Player;                                                   // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRiftBeginOverlapPlayerParams");
		return ptr;
	}

};


// Class FortniteGame.FortRiftEndOverlapPlayerParams
// 0x0010 (0x0038 - 0x0028)
class UFortRiftEndOverlapPlayerParams : public UFortMissionEventParams
{
public:
	class ABuildingRift*                               Rift;                                                     // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class AFortPlayerPawn*                             Player;                                                   // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortRiftEndOverlapPlayerParams");
		return ptr;
	}

};


// Class FortniteGame.MovementComp_Tracer
// 0x0008 (0x0138 - 0x0130)
class UMovementComp_Tracer : public UMovementComponent
{
public:
	float                                              Speed;                                                    // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.MovementComp_Tracer");
		return ptr;
	}

};


// Class FortniteGame.MyTownData
// 0x0060 (0x0090 - 0x0030)
class UMyTownData : public UDataAsset
{
public:
	TArray<struct FMyTownWorkerPersonalityData>        WorkerPersonalities;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FMyTownWorkerSetBonusData>           WorkerSetBonuses;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UFortPersistentResourceItemDefinition*       PersonnelXpItemDefinition;                                // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortPersistentResourceItemDefinition*       HeroXpItemDefinition;                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortPersistentResourceItemDefinition*       VoucherItemDefinition;                                    // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortPersistentResourceItemDefinition*       SchematicXpItemDefinition;                                // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortCurrencyItemDefinition*                 CurrencyItemDefinition;                                   // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTokenType*                              SkillPointItemDefinition;                                 // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFortTokenType*                              ResearchPointItemDefinition;                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TotalRatingGameplayEffect;                                // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.MyTownData");
		return ptr;
	}

};


// Class FortniteGame.NavGraphDebugActor
// 0x0000 (0x0328 - 0x0328)
class ANavGraphDebugActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.NavGraphDebugActor");
		return ptr;
	}

};


// Class FortniteGame.PakWhitelistCommandlet
// 0x0000 (0x0080 - 0x0080)
class UPakWhitelistCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PakWhitelistCommandlet");
		return ptr;
	}

};


// Class FortniteGame.PartyDisplayManager
// 0x0118 (0x0440 - 0x0328)
class APartyDisplayManager : public AActor
{
public:
	TArray<class AActor*>                              PlacementActors;                                          // 0x0328(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AActor*                                      VaultPlacementActor;                                      // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      VaultWeaponPlacementActor;                                // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnClickedPartyPlayer;                                     // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeginCursorOverPartyPlayer;                             // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndCursorOverPartyPlayer;                               // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPrefabForCurrentlyDisplayedItemChanged;                 // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UMaterialInstance*                           PlayerInMatchHoloMaterial;                                // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<int, struct FHeroSlotInfo>                    HeroPlayerPawns;                                          // 0x0390(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x60];                                      // 0x03E0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PartyDisplayManager");
		return ptr;
	}


	void ShowLoading();
	void ShowItem(class UFortItem* ItemToView, const struct FGuid& RequestId);
	void SetupPrefabVisuals();
	void ResOutPawnFromLobby(class AFortPlayerPawn* Pawn, int PartyIndex);
	void PlayLevelUpEffect();
	void PlayEvolutionEffect();
	void OnPlayerPawnAddedToLobby(class AFortPlayerPawn* Pawn);
	void OnPawnTouchReleased(TEnumAsByte<ETouchIndex> FingerIndex, class AActor* TouchedActor);
	void OnPawnEndCursorOver(class AActor* TouchedActor);
	void OnPawnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed);
	void OnPawnBeginCursorOver(class AActor* TouchedActor);
	void NotifyPrefabChanged(class AActor* PrefabActor, class UFortItem* CurrentItem);
	void HideLoading();
	void HandleLoadingAssetsForItemCompleted(class UFortItem* ItemWhoseAssetsWereLoaded, TArray<class UObject*> LoadedAssets, const struct FGuid& RequestId);
	void HandleItemsShown(TArray<class UFortItem*> ItemShown, const struct FGuid& RequestId);
	class AActor* GetPrefabActorForCurrentDisplayedItem();
	struct FUniqueNetIdRepl GetPlayerIdFromPartyMemberIndex(int PartyMemberIndex);
	bool GetPartyMemberIndexByPlayerPawn(class AFortPlayerPawn* PlayerPawn, int* OutPlayerIndex);
	void GetMeshForCurrentDisplayedItem(class UMeshComponent** OutDisplayedMesh);
	class AFortPlayerPawn* GetHeroPlayerPawnForCurrentDisplayedItem();
	void CharacterCustomizationFinished(class AFortPlayerPawn* Pawn);
	void BeginLoadingAssetsForItem(class UFortItem* ItemToView, const struct FGuid& RequestId);
};


// Class FortniteGame.FortAsyncAction_PartyDisplayManager_SetupPrefabVisuals
// 0x0030 (0x0060 - 0x0030)
class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals : public UBlueprintAsyncActionBase
{
public:
	struct FScriptMulticastDelegate                    Completed;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class UFortItem*                                   Item;                                                     // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.FortAsyncAction_PartyDisplayManager_SetupPrefabVisuals");
		return ptr;
	}


	class UFortAsyncAction_PartyDisplayManager_SetupPrefabVisuals* STATIC_SetupPrefabVisuals(class APartyDisplayManager* Target, class UFortItem* Item, const struct FGuid& RequestId);
	void OnRequestedCustomizationComplete(class AFortPlayerPawn* Pawn);
	void OnPreviousCustomizationComplete(class AFortPlayerPawn* Pawn);
	void Delegate__DelegateSignature(class UFortItem* Item, const struct FGuid& RequestId);
};


// Class FortniteGame.PlayerTrapBonusModMagnitudeCalculation
// 0x0028 (0x0068 - 0x0040)
class UPlayerTrapBonusModMagnitudeCalculation : public UFortGameplayModMagnitudeCalculation
{
public:
	struct FGameplayAttribute                          Attribute;                                                // 0x0040(0x0020) (Edit, DisableEditOnInstance)
	float                                              AttributeDefaultValue;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.PlayerTrapBonusModMagnitudeCalculation");
		return ptr;
	}

};


// Class FortniteGame.SBAGrantedBuildingGameplayActor
// 0x0008 (0x0700 - 0x06F8)
class ASBAGrantedBuildingGameplayActor : public ABuildingGameplayActor
{
public:
	struct FTeamStrategicBuildingHandle                OwningSBAHandle;                                          // 0x06F8(0x0004) (Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.SBAGrantedBuildingGameplayActor");
		return ptr;
	}


	class AStrategicBuildingActor* GetOwnerStrategicBuildingActor();
};


// Class FortniteGame.SlowStatReader
// 0x0028 (0x0050 - 0x0028)
class USlowStatReader : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0028(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.SlowStatReader");
		return ptr;
	}

};


// Class FortniteGame.Stat
// 0x0038 (0x0060 - 0x0028)
class UStat : public UObject
{
public:
	struct FName                                       StatName;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	EStatRecordingPeriod                               HighestPeriodToTrack;                                     // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                AbsoluteMaxValue;                                         // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0038(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.Stat");
		return ptr;
	}

};


// Class FortniteGame.StatManager
// 0x0078 (0x00A0 - 0x0028)
class UStatManager : public UObject
{
public:
	TArray<class UStat*>                               Stats;                                                    // 0x0028(0x0010) (ZeroConstructor)
	struct FString                                     StatPrefix;                                               // 0x0038(0x0010) (ZeroConstructor)
	class AFortPlayerController*                       FPC;                                                      // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0050(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.StatManager");
		return ptr;
	}

};


// Class FortniteGame.SupplyDropSpawner
// 0x0008 (0x0C40 - 0x0C38)
class ASupplyDropSpawner : public ABuildingProp
{
public:
	float                                              MinSpawnHeightOverride;                                   // 0x0C38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpawnHeightOverride;                                   // 0x0C3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.SupplyDropSpawner");
		return ptr;
	}

};


// Class FortniteGame.ThreatCloud
// 0x01B0 (0x04D8 - 0x0328)
class AThreatCloud : public AActor
{
public:
	TArray<class UBoxComponent*>                       LightningSourceAreas;                                     // 0x0328(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient)
	struct FSlateBrush                                 MiniMapIconBrush;                                         // 0x0338(0x0088) (Edit, DisableEditOnInstance)
	float                                              MiniMapIconPercent;                                       // 0x03C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	struct FSlateBrush                                 MiniMapFarOffIconBrush;                                   // 0x03C8(0x0088) (Edit, DisableEditOnInstance)
	struct FLinearColor                                ActiveTint;                                               // 0x0450(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                InActiveTint;                                             // 0x0460(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ActiveTransitionTime;                                     // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DeathTimerDuration;                                       // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CloudMiniMapTickInterval;                                 // 0x0478(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x047C(0x0014) MISSED OFFSET
	float                                              MiniMapFarOffIconDegreesOfArc;                            // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0494(0x000C) MISSED OFFSET
	struct FBox                                        ThreatBoxVolume;                                          // 0x04A0(0x001C) (Transient, IsPlainOldData)
	float                                              GroundLevelUnderCloud;                                    // 0x04BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04C0(0x0008) MISSED OFFSET
	TArray<struct FVector>                             GoalActorLocations;                                       // 0x04C8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.ThreatCloud");
		return ptr;
	}


	void OnThreatVolumeChanged();
	void OnLightningStrike(const struct FVector& StartLocation, const struct FVector& EndLocation, class ABuildingRift* Rift, bool bLightningStruckRift);
	void OnCloudStart();
	void OnCloudHiddenChange(bool bCloudsAreHidden);
	void OnCloudDeactivated(EFortThreatDeactivationType DeactivationType);
	void OnCloudActivated();
	void OnBeginDeath();
	void ManualLightningFlash();
	struct FBox GetThreatVolume();
};


// Class FortniteGame.WaterVolume_Shallow
// 0x0010 (0x0380 - 0x0370)
class AWaterVolume_Shallow : public APhysicsVolume
{
public:
	class USoundBase*                                  EntrySound;                                               // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ExitSound;                                                // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WaterVolume_Shallow");
		return ptr;
	}

};


// Class FortniteGame.WaterVolume_Athena
// 0x0000 (0x0380 - 0x0380)
class AWaterVolume_Athena : public AWaterVolume_Shallow
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WaterVolume_Athena");
		return ptr;
	}

};


// Class FortniteGame.WaterVolume_Deep
// 0x0018 (0x0388 - 0x0370)
class AWaterVolume_Deep : public APhysicsVolume
{
public:
	class USoundBase*                                  EntrySound;                                               // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  ExitSound;                                                // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                DamagePerSec;                                             // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0384(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WaterVolume_Deep");
		return ptr;
	}

};


// Class FortniteGame.WeaponHitNotifyAudioBank
// 0x0058 (0x0088 - 0x0030)
class UWeaponHitNotifyAudioBank : public UDataAsset
{
public:
	class USoundBase*                                  SoundBody;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundCrit;                                                // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundShield;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundDeath;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundDeathCrit;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundBodyReceive;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundCritReceive;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundDeathReceive;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundDeathCritReceive;                                    // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundFallReceive;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  SoundFallDeathReceive;                                    // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WeaponHitNotifyAudioBank");
		return ptr;
	}

};


// Class FortniteGame.WorldMapPin
// 0x0018 (0x0340 - 0x0328)
class AWorldMapPin : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                           // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FString                                     TheaterId;                                                // 0x0330(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldMapPin");
		return ptr;
	}


	void SetTheaterId(const struct FString& NewId);
	void OnTheaterIdSet();
};


// Class FortniteGame.WorldMapPinManager
// 0x0020 (0x0348 - 0x0328)
class AWorldMapPinManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	class AFortStaticMeshActor*                        WorldMapMesh;                                             // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class AWorldMapPin*>                        CurrentPins;                                              // 0x0338(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldMapPinManager");
		return ptr;
	}


	class AWorldMapPin* CreateWorldMapPin(const struct FString& TheaterId);
};


// Class FortniteGame.WorldTheme
// 0x0228 (0x0258 - 0x0030)
class UWorldTheme : public UDataAsset
{
public:
	TArray<struct FTileGroupSelection>                 TileGroups;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)
	class UWorldTileGroup*                             FillerTileGroup;                                          // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxCircuitSize;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x004C(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_I
	unsigned char                                      UnknownData02[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_IO
	unsigned char                                      UnknownData03[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_O
	unsigned char                                      UnknownData04[0x28];                                      // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_OO
	unsigned char                                      UnknownData05[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_OOO
	unsigned char                                      UnknownData06[0x28];                                      // 0x0118(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_OOOO
	unsigned char                                      UnknownData07[0x28];                                      // 0x0140(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_S
	unsigned char                                      UnknownData08[0x28];                                      // 0x0168(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_SS
	unsigned char                                      UnknownData09[0x28];                                      // 0x0190(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_OS
	unsigned char                                      UnknownData10[0x28];                                      // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_SO
	unsigned char                                      UnknownData11[0x28];                                      // 0x01E0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_SOO
	unsigned char                                      UnknownData12[0x28];                                      // 0x0208(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_U
	unsigned char                                      UnknownData13[0x28];                                      // 0x0230(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTheme.BorderWorld_R

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldTheme");
		return ptr;
	}

};


// Class FortniteGame.WorldTileFoundation
// 0x0020 (0x0DB0 - 0x0D90)
class AWorldTileFoundation : public ABuildingFoundation
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0D90(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldTileFoundation");
		return ptr;
	}

};


// Class FortniteGame.WorldTileGroup
// 0x00F8 (0x0128 - 0x0030)
class UWorldTileGroup : public UDataAsset
{
public:
	struct FString                                     TileID;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bOnlyPlaceDiagonalWithAdjacent : 1;                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<struct FTileGroupMapInfo>                   FlatMapInfos;                                             // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTileGroupMapInfo>                   InnerMapInfos;                                            // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTileGroupMapInfo>                   OuterMapInfos;                                            // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTileGroupMapInfo>                   StraightMapInfos;                                         // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0088(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTileGroup.Sim_FlatWorld
	unsigned char                                      UnknownData02[0x28];                                      // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTileGroup.Sim_InnerWorld
	unsigned char                                      UnknownData03[0x28];                                      // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTileGroup.Sim_OuterWorld
	unsigned char                                      UnknownData04[0x28];                                      // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty FortniteGame.WorldTileGroup.Sim_StraightWorld

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldTileGroup");
		return ptr;
	}

};


// Class FortniteGame.WorldTileManager
// 0x0058 (0x0080 - 0x0028)
class UWorldTileManager : public UObject
{
public:
	class AFortWorldManager*                           WorldManager;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0030(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldTileManager");
		return ptr;
	}

};


// Class FortniteGame.WorldTileType
// 0x0038 (0x0068 - 0x0030)
class UWorldTileType : public UDataAsset
{
public:
	struct FString                                     TileID;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FString>                             TileGroups;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TileWeight;                                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTileEdgeType>                     North;                                                    // 0x0054(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTileEdgeType>                     East;                                                     // 0x0055(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTileEdgeType>                     South;                                                    // 0x0056(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFortTileEdgeType>                     West;                                                     // 0x0057(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             MapNames;                                                 // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class FortniteGame.WorldTileType");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
